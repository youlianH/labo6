

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec 16 21:58:09 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2,minocg
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1,minocg
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1,minocg
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    47  0000                     
    48                           ; Version 2.10
    49                           ; Generated 31/07/2019 GMT
    50                           ; 
    51                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F45K20 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataBANK0
    84  0025B6                     __pidataBANK0:
    85                           	opt callstack 0
    86                           
    87                           ;initializer for _randx
    88  0025B6  0001               	dw	1
    89  0025B8  0000               	dw	0
    90                           
    91                           	psect	idataBANK1
    92  002442                     __pidataBANK1:
    93                           	opt callstack 0
    94                           
    95                           ;initializer for _matCGRAM
    96  002442  08                 	db	8
    97  002443  04                 	db	4
    98  002444  04                 	db	4
    99  002445  0A                 	db	10
   100  002446  11                 	db	17
   101  002447  1F                 	db	31
   102  002448  11                 	db	17
   103  002449  00                 	db	0
   104  00244A  00                 	db	0
   105  00244B  0E                 	db	14
   106  00244C  0E                 	db	14
   107  00244D  0E                 	db	14
   108  00244E  0E                 	db	14
   109  00244F  0E                 	db	14
   110  002450  0E                 	db	14
   111  002451  00                 	db	0
   112  002452  00                 	db	0
   113  002453  00                 	db	0
   114  002454  04                 	db	4
   115  002455  0E                 	db	14
   116  002456  0E                 	db	14
   117  002457  0E                 	db	14
   118  002458  04                 	db	4
   119  002459  00                 	db	0
   120  00245A  08                 	db	8
   121  00245B  04                 	db	4
   122  00245C  0E                 	db	14
   123  00245D  11                 	db	17
   124  00245E  1F                 	db	31
   125  00245F  10                 	db	16
   126  002460  0E                 	db	14
   127  002461  00                 	db	0
   128  002462  08                 	db	8
   129  002463  04                 	db	4
   130  002464  1F                 	db	31
   131  002465  10                 	db	16
   132  002466  1E                 	db	30
   133  002467  10                 	db	16
   134  002468  1F                 	db	31
   135  002469  00                 	db	0
   136  00246A  04                 	db	4
   137  00246B  0A                 	db	10
   138  00246C  0E                 	db	14
   139  00246D  11                 	db	17
   140  00246E  1F                 	db	31
   141  00246F  10                 	db	16
   142  002470  0E                 	db	14
   143  002471  00                 	db	0
   144  002472  08                 	db	8
   145  002473  04                 	db	4
   146  002474  0E                 	db	14
   147  002475  01                 	db	1
   148  002476  0F                 	db	15
   149  002477  11                 	db	17
   150  002478  0F                 	db	15
   151  002479  00                 	db	0
   152  00247A  04                 	db	4
   153  00247B  0A                 	db	10
   154  00247C  0E                 	db	14
   155  00247D  01                 	db	1
   156  00247E  0F                 	db	15
   157  00247F  11                 	db	17
   158  002480  0F                 	db	15
   159  002481  00                 	db	0
   160  0000                     _PORTAbits	set	3968
   161  0000                     _PORTD	set	3971
   162  0000                     _RCREG	set	4014
   163  0000                     _TXREG	set	4013
   164  0000                     _RCSTAbits	set	4011
   165  0000                     _TXSTAbits	set	4012
   166  0000                     _BAUDCONbits	set	4024
   167  0000                     _SPBRG	set	4015
   168  0000                     _SPBRGH	set	4016
   169  0000                     _TRISCbits	set	3988
   170  0000                     _ADRESH	set	4036
   171  0000                     _ADCON2bits	set	4032
   172  0000                     _ADCON0bits	set	4034
   173  0000                     _ANSELbits	set	3966
   174  0000                     _ADCON1	set	4033
   175  0000                     _TRISA	set	3986
   176  0000                     _ANSEL	set	3966
   177  0000                     _TRISB	set	3987
   178  0000                     _ANSELH	set	3967
   179  0000                     _TRISD	set	3989
   180  0000                     _PORTBbits	set	3969
   181  0000                     _RCIF	set	31989
   182                           
   183                           	psect	smallconst
   184  000600                     __psmallconst:
   185                           	opt callstack 0
   186  000600  00                 	db	0
   187  000601                     STR_1:
   188                           
   189                           ; BSR set to: 0
   190  000601  4C                 	db	76	;'L'
   191  000602  41                 	db	65	;'A'
   192  000603  42                 	db	66	;'B'
   193  000604  36                 	db	54	;'6'
   194  000605  20                 	db	32
   195  000606  59                 	db	89	;'Y'
   196  000607  6F                 	db	111	;'o'
   197  000608  75                 	db	117	;'u'
   198  000609  6C                 	db	108	;'l'
   199  00060A  69                 	db	105	;'i'
   200  00060B  61                 	db	97	;'a'
   201  00060C  6E                 	db	110	;'n'
   202  00060D  20                 	db	32
   203  00060E  48                 	db	72	;'H'
   204  00060F  6F                 	db	111	;'o'
   205  000610  75                 	db	117	;'u'
   206  000611  65                 	db	101	;'e'
   207  000612  68                 	db	104	;'h'
   208  000613  6F                 	db	111	;'o'
   209  000614  75                 	db	117	;'u'
   210  000615  6E                 	db	110	;'n'
   211  000616  6F                 	db	111	;'o'
   212  000617  75                 	db	117	;'u'
   213  000618  00                 	db	0
   214                           
   215                           ; #config settings
   216  000619  00                 	db	0	; dummy byte at the end
   217  0000                     
   218                           	psect	cinit
   219  0022F8                     __pcinit:
   220                           	opt callstack 0
   221  0022F8                     start_initialization:
   222                           	opt callstack 0
   223  0022F8                     __initialization:
   224                           	opt callstack 0
   225                           
   226                           ; Initialize objects allocated to BANK1 (64 bytes)
   227                           ; load TBLPTR registers with __pidataBANK1
   228  0022F8  0E42               	movlw	low __pidataBANK1
   229  0022FA  6EF6               	movwf	tblptrl,c
   230  0022FC  0E24               	movlw	high __pidataBANK1
   231  0022FE  6EF7               	movwf	tblptrh,c
   232  002300  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   233  002302  6EF8               	movwf	tblptru,c
   234  002304  EE01  F054         	lfsr	0,__pdataBANK1
   235  002308  EE10 F040          	lfsr	1,64
   236  00230C                     copy_data0:
   237  00230C  0009               	tblrd		*+
   238  00230E  CFF5 FFEE          	movff	tablat,postinc0
   239  002312  50E5               	movf	postdec1,w,c
   240  002314  50E1               	movf	fsr1l,w,c
   241  002316  E1FA               	bnz	copy_data0
   242                           
   243                           ; Initialize objects allocated to BANK0 (4 bytes)
   244                           ; load TBLPTR registers with __pidataBANK0
   245  002318  0EB6               	movlw	low __pidataBANK0
   246  00231A  6EF6               	movwf	tblptrl,c
   247  00231C  0E25               	movlw	high __pidataBANK0
   248  00231E  6EF7               	movwf	tblptrh,c
   249  002320  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   250  002322  6EF8               	movwf	tblptru,c
   251  002324  EE00  F0D9         	lfsr	0,__pdataBANK0
   252  002328  EE10 F004          	lfsr	1,4
   253  00232C                     copy_data1:
   254  00232C  0009               	tblrd		*+
   255  00232E  CFF5 FFEE          	movff	tablat,postinc0
   256  002332  50E5               	movf	postdec1,w,c
   257  002334  50E1               	movf	fsr1l,w,c
   258  002336  E1FA               	bnz	copy_data1
   259                           
   260                           ; Clear objects allocated to BANK1 (84 bytes)
   261  002338  EE01  F000         	lfsr	0,__pbssBANK1
   262  00233C  0E54               	movlw	84
   263  00233E                     clear_0:
   264  00233E  6AEE               	clrf	postinc0,c
   265  002340  06E8               	decf	wreg,f,c
   266  002342  E1FD               	bnz	clear_0
   267                           
   268                           ; Clear objects allocated to BANK0 (84 bytes)
   269  002344  EE00  F060         	lfsr	0,__pbssBANK0
   270  002348  0E54               	movlw	84
   271  00234A                     clear_1:
   272  00234A  6AEE               	clrf	postinc0,c
   273  00234C  06E8               	decf	wreg,f,c
   274  00234E  E1FD               	bnz	clear_1
   275  002350                     end_of_initialization:
   276                           	opt callstack 0
   277  002350                     __end_of__initialization:
   278                           	opt callstack 0
   279  002350  0100               	movlb	0
   280  002352  EFD0  F00E         	goto	_main	;jump to C main() function
   281                           
   282                           	psect	bssBANK0
   283  000060                     __pbssBANK0:
   284                           	opt callstack 0
   285  000060                     _m_tabMines:
   286                           	opt callstack 0
   287  000060                     	ds	84
   288                           
   289                           	psect	dataBANK0
   290  0000D9                     __pdataBANK0:
   291                           	opt callstack 0
   292  0000D9                     _randx:
   293                           	opt callstack 0
   294  0000D9                     	ds	4
   295                           
   296                           	psect	bssBANK1
   297  000100                     __pbssBANK1:
   298                           	opt callstack 0
   299  000100                     _m_tabVue:
   300                           	opt callstack 0
   301  000100                     	ds	84
   302                           
   303                           	psect	dataBANK1
   304  000154                     __pdataBANK1:
   305                           	opt callstack 0
   306  000154                     _matCGRAM:
   307                           	opt callstack 0
   308  000154                     	ds	64
   309                           
   310                           	psect	cstackBANK0
   311  0000B4                     __pcstackBANK0:
   312                           	opt callstack 0
   313  0000B4                     ??_getAnalog:
   314  0000B4                     ??_lcd_ecrireDonnees:
   315  0000B4                     ??_lcd_busy:
   316  0000B4                     ?___wmul:
   317                           	opt callstack 0
   318  0000B4                     ?___lmul:
   319                           	opt callstack 0
   320  0000B4                     ___wmul@multiplier:
   321                           	opt callstack 0
   322  0000B4                     ___lmul@multiplier:
   323                           	opt callstack 0
   324                           
   325                           ; 4 bytes @ 0x0
   326  0000B4                     	ds	1
   327  0000B5                     getAnalog@canal:
   328                           	opt callstack 0
   329  0000B5                     lcd_ecrireDonnees@donnee:
   330                           	opt callstack 0
   331  0000B5                     lcd_busy@adresse:
   332                           	opt callstack 0
   333                           
   334                           ; 1 bytes @ 0x1
   335  0000B5                     	ds	1
   336  0000B6                     ??_lcd_resetSequence:
   337  0000B6                     lcd_wrCom@commande:
   338                           	opt callstack 0
   339  0000B6                     lcd_wrData@caractere:
   340                           	opt callstack 0
   341  0000B6                     ___wmul@multiplicand:
   342                           	opt callstack 0
   343                           
   344                           ; 2 bytes @ 0x2
   345  0000B6                     	ds	1
   346  0000B7                     ??_lcd_initCGRam:
   347  0000B7                     lcd_gotoXY@y:
   348                           	opt callstack 0
   349  0000B7                     lcd_ecritChar@car:
   350                           	opt callstack 0
   351                           
   352                           ; 1 bytes @ 0x3
   353  0000B7                     	ds	1
   354  0000B8                     lcd_gotoXY@x:
   355                           	opt callstack 0
   356  0000B8                     lcd_ecritChar@posRam:
   357                           	opt callstack 0
   358  0000B8                     ___wmul@product:
   359                           	opt callstack 0
   360  0000B8                     ___lmul@multiplicand:
   361                           	opt callstack 0
   362                           
   363                           ; 4 bytes @ 0x4
   364  0000B8                     	ds	1
   365  0000B9                     lcd_initCGRam@i:
   366                           	opt callstack 0
   367  0000B9                     deplace@x:
   368                           	opt callstack 0
   369                           
   370                           ; 2 bytes @ 0x5
   371  0000B9                     	ds	1
   372  0000BA                     ??_initTabVue:
   373  0000BA                     enleveTuilesAutour@y:
   374                           	opt callstack 0
   375  0000BA                     lcd_initCGRam@j:
   376                           	opt callstack 0
   377  0000BA                     calculToucheCombien@ligne:
   378                           	opt callstack 0
   379  0000BA                     gagne@pMines:
   380                           	opt callstack 0
   381  0000BA                     lcd_putMessage@chaine:
   382                           	opt callstack 0
   383                           
   384                           ; 3 bytes @ 0x6
   385  0000BA                     	ds	1
   386  0000BB                     ??_enleveTuilesAutour:
   387  0000BB                     deplace@y:
   388                           	opt callstack 0
   389                           
   390                           ; 2 bytes @ 0x7
   391  0000BB                     	ds	1
   392  0000BC                     ??_gagne:
   393  0000BC                     initTabVue@i:
   394                           	opt callstack 0
   395  0000BC                     calculToucheCombien@colonne:
   396                           	opt callstack 0
   397  0000BC                     ___lmul@product:
   398                           	opt callstack 0
   399                           
   400                           ; 4 bytes @ 0x8
   401  0000BC                     	ds	1
   402  0000BD                     ??_lcd_putMessage:
   403  0000BD                     ??_deplace:
   404                           
   405                           ; 1 bytes @ 0x9
   406  0000BD                     	ds	1
   407  0000BE                     ??_calculToucheCombien:
   408  0000BE                     initTabVue@j:
   409                           	opt callstack 0
   410                           
   411                           ; 2 bytes @ 0xA
   412  0000BE                     	ds	1
   413  0000BF                     enleveTuilesAutour@mine:
   414                           	opt callstack 0
   415  0000BF                     gagne@nb_Tuile:
   416                           	opt callstack 0
   417                           
   418                           ; 2 bytes @ 0xB
   419  0000BF                     	ds	1
   420  0000C0                     ?_rand:
   421                           	opt callstack 0
   422                           
   423                           ; 2 bytes @ 0xC
   424  0000C0                     	ds	1
   425  0000C1                     enleveTuilesAutour@x:
   426                           	opt callstack 0
   427  0000C1                     gagne@gagne:
   428                           	opt callstack 0
   429                           
   430                           ; 1 bytes @ 0xD
   431  0000C1                     	ds	1
   432  0000C2                     ?___awmod:
   433                           	opt callstack 0
   434  0000C2                     lcd_putMessage@j:
   435                           	opt callstack 0
   436  0000C2                     enleveTuilesAutour@j:
   437                           	opt callstack 0
   438  0000C2                     gagne@i:
   439                           	opt callstack 0
   440  0000C2                     ___awmod@dividend:
   441                           	opt callstack 0
   442                           
   443                           ; 2 bytes @ 0xE
   444  0000C2                     	ds	1
   445  0000C3                     ??_afficheTabVue:
   446  0000C3                     calculToucheCombien@nb_mine:
   447                           	opt callstack 0
   448                           
   449                           ; 2 bytes @ 0xF
   450  0000C3                     	ds	1
   451  0000C4                     enleveTuilesAutour@i:
   452                           	opt callstack 0
   453  0000C4                     gagne@j:
   454                           	opt callstack 0
   455  0000C4                     ___awmod@divisor:
   456                           	opt callstack 0
   457                           
   458                           ; 2 bytes @ 0x10
   459  0000C4                     	ds	1
   460  0000C5                     calculToucheCombien@j:
   461                           	opt callstack 0
   462  0000C5                     afficheTabVue@i:
   463                           	opt callstack 0
   464                           
   465                           ; 2 bytes @ 0x11
   466  0000C5                     	ds	1
   467  0000C6                     demine@y:
   468                           	opt callstack 0
   469  0000C6                     ___awmod@counter:
   470                           	opt callstack 0
   471                           
   472                           ; 1 bytes @ 0x12
   473  0000C6                     	ds	1
   474  0000C7                     ??_demine:
   475  0000C7                     ___awmod@sign:
   476                           	opt callstack 0
   477  0000C7                     calculToucheCombien@i:
   478                           	opt callstack 0
   479                           
   480                           ; 2 bytes @ 0x13
   481  0000C7                     	ds	1
   482  0000C8                     rempliMines@nb:
   483                           	opt callstack 0
   484                           
   485                           ; 2 bytes @ 0x14
   486  0000C8                     	ds	1
   487  0000C9                     ??_metToucheCombien:
   488                           
   489                           ; 1 bytes @ 0x15
   490  0000C9                     	ds	1
   491  0000CA                     ??_rempliMines:
   492                           
   493                           ; 1 bytes @ 0x16
   494  0000CA                     	ds	1
   495  0000CB                     demine@mine:
   496                           	opt callstack 0
   497                           
   498                           ; 1 bytes @ 0x17
   499  0000CB                     	ds	1
   500  0000CC                     demine@x:
   501                           	opt callstack 0
   502  0000CC                     metToucheCombien@mine:
   503                           	opt callstack 0
   504                           
   505                           ; 2 bytes @ 0x18
   506  0000CC                     	ds	1
   507  0000CD                     rempliMines@x:
   508                           	opt callstack 0
   509                           
   510                           ; 1 bytes @ 0x19
   511  0000CD                     	ds	1
   512  0000CE                     rempliMines@y:
   513                           	opt callstack 0
   514  0000CE                     metToucheCombien@i:
   515                           	opt callstack 0
   516                           
   517                           ; 2 bytes @ 0x1A
   518  0000CE                     	ds	1
   519  0000CF                     rempliMines@nbMine:
   520                           	opt callstack 0
   521                           
   522                           ; 1 bytes @ 0x1B
   523  0000CF                     	ds	1
   524  0000D0                     rempliMines@i:
   525                           	opt callstack 0
   526  0000D0                     metToucheCombien@j:
   527                           	opt callstack 0
   528                           
   529                           ; 2 bytes @ 0x1C
   530  0000D0                     	ds	2
   531  0000D2                     rempliMines@j:
   532                           	opt callstack 0
   533                           
   534                           ; 2 bytes @ 0x1E
   535  0000D2                     	ds	2
   536  0000D4                     ??_main:
   537                           
   538                           ; 1 bytes @ 0x20
   539  0000D4                     	ds	1
   540  0000D5                     main@NBMines:
   541                           	opt callstack 0
   542                           
   543                           ; 2 bytes @ 0x21
   544  0000D5                     	ds	2
   545  0000D7                     main@x:
   546                           	opt callstack 0
   547                           
   548                           ; 1 bytes @ 0x23
   549  0000D7                     	ds	1
   550  0000D8                     main@y:
   551                           	opt callstack 0
   552                           
   553                           ; 1 bytes @ 0x24
   554  0000D8                     	ds	1
   555                           
   556 ;;
   557 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   558 ;;
   559 ;; *************** function _main *****************
   560 ;; Defined at:
   561 ;;		line 52 in file "main.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;		None
   564 ;; Auto vars:     Size  Location     Type
   565 ;;  NBMines         2   33[BANK0 ] int 
   566 ;;  y               1   36[BANK0 ] unsigned char 
   567 ;;  x               1   35[BANK0 ] unsigned char 
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   577 ;;      Params:         0       0       0       0       0       0       0
   578 ;;      Locals:         0       4       0       0       0       0       0
   579 ;;      Temps:          0       1       0       0       0       0       0
   580 ;;      Totals:         0       5       0       0       0       0       0
   581 ;;Total ram usage:        5 bytes
   582 ;; Hardware stack levels required when called:    6
   583 ;; This function calls:
   584 ;;		_afficheTabVue
   585 ;;		_demine
   586 ;;		_deplace
   587 ;;		_gagne
   588 ;;		_initTabVue
   589 ;;		_init_serie
   590 ;;		_initialisation
   591 ;;		_lcd_curseurHome
   592 ;;		_lcd_init
   593 ;;		_lcd_putMessage
   594 ;;		_metToucheCombien
   595 ;;		_rempliMines
   596 ;; This function is called by:
   597 ;;		Startup code after reset
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           	psect	text0
   602  001DA0                     __ptext0:
   603                           	opt callstack 0
   604  001DA0                     _main:
   605                           	opt callstack 25
   606  001DA0                     
   607                           ;main.c: 54: initialisation();
   608  001DA0  EC99  F012         	call	_initialisation	;wreg free
   609                           
   610                           ;main.c: 55: init_serie();
   611  001DA4  ECAC  F012         	call	_init_serie	;wreg free
   612  001DA8                     
   613                           ;main.c: 56: lcd_init();
   614  001DA8  EC71  F012         	call	_lcd_init	;wreg free
   615  001DAC                     
   616                           ;main.c: 57: initTabVue();
   617  001DAC  EC6A  F00D         	call	_initTabVue	;wreg free
   618  001DB0                     
   619                           ;main.c: 58: lcd_curseurHome();
   620  001DB0  ECD0  F012         	call	_lcd_curseurHome	;wreg free
   621  001DB4                     
   622                           ;main.c: 60: int NBMines=12;
   623  001DB4  0E00               	movlw	0
   624  001DB6  0100               	movlb	0	; force () banked
   625  001DB8  6FD6               	movwf	(main@NBMines+1)& (0+255),b
   626  001DBA  0E0C               	movlw	12
   627  001DBC  6FD5               	movwf	main@NBMines& (0+255),b
   628  001DBE                     
   629                           ; BSR set to: 0
   630                           ;main.c: 61: char x =(20/2);
   631  001DBE  0E0A               	movlw	10
   632  001DC0  0100               	movlb	0	; force () banked
   633  001DC2  6FD7               	movwf	main@x& (0+255),b
   634  001DC4                     
   635                           ; BSR set to: 0
   636                           ;main.c: 62: char y = (4/2);
   637  001DC4  0E02               	movlw	2
   638  001DC6  0100               	movlb	0	; force () banked
   639  001DC8  6FD8               	movwf	main@y& (0+255),b
   640  001DCA                     
   641                           ; BSR set to: 0
   642                           ;main.c: 64: lcd_putMessage("LAB6 Youlian Houehounou");
   643  001DCA  0E01               	movlw	low STR_1
   644  001DCC  0100               	movlb	0	; force () banked
   645  001DCE  6FBA               	movwf	lcd_putMessage@chaine& (0+255),b
   646  001DD0  0E06               	movlw	high STR_1
   647  001DD2  6FBB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   648  001DD4  51BA               	movf	lcd_putMessage@chaine& (0+255),w,b
   649  001DD6  11BB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   650  001DD8  A4D8               	btfss	status,2,c
   651  001DDA  0E00               	movlw	low (__mediumconst shr (0+16))
   652  001DDC  6FBC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   653  001DDE  EC4D  F00F         	call	_lcd_putMessage	;wreg free
   654  001DE2                     
   655                           ;main.c: 65: rempliMines(NBMines);
   656  001DE2  C0D5  F0C8         	movff	main@NBMines,rempliMines@nb
   657  001DE6  C0D6  F0C9         	movff	main@NBMines+1,rempliMines@nb+1
   658  001DEA  ECFB  F00A         	call	_rempliMines	;wreg free
   659  001DEE                     
   660                           ;main.c: 66: metToucheCombien();
   661  001DEE  EC08  F00A         	call	_metToucheCombien	;wreg free
   662  001DF2                     
   663                           ;main.c: 67: afficheTabVue();
   664  001DF2  EC51  F010         	call	_afficheTabVue	;wreg free
   665  001DF6                     l2657:
   666                           
   667                           ;main.c: 69: {;main.c: 70: deplace(&x,&y);
   668  001DF6  0ED7               	movlw	low main@x
   669  001DF8  0100               	movlb	0	; force () banked
   670  001DFA  6FB9               	movwf	deplace@x& (0+255),b
   671  001DFC  0E00               	movlw	high main@x
   672  001DFE  6FBA               	movwf	(deplace@x+1)& (0+255),b
   673  001E00  0ED8               	movlw	low main@y
   674  001E02  0100               	movlb	0	; force () banked
   675  001E04  6FBB               	movwf	deplace@y& (0+255),b
   676  001E06  0E00               	movlw	high main@y
   677  001E08  6FBC               	movwf	(deplace@y+1)& (0+255),b
   678  001E0A  ECA7  F00C         	call	_deplace	;wreg free
   679  001E0E                     
   680                           ;main.c: 71: if (PORTBbits.RB1 ==0)
   681  001E0E  B281               	btfsc	129,1,c	;volatile
   682  001E10  EF0C  F00F         	goto	u2551
   683  001E14  EF0E  F00F         	goto	u2550
   684  001E18                     u2551:
   685  001E18  EF40  F00F         	goto	l2671
   686  001E1C                     u2550:
   687  001E1C                     
   688                           ;main.c: 72: {;main.c: 73: if((demine(x,y)==0)||(gagne(&NBMines)==1))
   689  001E1C  C0D8  F0C6         	movff	main@y,demine@y
   690  001E20  0100               	movlb	0	; force () banked
   691  001E22  51D7               	movf	main@x& (0+255),w,b
   692  001E24  ECE2  F00B         	call	_demine
   693  001E28  0900               	iorlw	0
   694  001E2A  B4D8               	btfsc	status,2,c
   695  001E2C  EF1A  F00F         	goto	u2561
   696  001E30  EF1C  F00F         	goto	u2560
   697  001E34                     u2561:
   698  001E34  EF2B  F00F         	goto	l2665
   699  001E38                     u2560:
   700  001E38  0ED5               	movlw	low main@NBMines
   701  001E3A  0100               	movlb	0	; force () banked
   702  001E3C  6FBA               	movwf	gagne@pMines& (0+255),b
   703  001E3E  0E00               	movlw	high main@NBMines
   704  001E40  6FBB               	movwf	(gagne@pMines+1)& (0+255),b
   705  001E42  EC1D  F00E         	call	_gagne	;wreg free
   706  001E46  06E8               	decf	wreg,f,c
   707  001E48  A4D8               	btfss	status,2,c
   708  001E4A  EF29  F00F         	goto	u2571
   709  001E4E  EF2B  F00F         	goto	u2570
   710  001E52                     u2571:
   711  001E52  EF40  F00F         	goto	l2671
   712  001E56                     u2570:
   713  001E56                     l2665:
   714                           
   715                           ;main.c: 74: {;main.c: 75: afficheTabVue();
   716  001E56  EC51  F010         	call	_afficheTabVue	;wreg free
   717  001E5A                     l74:
   718  001E5A  B281               	btfsc	129,1,c	;volatile
   719  001E5C  EF32  F00F         	goto	u2581
   720  001E60  EF34  F00F         	goto	u2580
   721  001E64                     u2581:
   722  001E64  EF2D  F00F         	goto	l74
   723  001E68                     u2580:
   724  001E68                     
   725                           ;main.c: 77: initTabVue();
   726  001E68  EC6A  F00D         	call	_initTabVue	;wreg free
   727                           
   728                           ;main.c: 78: rempliMines(NBMines);
   729  001E6C  C0D5  F0C8         	movff	main@NBMines,rempliMines@nb
   730  001E70  C0D6  F0C9         	movff	main@NBMines+1,rempliMines@nb+1
   731  001E74  ECFB  F00A         	call	_rempliMines	;wreg free
   732                           
   733                           ;main.c: 79: metToucheCombien();
   734  001E78  EC08  F00A         	call	_metToucheCombien	;wreg free
   735  001E7C                     
   736                           ;main.c: 80: afficheTabVue();
   737  001E7C  EC51  F010         	call	_afficheTabVue	;wreg free
   738  001E80                     l2671:
   739                           
   740                           ;main.c: 81: };main.c: 82: };main.c: 83: _delay((unsigned long)((100)*(1000000/4000.0)))
      +                          ;
   741  001E80  0E21               	movlw	33
   742  001E82  0100               	movlb	0	; force () banked
   743  001E84  6FD4               	movwf	??_main& (0+255),b
   744  001E86  0E76               	movlw	118
   745  001E88                     u2597:
   746  001E88  2EE8               	decfsz	wreg,f,c
   747  001E8A  D7FE               	bra	u2597
   748  001E8C  2FD4               	decfsz	??_main& (0+255),f,b
   749  001E8E  D7FC               	bra	u2597
   750  001E90  F000               	nop	
   751  001E92  EFFB  F00E         	goto	l2657
   752  001E96  EF00  F000         	goto	start
   753  001E9A                     __end_of_main:
   754                           	opt callstack 0
   755                           
   756 ;; *************** function _rempliMines *****************
   757 ;; Defined at:
   758 ;;		line 154 in file "main.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;  nb              2   20[BANK0 ] int 
   761 ;; Auto vars:     Size  Location     Type
   762 ;;  j               2   30[BANK0 ] int 
   763 ;;  i               2   28[BANK0 ] int 
   764 ;;  nbMine          1   27[BANK0 ] unsigned char 
   765 ;;  y               1   26[BANK0 ] unsigned char 
   766 ;;  x               1   25[BANK0 ] unsigned char 
   767 ;; Return value:  Size  Location     Type
   768 ;;                  1    wreg      void 
   769 ;; Registers used:
   770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   776 ;;      Params:         0       2       0       0       0       0       0
   777 ;;      Locals:         0       7       0       0       0       0       0
   778 ;;      Temps:          0       3       0       0       0       0       0
   779 ;;      Totals:         0      12       0       0       0       0       0
   780 ;;Total ram usage:       12 bytes
   781 ;; Hardware stack levels used:    1
   782 ;; Hardware stack levels required when called:    2
   783 ;; This function calls:
   784 ;;		___awmod
   785 ;;		___wmul
   786 ;;		_rand
   787 ;; This function is called by:
   788 ;;		_main
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           	psect	text1
   793  0015F6                     __ptext1:
   794                           	opt callstack 0
   795  0015F6                     _rempliMines:
   796                           	opt callstack 28
   797  0015F6                     
   798                           ;main.c: 156: char x =0;
   799  0015F6  0E00               	movlw	0
   800  0015F8  0100               	movlb	0	; force () banked
   801  0015FA  6FCD               	movwf	rempliMines@x& (0+255),b
   802                           
   803                           ;main.c: 157: char y =0;
   804  0015FC  0E00               	movlw	0
   805  0015FE  0100               	movlb	0	; force () banked
   806  001600  6FCE               	movwf	rempliMines@y& (0+255),b
   807                           
   808                           ;main.c: 158: char nbMine =0;
   809  001602  0E00               	movlw	0
   810  001604  0100               	movlb	0	; force () banked
   811  001606  6FCF               	movwf	rempliMines@nbMine& (0+255),b
   812                           
   813                           ;main.c: 160: for (int i=0;i<4;i++)
   814  001608  0E00               	movlw	0
   815  00160A  0100               	movlb	0	; force () banked
   816  00160C  6FD1               	movwf	(rempliMines@i+1)& (0+255),b
   817  00160E  0E00               	movlw	0
   818  001610  6FD0               	movwf	rempliMines@i& (0+255),b
   819  001612                     
   820                           ; BSR set to: 0
   821  001612  0100               	movlb	0	; force () banked
   822  001614  BFD1               	btfsc	(rempliMines@i+1)& (0+255),7,b
   823  001616  EF16  F00B         	goto	u2221
   824  00161A  51D1               	movf	(rempliMines@i+1)& (0+255),w,b
   825  00161C  E109               	bnz	u2220
   826  00161E  0E04               	movlw	4
   827  001620  5DD0               	subwf	rempliMines@i& (0+255),w,b
   828  001622  A0D8               	btfss	status,0,c
   829  001624  EF16  F00B         	goto	u2221
   830  001628  EF18  F00B         	goto	u2220
   831  00162C                     u2221:
   832  00162C  EF1A  F00B         	goto	l2465
   833  001630                     u2220:
   834  001630  EFCC  F00B         	goto	l2489
   835  001634                     l2465:
   836                           
   837                           ; BSR set to: 0
   838                           ;main.c: 161: {;main.c: 162: for (int j=0;j<20;j++)
   839  001634  0E00               	movlw	0
   840  001636  0100               	movlb	0	; force () banked
   841  001638  6FD3               	movwf	(rempliMines@j+1)& (0+255),b
   842  00163A  0E00               	movlw	0
   843  00163C  6FD2               	movwf	rempliMines@j& (0+255),b
   844  00163E                     
   845                           ; BSR set to: 0
   846  00163E  0100               	movlb	0	; force () banked
   847  001640  BFD3               	btfsc	(rempliMines@j+1)& (0+255),7,b
   848  001642  EF2C  F00B         	goto	u2231
   849  001646  51D3               	movf	(rempliMines@j+1)& (0+255),w,b
   850  001648  E109               	bnz	u2230
   851  00164A  0E14               	movlw	20
   852  00164C  5DD2               	subwf	rempliMines@j& (0+255),w,b
   853  00164E  A0D8               	btfss	status,0,c
   854  001650  EF2C  F00B         	goto	u2231
   855  001654  EF2E  F00B         	goto	u2230
   856  001658                     u2231:
   857  001658  EF30  F00B         	goto	l2471
   858  00165C                     u2230:
   859  00165C  EF66  F00B         	goto	l2477
   860  001660                     l2471:
   861                           
   862                           ; BSR set to: 0
   863                           ;main.c: 163: {;main.c: 164: m_tabMines[i][j]=32;
   864  001660  C0D0  F0B4         	movff	rempliMines@i,___wmul@multiplier
   865  001664  C0D1  F0B5         	movff	rempliMines@i+1,___wmul@multiplier+1
   866  001668  0E00               	movlw	0
   867  00166A  0100               	movlb	0	; force () banked
   868  00166C  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
   869  00166E  0E15               	movlw	21
   870  001670  6FB6               	movwf	___wmul@multiplicand& (0+255),b
   871  001672  EC85  F012         	call	___wmul	;wreg free
   872  001676  0E60               	movlw	low _m_tabMines
   873  001678  0100               	movlb	0	; force () banked
   874  00167A  6FCA               	movwf	??_rempliMines& (0+255),b
   875  00167C  0E00               	movlw	high _m_tabMines
   876  00167E  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   877  001680  0100               	movlb	0	; force () banked
   878  001682  51B4               	movf	?___wmul& (0+255),w,b
   879  001684  0100               	movlb	0	; force () banked
   880  001686  27CA               	addwf	??_rempliMines& (0+255),f,b
   881  001688  0100               	movlb	0	; force () banked
   882  00168A  51B5               	movf	(?___wmul+1)& (0+255),w,b
   883  00168C  0100               	movlb	0	; force () banked
   884  00168E  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   885  001690  0100               	movlb	0	; force () banked
   886  001692  51D2               	movf	rempliMines@j& (0+255),w,b
   887  001694  0100               	movlb	0	; force () banked
   888  001696  25CA               	addwf	??_rempliMines& (0+255),w,b
   889  001698  6ED9               	movwf	fsr2l,c
   890  00169A  0100               	movlb	0	; force () banked
   891  00169C  51D3               	movf	(rempliMines@j+1)& (0+255),w,b
   892  00169E  0100               	movlb	0	; force () banked
   893  0016A0  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   894  0016A2  6EDA               	movwf	fsr2h,c
   895  0016A4  0E20               	movlw	32
   896  0016A6  6EDF               	movwf	indf2,c
   897  0016A8                     
   898                           ; BSR set to: 0
   899  0016A8  0100               	movlb	0	; force () banked
   900  0016AA  4BD2               	infsnz	rempliMines@j& (0+255),f,b
   901  0016AC  2BD3               	incf	(rempliMines@j+1)& (0+255),f,b
   902  0016AE                     
   903                           ; BSR set to: 0
   904  0016AE  0100               	movlb	0	; force () banked
   905  0016B0  BFD3               	btfsc	(rempliMines@j+1)& (0+255),7,b
   906  0016B2  EF64  F00B         	goto	u2241
   907  0016B6  51D3               	movf	(rempliMines@j+1)& (0+255),w,b
   908  0016B8  E109               	bnz	u2240
   909  0016BA  0E14               	movlw	20
   910  0016BC  5DD2               	subwf	rempliMines@j& (0+255),w,b
   911  0016BE  A0D8               	btfss	status,0,c
   912  0016C0  EF64  F00B         	goto	u2241
   913  0016C4  EF66  F00B         	goto	u2240
   914  0016C8                     u2241:
   915  0016C8  EF30  F00B         	goto	l2471
   916  0016CC                     u2240:
   917  0016CC                     l2477:
   918                           
   919                           ; BSR set to: 0
   920  0016CC  0100               	movlb	0	; force () banked
   921  0016CE  4BD0               	infsnz	rempliMines@i& (0+255),f,b
   922  0016D0  2BD1               	incf	(rempliMines@i+1)& (0+255),f,b
   923  0016D2                     
   924                           ; BSR set to: 0
   925  0016D2  0100               	movlb	0	; force () banked
   926  0016D4  BFD1               	btfsc	(rempliMines@i+1)& (0+255),7,b
   927  0016D6  EF76  F00B         	goto	u2251
   928  0016DA  51D1               	movf	(rempliMines@i+1)& (0+255),w,b
   929  0016DC  E109               	bnz	u2250
   930  0016DE  0E04               	movlw	4
   931  0016E0  5DD0               	subwf	rempliMines@i& (0+255),w,b
   932  0016E2  A0D8               	btfss	status,0,c
   933  0016E4  EF76  F00B         	goto	u2251
   934  0016E8  EF78  F00B         	goto	u2250
   935  0016EC                     u2251:
   936  0016EC  EF1A  F00B         	goto	l2465
   937  0016F0                     u2250:
   938  0016F0  EFCC  F00B         	goto	l2489
   939  0016F4                     l2481:
   940                           
   941                           ; BSR set to: 0
   942                           ;main.c: 169: {;main.c: 170: x = rand()%20;
   943  0016F4  ECAB  F011         	call	_rand	;wreg free
   944  0016F8  C0C0  F0C2         	movff	?_rand,___awmod@dividend
   945  0016FC  C0C1  F0C3         	movff	?_rand+1,___awmod@dividend+1
   946  001700  0E00               	movlw	0
   947  001702  0100               	movlb	0	; force () banked
   948  001704  6FC5               	movwf	(___awmod@divisor+1)& (0+255),b
   949  001706  0E14               	movlw	20
   950  001708  6FC4               	movwf	___awmod@divisor& (0+255),b
   951  00170A  ECA7  F00F         	call	___awmod	;wreg free
   952  00170E  0100               	movlb	0	; force () banked
   953  001710  51C2               	movf	?___awmod& (0+255),w,b
   954  001712  0100               	movlb	0	; force () banked
   955  001714  6FCD               	movwf	rempliMines@x& (0+255),b
   956                           
   957                           ;main.c: 171: y = rand()%4;
   958  001716  ECAB  F011         	call	_rand	;wreg free
   959  00171A  0100               	movlb	0	; force () banked
   960  00171C  51C0               	movf	?_rand& (0+255),w,b
   961  00171E  0B03               	andlw	3
   962  001720  0100               	movlb	0	; force () banked
   963  001722  6FCE               	movwf	rempliMines@y& (0+255),b
   964  001724                     
   965                           ; BSR set to: 0
   966                           ;main.c: 172: if (m_tabMines[y][x]==32)
   967  001724  0100               	movlb	0	; force () banked
   968  001726  51CE               	movf	rempliMines@y& (0+255),w,b
   969  001728  0D15               	mullw	21
   970  00172A  0E60               	movlw	low _m_tabMines
   971  00172C  0100               	movlb	0	; force () banked
   972  00172E  6FCA               	movwf	??_rempliMines& (0+255),b
   973  001730  0E00               	movlw	high _m_tabMines
   974  001732  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   975  001734  50F3               	movf	243,w,c
   976  001736  27CA               	addwf	??_rempliMines& (0+255),f,b
   977  001738  50F4               	movf	244,w,c
   978  00173A  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   979  00173C  0100               	movlb	0	; force () banked
   980  00173E  51CD               	movf	rempliMines@x& (0+255),w,b
   981  001740  0100               	movlb	0	; force () banked
   982  001742  25CA               	addwf	??_rempliMines& (0+255),w,b
   983  001744  6ED9               	movwf	fsr2l,c
   984  001746  0100               	movlb	0	; force () banked
   985  001748  0E00               	movlw	0
   986  00174A  0100               	movlb	0	; force () banked
   987  00174C  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   988  00174E  6EDA               	movwf	fsr2h,c
   989  001750  0E20               	movlw	32
   990  001752  18DE               	xorwf	postinc2,w,c
   991  001754  A4D8               	btfss	status,2,c
   992  001756  EFAF  F00B         	goto	u2261
   993  00175A  EFB1  F00B         	goto	u2260
   994  00175E                     u2261:
   995  00175E  EFCC  F00B         	goto	l2489
   996  001762                     u2260:
   997  001762                     
   998                           ; BSR set to: 0
   999                           ;main.c: 173: {;main.c: 174: m_tabMines[y][x] = 2;
  1000  001762  0100               	movlb	0	; force () banked
  1001  001764  51CE               	movf	rempliMines@y& (0+255),w,b
  1002  001766  0D15               	mullw	21
  1003  001768  0E60               	movlw	low _m_tabMines
  1004  00176A  0100               	movlb	0	; force () banked
  1005  00176C  6FCA               	movwf	??_rempliMines& (0+255),b
  1006  00176E  0E00               	movlw	high _m_tabMines
  1007  001770  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
  1008  001772  50F3               	movf	243,w,c
  1009  001774  27CA               	addwf	??_rempliMines& (0+255),f,b
  1010  001776  50F4               	movf	244,w,c
  1011  001778  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
  1012  00177A  0100               	movlb	0	; force () banked
  1013  00177C  51CD               	movf	rempliMines@x& (0+255),w,b
  1014  00177E  0100               	movlb	0	; force () banked
  1015  001780  25CA               	addwf	??_rempliMines& (0+255),w,b
  1016  001782  6ED9               	movwf	fsr2l,c
  1017  001784  0100               	movlb	0	; force () banked
  1018  001786  0E00               	movlw	0
  1019  001788  0100               	movlb	0	; force () banked
  1020  00178A  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
  1021  00178C  6EDA               	movwf	fsr2h,c
  1022  00178E  0E02               	movlw	2
  1023  001790  6EDF               	movwf	indf2,c
  1024  001792                     
  1025                           ; BSR set to: 0
  1026                           ;main.c: 175: nbMine = nbMine + 1;
  1027  001792  0100               	movlb	0	; force () banked
  1028  001794  29CF               	incf	rempliMines@nbMine& (0+255),w,b
  1029  001796  6FCF               	movwf	rempliMines@nbMine& (0+255),b
  1030  001798                     l2489:
  1031                           
  1032                           ; BSR set to: 0
  1033  001798  0100               	movlb	0	; force () banked
  1034  00179A  51CF               	movf	rempliMines@nbMine& (0+255),w,b
  1035  00179C  0100               	movlb	0	; force () banked
  1036  00179E  6FCA               	movwf	??_rempliMines& (0+255),b
  1037  0017A0  6BCB               	clrf	(??_rempliMines+1)& (0+255),b
  1038  0017A2  0100               	movlb	0	; force () banked
  1039  0017A4  51C8               	movf	rempliMines@nb& (0+255),w,b
  1040  0017A6  0100               	movlb	0	; force () banked
  1041  0017A8  19CA               	xorwf	??_rempliMines& (0+255),w,b
  1042  0017AA  E109               	bnz	u2271
  1043  0017AC  0100               	movlb	0	; force () banked
  1044  0017AE  51C9               	movf	(rempliMines@nb+1)& (0+255),w,b
  1045  0017B0  0100               	movlb	0	; force () banked
  1046  0017B2  19CB               	xorwf	(??_rempliMines+1)& (0+255),w,b
  1047  0017B4  A4D8               	btfss	status,2,c
  1048  0017B6  EFDF  F00B         	goto	u2271
  1049  0017BA  EFE1  F00B         	goto	u2270
  1050  0017BE                     u2271:
  1051  0017BE  EF7A  F00B         	goto	l2481
  1052  0017C2                     u2270:
  1053  0017C2                     
  1054                           ; BSR set to: 0
  1055  0017C2  0012               	return		;funcret
  1056  0017C4                     __end_of_rempliMines:
  1057                           	opt callstack 0
  1058                           
  1059 ;; *************** function _rand *****************
  1060 ;; Defined at:
  1061 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;		None
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;		None
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  2   12[BANK0 ] int 
  1068 ;; Registers used:
  1069 ;;		wreg, status,2, status,0, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1075 ;;      Params:         0       2       0       0       0       0       0
  1076 ;;      Locals:         0       0       0       0       0       0       0
  1077 ;;      Temps:          0       0       0       0       0       0       0
  1078 ;;      Totals:         0       2       0       0       0       0       0
  1079 ;;Total ram usage:        2 bytes
  1080 ;; Hardware stack levels used:    1
  1081 ;; Hardware stack levels required when called:    1
  1082 ;; This function calls:
  1083 ;;		___lmul
  1084 ;; This function is called by:
  1085 ;;		_rempliMines
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           	psect	text2
  1090  002356                     __ptext2:
  1091                           	opt callstack 0
  1092  002356                     _rand:
  1093                           	opt callstack 28
  1094  002356  C0D9  F0B4         	movff	_randx,___lmul@multiplier
  1095  00235A  C0DA  F0B5         	movff	_randx+1,___lmul@multiplier+1
  1096  00235E  C0DB  F0B6         	movff	_randx+2,___lmul@multiplier+2
  1097  002362  C0DC  F0B7         	movff	_randx+3,___lmul@multiplier+3
  1098  002366  0E6D               	movlw	109
  1099  002368  0100               	movlb	0	; () banked
  1100  00236A  6FB8               	movwf	___lmul@multiplicand& (0+255),b
  1101  00236C  0E4E               	movlw	78
  1102  00236E  6FB9               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1103  002370  0EC6               	movlw	198
  1104  002372  6FBA               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1105  002374  0E41               	movlw	65
  1106  002376  6FBB               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1107  002378  ECDB  F010         	call	___lmul	;wreg free
  1108  00237C  C0B4  F0D9         	movff	?___lmul,_randx
  1109  002380  C0B5  F0DA         	movff	?___lmul+1,_randx+1
  1110  002384  C0B6  F0DB         	movff	?___lmul+2,_randx+2
  1111  002388  C0B7  F0DC         	movff	?___lmul+3,_randx+3
  1112  00238C  0E39               	movlw	57
  1113  00238E  0100               	movlb	0	; () banked
  1114  002390  27D9               	addwf	_randx& (0+255),f,b
  1115  002392  0E30               	movlw	48
  1116  002394  23DA               	addwfc	(_randx+1)& (0+255),f,b
  1117  002396  0E00               	movlw	0
  1118  002398  23DB               	addwfc	(_randx+2)& (0+255),f,b
  1119  00239A  0E00               	movlw	0
  1120  00239C  23DC               	addwfc	(_randx+3)& (0+255),f,b
  1121  00239E                     
  1122                           ; BSR set to: 0
  1123  00239E  0EFF               	movlw	255
  1124  0023A0  15DB               	andwf	(_randx+2)& (0+255),w,b
  1125  0023A2  6FC0               	movwf	?_rand& (0+255),b
  1126  0023A4  0E7F               	movlw	127
  1127  0023A6  15DC               	andwf	(_randx+3)& (0+255),w,b
  1128  0023A8  6FC1               	movwf	(?_rand+1)& (0+255),b
  1129  0023AA                     
  1130                           ; BSR set to: 0
  1131  0023AA  0012               	return		;funcret
  1132  0023AC                     __end_of_rand:
  1133                           	opt callstack 0
  1134                           
  1135 ;; *************** function ___lmul *****************
  1136 ;; Defined at:
  1137 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1140 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  product         4    8[BANK0 ] unsigned long 
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  4    0[BANK0 ] unsigned long 
  1145 ;; Registers used:
  1146 ;;		wreg, status,2, status,0
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1152 ;;      Params:         0       8       0       0       0       0       0
  1153 ;;      Locals:         0       4       0       0       0       0       0
  1154 ;;      Temps:          0       0       0       0       0       0       0
  1155 ;;      Totals:         0      12       0       0       0       0       0
  1156 ;;Total ram usage:       12 bytes
  1157 ;; Hardware stack levels used:    1
  1158 ;; This function calls:
  1159 ;;		Nothing
  1160 ;; This function is called by:
  1161 ;;		_rand
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           	psect	text3
  1166  0021B6                     __ptext3:
  1167                           	opt callstack 0
  1168  0021B6                     ___lmul:
  1169                           	opt callstack 28
  1170  0021B6  0E00               	movlw	0
  1171  0021B8  0100               	movlb	0	; () banked
  1172  0021BA  6FBC               	movwf	___lmul@product& (0+255),b
  1173  0021BC  0E00               	movlw	0
  1174  0021BE  6FBD               	movwf	(___lmul@product+1)& (0+255),b
  1175  0021C0  0E00               	movlw	0
  1176  0021C2  6FBE               	movwf	(___lmul@product+2)& (0+255),b
  1177  0021C4  0E00               	movlw	0
  1178  0021C6  6FBF               	movwf	(___lmul@product+3)& (0+255),b
  1179  0021C8                     l2073:
  1180                           
  1181                           ; BSR set to: 0
  1182  0021C8  A1B4               	btfss	___lmul@multiplier& (0+255),0,b
  1183  0021CA  EFE9  F010         	goto	u1361
  1184  0021CE  EFEB  F010         	goto	u1360
  1185  0021D2                     u1361:
  1186  0021D2  EFF3  F010         	goto	l2077
  1187  0021D6                     u1360:
  1188  0021D6                     
  1189                           ; BSR set to: 0
  1190  0021D6  51B8               	movf	___lmul@multiplicand& (0+255),w,b
  1191  0021D8  27BC               	addwf	___lmul@product& (0+255),f,b
  1192  0021DA  51B9               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1193  0021DC  23BD               	addwfc	(___lmul@product+1)& (0+255),f,b
  1194  0021DE  51BA               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1195  0021E0  23BE               	addwfc	(___lmul@product+2)& (0+255),f,b
  1196  0021E2  51BB               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1197  0021E4  23BF               	addwfc	(___lmul@product+3)& (0+255),f,b
  1198  0021E6                     l2077:
  1199                           
  1200                           ; BSR set to: 0
  1201  0021E6  90D8               	bcf	status,0,c
  1202  0021E8  37B8               	rlcf	___lmul@multiplicand& (0+255),f,b
  1203  0021EA  37B9               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1204  0021EC  37BA               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1205  0021EE  37BB               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1206  0021F0                     
  1207                           ; BSR set to: 0
  1208  0021F0  90D8               	bcf	status,0,c
  1209  0021F2  33B7               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1210  0021F4  33B6               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1211  0021F6  33B5               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1212  0021F8  33B4               	rrcf	___lmul@multiplier& (0+255),f,b
  1213  0021FA  51B4               	movf	___lmul@multiplier& (0+255),w,b
  1214  0021FC  11B5               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1215  0021FE  11B6               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1216  002200  11B7               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1217  002202  A4D8               	btfss	status,2,c
  1218  002204  EF06  F011         	goto	u1371
  1219  002208  EF08  F011         	goto	u1370
  1220  00220C                     u1371:
  1221  00220C  EFE4  F010         	goto	l2073
  1222  002210                     u1370:
  1223  002210                     
  1224                           ; BSR set to: 0
  1225  002210  C0BC  F0B4         	movff	___lmul@product,?___lmul
  1226  002214  C0BD  F0B5         	movff	___lmul@product+1,?___lmul+1
  1227  002218  C0BE  F0B6         	movff	___lmul@product+2,?___lmul+2
  1228  00221C  C0BF  F0B7         	movff	___lmul@product+3,?___lmul+3
  1229  002220                     
  1230                           ; BSR set to: 0
  1231  002220  0012               	return		;funcret
  1232  002222                     __end_of___lmul:
  1233                           	opt callstack 0
  1234                           
  1235 ;; *************** function ___awmod *****************
  1236 ;; Defined at:
  1237 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  dividend        2   14[BANK0 ] int 
  1240 ;;  divisor         2   16[BANK0 ] int 
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;  sign            1   19[BANK0 ] unsigned char 
  1243 ;;  counter         1   18[BANK0 ] unsigned char 
  1244 ;; Return value:  Size  Location     Type
  1245 ;;                  2   14[BANK0 ] int 
  1246 ;; Registers used:
  1247 ;;		wreg, status,2, status,0
  1248 ;; Tracked objects:
  1249 ;;		On entry : 0/0
  1250 ;;		On exit  : 0/0
  1251 ;;		Unchanged: 0/0
  1252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1253 ;;      Params:         0       4       0       0       0       0       0
  1254 ;;      Locals:         0       2       0       0       0       0       0
  1255 ;;      Temps:          0       0       0       0       0       0       0
  1256 ;;      Totals:         0       6       0       0       0       0       0
  1257 ;;Total ram usage:        6 bytes
  1258 ;; Hardware stack levels used:    1
  1259 ;; This function calls:
  1260 ;;		Nothing
  1261 ;; This function is called by:
  1262 ;;		_rempliMines
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           	psect	text4
  1267  001F4E                     __ptext4:
  1268                           	opt callstack 0
  1269  001F4E                     ___awmod:
  1270                           	opt callstack 29
  1271  001F4E  0E00               	movlw	0
  1272  001F50  0100               	movlb	0	; () banked
  1273  001F52  6FC7               	movwf	___awmod@sign& (0+255),b
  1274  001F54                     
  1275                           ; BSR set to: 0
  1276  001F54  BFC3               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1277  001F56  EFB1  F00F         	goto	u2100
  1278  001F5A  EFAF  F00F         	goto	u2101
  1279  001F5E                     u2101:
  1280  001F5E  EFB7  F00F         	goto	l2399
  1281  001F62                     u2100:
  1282  001F62                     
  1283                           ; BSR set to: 0
  1284  001F62  6DC2               	negf	___awmod@dividend& (0+255),b
  1285  001F64  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1286  001F66  B0D8               	btfsc	status,0,c
  1287  001F68  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1288  001F6A                     
  1289                           ; BSR set to: 0
  1290  001F6A  0E01               	movlw	1
  1291  001F6C  6FC7               	movwf	___awmod@sign& (0+255),b
  1292  001F6E                     l2399:
  1293                           
  1294                           ; BSR set to: 0
  1295  001F6E  BFC5               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1296  001F70  EFBE  F00F         	goto	u2110
  1297  001F74  EFBC  F00F         	goto	u2111
  1298  001F78                     u2111:
  1299  001F78  EFC2  F00F         	goto	l2403
  1300  001F7C                     u2110:
  1301  001F7C                     
  1302                           ; BSR set to: 0
  1303  001F7C  6DC4               	negf	___awmod@divisor& (0+255),b
  1304  001F7E  1FC5               	comf	(___awmod@divisor+1)& (0+255),f,b
  1305  001F80  B0D8               	btfsc	status,0,c
  1306  001F82  2BC5               	incf	(___awmod@divisor+1)& (0+255),f,b
  1307  001F84                     l2403:
  1308                           
  1309                           ; BSR set to: 0
  1310  001F84  51C4               	movf	___awmod@divisor& (0+255),w,b
  1311  001F86  11C5               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1312  001F88  B4D8               	btfsc	status,2,c
  1313  001F8A  EFC9  F00F         	goto	u2121
  1314  001F8E  EFCB  F00F         	goto	u2120
  1315  001F92                     u2121:
  1316  001F92  EFEF  F00F         	goto	l2419
  1317  001F96                     u2120:
  1318  001F96                     
  1319                           ; BSR set to: 0
  1320  001F96  0E01               	movlw	1
  1321  001F98  6FC6               	movwf	___awmod@counter& (0+255),b
  1322  001F9A  EFD3  F00F         	goto	l2409
  1323  001F9E                     l2407:
  1324                           
  1325                           ; BSR set to: 0
  1326  001F9E  90D8               	bcf	status,0,c
  1327  001FA0  37C4               	rlcf	___awmod@divisor& (0+255),f,b
  1328  001FA2  37C5               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1329  001FA4  2BC6               	incf	___awmod@counter& (0+255),f,b
  1330  001FA6                     l2409:
  1331                           
  1332                           ; BSR set to: 0
  1333  001FA6  AFC5               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1334  001FA8  EFD8  F00F         	goto	u2131
  1335  001FAC  EFDA  F00F         	goto	u2130
  1336  001FB0                     u2131:
  1337  001FB0  EFCF  F00F         	goto	l2407
  1338  001FB4                     u2130:
  1339  001FB4                     l2411:
  1340                           
  1341                           ; BSR set to: 0
  1342  001FB4  51C4               	movf	___awmod@divisor& (0+255),w,b
  1343  001FB6  5DC2               	subwf	___awmod@dividend& (0+255),w,b
  1344  001FB8  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1345  001FBA  59C3               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1346  001FBC  A0D8               	btfss	status,0,c
  1347  001FBE  EFE3  F00F         	goto	u2141
  1348  001FC2  EFE5  F00F         	goto	u2140
  1349  001FC6                     u2141:
  1350  001FC6  EFE9  F00F         	goto	l2415
  1351  001FCA                     u2140:
  1352  001FCA                     
  1353                           ; BSR set to: 0
  1354  001FCA  51C4               	movf	___awmod@divisor& (0+255),w,b
  1355  001FCC  5FC2               	subwf	___awmod@dividend& (0+255),f,b
  1356  001FCE  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1357  001FD0  5BC3               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1358  001FD2                     l2415:
  1359                           
  1360                           ; BSR set to: 0
  1361  001FD2  90D8               	bcf	status,0,c
  1362  001FD4  33C5               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1363  001FD6  33C4               	rrcf	___awmod@divisor& (0+255),f,b
  1364  001FD8                     
  1365                           ; BSR set to: 0
  1366  001FD8  2FC6               	decfsz	___awmod@counter& (0+255),f,b
  1367  001FDA  EFDA  F00F         	goto	l2411
  1368  001FDE                     l2419:
  1369                           
  1370                           ; BSR set to: 0
  1371  001FDE  51C7               	movf	___awmod@sign& (0+255),w,b
  1372  001FE0  B4D8               	btfsc	status,2,c
  1373  001FE2  EFF5  F00F         	goto	u2151
  1374  001FE6  EFF7  F00F         	goto	u2150
  1375  001FEA                     u2151:
  1376  001FEA  EFFB  F00F         	goto	l2423
  1377  001FEE                     u2150:
  1378  001FEE                     
  1379                           ; BSR set to: 0
  1380  001FEE  6DC2               	negf	___awmod@dividend& (0+255),b
  1381  001FF0  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1382  001FF2  B0D8               	btfsc	status,0,c
  1383  001FF4  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1384  001FF6                     l2423:
  1385                           
  1386                           ; BSR set to: 0
  1387  001FF6  C0C2  F0C2         	movff	___awmod@dividend,?___awmod
  1388  001FFA  C0C3  F0C3         	movff	___awmod@dividend+1,?___awmod+1
  1389  001FFE                     
  1390                           ; BSR set to: 0
  1391  001FFE  0012               	return		;funcret
  1392  002000                     __end_of___awmod:
  1393                           	opt callstack 0
  1394                           
  1395 ;; *************** function _metToucheCombien *****************
  1396 ;; Defined at:
  1397 ;;		line 189 in file "main.c"
  1398 ;; Parameters:    Size  Location     Type
  1399 ;;		None
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  j               2   28[BANK0 ] int 
  1402 ;;  i               2   26[BANK0 ] int 
  1403 ;;  mine            2   24[BANK0 ] int 
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  1    wreg      void 
  1406 ;; Registers used:
  1407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1413 ;;      Params:         0       0       0       0       0       0       0
  1414 ;;      Locals:         0       6       0       0       0       0       0
  1415 ;;      Temps:          0       3       0       0       0       0       0
  1416 ;;      Totals:         0       9       0       0       0       0       0
  1417 ;;Total ram usage:        9 bytes
  1418 ;; Hardware stack levels used:    1
  1419 ;; Hardware stack levels required when called:    2
  1420 ;; This function calls:
  1421 ;;		___wmul
  1422 ;;		_calculToucheCombien
  1423 ;; This function is called by:
  1424 ;;		_main
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           	psect	text5
  1429  001410                     __ptext5:
  1430                           	opt callstack 0
  1431  001410                     _metToucheCombien:
  1432                           	opt callstack 28
  1433  001410                     
  1434                           ;main.c: 191: int mine=0;
  1435  001410  0E00               	movlw	0
  1436  001412  0100               	movlb	0	; force () banked
  1437  001414  6FCD               	movwf	(metToucheCombien@mine+1)& (0+255),b
  1438  001416  0E00               	movlw	0
  1439  001418  6FCC               	movwf	metToucheCombien@mine& (0+255),b
  1440                           
  1441                           ;main.c: 193: for (int i=0;i<4;i++)
  1442  00141A  0E00               	movlw	0
  1443  00141C  0100               	movlb	0	; force () banked
  1444  00141E  6FCF               	movwf	(metToucheCombien@i+1)& (0+255),b
  1445  001420  0E00               	movlw	0
  1446  001422  6FCE               	movwf	metToucheCombien@i& (0+255),b
  1447  001424                     
  1448                           ; BSR set to: 0
  1449  001424  0100               	movlb	0	; force () banked
  1450  001426  BFCF               	btfsc	(metToucheCombien@i+1)& (0+255),7,b
  1451  001428  EF1F  F00A         	goto	u2281
  1452  00142C  51CF               	movf	(metToucheCombien@i+1)& (0+255),w,b
  1453  00142E  E109               	bnz	u2280
  1454  001430  0E04               	movlw	4
  1455  001432  5DCE               	subwf	metToucheCombien@i& (0+255),w,b
  1456  001434  A0D8               	btfss	status,0,c
  1457  001436  EF1F  F00A         	goto	u2281
  1458  00143A  EF21  F00A         	goto	u2280
  1459  00143E                     u2281:
  1460  00143E  EF23  F00A         	goto	l2497
  1461  001442                     u2280:
  1462  001442  EFFA  F00A         	goto	l118
  1463  001446                     l2497:
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;main.c: 194: {;main.c: 195: for (int j=0;j<20;j++)
  1467  001446  0E00               	movlw	0
  1468  001448  0100               	movlb	0	; force () banked
  1469  00144A  6FD1               	movwf	(metToucheCombien@j+1)& (0+255),b
  1470  00144C  0E00               	movlw	0
  1471  00144E  6FD0               	movwf	metToucheCombien@j& (0+255),b
  1472  001450                     
  1473                           ; BSR set to: 0
  1474  001450  0100               	movlb	0	; force () banked
  1475  001452  BFD1               	btfsc	(metToucheCombien@j+1)& (0+255),7,b
  1476  001454  EF35  F00A         	goto	u2291
  1477  001458  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1478  00145A  E109               	bnz	u2290
  1479  00145C  0E14               	movlw	20
  1480  00145E  5DD0               	subwf	metToucheCombien@j& (0+255),w,b
  1481  001460  A0D8               	btfss	status,0,c
  1482  001462  EF35  F00A         	goto	u2291
  1483  001466  EF37  F00A         	goto	u2290
  1484  00146A                     u2291:
  1485  00146A  EF39  F00A         	goto	l2503
  1486  00146E                     u2290:
  1487  00146E  EFE8  F00A         	goto	l2519
  1488  001472                     l2503:
  1489                           
  1490                           ; BSR set to: 0
  1491                           ;main.c: 196: {;main.c: 197: if(m_tabMines[i][j]!= 2)
  1492  001472  C0CE  F0B4         	movff	metToucheCombien@i,___wmul@multiplier
  1493  001476  C0CF  F0B5         	movff	metToucheCombien@i+1,___wmul@multiplier+1
  1494  00147A  0E00               	movlw	0
  1495  00147C  0100               	movlb	0	; force () banked
  1496  00147E  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1497  001480  0E15               	movlw	21
  1498  001482  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1499  001484  EC85  F012         	call	___wmul	;wreg free
  1500  001488  0E60               	movlw	low _m_tabMines
  1501  00148A  0100               	movlb	0	; force () banked
  1502  00148C  6FC9               	movwf	??_metToucheCombien& (0+255),b
  1503  00148E  0E00               	movlw	high _m_tabMines
  1504  001490  6FCA               	movwf	(??_metToucheCombien+1)& (0+255),b
  1505  001492  0100               	movlb	0	; force () banked
  1506  001494  51B4               	movf	?___wmul& (0+255),w,b
  1507  001496  0100               	movlb	0	; force () banked
  1508  001498  27C9               	addwf	??_metToucheCombien& (0+255),f,b
  1509  00149A  0100               	movlb	0	; force () banked
  1510  00149C  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1511  00149E  0100               	movlb	0	; force () banked
  1512  0014A0  23CA               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1513  0014A2  0100               	movlb	0	; force () banked
  1514  0014A4  51D0               	movf	metToucheCombien@j& (0+255),w,b
  1515  0014A6  0100               	movlb	0	; force () banked
  1516  0014A8  25C9               	addwf	??_metToucheCombien& (0+255),w,b
  1517  0014AA  6ED9               	movwf	fsr2l,c
  1518  0014AC  0100               	movlb	0	; force () banked
  1519  0014AE  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1520  0014B0  0100               	movlb	0	; force () banked
  1521  0014B2  21CA               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1522  0014B4  6EDA               	movwf	fsr2h,c
  1523  0014B6  0E02               	movlw	2
  1524  0014B8  18DE               	xorwf	postinc2,w,c
  1525  0014BA  B4D8               	btfsc	status,2,c
  1526  0014BC  EF62  F00A         	goto	u2301
  1527  0014C0  EF64  F00A         	goto	u2300
  1528  0014C4                     u2301:
  1529  0014C4  EFD6  F00A         	goto	l2515
  1530  0014C8                     u2300:
  1531  0014C8                     
  1532                           ; BSR set to: 0
  1533                           ;main.c: 198: {;main.c: 199: mine = calculToucheCombien(i,j);
  1534  0014C8  C0CE  F0BA         	movff	metToucheCombien@i,calculToucheCombien@ligne
  1535  0014CC  C0CF  F0BB         	movff	metToucheCombien@i+1,calculToucheCombien@ligne+1
  1536  0014D0  C0D0  F0BC         	movff	metToucheCombien@j,calculToucheCombien@colonne
  1537  0014D4  C0D1  F0BD         	movff	metToucheCombien@j+1,calculToucheCombien@colonne+1
  1538  0014D8  EC0D  F003         	call	_calculToucheCombien	;wreg free
  1539  0014DC  0100               	movlb	0	; force () banked
  1540  0014DE  6FC9               	movwf	??_metToucheCombien& (0+255),b
  1541  0014E0  51C9               	movf	??_metToucheCombien& (0+255),w,b
  1542  0014E2  0100               	movlb	0	; force () banked
  1543  0014E4  6FCC               	movwf	metToucheCombien@mine& (0+255),b
  1544  0014E6  6BCD               	clrf	(metToucheCombien@mine+1)& (0+255),b
  1545  0014E8                     
  1546                           ; BSR set to: 0
  1547                           ;main.c: 200: if (mine==0)
  1548  0014E8  0100               	movlb	0	; force () banked
  1549  0014EA  51CC               	movf	metToucheCombien@mine& (0+255),w,b
  1550  0014EC  11CD               	iorwf	(metToucheCombien@mine+1)& (0+255),w,b
  1551  0014EE  A4D8               	btfss	status,2,c
  1552  0014F0  EF7C  F00A         	goto	u2311
  1553  0014F4  EF7E  F00A         	goto	u2310
  1554  0014F8                     u2311:
  1555  0014F8  EFA2  F00A         	goto	l2511
  1556  0014FC                     u2310:
  1557  0014FC                     
  1558                           ; BSR set to: 0
  1559                           ;main.c: 201: {;main.c: 202: m_tabMines[i][j]=32;
  1560  0014FC  C0CE  F0B4         	movff	metToucheCombien@i,___wmul@multiplier
  1561  001500  C0CF  F0B5         	movff	metToucheCombien@i+1,___wmul@multiplier+1
  1562  001504  0E00               	movlw	0
  1563  001506  0100               	movlb	0	; force () banked
  1564  001508  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1565  00150A  0E15               	movlw	21
  1566  00150C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1567  00150E  EC85  F012         	call	___wmul	;wreg free
  1568  001512  0E60               	movlw	low _m_tabMines
  1569  001514  0100               	movlb	0	; force () banked
  1570  001516  6FC9               	movwf	??_metToucheCombien& (0+255),b
  1571  001518  0E00               	movlw	high _m_tabMines
  1572  00151A  6FCA               	movwf	(??_metToucheCombien+1)& (0+255),b
  1573  00151C  0100               	movlb	0	; force () banked
  1574  00151E  51B4               	movf	?___wmul& (0+255),w,b
  1575  001520  0100               	movlb	0	; force () banked
  1576  001522  27C9               	addwf	??_metToucheCombien& (0+255),f,b
  1577  001524  0100               	movlb	0	; force () banked
  1578  001526  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1579  001528  0100               	movlb	0	; force () banked
  1580  00152A  23CA               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1581  00152C  0100               	movlb	0	; force () banked
  1582  00152E  51D0               	movf	metToucheCombien@j& (0+255),w,b
  1583  001530  0100               	movlb	0	; force () banked
  1584  001532  25C9               	addwf	??_metToucheCombien& (0+255),w,b
  1585  001534  6ED9               	movwf	fsr2l,c
  1586  001536  0100               	movlb	0	; force () banked
  1587  001538  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1588  00153A  0100               	movlb	0	; force () banked
  1589  00153C  21CA               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1590  00153E  6EDA               	movwf	fsr2h,c
  1591  001540  0E20               	movlw	32
  1592  001542  6EDF               	movwf	indf2,c
  1593  001544                     l2511:
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;main.c: 203: };main.c: 204: if (mine>0)
  1597  001544  0100               	movlb	0	; force () banked
  1598  001546  BFCD               	btfsc	(metToucheCombien@mine+1)& (0+255),7,b
  1599  001548  EFAE  F00A         	goto	u2321
  1600  00154C  51CD               	movf	(metToucheCombien@mine+1)& (0+255),w,b
  1601  00154E  E108               	bnz	u2320
  1602  001550  05CC               	decf	metToucheCombien@mine& (0+255),w,b
  1603  001552  A0D8               	btfss	status,0,c
  1604  001554  EFAE  F00A         	goto	u2321
  1605  001558  EFB0  F00A         	goto	u2320
  1606  00155C                     u2321:
  1607  00155C  EFD6  F00A         	goto	l2515
  1608  001560                     u2320:
  1609  001560                     
  1610                           ; BSR set to: 0
  1611                           ;main.c: 205: {;main.c: 206: m_tabMines[i][j]= (mine+48);
  1612  001560  C0CE  F0B4         	movff	metToucheCombien@i,___wmul@multiplier
  1613  001564  C0CF  F0B5         	movff	metToucheCombien@i+1,___wmul@multiplier+1
  1614  001568  0E00               	movlw	0
  1615  00156A  0100               	movlb	0	; force () banked
  1616  00156C  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1617  00156E  0E15               	movlw	21
  1618  001570  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1619  001572  EC85  F012         	call	___wmul	;wreg free
  1620  001576  0E60               	movlw	low _m_tabMines
  1621  001578  0100               	movlb	0	; force () banked
  1622  00157A  6FC9               	movwf	??_metToucheCombien& (0+255),b
  1623  00157C  0E00               	movlw	high _m_tabMines
  1624  00157E  6FCA               	movwf	(??_metToucheCombien+1)& (0+255),b
  1625  001580  0100               	movlb	0	; force () banked
  1626  001582  51B4               	movf	?___wmul& (0+255),w,b
  1627  001584  0100               	movlb	0	; force () banked
  1628  001586  27C9               	addwf	??_metToucheCombien& (0+255),f,b
  1629  001588  0100               	movlb	0	; force () banked
  1630  00158A  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1631  00158C  0100               	movlb	0	; force () banked
  1632  00158E  23CA               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1633  001590  0100               	movlb	0	; force () banked
  1634  001592  51D0               	movf	metToucheCombien@j& (0+255),w,b
  1635  001594  0100               	movlb	0	; force () banked
  1636  001596  25C9               	addwf	??_metToucheCombien& (0+255),w,b
  1637  001598  6ED9               	movwf	fsr2l,c
  1638  00159A  0100               	movlb	0	; force () banked
  1639  00159C  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1640  00159E  0100               	movlb	0	; force () banked
  1641  0015A0  21CA               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1642  0015A2  6EDA               	movwf	fsr2h,c
  1643  0015A4  0100               	movlb	0	; force () banked
  1644  0015A6  51CC               	movf	metToucheCombien@mine& (0+255),w,b
  1645  0015A8  0F30               	addlw	48
  1646  0015AA  6EDF               	movwf	indf2,c
  1647  0015AC                     l2515:
  1648                           
  1649                           ; BSR set to: 0
  1650  0015AC  0100               	movlb	0	; force () banked
  1651  0015AE  4BD0               	infsnz	metToucheCombien@j& (0+255),f,b
  1652  0015B0  2BD1               	incf	(metToucheCombien@j+1)& (0+255),f,b
  1653  0015B2                     
  1654                           ; BSR set to: 0
  1655  0015B2  0100               	movlb	0	; force () banked
  1656  0015B4  BFD1               	btfsc	(metToucheCombien@j+1)& (0+255),7,b
  1657  0015B6  EFE6  F00A         	goto	u2331
  1658  0015BA  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1659  0015BC  E109               	bnz	u2330
  1660  0015BE  0E14               	movlw	20
  1661  0015C0  5DD0               	subwf	metToucheCombien@j& (0+255),w,b
  1662  0015C2  A0D8               	btfss	status,0,c
  1663  0015C4  EFE6  F00A         	goto	u2331
  1664  0015C8  EFE8  F00A         	goto	u2330
  1665  0015CC                     u2331:
  1666  0015CC  EF39  F00A         	goto	l2503
  1667  0015D0                     u2330:
  1668  0015D0                     l2519:
  1669                           
  1670                           ; BSR set to: 0
  1671  0015D0  0100               	movlb	0	; force () banked
  1672  0015D2  4BCE               	infsnz	metToucheCombien@i& (0+255),f,b
  1673  0015D4  2BCF               	incf	(metToucheCombien@i+1)& (0+255),f,b
  1674  0015D6                     
  1675                           ; BSR set to: 0
  1676  0015D6  0100               	movlb	0	; force () banked
  1677  0015D8  BFCF               	btfsc	(metToucheCombien@i+1)& (0+255),7,b
  1678  0015DA  EFF8  F00A         	goto	u2341
  1679  0015DE  51CF               	movf	(metToucheCombien@i+1)& (0+255),w,b
  1680  0015E0  E109               	bnz	u2340
  1681  0015E2  0E04               	movlw	4
  1682  0015E4  5DCE               	subwf	metToucheCombien@i& (0+255),w,b
  1683  0015E6  A0D8               	btfss	status,0,c
  1684  0015E8  EFF8  F00A         	goto	u2341
  1685  0015EC  EFFA  F00A         	goto	u2340
  1686  0015F0                     u2341:
  1687  0015F0  EF23  F00A         	goto	l2497
  1688  0015F4                     u2340:
  1689  0015F4                     l118:
  1690                           
  1691                           ; BSR set to: 0
  1692  0015F4  0012               	return		;funcret
  1693  0015F6                     __end_of_metToucheCombien:
  1694                           	opt callstack 0
  1695                           
  1696 ;; *************** function _calculToucheCombien *****************
  1697 ;; Defined at:
  1698 ;;		line 219 in file "main.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;  ligne           2    6[BANK0 ] int 
  1701 ;;  colonne         2    8[BANK0 ] int 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  i               2   19[BANK0 ] int 
  1704 ;;  j               2   17[BANK0 ] int 
  1705 ;;  nb_mine         2   15[BANK0 ] int 
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      unsigned char 
  1708 ;; Registers used:
  1709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1715 ;;      Params:         0       4       0       0       0       0       0
  1716 ;;      Locals:         0       6       0       0       0       0       0
  1717 ;;      Temps:          0       5       0       0       0       0       0
  1718 ;;      Totals:         0      15       0       0       0       0       0
  1719 ;;Total ram usage:       15 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; Hardware stack levels required when called:    1
  1722 ;; This function calls:
  1723 ;;		___wmul
  1724 ;; This function is called by:
  1725 ;;		_metToucheCombien
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	text6
  1730  00061A                     __ptext6:
  1731                           	opt callstack 0
  1732  00061A                     _calculToucheCombien:
  1733                           	opt callstack 28
  1734  00061A                     
  1735                           ;main.c: 221: int nb_mine =0;
  1736  00061A  0E00               	movlw	0
  1737  00061C  0100               	movlb	0	; force () banked
  1738  00061E  6FC4               	movwf	(calculToucheCombien@nb_mine+1)& (0+255),b
  1739  000620  0E00               	movlw	0
  1740  000622  6FC3               	movwf	calculToucheCombien@nb_mine& (0+255),b
  1741                           
  1742                           ;main.c: 222: int i=0;
  1743  000624  0E00               	movlw	0
  1744  000626  0100               	movlb	0	; force () banked
  1745  000628  6FC8               	movwf	(calculToucheCombien@i+1)& (0+255),b
  1746  00062A  0E00               	movlw	0
  1747  00062C  6FC7               	movwf	calculToucheCombien@i& (0+255),b
  1748                           
  1749                           ;main.c: 223: int j=0;
  1750  00062E  0E00               	movlw	0
  1751  000630  0100               	movlb	0	; force () banked
  1752  000632  6FC6               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1753  000634  0E00               	movlw	0
  1754  000636  6FC5               	movwf	calculToucheCombien@j& (0+255),b
  1755  000638                     
  1756                           ; BSR set to: 0
  1757                           ;main.c: 225: if ((ligne<3)&&(ligne>0)&&(colonne>0)&&(colonne<20))
  1758  000638  0100               	movlb	0	; force () banked
  1759  00063A  BFBB               	btfsc	(calculToucheCombien@ligne+1)& (0+255),7,b
  1760  00063C  EF2B  F003         	goto	u1410
  1761  000640  51BB               	movf	(calculToucheCombien@ligne+1)& (0+255),w,b
  1762  000642  E107               	bnz	u1411
  1763  000644  0E03               	movlw	3
  1764  000646  5DBA               	subwf	calculToucheCombien@ligne& (0+255),w,b
  1765  000648  B0D8               	btfsc	status,0,c
  1766  00064A  EF29  F003         	goto	u1411
  1767  00064E  EF2B  F003         	goto	u1410
  1768  000652                     u1411:
  1769  000652  EFEB  F003         	goto	l2127
  1770  000656                     u1410:
  1771  000656                     
  1772                           ; BSR set to: 0
  1773  000656  0100               	movlb	0	; force () banked
  1774  000658  BFBB               	btfsc	(calculToucheCombien@ligne+1)& (0+255),7,b
  1775  00065A  EF37  F003         	goto	u1421
  1776  00065E  51BB               	movf	(calculToucheCombien@ligne+1)& (0+255),w,b
  1777  000660  E108               	bnz	u1420
  1778  000662  05BA               	decf	calculToucheCombien@ligne& (0+255),w,b
  1779  000664  A0D8               	btfss	status,0,c
  1780  000666  EF37  F003         	goto	u1421
  1781  00066A  EF39  F003         	goto	u1420
  1782  00066E                     u1421:
  1783  00066E  EFEB  F003         	goto	l2127
  1784  000672                     u1420:
  1785  000672                     
  1786                           ; BSR set to: 0
  1787  000672  0100               	movlb	0	; force () banked
  1788  000674  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  1789  000676  EF45  F003         	goto	u1431
  1790  00067A  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1791  00067C  E108               	bnz	u1430
  1792  00067E  05BC               	decf	calculToucheCombien@colonne& (0+255),w,b
  1793  000680  A0D8               	btfss	status,0,c
  1794  000682  EF45  F003         	goto	u1431
  1795  000686  EF47  F003         	goto	u1430
  1796  00068A                     u1431:
  1797  00068A  EFEB  F003         	goto	l2127
  1798  00068E                     u1430:
  1799  00068E                     
  1800                           ; BSR set to: 0
  1801  00068E  0100               	movlb	0	; force () banked
  1802  000690  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  1803  000692  EF56  F003         	goto	u1440
  1804  000696  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1805  000698  E107               	bnz	u1441
  1806  00069A  0E14               	movlw	20
  1807  00069C  5DBC               	subwf	calculToucheCombien@colonne& (0+255),w,b
  1808  00069E  B0D8               	btfsc	status,0,c
  1809  0006A0  EF54  F003         	goto	u1441
  1810  0006A4  EF56  F003         	goto	u1440
  1811  0006A8                     u1441:
  1812  0006A8  EFEB  F003         	goto	l2127
  1813  0006AC                     u1440:
  1814  0006AC                     
  1815                           ; BSR set to: 0
  1816                           ;main.c: 226: {;main.c: 227: for(i=-1;i<2;i++)
  1817  0006AC  0100               	movlb	0	; force () banked
  1818  0006AE  69C7               	setf	calculToucheCombien@i& (0+255),b
  1819  0006B0  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  1820  0006B2                     
  1821                           ; BSR set to: 0
  1822  0006B2  0100               	movlb	0	; force () banked
  1823  0006B4  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  1824  0006B6  EF66  F003         	goto	u1451
  1825  0006BA  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  1826  0006BC  E109               	bnz	u1450
  1827  0006BE  0E02               	movlw	2
  1828  0006C0  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  1829  0006C2  A0D8               	btfss	status,0,c
  1830  0006C4  EF66  F003         	goto	u1451
  1831  0006C8  EF68  F003         	goto	u1450
  1832  0006CC                     u1451:
  1833  0006CC  EF6A  F003         	goto	l122
  1834  0006D0                     u1450:
  1835  0006D0  EFEB  F003         	goto	l2127
  1836  0006D4                     l122:
  1837                           
  1838                           ; BSR set to: 0
  1839                           ;main.c: 228: {;main.c: 229: for(j=-1;j<=1;j++)
  1840  0006D4  0100               	movlb	0	; force () banked
  1841  0006D6  69C5               	setf	calculToucheCombien@j& (0+255),b
  1842  0006D8  69C6               	setf	(calculToucheCombien@j+1)& (0+255),b
  1843  0006DA                     
  1844                           ; BSR set to: 0
  1845  0006DA  0100               	movlb	0	; force () banked
  1846  0006DC  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1847  0006DE  EF7A  F003         	goto	u1461
  1848  0006E2  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1849  0006E4  E109               	bnz	u1460
  1850  0006E6  0E02               	movlw	2
  1851  0006E8  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  1852  0006EA  A0D8               	btfss	status,0,c
  1853  0006EC  EF7A  F003         	goto	u1461
  1854  0006F0  EF7C  F003         	goto	u1460
  1855  0006F4                     u1461:
  1856  0006F4  EF7E  F003         	goto	l2117
  1857  0006F8                     u1460:
  1858  0006F8  EFD9  F003         	goto	l2123
  1859  0006FC                     l2117:
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;main.c: 230: {;main.c: 231: if (m_tabMines[ligne+(i)][colonne+j]== 2)
  1863  0006FC  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  1864  000700  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  1865  000704  0E00               	movlw	0
  1866  000706  0100               	movlb	0	; force () banked
  1867  000708  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1868  00070A  0E15               	movlw	21
  1869  00070C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1870  00070E  EC85  F012         	call	___wmul	;wreg free
  1871  000712  0E60               	movlw	low _m_tabMines
  1872  000714  0100               	movlb	0	; force () banked
  1873  000716  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1874  000718  0E00               	movlw	high _m_tabMines
  1875  00071A  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1876  00071C  0100               	movlb	0	; force () banked
  1877  00071E  51B4               	movf	?___wmul& (0+255),w,b
  1878  000720  0100               	movlb	0	; force () banked
  1879  000722  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  1880  000724  0100               	movlb	0	; force () banked
  1881  000726  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1882  000728  0100               	movlb	0	; force () banked
  1883  00072A  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1884  00072C  C0C7  F0B4         	movff	calculToucheCombien@i,___wmul@multiplier
  1885  000730  C0C8  F0B5         	movff	calculToucheCombien@i+1,___wmul@multiplier+1
  1886  000734  0E00               	movlw	0
  1887  000736  0100               	movlb	0	; force () banked
  1888  000738  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1889  00073A  0E15               	movlw	21
  1890  00073C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1891  00073E  EC85  F012         	call	___wmul	;wreg free
  1892  000742  0100               	movlb	0	; force () banked
  1893  000744  51B4               	movf	?___wmul& (0+255),w,b
  1894  000746  0100               	movlb	0	; force () banked
  1895  000748  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  1896  00074A  0100               	movlb	0	; force () banked
  1897  00074C  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1898  00074E  0100               	movlb	0	; force () banked
  1899  000750  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1900  000752  0100               	movlb	0	; force () banked
  1901  000754  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  1902  000756  0100               	movlb	0	; force () banked
  1903  000758  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  1904  00075A  0100               	movlb	0	; force () banked
  1905  00075C  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1906  00075E  0100               	movlb	0	; force () banked
  1907  000760  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1908  000762  0100               	movlb	0	; force () banked
  1909  000764  51C5               	movf	calculToucheCombien@j& (0+255),w,b
  1910  000766  0100               	movlb	0	; force () banked
  1911  000768  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  1912  00076A  6ED9               	movwf	fsr2l,c
  1913  00076C  0100               	movlb	0	; force () banked
  1914  00076E  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1915  000770  0100               	movlb	0	; force () banked
  1916  000772  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  1917  000774  6EDA               	movwf	fsr2h,c
  1918  000776  0E02               	movlw	2
  1919  000778  18DE               	xorwf	postinc2,w,c
  1920  00077A  A4D8               	btfss	status,2,c
  1921  00077C  EFC2  F003         	goto	u1471
  1922  000780  EFC4  F003         	goto	u1470
  1923  000784                     u1471:
  1924  000784  EFC7  F003         	goto	l126
  1925  000788                     u1470:
  1926  000788                     
  1927                           ; BSR set to: 0
  1928                           ;main.c: 232: {;main.c: 233: nb_mine++;
  1929  000788  0100               	movlb	0	; force () banked
  1930  00078A  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  1931  00078C  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  1932  00078E                     l126:
  1933                           
  1934                           ; BSR set to: 0
  1935  00078E  0100               	movlb	0	; force () banked
  1936  000790  4BC5               	infsnz	calculToucheCombien@j& (0+255),f,b
  1937  000792  2BC6               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  1938  000794                     
  1939                           ; BSR set to: 0
  1940  000794  0100               	movlb	0	; force () banked
  1941  000796  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1942  000798  EFD7  F003         	goto	u1481
  1943  00079C  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1944  00079E  E109               	bnz	u1480
  1945  0007A0  0E02               	movlw	2
  1946  0007A2  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  1947  0007A4  A0D8               	btfss	status,0,c
  1948  0007A6  EFD7  F003         	goto	u1481
  1949  0007AA  EFD9  F003         	goto	u1480
  1950  0007AE                     u1481:
  1951  0007AE  EF7E  F003         	goto	l2117
  1952  0007B2                     u1480:
  1953  0007B2                     l2123:
  1954                           
  1955                           ; BSR set to: 0
  1956  0007B2  0100               	movlb	0	; force () banked
  1957  0007B4  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  1958  0007B6  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  1959  0007B8                     
  1960                           ; BSR set to: 0
  1961  0007B8  0100               	movlb	0	; force () banked
  1962  0007BA  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  1963  0007BC  EFE9  F003         	goto	u1491
  1964  0007C0  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  1965  0007C2  E109               	bnz	u1490
  1966  0007C4  0E02               	movlw	2
  1967  0007C6  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  1968  0007C8  A0D8               	btfss	status,0,c
  1969  0007CA  EFE9  F003         	goto	u1491
  1970  0007CE  EFEB  F003         	goto	u1490
  1971  0007D2                     u1491:
  1972  0007D2  EF6A  F003         	goto	l122
  1973  0007D6                     u1490:
  1974  0007D6                     l2127:
  1975                           
  1976                           ; BSR set to: 0
  1977                           ;main.c: 234: };main.c: 235: };main.c: 236: };main.c: 237: };main.c: 238: if((ligne==0)&
      +                          &(colonne==0))
  1978  0007D6  0100               	movlb	0	; force () banked
  1979  0007D8  51BA               	movf	calculToucheCombien@ligne& (0+255),w,b
  1980  0007DA  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  1981  0007DC  A4D8               	btfss	status,2,c
  1982  0007DE  EFF3  F003         	goto	u1501
  1983  0007E2  EFF5  F003         	goto	u1500
  1984  0007E6                     u1501:
  1985  0007E6  EF93  F004         	goto	l2147
  1986  0007EA                     u1500:
  1987  0007EA                     
  1988                           ; BSR set to: 0
  1989  0007EA  0100               	movlb	0	; force () banked
  1990  0007EC  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  1991  0007EE  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1992  0007F0  A4D8               	btfss	status,2,c
  1993  0007F2  EFFD  F003         	goto	u1511
  1994  0007F6  EFFF  F003         	goto	u1510
  1995  0007FA                     u1511:
  1996  0007FA  EF93  F004         	goto	l2147
  1997  0007FE                     u1510:
  1998  0007FE                     
  1999                           ; BSR set to: 0
  2000                           ;main.c: 239: {;main.c: 240: if(m_tabMines[ligne][colonne+1]==2)
  2001  0007FE  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2002  000802  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2003  000806  0E00               	movlw	0
  2004  000808  0100               	movlb	0	; force () banked
  2005  00080A  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2006  00080C  0E15               	movlw	21
  2007  00080E  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2008  000810  EC85  F012         	call	___wmul	;wreg free
  2009  000814  0E60               	movlw	low _m_tabMines
  2010  000816  0100               	movlb	0	; force () banked
  2011  000818  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2012  00081A  0E00               	movlw	high _m_tabMines
  2013  00081C  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2014  00081E  0E01               	movlw	1
  2015  000820  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2016  000822  0E00               	movlw	0
  2017  000824  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2018  000826  0100               	movlb	0	; force () banked
  2019  000828  51B4               	movf	?___wmul& (0+255),w,b
  2020  00082A  0100               	movlb	0	; force () banked
  2021  00082C  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2022  00082E  0100               	movlb	0	; force () banked
  2023  000830  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2024  000832  0100               	movlb	0	; force () banked
  2025  000834  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2026  000836  0100               	movlb	0	; force () banked
  2027  000838  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2028  00083A  0100               	movlb	0	; force () banked
  2029  00083C  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2030  00083E  6ED9               	movwf	fsr2l,c
  2031  000840  0100               	movlb	0	; force () banked
  2032  000842  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2033  000844  0100               	movlb	0	; force () banked
  2034  000846  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2035  000848  6EDA               	movwf	fsr2h,c
  2036  00084A  0E02               	movlw	2
  2037  00084C  18DE               	xorwf	postinc2,w,c
  2038  00084E  A4D8               	btfss	status,2,c
  2039  000850  EF2C  F004         	goto	u1521
  2040  000854  EF2E  F004         	goto	u1520
  2041  000858                     u1521:
  2042  000858  EF31  F004         	goto	l2135
  2043  00085C                     u1520:
  2044  00085C                     
  2045                           ; BSR set to: 0
  2046                           ;main.c: 241: {;main.c: 242: nb_mine++;
  2047  00085C  0100               	movlb	0	; force () banked
  2048  00085E  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2049  000860  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2050  000862                     l2135:
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;main.c: 243: };main.c: 244: for(j=0;j<=1;j++)
  2054  000862  0E00               	movlw	0
  2055  000864  0100               	movlb	0	; force () banked
  2056  000866  6FC6               	movwf	(calculToucheCombien@j+1)& (0+255),b
  2057  000868  0E00               	movlw	0
  2058  00086A  6FC5               	movwf	calculToucheCombien@j& (0+255),b
  2059  00086C                     
  2060                           ; BSR set to: 0
  2061  00086C  0100               	movlb	0	; force () banked
  2062  00086E  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  2063  000870  EF43  F004         	goto	u1531
  2064  000874  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2065  000876  E109               	bnz	u1530
  2066  000878  0E02               	movlw	2
  2067  00087A  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  2068  00087C  A0D8               	btfss	status,0,c
  2069  00087E  EF43  F004         	goto	u1531
  2070  000882  EF45  F004         	goto	u1530
  2071  000886                     u1531:
  2072  000886  EF47  F004         	goto	l2141
  2073  00088A                     u1530:
  2074  00088A  EF93  F004         	goto	l2147
  2075  00088E                     l2141:
  2076                           
  2077                           ; BSR set to: 0
  2078                           ;main.c: 245: {;main.c: 246: if(m_tabMines[ligne+1][colonne+j]==2)
  2079  00088E  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2080  000892  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2081  000896  0E00               	movlw	0
  2082  000898  0100               	movlb	0	; force () banked
  2083  00089A  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2084  00089C  0E15               	movlw	21
  2085  00089E  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2086  0008A0  EC85  F012         	call	___wmul	;wreg free
  2087  0008A4  0E60               	movlw	low _m_tabMines
  2088  0008A6  0100               	movlb	0	; force () banked
  2089  0008A8  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2090  0008AA  0E00               	movlw	high _m_tabMines
  2091  0008AC  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2092  0008AE  0E15               	movlw	21
  2093  0008B0  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2094  0008B2  0E00               	movlw	0
  2095  0008B4  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2096  0008B6  0100               	movlb	0	; force () banked
  2097  0008B8  51B4               	movf	?___wmul& (0+255),w,b
  2098  0008BA  0100               	movlb	0	; force () banked
  2099  0008BC  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2100  0008BE  0100               	movlb	0	; force () banked
  2101  0008C0  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2102  0008C2  0100               	movlb	0	; force () banked
  2103  0008C4  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2104  0008C6  0100               	movlb	0	; force () banked
  2105  0008C8  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2106  0008CA  0100               	movlb	0	; force () banked
  2107  0008CC  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2108  0008CE  0100               	movlb	0	; force () banked
  2109  0008D0  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2110  0008D2  0100               	movlb	0	; force () banked
  2111  0008D4  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2112  0008D6  0100               	movlb	0	; force () banked
  2113  0008D8  51C5               	movf	calculToucheCombien@j& (0+255),w,b
  2114  0008DA  0100               	movlb	0	; force () banked
  2115  0008DC  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2116  0008DE  6ED9               	movwf	fsr2l,c
  2117  0008E0  0100               	movlb	0	; force () banked
  2118  0008E2  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2119  0008E4  0100               	movlb	0	; force () banked
  2120  0008E6  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2121  0008E8  6EDA               	movwf	fsr2h,c
  2122  0008EA  0E02               	movlw	2
  2123  0008EC  18DE               	xorwf	postinc2,w,c
  2124  0008EE  A4D8               	btfss	status,2,c
  2125  0008F0  EF7C  F004         	goto	u1541
  2126  0008F4  EF7E  F004         	goto	u1540
  2127  0008F8                     u1541:
  2128  0008F8  EF81  F004         	goto	l131
  2129  0008FC                     u1540:
  2130  0008FC                     
  2131                           ; BSR set to: 0
  2132                           ;main.c: 247: {;main.c: 248: nb_mine++;
  2133  0008FC  0100               	movlb	0	; force () banked
  2134  0008FE  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2135  000900  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2136  000902                     l131:
  2137                           
  2138                           ; BSR set to: 0
  2139  000902  0100               	movlb	0	; force () banked
  2140  000904  4BC5               	infsnz	calculToucheCombien@j& (0+255),f,b
  2141  000906  2BC6               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  2142  000908                     
  2143                           ; BSR set to: 0
  2144  000908  0100               	movlb	0	; force () banked
  2145  00090A  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  2146  00090C  EF91  F004         	goto	u1551
  2147  000910  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2148  000912  E109               	bnz	u1550
  2149  000914  0E02               	movlw	2
  2150  000916  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  2151  000918  A0D8               	btfss	status,0,c
  2152  00091A  EF91  F004         	goto	u1551
  2153  00091E  EF93  F004         	goto	u1550
  2154  000922                     u1551:
  2155  000922  EF47  F004         	goto	l2141
  2156  000926                     u1550:
  2157  000926                     l2147:
  2158                           
  2159                           ; BSR set to: 0
  2160                           ;main.c: 249: };main.c: 250: };main.c: 251: };main.c: 252: if((ligne==0)&&(colonne==20))
  2161  000926  0100               	movlb	0	; force () banked
  2162  000928  51BA               	movf	calculToucheCombien@ligne& (0+255),w,b
  2163  00092A  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2164  00092C  A4D8               	btfss	status,2,c
  2165  00092E  EF9B  F004         	goto	u1561
  2166  000932  EF9D  F004         	goto	u1560
  2167  000936                     u1561:
  2168  000936  EF3C  F005         	goto	l2167
  2169  00093A                     u1560:
  2170  00093A                     
  2171                           ; BSR set to: 0
  2172  00093A  0E14               	movlw	20
  2173  00093C  0100               	movlb	0	; force () banked
  2174  00093E  19BC               	xorwf	calculToucheCombien@colonne& (0+255),w,b
  2175  000940  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2176  000942  A4D8               	btfss	status,2,c
  2177  000944  EFA6  F004         	goto	u1571
  2178  000948  EFA8  F004         	goto	u1570
  2179  00094C                     u1571:
  2180  00094C  EF3C  F005         	goto	l2167
  2181  000950                     u1570:
  2182  000950                     
  2183                           ; BSR set to: 0
  2184                           ;main.c: 253: {;main.c: 254: if(m_tabMines[ligne][colonne-1]==2)
  2185  000950  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2186  000954  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2187  000958  0E00               	movlw	0
  2188  00095A  0100               	movlb	0	; force () banked
  2189  00095C  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2190  00095E  0E15               	movlw	21
  2191  000960  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2192  000962  EC85  F012         	call	___wmul	;wreg free
  2193  000966  0EFF               	movlw	255
  2194  000968  0100               	movlb	0	; force () banked
  2195  00096A  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2196  00096C  0EFF               	movlw	255
  2197  00096E  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2198  000970  0E60               	movlw	low _m_tabMines
  2199  000972  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2200  000974  0E00               	movlw	high _m_tabMines
  2201  000976  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2202  000978  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  2203  00097A  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2204  00097C  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2205  00097E  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2206  000980  0100               	movlb	0	; force () banked
  2207  000982  51B4               	movf	?___wmul& (0+255),w,b
  2208  000984  0100               	movlb	0	; force () banked
  2209  000986  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2210  000988  0100               	movlb	0	; force () banked
  2211  00098A  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2212  00098C  0100               	movlb	0	; force () banked
  2213  00098E  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2214  000990  0100               	movlb	0	; force () banked
  2215  000992  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2216  000994  0100               	movlb	0	; force () banked
  2217  000996  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2218  000998  6ED9               	movwf	fsr2l,c
  2219  00099A  0100               	movlb	0	; force () banked
  2220  00099C  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2221  00099E  0100               	movlb	0	; force () banked
  2222  0009A0  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2223  0009A2  6EDA               	movwf	fsr2h,c
  2224  0009A4  0E02               	movlw	2
  2225  0009A6  18DE               	xorwf	postinc2,w,c
  2226  0009A8  A4D8               	btfss	status,2,c
  2227  0009AA  EFD9  F004         	goto	u1581
  2228  0009AE  EFDB  F004         	goto	u1580
  2229  0009B2                     u1581:
  2230  0009B2  EFDE  F004         	goto	l2155
  2231  0009B6                     u1580:
  2232  0009B6                     
  2233                           ; BSR set to: 0
  2234                           ;main.c: 255: {;main.c: 256: nb_mine++;
  2235  0009B6  0100               	movlb	0	; force () banked
  2236  0009B8  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2237  0009BA  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2238  0009BC                     l2155:
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;main.c: 257: };main.c: 258: for(i=-1;i<1;i++)
  2242  0009BC  0100               	movlb	0	; force () banked
  2243  0009BE  69C7               	setf	calculToucheCombien@i& (0+255),b
  2244  0009C0  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  2245  0009C2                     
  2246                           ; BSR set to: 0
  2247  0009C2  0100               	movlb	0	; force () banked
  2248  0009C4  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2249  0009C6  EFED  F004         	goto	u1591
  2250  0009CA  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2251  0009CC  E108               	bnz	u1590
  2252  0009CE  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  2253  0009D0  A0D8               	btfss	status,0,c
  2254  0009D2  EFED  F004         	goto	u1591
  2255  0009D6  EFEF  F004         	goto	u1590
  2256  0009DA                     u1591:
  2257  0009DA  EFF1  F004         	goto	l2161
  2258  0009DE                     u1590:
  2259  0009DE  EF3C  F005         	goto	l2167
  2260  0009E2                     l2161:
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;main.c: 259: {;main.c: 260: if(m_tabMines[ligne+1][colonne+i]==2)
  2264  0009E2  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2265  0009E6  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2266  0009EA  0E00               	movlw	0
  2267  0009EC  0100               	movlb	0	; force () banked
  2268  0009EE  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2269  0009F0  0E15               	movlw	21
  2270  0009F2  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2271  0009F4  EC85  F012         	call	___wmul	;wreg free
  2272  0009F8  0E60               	movlw	low _m_tabMines
  2273  0009FA  0100               	movlb	0	; force () banked
  2274  0009FC  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2275  0009FE  0E00               	movlw	high _m_tabMines
  2276  000A00  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2277  000A02  0E15               	movlw	21
  2278  000A04  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2279  000A06  0E00               	movlw	0
  2280  000A08  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2281  000A0A  0100               	movlb	0	; force () banked
  2282  000A0C  51B4               	movf	?___wmul& (0+255),w,b
  2283  000A0E  0100               	movlb	0	; force () banked
  2284  000A10  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2285  000A12  0100               	movlb	0	; force () banked
  2286  000A14  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2287  000A16  0100               	movlb	0	; force () banked
  2288  000A18  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2289  000A1A  0100               	movlb	0	; force () banked
  2290  000A1C  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2291  000A1E  0100               	movlb	0	; force () banked
  2292  000A20  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2293  000A22  0100               	movlb	0	; force () banked
  2294  000A24  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2295  000A26  0100               	movlb	0	; force () banked
  2296  000A28  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2297  000A2A  0100               	movlb	0	; force () banked
  2298  000A2C  51C7               	movf	calculToucheCombien@i& (0+255),w,b
  2299  000A2E  0100               	movlb	0	; force () banked
  2300  000A30  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2301  000A32  6ED9               	movwf	fsr2l,c
  2302  000A34  0100               	movlb	0	; force () banked
  2303  000A36  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2304  000A38  0100               	movlb	0	; force () banked
  2305  000A3A  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2306  000A3C  6EDA               	movwf	fsr2h,c
  2307  000A3E  0E02               	movlw	2
  2308  000A40  18DE               	xorwf	postinc2,w,c
  2309  000A42  A4D8               	btfss	status,2,c
  2310  000A44  EF26  F005         	goto	u1601
  2311  000A48  EF28  F005         	goto	u1600
  2312  000A4C                     u1601:
  2313  000A4C  EF2B  F005         	goto	l136
  2314  000A50                     u1600:
  2315  000A50                     
  2316                           ; BSR set to: 0
  2317                           ;main.c: 261: {;main.c: 262: nb_mine++;
  2318  000A50  0100               	movlb	0	; force () banked
  2319  000A52  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2320  000A54  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2321  000A56                     l136:
  2322                           
  2323                           ; BSR set to: 0
  2324  000A56  0100               	movlb	0	; force () banked
  2325  000A58  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2326  000A5A  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2327  000A5C                     
  2328                           ; BSR set to: 0
  2329  000A5C  0100               	movlb	0	; force () banked
  2330  000A5E  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2331  000A60  EF3A  F005         	goto	u1611
  2332  000A64  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2333  000A66  E108               	bnz	u1610
  2334  000A68  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  2335  000A6A  A0D8               	btfss	status,0,c
  2336  000A6C  EF3A  F005         	goto	u1611
  2337  000A70  EF3C  F005         	goto	u1610
  2338  000A74                     u1611:
  2339  000A74  EFF1  F004         	goto	l2161
  2340  000A78                     u1610:
  2341  000A78                     l2167:
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;main.c: 263: };main.c: 264: };main.c: 265: };main.c: 266: if((ligne==0)&&(colonne<20)&&
      +                          (colonne>0))
  2345  000A78  0100               	movlb	0	; force () banked
  2346  000A7A  51BA               	movf	calculToucheCombien@ligne& (0+255),w,b
  2347  000A7C  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2348  000A7E  A4D8               	btfss	status,2,c
  2349  000A80  EF44  F005         	goto	u1621
  2350  000A84  EF46  F005         	goto	u1620
  2351  000A88                     u1621:
  2352  000A88  EF58  F006         	goto	l2205
  2353  000A8C                     u1620:
  2354  000A8C                     
  2355                           ; BSR set to: 0
  2356  000A8C  0100               	movlb	0	; force () banked
  2357  000A8E  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  2358  000A90  EF55  F005         	goto	u1630
  2359  000A94  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2360  000A96  E107               	bnz	u1631
  2361  000A98  0E14               	movlw	20
  2362  000A9A  5DBC               	subwf	calculToucheCombien@colonne& (0+255),w,b
  2363  000A9C  B0D8               	btfsc	status,0,c
  2364  000A9E  EF53  F005         	goto	u1631
  2365  000AA2  EF55  F005         	goto	u1630
  2366  000AA6                     u1631:
  2367  000AA6  EF58  F006         	goto	l2205
  2368  000AAA                     u1630:
  2369  000AAA                     
  2370                           ; BSR set to: 0
  2371  000AAA  0100               	movlb	0	; force () banked
  2372  000AAC  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  2373  000AAE  EF61  F005         	goto	u1641
  2374  000AB2  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2375  000AB4  E108               	bnz	u1640
  2376  000AB6  05BC               	decf	calculToucheCombien@colonne& (0+255),w,b
  2377  000AB8  A0D8               	btfss	status,0,c
  2378  000ABA  EF61  F005         	goto	u1641
  2379  000ABE  EF63  F005         	goto	u1640
  2380  000AC2                     u1641:
  2381  000AC2  EF58  F006         	goto	l2205
  2382  000AC6                     u1640:
  2383  000AC6                     
  2384                           ; BSR set to: 0
  2385                           ;main.c: 267: {;main.c: 268: for(i=-1;i<=1;i++)
  2386  000AC6  0100               	movlb	0	; force () banked
  2387  000AC8  69C7               	setf	calculToucheCombien@i& (0+255),b
  2388  000ACA  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  2389  000ACC                     
  2390                           ; BSR set to: 0
  2391  000ACC  0100               	movlb	0	; force () banked
  2392  000ACE  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2393  000AD0  EF73  F005         	goto	u1651
  2394  000AD4  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2395  000AD6  E109               	bnz	u1650
  2396  000AD8  0E02               	movlw	2
  2397  000ADA  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  2398  000ADC  A0D8               	btfss	status,0,c
  2399  000ADE  EF73  F005         	goto	u1651
  2400  000AE2  EF75  F005         	goto	u1650
  2401  000AE6                     u1651:
  2402  000AE6  EF77  F005         	goto	l2179
  2403  000AEA                     u1650:
  2404  000AEA  EFC1  F005         	goto	l2185
  2405  000AEE                     l2179:
  2406                           
  2407                           ; BSR set to: 0
  2408                           ;main.c: 269: {;main.c: 270: if(m_tabMines[ligne][colonne+(i)]==2)
  2409  000AEE  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2410  000AF2  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2411  000AF6  0E00               	movlw	0
  2412  000AF8  0100               	movlb	0	; force () banked
  2413  000AFA  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2414  000AFC  0E15               	movlw	21
  2415  000AFE  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2416  000B00  EC85  F012         	call	___wmul	;wreg free
  2417  000B04  0E60               	movlw	low _m_tabMines
  2418  000B06  0100               	movlb	0	; force () banked
  2419  000B08  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2420  000B0A  0E00               	movlw	high _m_tabMines
  2421  000B0C  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2422  000B0E  0100               	movlb	0	; force () banked
  2423  000B10  51B4               	movf	?___wmul& (0+255),w,b
  2424  000B12  0100               	movlb	0	; force () banked
  2425  000B14  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2426  000B16  0100               	movlb	0	; force () banked
  2427  000B18  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2428  000B1A  0100               	movlb	0	; force () banked
  2429  000B1C  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2430  000B1E  0100               	movlb	0	; force () banked
  2431  000B20  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2432  000B22  0100               	movlb	0	; force () banked
  2433  000B24  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2434  000B26  0100               	movlb	0	; force () banked
  2435  000B28  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2436  000B2A  0100               	movlb	0	; force () banked
  2437  000B2C  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2438  000B2E  0100               	movlb	0	; force () banked
  2439  000B30  51C7               	movf	calculToucheCombien@i& (0+255),w,b
  2440  000B32  0100               	movlb	0	; force () banked
  2441  000B34  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2442  000B36  6ED9               	movwf	fsr2l,c
  2443  000B38  0100               	movlb	0	; force () banked
  2444  000B3A  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2445  000B3C  0100               	movlb	0	; force () banked
  2446  000B3E  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2447  000B40  6EDA               	movwf	fsr2h,c
  2448  000B42  0E02               	movlw	2
  2449  000B44  18DE               	xorwf	postinc2,w,c
  2450  000B46  A4D8               	btfss	status,2,c
  2451  000B48  EFA8  F005         	goto	u1661
  2452  000B4C  EFAA  F005         	goto	u1660
  2453  000B50                     u1661:
  2454  000B50  EFAD  F005         	goto	l140
  2455  000B54                     u1660:
  2456  000B54                     
  2457                           ; BSR set to: 0
  2458                           ;main.c: 271: {;main.c: 272: nb_mine ++;
  2459  000B54  0100               	movlb	0	; force () banked
  2460  000B56  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2461  000B58  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2462  000B5A                     l140:
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;main.c: 273: };main.c: 274: i++;
  2466  000B5A  0100               	movlb	0	; force () banked
  2467  000B5C  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2468  000B5E  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2469  000B60  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2470  000B62  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2471  000B64                     
  2472                           ; BSR set to: 0
  2473  000B64  0100               	movlb	0	; force () banked
  2474  000B66  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2475  000B68  EFBF  F005         	goto	u1671
  2476  000B6C  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2477  000B6E  E109               	bnz	u1670
  2478  000B70  0E02               	movlw	2
  2479  000B72  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  2480  000B74  A0D8               	btfss	status,0,c
  2481  000B76  EFBF  F005         	goto	u1671
  2482  000B7A  EFC1  F005         	goto	u1670
  2483  000B7E                     u1671:
  2484  000B7E  EF77  F005         	goto	l2179
  2485  000B82                     u1670:
  2486  000B82                     l2185:
  2487                           
  2488                           ; BSR set to: 0
  2489                           ;main.c: 275: };main.c: 276: for(i=1;i<=1;i++)
  2490  000B82  0E00               	movlw	0
  2491  000B84  0100               	movlb	0	; force () banked
  2492  000B86  6FC8               	movwf	(calculToucheCombien@i+1)& (0+255),b
  2493  000B88  0E01               	movlw	1
  2494  000B8A  6FC7               	movwf	calculToucheCombien@i& (0+255),b
  2495  000B8C                     
  2496                           ; BSR set to: 0
  2497  000B8C  0100               	movlb	0	; force () banked
  2498  000B8E  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2499  000B90  EFD3  F005         	goto	u1681
  2500  000B94  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2501  000B96  E109               	bnz	u1680
  2502  000B98  0E02               	movlw	2
  2503  000B9A  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  2504  000B9C  A0D8               	btfss	status,0,c
  2505  000B9E  EFD3  F005         	goto	u1681
  2506  000BA2  EFD5  F005         	goto	u1680
  2507  000BA6                     u1681:
  2508  000BA6  EFD7  F005         	goto	l141
  2509  000BAA                     u1680:
  2510  000BAA  EF58  F006         	goto	l2205
  2511  000BAE                     l141:
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;main.c: 277: {;main.c: 278: for(j=-1;j<=1;j++)
  2515  000BAE  0100               	movlb	0	; force () banked
  2516  000BB0  69C5               	setf	calculToucheCombien@j& (0+255),b
  2517  000BB2  69C6               	setf	(calculToucheCombien@j+1)& (0+255),b
  2518  000BB4                     
  2519                           ; BSR set to: 0
  2520  000BB4  0100               	movlb	0	; force () banked
  2521  000BB6  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  2522  000BB8  EFE7  F005         	goto	u1691
  2523  000BBC  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2524  000BBE  E109               	bnz	u1690
  2525  000BC0  0E02               	movlw	2
  2526  000BC2  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  2527  000BC4  A0D8               	btfss	status,0,c
  2528  000BC6  EFE7  F005         	goto	u1691
  2529  000BCA  EFE9  F005         	goto	u1690
  2530  000BCE                     u1691:
  2531  000BCE  EFEB  F005         	goto	l2195
  2532  000BD2                     u1690:
  2533  000BD2  EF46  F006         	goto	l2201
  2534  000BD6                     l2195:
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;main.c: 279: {;main.c: 280: if(m_tabMines[ligne+i][colonne+j]==2)
  2538  000BD6  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2539  000BDA  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2540  000BDE  0E00               	movlw	0
  2541  000BE0  0100               	movlb	0	; force () banked
  2542  000BE2  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2543  000BE4  0E15               	movlw	21
  2544  000BE6  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2545  000BE8  EC85  F012         	call	___wmul	;wreg free
  2546  000BEC  0E60               	movlw	low _m_tabMines
  2547  000BEE  0100               	movlb	0	; force () banked
  2548  000BF0  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2549  000BF2  0E00               	movlw	high _m_tabMines
  2550  000BF4  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2551  000BF6  0100               	movlb	0	; force () banked
  2552  000BF8  51B4               	movf	?___wmul& (0+255),w,b
  2553  000BFA  0100               	movlb	0	; force () banked
  2554  000BFC  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2555  000BFE  0100               	movlb	0	; force () banked
  2556  000C00  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2557  000C02  0100               	movlb	0	; force () banked
  2558  000C04  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2559  000C06  C0C7  F0B4         	movff	calculToucheCombien@i,___wmul@multiplier
  2560  000C0A  C0C8  F0B5         	movff	calculToucheCombien@i+1,___wmul@multiplier+1
  2561  000C0E  0E00               	movlw	0
  2562  000C10  0100               	movlb	0	; force () banked
  2563  000C12  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2564  000C14  0E15               	movlw	21
  2565  000C16  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2566  000C18  EC85  F012         	call	___wmul	;wreg free
  2567  000C1C  0100               	movlb	0	; force () banked
  2568  000C1E  51B4               	movf	?___wmul& (0+255),w,b
  2569  000C20  0100               	movlb	0	; force () banked
  2570  000C22  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2571  000C24  0100               	movlb	0	; force () banked
  2572  000C26  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2573  000C28  0100               	movlb	0	; force () banked
  2574  000C2A  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2575  000C2C  0100               	movlb	0	; force () banked
  2576  000C2E  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2577  000C30  0100               	movlb	0	; force () banked
  2578  000C32  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2579  000C34  0100               	movlb	0	; force () banked
  2580  000C36  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2581  000C38  0100               	movlb	0	; force () banked
  2582  000C3A  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2583  000C3C  0100               	movlb	0	; force () banked
  2584  000C3E  51C5               	movf	calculToucheCombien@j& (0+255),w,b
  2585  000C40  0100               	movlb	0	; force () banked
  2586  000C42  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2587  000C44  6ED9               	movwf	fsr2l,c
  2588  000C46  0100               	movlb	0	; force () banked
  2589  000C48  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2590  000C4A  0100               	movlb	0	; force () banked
  2591  000C4C  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2592  000C4E  6EDA               	movwf	fsr2h,c
  2593  000C50  0E02               	movlw	2
  2594  000C52  18DE               	xorwf	postinc2,w,c
  2595  000C54  A4D8               	btfss	status,2,c
  2596  000C56  EF2F  F006         	goto	u1701
  2597  000C5A  EF31  F006         	goto	u1700
  2598  000C5E                     u1701:
  2599  000C5E  EF34  F006         	goto	l145
  2600  000C62                     u1700:
  2601  000C62                     
  2602                           ; BSR set to: 0
  2603                           ;main.c: 281: {;main.c: 282: nb_mine ++;
  2604  000C62  0100               	movlb	0	; force () banked
  2605  000C64  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2606  000C66  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2607  000C68                     l145:
  2608                           
  2609                           ; BSR set to: 0
  2610  000C68  0100               	movlb	0	; force () banked
  2611  000C6A  4BC5               	infsnz	calculToucheCombien@j& (0+255),f,b
  2612  000C6C  2BC6               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  2613  000C6E                     
  2614                           ; BSR set to: 0
  2615  000C6E  0100               	movlb	0	; force () banked
  2616  000C70  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  2617  000C72  EF44  F006         	goto	u1711
  2618  000C76  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2619  000C78  E109               	bnz	u1710
  2620  000C7A  0E02               	movlw	2
  2621  000C7C  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  2622  000C7E  A0D8               	btfss	status,0,c
  2623  000C80  EF44  F006         	goto	u1711
  2624  000C84  EF46  F006         	goto	u1710
  2625  000C88                     u1711:
  2626  000C88  EFEB  F005         	goto	l2195
  2627  000C8C                     u1710:
  2628  000C8C                     l2201:
  2629                           
  2630                           ; BSR set to: 0
  2631  000C8C  0100               	movlb	0	; force () banked
  2632  000C8E  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2633  000C90  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2634  000C92                     
  2635                           ; BSR set to: 0
  2636  000C92  0100               	movlb	0	; force () banked
  2637  000C94  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2638  000C96  EF56  F006         	goto	u1721
  2639  000C9A  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2640  000C9C  E109               	bnz	u1720
  2641  000C9E  0E02               	movlw	2
  2642  000CA0  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  2643  000CA2  A0D8               	btfss	status,0,c
  2644  000CA4  EF56  F006         	goto	u1721
  2645  000CA8  EF58  F006         	goto	u1720
  2646  000CAC                     u1721:
  2647  000CAC  EFD7  F005         	goto	l141
  2648  000CB0                     u1720:
  2649  000CB0                     l2205:
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;main.c: 283: };main.c: 284: };main.c: 285: };main.c: 286: };main.c: 287: if((ligne==3)&
      +                          &(colonne==0))
  2653  000CB0  0E03               	movlw	3
  2654  000CB2  0100               	movlb	0	; force () banked
  2655  000CB4  19BA               	xorwf	calculToucheCombien@ligne& (0+255),w,b
  2656  000CB6  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2657  000CB8  A4D8               	btfss	status,2,c
  2658  000CBA  EF61  F006         	goto	u1731
  2659  000CBE  EF63  F006         	goto	u1730
  2660  000CC2                     u1731:
  2661  000CC2  EF0C  F007         	goto	l2225
  2662  000CC6                     u1730:
  2663  000CC6                     
  2664                           ; BSR set to: 0
  2665  000CC6  0100               	movlb	0	; force () banked
  2666  000CC8  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2667  000CCA  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2668  000CCC  A4D8               	btfss	status,2,c
  2669  000CCE  EF6B  F006         	goto	u1741
  2670  000CD2  EF6D  F006         	goto	u1740
  2671  000CD6                     u1741:
  2672  000CD6  EF0C  F007         	goto	l2225
  2673  000CDA                     u1740:
  2674  000CDA                     
  2675                           ; BSR set to: 0
  2676                           ;main.c: 288: {;main.c: 289: if(m_tabMines[ligne-1][colonne]==2)
  2677  000CDA  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2678  000CDE  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2679  000CE2  0E00               	movlw	0
  2680  000CE4  0100               	movlb	0	; force () banked
  2681  000CE6  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2682  000CE8  0E15               	movlw	21
  2683  000CEA  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2684  000CEC  EC85  F012         	call	___wmul	;wreg free
  2685  000CF0  0EEB               	movlw	235
  2686  000CF2  0100               	movlb	0	; force () banked
  2687  000CF4  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2688  000CF6  0EFF               	movlw	255
  2689  000CF8  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2690  000CFA  0E60               	movlw	low _m_tabMines
  2691  000CFC  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2692  000CFE  0E00               	movlw	high _m_tabMines
  2693  000D00  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2694  000D02  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  2695  000D04  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2696  000D06  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2697  000D08  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2698  000D0A  0100               	movlb	0	; force () banked
  2699  000D0C  51B4               	movf	?___wmul& (0+255),w,b
  2700  000D0E  0100               	movlb	0	; force () banked
  2701  000D10  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2702  000D12  0100               	movlb	0	; force () banked
  2703  000D14  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2704  000D16  0100               	movlb	0	; force () banked
  2705  000D18  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2706  000D1A  0100               	movlb	0	; force () banked
  2707  000D1C  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2708  000D1E  0100               	movlb	0	; force () banked
  2709  000D20  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2710  000D22  6ED9               	movwf	fsr2l,c
  2711  000D24  0100               	movlb	0	; force () banked
  2712  000D26  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2713  000D28  0100               	movlb	0	; force () banked
  2714  000D2A  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2715  000D2C  6EDA               	movwf	fsr2h,c
  2716  000D2E  0E02               	movlw	2
  2717  000D30  18DE               	xorwf	postinc2,w,c
  2718  000D32  A4D8               	btfss	status,2,c
  2719  000D34  EF9E  F006         	goto	u1751
  2720  000D38  EFA0  F006         	goto	u1750
  2721  000D3C                     u1751:
  2722  000D3C  EFA3  F006         	goto	l2213
  2723  000D40                     u1750:
  2724  000D40                     
  2725                           ; BSR set to: 0
  2726                           ;main.c: 290: {;main.c: 291: nb_mine++;
  2727  000D40  0100               	movlb	0	; force () banked
  2728  000D42  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2729  000D44  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2730  000D46                     l2213:
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;main.c: 292: };main.c: 293: for(i=-1;i<=0;i++)
  2734  000D46  0100               	movlb	0	; force () banked
  2735  000D48  69C7               	setf	calculToucheCombien@i& (0+255),b
  2736  000D4A  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  2737  000D4C                     
  2738                           ; BSR set to: 0
  2739  000D4C  0100               	movlb	0	; force () banked
  2740  000D4E  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2741  000D50  EFB2  F006         	goto	u1761
  2742  000D54  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2743  000D56  E108               	bnz	u1760
  2744  000D58  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  2745  000D5A  A0D8               	btfss	status,0,c
  2746  000D5C  EFB2  F006         	goto	u1761
  2747  000D60  EFB4  F006         	goto	u1760
  2748  000D64                     u1761:
  2749  000D64  EFB6  F006         	goto	l2219
  2750  000D68                     u1760:
  2751  000D68  EF0C  F007         	goto	l2225
  2752  000D6C                     l2219:
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;main.c: 294: {;main.c: 295: if(m_tabMines[ligne+i][colonne+1]==2)
  2756  000D6C  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2757  000D70  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2758  000D74  0E00               	movlw	0
  2759  000D76  0100               	movlb	0	; force () banked
  2760  000D78  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2761  000D7A  0E15               	movlw	21
  2762  000D7C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2763  000D7E  EC85  F012         	call	___wmul	;wreg free
  2764  000D82  0E60               	movlw	low _m_tabMines
  2765  000D84  0100               	movlb	0	; force () banked
  2766  000D86  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2767  000D88  0E00               	movlw	high _m_tabMines
  2768  000D8A  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2769  000D8C  0E01               	movlw	1
  2770  000D8E  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2771  000D90  0E00               	movlw	0
  2772  000D92  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2773  000D94  0100               	movlb	0	; force () banked
  2774  000D96  51B4               	movf	?___wmul& (0+255),w,b
  2775  000D98  0100               	movlb	0	; force () banked
  2776  000D9A  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2777  000D9C  0100               	movlb	0	; force () banked
  2778  000D9E  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2779  000DA0  0100               	movlb	0	; force () banked
  2780  000DA2  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2781  000DA4  C0C7  F0B4         	movff	calculToucheCombien@i,___wmul@multiplier
  2782  000DA8  C0C8  F0B5         	movff	calculToucheCombien@i+1,___wmul@multiplier+1
  2783  000DAC  0E00               	movlw	0
  2784  000DAE  0100               	movlb	0	; force () banked
  2785  000DB0  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2786  000DB2  0E15               	movlw	21
  2787  000DB4  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2788  000DB6  EC85  F012         	call	___wmul	;wreg free
  2789  000DBA  0100               	movlb	0	; force () banked
  2790  000DBC  51B4               	movf	?___wmul& (0+255),w,b
  2791  000DBE  0100               	movlb	0	; force () banked
  2792  000DC0  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2793  000DC2  0100               	movlb	0	; force () banked
  2794  000DC4  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2795  000DC6  0100               	movlb	0	; force () banked
  2796  000DC8  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2797  000DCA  0100               	movlb	0	; force () banked
  2798  000DCC  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2799  000DCE  0100               	movlb	0	; force () banked
  2800  000DD0  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2801  000DD2  6ED9               	movwf	fsr2l,c
  2802  000DD4  0100               	movlb	0	; force () banked
  2803  000DD6  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2804  000DD8  0100               	movlb	0	; force () banked
  2805  000DDA  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2806  000DDC  6EDA               	movwf	fsr2h,c
  2807  000DDE  0E02               	movlw	2
  2808  000DE0  18DE               	xorwf	postinc2,w,c
  2809  000DE2  A4D8               	btfss	status,2,c
  2810  000DE4  EFF6  F006         	goto	u1771
  2811  000DE8  EFF8  F006         	goto	u1770
  2812  000DEC                     u1771:
  2813  000DEC  EFFB  F006         	goto	l150
  2814  000DF0                     u1770:
  2815  000DF0                     
  2816                           ; BSR set to: 0
  2817                           ;main.c: 296: {;main.c: 297: nb_mine++;
  2818  000DF0  0100               	movlb	0	; force () banked
  2819  000DF2  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2820  000DF4  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2821  000DF6                     l150:
  2822                           
  2823                           ; BSR set to: 0
  2824  000DF6  0100               	movlb	0	; force () banked
  2825  000DF8  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2826  000DFA  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2827  000DFC                     
  2828                           ; BSR set to: 0
  2829  000DFC  0100               	movlb	0	; force () banked
  2830  000DFE  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2831  000E00  EF0A  F007         	goto	u1781
  2832  000E04  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2833  000E06  E108               	bnz	u1780
  2834  000E08  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  2835  000E0A  A0D8               	btfss	status,0,c
  2836  000E0C  EF0A  F007         	goto	u1781
  2837  000E10  EF0C  F007         	goto	u1780
  2838  000E14                     u1781:
  2839  000E14  EFB6  F006         	goto	l2219
  2840  000E18                     u1780:
  2841  000E18                     l2225:
  2842                           
  2843                           ; BSR set to: 0
  2844                           ;main.c: 298: };main.c: 299: };main.c: 300: };main.c: 301: if((ligne==3)&&(colonne==20))
  2845  000E18  0E03               	movlw	3
  2846  000E1A  0100               	movlb	0	; force () banked
  2847  000E1C  19BA               	xorwf	calculToucheCombien@ligne& (0+255),w,b
  2848  000E1E  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2849  000E20  A4D8               	btfss	status,2,c
  2850  000E22  EF15  F007         	goto	u1791
  2851  000E26  EF17  F007         	goto	u1790
  2852  000E2A                     u1791:
  2853  000E2A  EFBA  F007         	goto	l2245
  2854  000E2E                     u1790:
  2855  000E2E                     
  2856                           ; BSR set to: 0
  2857  000E2E  0E14               	movlw	20
  2858  000E30  0100               	movlb	0	; force () banked
  2859  000E32  19BC               	xorwf	calculToucheCombien@colonne& (0+255),w,b
  2860  000E34  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2861  000E36  A4D8               	btfss	status,2,c
  2862  000E38  EF20  F007         	goto	u1801
  2863  000E3C  EF22  F007         	goto	u1800
  2864  000E40                     u1801:
  2865  000E40  EFBA  F007         	goto	l2245
  2866  000E44                     u1800:
  2867  000E44                     
  2868                           ; BSR set to: 0
  2869                           ;main.c: 302: {;main.c: 303: for(i=-1;i<1;i++)
  2870  000E44  0100               	movlb	0	; force () banked
  2871  000E46  69C7               	setf	calculToucheCombien@i& (0+255),b
  2872  000E48  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  2873  000E4A                     
  2874                           ; BSR set to: 0
  2875  000E4A  0100               	movlb	0	; force () banked
  2876  000E4C  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2877  000E4E  EF31  F007         	goto	u1811
  2878  000E52  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2879  000E54  E108               	bnz	u1810
  2880  000E56  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  2881  000E58  A0D8               	btfss	status,0,c
  2882  000E5A  EF31  F007         	goto	u1811
  2883  000E5E  EF33  F007         	goto	u1810
  2884  000E62                     u1811:
  2885  000E62  EF35  F007         	goto	l2235
  2886  000E66                     u1810:
  2887  000E66  EF84  F007         	goto	l2241
  2888  000E6A                     l2235:
  2889                           
  2890                           ; BSR set to: 0
  2891                           ;main.c: 304: {;main.c: 305: if(m_tabMines[ligne-1][colonne+i]== 2)
  2892  000E6A  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2893  000E6E  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2894  000E72  0E00               	movlw	0
  2895  000E74  0100               	movlb	0	; force () banked
  2896  000E76  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2897  000E78  0E15               	movlw	21
  2898  000E7A  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2899  000E7C  EC85  F012         	call	___wmul	;wreg free
  2900  000E80  0EEB               	movlw	235
  2901  000E82  0100               	movlb	0	; force () banked
  2902  000E84  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2903  000E86  0EFF               	movlw	255
  2904  000E88  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2905  000E8A  0E60               	movlw	low _m_tabMines
  2906  000E8C  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2907  000E8E  0E00               	movlw	high _m_tabMines
  2908  000E90  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2909  000E92  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  2910  000E94  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2911  000E96  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2912  000E98  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2913  000E9A  0100               	movlb	0	; force () banked
  2914  000E9C  51B4               	movf	?___wmul& (0+255),w,b
  2915  000E9E  0100               	movlb	0	; force () banked
  2916  000EA0  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2917  000EA2  0100               	movlb	0	; force () banked
  2918  000EA4  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2919  000EA6  0100               	movlb	0	; force () banked
  2920  000EA8  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2921  000EAA  0100               	movlb	0	; force () banked
  2922  000EAC  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2923  000EAE  0100               	movlb	0	; force () banked
  2924  000EB0  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2925  000EB2  0100               	movlb	0	; force () banked
  2926  000EB4  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2927  000EB6  0100               	movlb	0	; force () banked
  2928  000EB8  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2929  000EBA  0100               	movlb	0	; force () banked
  2930  000EBC  51C7               	movf	calculToucheCombien@i& (0+255),w,b
  2931  000EBE  0100               	movlb	0	; force () banked
  2932  000EC0  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2933  000EC2  6ED9               	movwf	fsr2l,c
  2934  000EC4  0100               	movlb	0	; force () banked
  2935  000EC6  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2936  000EC8  0100               	movlb	0	; force () banked
  2937  000ECA  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2938  000ECC  6EDA               	movwf	fsr2h,c
  2939  000ECE  0E02               	movlw	2
  2940  000ED0  18DE               	xorwf	postinc2,w,c
  2941  000ED2  A4D8               	btfss	status,2,c
  2942  000ED4  EF6E  F007         	goto	u1821
  2943  000ED8  EF70  F007         	goto	u1820
  2944  000EDC                     u1821:
  2945  000EDC  EF73  F007         	goto	l154
  2946  000EE0                     u1820:
  2947  000EE0                     
  2948                           ; BSR set to: 0
  2949                           ;main.c: 306: {;main.c: 307: nb_mine++;
  2950  000EE0  0100               	movlb	0	; force () banked
  2951  000EE2  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2952  000EE4  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2953  000EE6                     l154:
  2954                           
  2955                           ; BSR set to: 0
  2956  000EE6  0100               	movlb	0	; force () banked
  2957  000EE8  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2958  000EEA  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2959  000EEC                     
  2960                           ; BSR set to: 0
  2961  000EEC  0100               	movlb	0	; force () banked
  2962  000EEE  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2963  000EF0  EF82  F007         	goto	u1831
  2964  000EF4  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2965  000EF6  E108               	bnz	u1830
  2966  000EF8  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  2967  000EFA  A0D8               	btfss	status,0,c
  2968  000EFC  EF82  F007         	goto	u1831
  2969  000F00  EF84  F007         	goto	u1830
  2970  000F04                     u1831:
  2971  000F04  EF35  F007         	goto	l2235
  2972  000F08                     u1830:
  2973  000F08                     l2241:
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;main.c: 308: };main.c: 309: };main.c: 310: if(m_tabMines[ligne][colonne-1]==2)
  2977  000F08  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2978  000F0C  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2979  000F10  0E00               	movlw	0
  2980  000F12  0100               	movlb	0	; force () banked
  2981  000F14  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2982  000F16  0E15               	movlw	21
  2983  000F18  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2984  000F1A  EC85  F012         	call	___wmul	;wreg free
  2985  000F1E  0EFF               	movlw	255
  2986  000F20  0100               	movlb	0	; force () banked
  2987  000F22  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2988  000F24  0EFF               	movlw	255
  2989  000F26  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2990  000F28  0E60               	movlw	low _m_tabMines
  2991  000F2A  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2992  000F2C  0E00               	movlw	high _m_tabMines
  2993  000F2E  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2994  000F30  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  2995  000F32  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2996  000F34  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2997  000F36  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2998  000F38  0100               	movlb	0	; force () banked
  2999  000F3A  51B4               	movf	?___wmul& (0+255),w,b
  3000  000F3C  0100               	movlb	0	; force () banked
  3001  000F3E  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  3002  000F40  0100               	movlb	0	; force () banked
  3003  000F42  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3004  000F44  0100               	movlb	0	; force () banked
  3005  000F46  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  3006  000F48  0100               	movlb	0	; force () banked
  3007  000F4A  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  3008  000F4C  0100               	movlb	0	; force () banked
  3009  000F4E  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  3010  000F50  6ED9               	movwf	fsr2l,c
  3011  000F52  0100               	movlb	0	; force () banked
  3012  000F54  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3013  000F56  0100               	movlb	0	; force () banked
  3014  000F58  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  3015  000F5A  6EDA               	movwf	fsr2h,c
  3016  000F5C  0E02               	movlw	2
  3017  000F5E  18DE               	xorwf	postinc2,w,c
  3018  000F60  A4D8               	btfss	status,2,c
  3019  000F62  EFB5  F007         	goto	u1841
  3020  000F66  EFB7  F007         	goto	u1840
  3021  000F6A                     u1841:
  3022  000F6A  EFBA  F007         	goto	l2245
  3023  000F6E                     u1840:
  3024  000F6E                     
  3025                           ; BSR set to: 0
  3026                           ;main.c: 311: {;main.c: 312: nb_mine++;
  3027  000F6E  0100               	movlb	0	; force () banked
  3028  000F70  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  3029  000F72  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  3030  000F74                     l2245:
  3031                           
  3032                           ; BSR set to: 0
  3033                           ;main.c: 313: };main.c: 314: };main.c: 315: if((ligne==3)&&(colonne<20)&&(colonne>0))
  3034  000F74  0E03               	movlw	3
  3035  000F76  0100               	movlb	0	; force () banked
  3036  000F78  19BA               	xorwf	calculToucheCombien@ligne& (0+255),w,b
  3037  000F7A  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  3038  000F7C  A4D8               	btfss	status,2,c
  3039  000F7E  EFC3  F007         	goto	u1851
  3040  000F82  EFC5  F007         	goto	u1850
  3041  000F86                     u1851:
  3042  000F86  EFA4  F008         	goto	l2273
  3043  000F8A                     u1850:
  3044  000F8A                     
  3045                           ; BSR set to: 0
  3046  000F8A  0100               	movlb	0	; force () banked
  3047  000F8C  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  3048  000F8E  EFD4  F007         	goto	u1860
  3049  000F92  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3050  000F94  E107               	bnz	u1861
  3051  000F96  0E14               	movlw	20
  3052  000F98  5DBC               	subwf	calculToucheCombien@colonne& (0+255),w,b
  3053  000F9A  B0D8               	btfsc	status,0,c
  3054  000F9C  EFD2  F007         	goto	u1861
  3055  000FA0  EFD4  F007         	goto	u1860
  3056  000FA4                     u1861:
  3057  000FA4  EFA4  F008         	goto	l2273
  3058  000FA8                     u1860:
  3059  000FA8                     
  3060                           ; BSR set to: 0
  3061  000FA8  0100               	movlb	0	; force () banked
  3062  000FAA  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  3063  000FAC  EFE0  F007         	goto	u1871
  3064  000FB0  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3065  000FB2  E108               	bnz	u1870
  3066  000FB4  05BC               	decf	calculToucheCombien@colonne& (0+255),w,b
  3067  000FB6  A0D8               	btfss	status,0,c
  3068  000FB8  EFE0  F007         	goto	u1871
  3069  000FBC  EFE2  F007         	goto	u1870
  3070  000FC0                     u1871:
  3071  000FC0  EFA4  F008         	goto	l2273
  3072  000FC4                     u1870:
  3073  000FC4                     
  3074                           ; BSR set to: 0
  3075                           ;main.c: 316: {;main.c: 317: for(j=-1;j<=1;j++)
  3076  000FC4  0100               	movlb	0	; force () banked
  3077  000FC6  69C5               	setf	calculToucheCombien@j& (0+255),b
  3078  000FC8  69C6               	setf	(calculToucheCombien@j+1)& (0+255),b
  3079  000FCA                     
  3080                           ; BSR set to: 0
  3081  000FCA  0100               	movlb	0	; force () banked
  3082  000FCC  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  3083  000FCE  EFF2  F007         	goto	u1881
  3084  000FD2  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  3085  000FD4  E109               	bnz	u1880
  3086  000FD6  0E02               	movlw	2
  3087  000FD8  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  3088  000FDA  A0D8               	btfss	status,0,c
  3089  000FDC  EFF2  F007         	goto	u1881
  3090  000FE0  EFF4  F007         	goto	u1880
  3091  000FE4                     u1881:
  3092  000FE4  EFF6  F007         	goto	l2257
  3093  000FE8                     u1880:
  3094  000FE8  EF46  F008         	goto	l158
  3095  000FEC                     l2257:
  3096                           
  3097                           ; BSR set to: 0
  3098                           ;main.c: 318: {;main.c: 319: if(m_tabMines[ligne-1][colonne+j]== 2)
  3099  000FEC  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  3100  000FF0  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  3101  000FF4  0E00               	movlw	0
  3102  000FF6  0100               	movlb	0	; force () banked
  3103  000FF8  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3104  000FFA  0E15               	movlw	21
  3105  000FFC  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3106  000FFE  EC85  F012         	call	___wmul	;wreg free
  3107  001002  0EEB               	movlw	235
  3108  001004  0100               	movlb	0	; force () banked
  3109  001006  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  3110  001008  0EFF               	movlw	255
  3111  00100A  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  3112  00100C  0E60               	movlw	low _m_tabMines
  3113  00100E  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  3114  001010  0E00               	movlw	high _m_tabMines
  3115  001012  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  3116  001014  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  3117  001016  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  3118  001018  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  3119  00101A  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  3120  00101C  0100               	movlb	0	; force () banked
  3121  00101E  51B4               	movf	?___wmul& (0+255),w,b
  3122  001020  0100               	movlb	0	; force () banked
  3123  001022  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  3124  001024  0100               	movlb	0	; force () banked
  3125  001026  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3126  001028  0100               	movlb	0	; force () banked
  3127  00102A  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  3128  00102C  0100               	movlb	0	; force () banked
  3129  00102E  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  3130  001030  0100               	movlb	0	; force () banked
  3131  001032  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  3132  001034  0100               	movlb	0	; force () banked
  3133  001036  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3134  001038  0100               	movlb	0	; force () banked
  3135  00103A  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  3136  00103C  0100               	movlb	0	; force () banked
  3137  00103E  51C5               	movf	calculToucheCombien@j& (0+255),w,b
  3138  001040  0100               	movlb	0	; force () banked
  3139  001042  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  3140  001044  6ED9               	movwf	fsr2l,c
  3141  001046  0100               	movlb	0	; force () banked
  3142  001048  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  3143  00104A  0100               	movlb	0	; force () banked
  3144  00104C  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  3145  00104E  6EDA               	movwf	fsr2h,c
  3146  001050  0E02               	movlw	2
  3147  001052  18DE               	xorwf	postinc2,w,c
  3148  001054  A4D8               	btfss	status,2,c
  3149  001056  EF2F  F008         	goto	u1891
  3150  00105A  EF31  F008         	goto	u1890
  3151  00105E                     u1891:
  3152  00105E  EF34  F008         	goto	l159
  3153  001062                     u1890:
  3154  001062                     
  3155                           ; BSR set to: 0
  3156                           ;main.c: 320: {;main.c: 321: nb_mine++;
  3157  001062  0100               	movlb	0	; force () banked
  3158  001064  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  3159  001066  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  3160  001068                     l159:
  3161                           
  3162                           ; BSR set to: 0
  3163  001068  0100               	movlb	0	; force () banked
  3164  00106A  4BC5               	infsnz	calculToucheCombien@j& (0+255),f,b
  3165  00106C  2BC6               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  3166  00106E                     
  3167                           ; BSR set to: 0
  3168  00106E  0100               	movlb	0	; force () banked
  3169  001070  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  3170  001072  EF44  F008         	goto	u1901
  3171  001076  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  3172  001078  E109               	bnz	u1900
  3173  00107A  0E02               	movlw	2
  3174  00107C  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  3175  00107E  A0D8               	btfss	status,0,c
  3176  001080  EF44  F008         	goto	u1901
  3177  001084  EF46  F008         	goto	u1900
  3178  001088                     u1901:
  3179  001088  EFF6  F007         	goto	l2257
  3180  00108C                     u1900:
  3181  00108C                     l158:
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;main.c: 322: };main.c: 323: };main.c: 324: for(i=-1;i<=1;i++)
  3185  00108C  0100               	movlb	0	; force () banked
  3186  00108E  69C7               	setf	calculToucheCombien@i& (0+255),b
  3187  001090  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  3188  001092                     
  3189                           ; BSR set to: 0
  3190  001092  0100               	movlb	0	; force () banked
  3191  001094  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  3192  001096  EF56  F008         	goto	u1911
  3193  00109A  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  3194  00109C  E109               	bnz	u1910
  3195  00109E  0E02               	movlw	2
  3196  0010A0  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  3197  0010A2  A0D8               	btfss	status,0,c
  3198  0010A4  EF56  F008         	goto	u1911
  3199  0010A8  EF58  F008         	goto	u1910
  3200  0010AC                     u1911:
  3201  0010AC  EF5A  F008         	goto	l2267
  3202  0010B0                     u1910:
  3203  0010B0  EFA4  F008         	goto	l2273
  3204  0010B4                     l2267:
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;main.c: 325: {;main.c: 326: if(m_tabMines[ligne][colonne+i]==2)
  3208  0010B4  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  3209  0010B8  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  3210  0010BC  0E00               	movlw	0
  3211  0010BE  0100               	movlb	0	; force () banked
  3212  0010C0  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3213  0010C2  0E15               	movlw	21
  3214  0010C4  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3215  0010C6  EC85  F012         	call	___wmul	;wreg free
  3216  0010CA  0E60               	movlw	low _m_tabMines
  3217  0010CC  0100               	movlb	0	; force () banked
  3218  0010CE  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  3219  0010D0  0E00               	movlw	high _m_tabMines
  3220  0010D2  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  3221  0010D4  0100               	movlb	0	; force () banked
  3222  0010D6  51B4               	movf	?___wmul& (0+255),w,b
  3223  0010D8  0100               	movlb	0	; force () banked
  3224  0010DA  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  3225  0010DC  0100               	movlb	0	; force () banked
  3226  0010DE  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3227  0010E0  0100               	movlb	0	; force () banked
  3228  0010E2  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  3229  0010E4  0100               	movlb	0	; force () banked
  3230  0010E6  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  3231  0010E8  0100               	movlb	0	; force () banked
  3232  0010EA  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  3233  0010EC  0100               	movlb	0	; force () banked
  3234  0010EE  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3235  0010F0  0100               	movlb	0	; force () banked
  3236  0010F2  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  3237  0010F4  0100               	movlb	0	; force () banked
  3238  0010F6  51C7               	movf	calculToucheCombien@i& (0+255),w,b
  3239  0010F8  0100               	movlb	0	; force () banked
  3240  0010FA  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  3241  0010FC  6ED9               	movwf	fsr2l,c
  3242  0010FE  0100               	movlb	0	; force () banked
  3243  001100  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  3244  001102  0100               	movlb	0	; force () banked
  3245  001104  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  3246  001106  6EDA               	movwf	fsr2h,c
  3247  001108  0E02               	movlw	2
  3248  00110A  18DE               	xorwf	postinc2,w,c
  3249  00110C  A4D8               	btfss	status,2,c
  3250  00110E  EF8B  F008         	goto	u1921
  3251  001112  EF8D  F008         	goto	u1920
  3252  001116                     u1921:
  3253  001116  EF90  F008         	goto	l162
  3254  00111A                     u1920:
  3255  00111A                     
  3256                           ; BSR set to: 0
  3257                           ;main.c: 327: {;main.c: 328: nb_mine++;
  3258  00111A  0100               	movlb	0	; force () banked
  3259  00111C  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  3260  00111E  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  3261  001120                     l162:
  3262                           
  3263                           ; BSR set to: 0
  3264                           ;main.c: 329: };main.c: 330: i++;
  3265  001120  0100               	movlb	0	; force () banked
  3266  001122  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  3267  001124  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  3268  001126  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  3269  001128  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  3270  00112A                     
  3271                           ; BSR set to: 0
  3272  00112A  0100               	movlb	0	; force () banked
  3273  00112C  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  3274  00112E  EFA2  F008         	goto	u1931
  3275  001132  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  3276  001134  E109               	bnz	u1930
  3277  001136  0E02               	movlw	2
  3278  001138  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  3279  00113A  A0D8               	btfss	status,0,c
  3280  00113C  EFA2  F008         	goto	u1931
  3281  001140  EFA4  F008         	goto	u1930
  3282  001144                     u1931:
  3283  001144  EF5A  F008         	goto	l2267
  3284  001148                     u1930:
  3285  001148                     l2273:
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;main.c: 331: };main.c: 332: };main.c: 333: return nb_mine;
  3289  001148  0100               	movlb	0	; force () banked
  3290  00114A  51C3               	movf	calculToucheCombien@nb_mine& (0+255),w,b
  3291  00114C                     
  3292                           ; BSR set to: 0
  3293  00114C  0012               	return		;funcret
  3294  00114E                     __end_of_calculToucheCombien:
  3295                           	opt callstack 0
  3296                           
  3297 ;; *************** function _lcd_init *****************
  3298 ;; Defined at:
  3299 ;;		line 258 in file "Lcd4Lignes.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;		None
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;		None
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  1    wreg      void 
  3306 ;; Registers used:
  3307 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3313 ;;      Params:         0       0       0       0       0       0       0
  3314 ;;      Locals:         0       0       0       0       0       0       0
  3315 ;;      Temps:          0       0       0       0       0       0       0
  3316 ;;      Totals:         0       0       0       0       0       0       0
  3317 ;;Total ram usage:        0 bytes
  3318 ;; Hardware stack levels used:    1
  3319 ;; Hardware stack levels required when called:    5
  3320 ;; This function calls:
  3321 ;;		_lcd_initCGRam
  3322 ;;		_lcd_resetSequence
  3323 ;;		_lcd_wrCom
  3324 ;; This function is called by:
  3325 ;;		_main
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           	psect	text7
  3330  0024E2                     __ptext7:
  3331                           	opt callstack 0
  3332  0024E2                     _lcd_init:
  3333                           	opt callstack 25
  3334  0024E2                     
  3335                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  3336  0024E2  EC47  F011         	call	_lcd_resetSequence	;wreg free
  3337                           
  3338                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  3339  0024E6  0E28               	movlw	40
  3340  0024E8  EC11  F011         	call	_lcd_wrCom
  3341                           
  3342                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  3343  0024EC  0E0F               	movlw	15
  3344  0024EE  EC11  F011         	call	_lcd_wrCom
  3345                           
  3346                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  3347  0024F2  0E01               	movlw	1
  3348  0024F4  EC11  F011         	call	_lcd_wrCom
  3349                           
  3350                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  3351  0024F8  0E06               	movlw	6
  3352  0024FA  EC11  F011         	call	_lcd_wrCom
  3353                           
  3354                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  3355  0024FE  0E80               	movlw	128
  3356  002500  EC11  F011         	call	_lcd_wrCom
  3357  002504                     
  3358                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  3359  002504  EC00  F010         	call	_lcd_initCGRam	;wreg free
  3360  002508  0012               	return		;funcret
  3361  00250A                     __end_of_lcd_init:
  3362                           	opt callstack 0
  3363                           
  3364 ;; *************** function _lcd_resetSequence *****************
  3365 ;; Defined at:
  3366 ;;		line 221 in file "Lcd4Lignes.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;		None
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;		None
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  1    wreg      void 
  3373 ;; Registers used:
  3374 ;;		wreg, status,2, status,0, cstack
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3380 ;;      Params:         0       0       0       0       0       0       0
  3381 ;;      Locals:         0       0       0       0       0       0       0
  3382 ;;      Temps:          0       1       0       0       0       0       0
  3383 ;;      Totals:         0       1       0       0       0       0       0
  3384 ;;Total ram usage:        1 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; Hardware stack levels required when called:    1
  3387 ;; This function calls:
  3388 ;;		_lcd_ecrireDonnees
  3389 ;;		_lcd_strobeEnableBit
  3390 ;; This function is called by:
  3391 ;;		_lcd_init
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           	psect	text8
  3396  00228E                     __ptext8:
  3397                           	opt callstack 0
  3398  00228E                     _lcd_resetSequence:
  3399                           	opt callstack 28
  3400  00228E                     
  3401                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  3402  00228E  0E00               	movlw	0
  3403  002290  6E95               	movwf	149,c	;volatile
  3404  002292                     
  3405                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  3406  002292  0E0D               	movlw	13
  3407  002294  0100               	movlb	0	; force () banked
  3408  002296  6FB6               	movwf	??_lcd_resetSequence& (0+255),b
  3409  002298  0EFB               	movlw	251
  3410  00229A                     u2607:
  3411  00229A  2EE8               	decfsz	wreg,f,c
  3412  00229C  D7FE               	bra	u2607
  3413  00229E  2FB6               	decfsz	??_lcd_resetSequence& (0+255),f,b
  3414  0022A0  D7FC               	bra	u2607
  3415  0022A2  F000 F000          	nop2	
  3416  0022A6                     
  3417                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  3418  0022A6  9080               	bcf	128,0,c	;volatile
  3419  0022A8                     
  3420                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  3421  0022A8  9280               	bcf	128,1,c	;volatile
  3422  0022AA                     
  3423                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  3424  0022AA  0E03               	movlw	3
  3425  0022AC  ECBB  F012         	call	_lcd_ecrireDonnees
  3426  0022B0                     
  3427                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  3428  0022B0  ECD4  F012         	call	_lcd_strobeEnableBit	;wreg free
  3429  0022B4                     
  3430                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3431  0022B4  0E03               	movlw	3
  3432  0022B6                     u2617:
  3433  0022B6  2EE8               	decfsz	wreg,f,c
  3434  0022B8  D7FE               	bra	u2617
  3435  0022BA  F000               	nop	
  3436  0022BC                     
  3437                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  3438  0022BC  0E03               	movlw	3
  3439  0022BE  ECBB  F012         	call	_lcd_ecrireDonnees
  3440  0022C2                     
  3441                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  3442  0022C2  ECD4  F012         	call	_lcd_strobeEnableBit	;wreg free
  3443  0022C6                     
  3444                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3445  0022C6  0E03               	movlw	3
  3446  0022C8                     u2627:
  3447  0022C8  2EE8               	decfsz	wreg,f,c
  3448  0022CA  D7FE               	bra	u2627
  3449  0022CC  F000               	nop	
  3450  0022CE                     
  3451                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  3452  0022CE  0E03               	movlw	3
  3453  0022D0  ECBB  F012         	call	_lcd_ecrireDonnees
  3454  0022D4                     
  3455                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  3456  0022D4  ECD4  F012         	call	_lcd_strobeEnableBit	;wreg free
  3457  0022D8                     
  3458                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3459  0022D8  0E03               	movlw	3
  3460  0022DA                     u2637:
  3461  0022DA  2EE8               	decfsz	wreg,f,c
  3462  0022DC  D7FE               	bra	u2637
  3463  0022DE  F000               	nop	
  3464  0022E0                     
  3465                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  3466  0022E0  0E02               	movlw	2
  3467  0022E2  ECBB  F012         	call	_lcd_ecrireDonnees
  3468  0022E6                     
  3469                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  3470  0022E6  ECD4  F012         	call	_lcd_strobeEnableBit	;wreg free
  3471  0022EA                     
  3472                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3473  0022EA  0E03               	movlw	3
  3474  0022EC                     u2647:
  3475  0022EC  2EE8               	decfsz	wreg,f,c
  3476  0022EE  D7FE               	bra	u2647
  3477  0022F0  F000               	nop	
  3478  0022F2                     
  3479                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  3480  0022F2  0E0F               	movlw	15
  3481  0022F4  6E95               	movwf	149,c	;volatile
  3482  0022F6  0012               	return		;funcret
  3483  0022F8                     __end_of_lcd_resetSequence:
  3484                           	opt callstack 0
  3485                           
  3486 ;; *************** function _lcd_initCGRam *****************
  3487 ;; Defined at:
  3488 ;;		line 417 in file "Lcd4Lignes.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;		None
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;  j               1    6[BANK0 ] unsigned char 
  3493 ;;  i               1    5[BANK0 ] unsigned char 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      void 
  3496 ;; Registers used:
  3497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3503 ;;      Params:         0       0       0       0       0       0       0
  3504 ;;      Locals:         0       2       0       0       0       0       0
  3505 ;;      Temps:          0       2       0       0       0       0       0
  3506 ;;      Totals:         0       4       0       0       0       0       0
  3507 ;;Total ram usage:        4 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    4
  3510 ;; This function calls:
  3511 ;;		_lcd_curseurHome
  3512 ;;		_lcd_wrCom
  3513 ;;		_lcd_wrData
  3514 ;; This function is called by:
  3515 ;;		_lcd_init
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           	psect	text9
  3520  002000                     __ptext9:
  3521                           	opt callstack 0
  3522  002000                     _lcd_initCGRam:
  3523                           	opt callstack 25
  3524  002000                     
  3525                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  3526  002000  0E40               	movlw	64
  3527  002002  EC11  F011         	call	_lcd_wrCom
  3528  002006                     
  3529                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  3530  002006  0E00               	movlw	0
  3531  002008  0100               	movlb	0	; force () banked
  3532  00200A  6FB9               	movwf	lcd_initCGRam@i& (0+255),b
  3533  00200C                     
  3534                           ; BSR set to: 0
  3535  00200C  0E07               	movlw	7
  3536  00200E  0100               	movlb	0	; force () banked
  3537  002010  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  3538  002012  EF0D  F010         	goto	u2061
  3539  002016  EF0F  F010         	goto	u2060
  3540  00201A                     u2061:
  3541  00201A  EF11  F010         	goto	l2373
  3542  00201E                     u2060:
  3543  00201E  EF4E  F010         	goto	l2389
  3544  002022                     l2373:
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  3548  002022  0E00               	movlw	0
  3549  002024  0100               	movlb	0	; force () banked
  3550  002026  6FBA               	movwf	lcd_initCGRam@j& (0+255),b
  3551  002028                     
  3552                           ; BSR set to: 0
  3553  002028  0E07               	movlw	7
  3554  00202A  0100               	movlb	0	; force () banked
  3555  00202C  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  3556  00202E  EF1B  F010         	goto	u2071
  3557  002032  EF1D  F010         	goto	u2070
  3558  002036                     u2071:
  3559  002036  EF1F  F010         	goto	l2379
  3560  00203A                     u2070:
  3561  00203A  EF43  F010         	goto	l2385
  3562  00203E                     l2379:
  3563                           
  3564                           ; BSR set to: 0
  3565                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  3566  00203E  0100               	movlb	0	; force () banked
  3567  002040  51B9               	movf	lcd_initCGRam@i& (0+255),w,b
  3568  002042  0D08               	mullw	8
  3569  002044  0E54               	movlw	low _matCGRAM
  3570  002046  0100               	movlb	0	; force () banked
  3571  002048  6FB7               	movwf	??_lcd_initCGRam& (0+255),b
  3572  00204A  0E01               	movlw	high _matCGRAM
  3573  00204C  6FB8               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  3574  00204E  50F3               	movf	243,w,c
  3575  002050  27B7               	addwf	??_lcd_initCGRam& (0+255),f,b
  3576  002052  50F4               	movf	244,w,c
  3577  002054  23B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  3578  002056  0100               	movlb	0	; force () banked
  3579  002058  51BA               	movf	lcd_initCGRam@j& (0+255),w,b
  3580  00205A  0100               	movlb	0	; force () banked
  3581  00205C  25B7               	addwf	??_lcd_initCGRam& (0+255),w,b
  3582  00205E  6ED9               	movwf	fsr2l,c
  3583  002060  0100               	movlb	0	; force () banked
  3584  002062  0E00               	movlw	0
  3585  002064  0100               	movlb	0	; force () banked
  3586  002066  21B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  3587  002068  6EDA               	movwf	fsr2h,c
  3588  00206A  50DF               	movf	indf2,w,c
  3589  00206C  EC41  F012         	call	_lcd_wrData
  3590  002070  0100               	movlb	0	; force () banked
  3591  002072  2BBA               	incf	lcd_initCGRam@j& (0+255),f,b
  3592  002074                     
  3593                           ; BSR set to: 0
  3594  002074  0E07               	movlw	7
  3595  002076  0100               	movlb	0	; force () banked
  3596  002078  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  3597  00207A  EF41  F010         	goto	u2081
  3598  00207E  EF43  F010         	goto	u2080
  3599  002082                     u2081:
  3600  002082  EF1F  F010         	goto	l2379
  3601  002086                     u2080:
  3602  002086                     l2385:
  3603                           
  3604                           ; BSR set to: 0
  3605  002086  0100               	movlb	0	; force () banked
  3606  002088  2BB9               	incf	lcd_initCGRam@i& (0+255),f,b
  3607  00208A                     
  3608                           ; BSR set to: 0
  3609  00208A  0E07               	movlw	7
  3610  00208C  0100               	movlb	0	; force () banked
  3611  00208E  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  3612  002090  EF4C  F010         	goto	u2091
  3613  002094  EF4E  F010         	goto	u2090
  3614  002098                     u2091:
  3615  002098  EF11  F010         	goto	l2373
  3616  00209C                     u2090:
  3617  00209C                     l2389:
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  3621  00209C  ECD0  F012         	call	_lcd_curseurHome	;wreg free
  3622  0020A0  0012               	return		;funcret
  3623  0020A2                     __end_of_lcd_initCGRam:
  3624                           	opt callstack 0
  3625                           
  3626 ;; *************** function _lcd_curseurHome *****************
  3627 ;; Defined at:
  3628 ;;		line 288 in file "Lcd4Lignes.c"
  3629 ;; Parameters:    Size  Location     Type
  3630 ;;		None
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;		None
  3633 ;; Return value:  Size  Location     Type
  3634 ;;                  1    wreg      void 
  3635 ;; Registers used:
  3636 ;;		wreg, status,2, status,0, cstack
  3637 ;; Tracked objects:
  3638 ;;		On entry : 0/0
  3639 ;;		On exit  : 0/0
  3640 ;;		Unchanged: 0/0
  3641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3642 ;;      Params:         0       0       0       0       0       0       0
  3643 ;;      Locals:         0       0       0       0       0       0       0
  3644 ;;      Temps:          0       0       0       0       0       0       0
  3645 ;;      Totals:         0       0       0       0       0       0       0
  3646 ;;Total ram usage:        0 bytes
  3647 ;; Hardware stack levels used:    1
  3648 ;; Hardware stack levels required when called:    3
  3649 ;; This function calls:
  3650 ;;		_lcd_wrCom
  3651 ;; This function is called by:
  3652 ;;		_main
  3653 ;;		_lcd_initCGRam
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	text10
  3658  0025A0                     __ptext10:
  3659                           	opt callstack 0
  3660  0025A0                     _lcd_curseurHome:
  3661                           	opt callstack 25
  3662  0025A0                     
  3663                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  3664  0025A0  0E02               	movlw	2
  3665  0025A2  EC11  F011         	call	_lcd_wrCom
  3666  0025A6  0012               	return		;funcret
  3667  0025A8                     __end_of_lcd_curseurHome:
  3668                           	opt callstack 0
  3669                           
  3670 ;; *************** function _initialisation *****************
  3671 ;; Defined at:
  3672 ;;		line 92 in file "main.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;		None
  3675 ;; Auto vars:     Size  Location     Type
  3676 ;;		None
  3677 ;; Return value:  Size  Location     Type
  3678 ;;                  1    wreg      void 
  3679 ;; Registers used:
  3680 ;;		wreg, status,2
  3681 ;; Tracked objects:
  3682 ;;		On entry : 0/0
  3683 ;;		On exit  : 0/0
  3684 ;;		Unchanged: 0/0
  3685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3686 ;;      Params:         0       0       0       0       0       0       0
  3687 ;;      Locals:         0       0       0       0       0       0       0
  3688 ;;      Temps:          0       0       0       0       0       0       0
  3689 ;;      Totals:         0       0       0       0       0       0       0
  3690 ;;Total ram usage:        0 bytes
  3691 ;; Hardware stack levels used:    1
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		_main
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text11
  3700  002532                     __ptext11:
  3701                           	opt callstack 0
  3702  002532                     _initialisation:
  3703                           	opt callstack 30
  3704  002532                     
  3705                           ;main.c: 94: TRISD = 0;
  3706  002532  0E00               	movlw	0
  3707  002534  6E95               	movwf	149,c	;volatile
  3708                           
  3709                           ;main.c: 95: ANSELH = 0;
  3710  002536  0E00               	movlw	0
  3711  002538  6E7F               	movwf	127,c	;volatile
  3712  00253A                     
  3713                           ;main.c: 96: TRISB = 0xFF;
  3714  00253A  6893               	setf	147,c	;volatile
  3715                           
  3716                           ;main.c: 97: ANSEL = 0;
  3717  00253C  0E00               	movlw	0
  3718  00253E  6E7E               	movwf	126,c	;volatile
  3719                           
  3720                           ;main.c: 98: TRISA = 0;
  3721  002540  0E00               	movlw	0
  3722  002542  6E92               	movwf	146,c	;volatile
  3723                           
  3724                           ;main.c: 100: ADCON1 = 0;
  3725  002544  0E00               	movlw	0
  3726  002546  6EC1               	movwf	193,c	;volatile
  3727  002548                     
  3728                           ;main.c: 101: ANSELbits.ANS7 = 1;
  3729  002548  8E7E               	bsf	126,7,c	;volatile
  3730  00254A                     
  3731                           ;main.c: 102: ADCON0bits.ADON = 1;
  3732  00254A  80C2               	bsf	194,0,c	;volatile
  3733  00254C                     
  3734                           ;main.c: 103: ADCON2bits.ADFM = 0;
  3735  00254C  9EC0               	bcf	192,7,c	;volatile
  3736                           
  3737                           ;main.c: 104: ADCON2bits.ACQT = 0;
  3738  00254E  0EC7               	movlw	-57
  3739  002550  16C0               	andwf	192,f,c	;volatile
  3740                           
  3741                           ;main.c: 105: ADCON2bits.ADCS = 0;
  3742  002552  0EF8               	movlw	-8
  3743  002554  16C0               	andwf	192,f,c	;volatile
  3744  002556  0012               	return		;funcret
  3745  002558                     __end_of_initialisation:
  3746                           	opt callstack 0
  3747                           
  3748 ;; *************** function _init_serie *****************
  3749 ;; Defined at:
  3750 ;;		line 29 in file "serie.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;		None
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;		None
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      void 
  3757 ;; Registers used:
  3758 ;;		wreg, status,2
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3764 ;;      Params:         0       0       0       0       0       0       0
  3765 ;;      Locals:         0       0       0       0       0       0       0
  3766 ;;      Temps:          0       0       0       0       0       0       0
  3767 ;;      Totals:         0       0       0       0       0       0       0
  3768 ;;Total ram usage:        0 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		_main
  3774 ;; This function uses a non-reentrant model
  3775 ;;
  3776                           
  3777                           	psect	text12
  3778  002558                     __ptext12:
  3779                           	opt callstack 0
  3780  002558                     _init_serie:
  3781                           	opt callstack 30
  3782  002558                     
  3783                           ;serie.c: 32: TRISCbits.TRISC7=1;
  3784  002558  8E94               	bsf	148,7,c	;volatile
  3785                           
  3786                           ;serie.c: 33: TRISCbits.TRISC6=1;
  3787  00255A  8C94               	bsf	148,6,c	;volatile
  3788  00255C                     
  3789                           ;serie.c: 37: SPBRGH=0x00;
  3790  00255C  0E00               	movlw	0
  3791  00255E  6EB0               	movwf	176,c	;volatile
  3792                           
  3793                           ;serie.c: 38: SPBRG=25;
  3794  002560  0E19               	movlw	25
  3795  002562  6EAF               	movwf	175,c	;volatile
  3796  002564                     
  3797                           ;serie.c: 39: BAUDCONbits.BRG16=1;
  3798  002564  86B8               	bsf	184,3,c	;volatile
  3799  002566                     
  3800                           ;serie.c: 40: TXSTAbits.BRGH=1;
  3801  002566  84AC               	bsf	172,2,c	;volatile
  3802  002568                     
  3803                           ;serie.c: 43: TXSTAbits.SYNC=0;
  3804  002568  98AC               	bcf	172,4,c	;volatile
  3805  00256A                     
  3806                           ;serie.c: 44: TXSTAbits.TXEN=1;
  3807  00256A  8AAC               	bsf	172,5,c	;volatile
  3808  00256C                     
  3809                           ;serie.c: 45: RCSTAbits.CREN = 1;
  3810  00256C  88AB               	bsf	171,4,c	;volatile
  3811  00256E                     
  3812                           ;serie.c: 46: RCSTAbits.SPEN=1;
  3813  00256E  8EAB               	bsf	171,7,c	;volatile
  3814                           
  3815                           ;serie.c: 47: ANSEL = 0;
  3816  002570  0E00               	movlw	0
  3817  002572  6E7E               	movwf	126,c	;volatile
  3818  002574  0012               	return		;funcret
  3819  002576                     __end_of_init_serie:
  3820                           	opt callstack 0
  3821                           
  3822 ;; *************** function _initTabVue *****************
  3823 ;; Defined at:
  3824 ;;		line 128 in file "main.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;		None
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;  j               2   10[BANK0 ] int 
  3829 ;;  i               2    8[BANK0 ] int 
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  1    wreg      void 
  3832 ;; Registers used:
  3833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3839 ;;      Params:         0       0       0       0       0       0       0
  3840 ;;      Locals:         0       4       0       0       0       0       0
  3841 ;;      Temps:          0       2       0       0       0       0       0
  3842 ;;      Totals:         0       6       0       0       0       0       0
  3843 ;;Total ram usage:        6 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; Hardware stack levels required when called:    1
  3846 ;; This function calls:
  3847 ;;		___wmul
  3848 ;; This function is called by:
  3849 ;;		_main
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           
  3853                           	psect	text13
  3854  001AD4                     __ptext13:
  3855                           	opt callstack 0
  3856  001AD4                     _initTabVue:
  3857                           	opt callstack 29
  3858  001AD4                     
  3859                           ;main.c: 130: for (int i=0;i<4;i++)
  3860  001AD4  0E00               	movlw	0
  3861  001AD6  0100               	movlb	0	; force () banked
  3862  001AD8  6FBD               	movwf	(initTabVue@i+1)& (0+255),b
  3863  001ADA  0E00               	movlw	0
  3864  001ADC  6FBC               	movwf	initTabVue@i& (0+255),b
  3865  001ADE                     
  3866                           ; BSR set to: 0
  3867  001ADE  0100               	movlb	0	; force () banked
  3868  001AE0  BFBD               	btfsc	(initTabVue@i+1)& (0+255),7,b
  3869  001AE2  EF7C  F00D         	goto	u2161
  3870  001AE6  51BD               	movf	(initTabVue@i+1)& (0+255),w,b
  3871  001AE8  E109               	bnz	u2160
  3872  001AEA  0E04               	movlw	4
  3873  001AEC  5DBC               	subwf	initTabVue@i& (0+255),w,b
  3874  001AEE  A0D8               	btfss	status,0,c
  3875  001AF0  EF7C  F00D         	goto	u2161
  3876  001AF4  EF7E  F00D         	goto	u2160
  3877  001AF8                     u2161:
  3878  001AF8  EF80  F00D         	goto	l2437
  3879  001AFC                     u2160:
  3880  001AFC  EF1C  F00E         	goto	l97
  3881  001B00                     l2437:
  3882                           
  3883                           ; BSR set to: 0
  3884                           ;main.c: 131: {;main.c: 132: for (int j=0;j<=(20);j++)
  3885  001B00  0E00               	movlw	0
  3886  001B02  0100               	movlb	0	; force () banked
  3887  001B04  6FBF               	movwf	(initTabVue@j+1)& (0+255),b
  3888  001B06  0E00               	movlw	0
  3889  001B08  6FBE               	movwf	initTabVue@j& (0+255),b
  3890  001B0A                     
  3891                           ; BSR set to: 0
  3892  001B0A  0100               	movlb	0	; force () banked
  3893  001B0C  BFBF               	btfsc	(initTabVue@j+1)& (0+255),7,b
  3894  001B0E  EF92  F00D         	goto	u2171
  3895  001B12  51BF               	movf	(initTabVue@j+1)& (0+255),w,b
  3896  001B14  E109               	bnz	u2170
  3897  001B16  0E15               	movlw	21
  3898  001B18  5DBE               	subwf	initTabVue@j& (0+255),w,b
  3899  001B1A  A0D8               	btfss	status,0,c
  3900  001B1C  EF92  F00D         	goto	u2171
  3901  001B20  EF94  F00D         	goto	u2170
  3902  001B24                     u2171:
  3903  001B24  EF96  F00D         	goto	l2443
  3904  001B28                     u2170:
  3905  001B28  EF0A  F00E         	goto	l2455
  3906  001B2C                     l2443:
  3907                           
  3908                           ; BSR set to: 0
  3909                           ;main.c: 133: {;main.c: 134: if(i<20)
  3910  001B2C  0100               	movlb	0	; force () banked
  3911  001B2E  BFBD               	btfsc	(initTabVue@i+1)& (0+255),7,b
  3912  001B30  EFA5  F00D         	goto	u2180
  3913  001B34  51BD               	movf	(initTabVue@i+1)& (0+255),w,b
  3914  001B36  E107               	bnz	u2181
  3915  001B38  0E14               	movlw	20
  3916  001B3A  5DBC               	subwf	initTabVue@i& (0+255),w,b
  3917  001B3C  B0D8               	btfsc	status,0,c
  3918  001B3E  EFA3  F00D         	goto	u2181
  3919  001B42  EFA5  F00D         	goto	u2180
  3920  001B46                     u2181:
  3921  001B46  EFC9  F00D         	goto	l2447
  3922  001B4A                     u2180:
  3923  001B4A                     
  3924                           ; BSR set to: 0
  3925                           ;main.c: 135: {;main.c: 136: m_tabVue[i][j]= 1;
  3926  001B4A  C0BC  F0B4         	movff	initTabVue@i,___wmul@multiplier
  3927  001B4E  C0BD  F0B5         	movff	initTabVue@i+1,___wmul@multiplier+1
  3928  001B52  0E00               	movlw	0
  3929  001B54  0100               	movlb	0	; force () banked
  3930  001B56  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3931  001B58  0E15               	movlw	21
  3932  001B5A  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3933  001B5C  EC85  F012         	call	___wmul	;wreg free
  3934  001B60  0E00               	movlw	low _m_tabVue
  3935  001B62  0100               	movlb	0	; force () banked
  3936  001B64  6FBA               	movwf	??_initTabVue& (0+255),b
  3937  001B66  0E01               	movlw	high _m_tabVue
  3938  001B68  6FBB               	movwf	(??_initTabVue+1)& (0+255),b
  3939  001B6A  0100               	movlb	0	; force () banked
  3940  001B6C  51B4               	movf	?___wmul& (0+255),w,b
  3941  001B6E  0100               	movlb	0	; force () banked
  3942  001B70  27BA               	addwf	??_initTabVue& (0+255),f,b
  3943  001B72  0100               	movlb	0	; force () banked
  3944  001B74  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3945  001B76  0100               	movlb	0	; force () banked
  3946  001B78  23BB               	addwfc	(??_initTabVue+1)& (0+255),f,b
  3947  001B7A  0100               	movlb	0	; force () banked
  3948  001B7C  51BE               	movf	initTabVue@j& (0+255),w,b
  3949  001B7E  0100               	movlb	0	; force () banked
  3950  001B80  25BA               	addwf	??_initTabVue& (0+255),w,b
  3951  001B82  6ED9               	movwf	fsr2l,c
  3952  001B84  0100               	movlb	0	; force () banked
  3953  001B86  51BF               	movf	(initTabVue@j+1)& (0+255),w,b
  3954  001B88  0100               	movlb	0	; force () banked
  3955  001B8A  21BB               	addwfc	(??_initTabVue+1)& (0+255),w,b
  3956  001B8C  6EDA               	movwf	fsr2h,c
  3957  001B8E  0E01               	movlw	1
  3958  001B90  6EDF               	movwf	indf2,c
  3959  001B92                     l2447:
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;main.c: 137: };main.c: 138: if (j==20)
  3963  001B92  0E14               	movlw	20
  3964  001B94  0100               	movlb	0	; force () banked
  3965  001B96  19BE               	xorwf	initTabVue@j& (0+255),w,b
  3966  001B98  11BF               	iorwf	(initTabVue@j+1)& (0+255),w,b
  3967  001B9A  A4D8               	btfss	status,2,c
  3968  001B9C  EFD2  F00D         	goto	u2191
  3969  001BA0  EFD4  F00D         	goto	u2190
  3970  001BA4                     u2191:
  3971  001BA4  EFF8  F00D         	goto	l2451
  3972  001BA8                     u2190:
  3973  001BA8                     
  3974                           ; BSR set to: 0
  3975                           ;main.c: 139: {;main.c: 140: m_tabVue[i][j]= '\0';
  3976  001BA8  C0BC  F0B4         	movff	initTabVue@i,___wmul@multiplier
  3977  001BAC  C0BD  F0B5         	movff	initTabVue@i+1,___wmul@multiplier+1
  3978  001BB0  0E00               	movlw	0
  3979  001BB2  0100               	movlb	0	; force () banked
  3980  001BB4  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3981  001BB6  0E15               	movlw	21
  3982  001BB8  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3983  001BBA  EC85  F012         	call	___wmul	;wreg free
  3984  001BBE  0E00               	movlw	low _m_tabVue
  3985  001BC0  0100               	movlb	0	; force () banked
  3986  001BC2  6FBA               	movwf	??_initTabVue& (0+255),b
  3987  001BC4  0E01               	movlw	high _m_tabVue
  3988  001BC6  6FBB               	movwf	(??_initTabVue+1)& (0+255),b
  3989  001BC8  0100               	movlb	0	; force () banked
  3990  001BCA  51B4               	movf	?___wmul& (0+255),w,b
  3991  001BCC  0100               	movlb	0	; force () banked
  3992  001BCE  27BA               	addwf	??_initTabVue& (0+255),f,b
  3993  001BD0  0100               	movlb	0	; force () banked
  3994  001BD2  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3995  001BD4  0100               	movlb	0	; force () banked
  3996  001BD6  23BB               	addwfc	(??_initTabVue+1)& (0+255),f,b
  3997  001BD8  0100               	movlb	0	; force () banked
  3998  001BDA  51BE               	movf	initTabVue@j& (0+255),w,b
  3999  001BDC  0100               	movlb	0	; force () banked
  4000  001BDE  25BA               	addwf	??_initTabVue& (0+255),w,b
  4001  001BE0  6ED9               	movwf	fsr2l,c
  4002  001BE2  0100               	movlb	0	; force () banked
  4003  001BE4  51BF               	movf	(initTabVue@j+1)& (0+255),w,b
  4004  001BE6  0100               	movlb	0	; force () banked
  4005  001BE8  21BB               	addwfc	(??_initTabVue+1)& (0+255),w,b
  4006  001BEA  6EDA               	movwf	fsr2h,c
  4007  001BEC  0E00               	movlw	0
  4008  001BEE  6EDF               	movwf	indf2,c
  4009  001BF0                     l2451:
  4010                           
  4011                           ; BSR set to: 0
  4012  001BF0  0100               	movlb	0	; force () banked
  4013  001BF2  4BBE               	infsnz	initTabVue@j& (0+255),f,b
  4014  001BF4  2BBF               	incf	(initTabVue@j+1)& (0+255),f,b
  4015  001BF6                     
  4016                           ; BSR set to: 0
  4017  001BF6  0100               	movlb	0	; force () banked
  4018  001BF8  BFBF               	btfsc	(initTabVue@j+1)& (0+255),7,b
  4019  001BFA  EF08  F00E         	goto	u2201
  4020  001BFE  51BF               	movf	(initTabVue@j+1)& (0+255),w,b
  4021  001C00  E109               	bnz	u2200
  4022  001C02  0E15               	movlw	21
  4023  001C04  5DBE               	subwf	initTabVue@j& (0+255),w,b
  4024  001C06  A0D8               	btfss	status,0,c
  4025  001C08  EF08  F00E         	goto	u2201
  4026  001C0C  EF0A  F00E         	goto	u2200
  4027  001C10                     u2201:
  4028  001C10  EF96  F00D         	goto	l2443
  4029  001C14                     u2200:
  4030  001C14                     l2455:
  4031                           
  4032                           ; BSR set to: 0
  4033  001C14  0100               	movlb	0	; force () banked
  4034  001C16  4BBC               	infsnz	initTabVue@i& (0+255),f,b
  4035  001C18  2BBD               	incf	(initTabVue@i+1)& (0+255),f,b
  4036  001C1A                     
  4037                           ; BSR set to: 0
  4038  001C1A  0100               	movlb	0	; force () banked
  4039  001C1C  BFBD               	btfsc	(initTabVue@i+1)& (0+255),7,b
  4040  001C1E  EF1A  F00E         	goto	u2211
  4041  001C22  51BD               	movf	(initTabVue@i+1)& (0+255),w,b
  4042  001C24  E109               	bnz	u2210
  4043  001C26  0E04               	movlw	4
  4044  001C28  5DBC               	subwf	initTabVue@i& (0+255),w,b
  4045  001C2A  A0D8               	btfss	status,0,c
  4046  001C2C  EF1A  F00E         	goto	u2211
  4047  001C30  EF1C  F00E         	goto	u2210
  4048  001C34                     u2211:
  4049  001C34  EF80  F00D         	goto	l2437
  4050  001C38                     u2210:
  4051  001C38                     l97:
  4052                           
  4053                           ; BSR set to: 0
  4054  001C38  0012               	return		;funcret
  4055  001C3A                     __end_of_initTabVue:
  4056                           	opt callstack 0
  4057                           
  4058 ;; *************** function _gagne *****************
  4059 ;; Defined at:
  4060 ;;		line 455 in file "main.c"
  4061 ;; Parameters:    Size  Location     Type
  4062 ;;  pMines          2    6[BANK0 ] PTR int 
  4063 ;;		 -> main@NBMines(2), 
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;  j               2   16[BANK0 ] int 
  4066 ;;  i               2   14[BANK0 ] int 
  4067 ;;  nb_Tuile        2   11[BANK0 ] int 
  4068 ;;  gagne           1   13[BANK0 ] unsigned char 
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      unsigned char 
  4071 ;; Registers used:
  4072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4078 ;;      Params:         0       2       0       0       0       0       0
  4079 ;;      Locals:         0       7       0       0       0       0       0
  4080 ;;      Temps:          0       3       0       0       0       0       0
  4081 ;;      Totals:         0      12       0       0       0       0       0
  4082 ;;Total ram usage:       12 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; Hardware stack levels required when called:    4
  4085 ;; This function calls:
  4086 ;;		___wmul
  4087 ;;		_lcd_effaceAffichage
  4088 ;; This function is called by:
  4089 ;;		_main
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           	psect	text14
  4094  001C3A                     __ptext14:
  4095                           	opt callstack 0
  4096  001C3A                     _gagne:
  4097                           	opt callstack 26
  4098  001C3A                     
  4099                           ;main.c: 457: bool gagne= 0;
  4100  001C3A  0E00               	movlw	0
  4101  001C3C  0100               	movlb	0	; force () banked
  4102  001C3E  6FC1               	movwf	gagne@gagne& (0+255),b
  4103                           
  4104                           ;main.c: 458: int nb_Tuile =0;
  4105  001C40  0E00               	movlw	0
  4106  001C42  0100               	movlb	0	; force () banked
  4107  001C44  6FC0               	movwf	(gagne@nb_Tuile+1)& (0+255),b
  4108  001C46  0E00               	movlw	0
  4109  001C48  6FBF               	movwf	gagne@nb_Tuile& (0+255),b
  4110                           
  4111                           ;main.c: 460: for(int i=0;i<4;i++)
  4112  001C4A  0E00               	movlw	0
  4113  001C4C  0100               	movlb	0	; force () banked
  4114  001C4E  6FC3               	movwf	(gagne@i+1)& (0+255),b
  4115  001C50  0E00               	movlw	0
  4116  001C52  6FC2               	movwf	gagne@i& (0+255),b
  4117  001C54                     
  4118                           ; BSR set to: 0
  4119  001C54  0100               	movlb	0	; force () banked
  4120  001C56  BFC3               	btfsc	(gagne@i+1)& (0+255),7,b
  4121  001C58  EF37  F00E         	goto	u2481
  4122  001C5C  51C3               	movf	(gagne@i+1)& (0+255),w,b
  4123  001C5E  E109               	bnz	u2480
  4124  001C60  0E04               	movlw	4
  4125  001C62  5DC2               	subwf	gagne@i& (0+255),w,b
  4126  001C64  A0D8               	btfss	status,0,c
  4127  001C66  EF37  F00E         	goto	u2481
  4128  001C6A  EF39  F00E         	goto	u2480
  4129  001C6E                     u2481:
  4130  001C6E  EF3B  F00E         	goto	l2599
  4131  001C72                     u2480:
  4132  001C72  EFA2  F00E         	goto	l2615
  4133  001C76                     l2599:
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;main.c: 461: {;main.c: 462: for(int j=0;j<20;j++)
  4137  001C76  0E00               	movlw	0
  4138  001C78  0100               	movlb	0	; force () banked
  4139  001C7A  6FC5               	movwf	(gagne@j+1)& (0+255),b
  4140  001C7C  0E00               	movlw	0
  4141  001C7E  6FC4               	movwf	gagne@j& (0+255),b
  4142  001C80                     
  4143                           ; BSR set to: 0
  4144  001C80  0100               	movlb	0	; force () banked
  4145  001C82  BFC5               	btfsc	(gagne@j+1)& (0+255),7,b
  4146  001C84  EF4D  F00E         	goto	u2491
  4147  001C88  51C5               	movf	(gagne@j+1)& (0+255),w,b
  4148  001C8A  E109               	bnz	u2490
  4149  001C8C  0E14               	movlw	20
  4150  001C8E  5DC4               	subwf	gagne@j& (0+255),w,b
  4151  001C90  A0D8               	btfss	status,0,c
  4152  001C92  EF4D  F00E         	goto	u2491
  4153  001C96  EF4F  F00E         	goto	u2490
  4154  001C9A                     u2491:
  4155  001C9A  EF51  F00E         	goto	l2605
  4156  001C9E                     u2490:
  4157  001C9E  EF90  F00E         	goto	l2611
  4158  001CA2                     l2605:
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;main.c: 463: {;main.c: 464: if(m_tabVue[i][j]==1)
  4162  001CA2  C0C2  F0B4         	movff	gagne@i,___wmul@multiplier
  4163  001CA6  C0C3  F0B5         	movff	gagne@i+1,___wmul@multiplier+1
  4164  001CAA  0E00               	movlw	0
  4165  001CAC  0100               	movlb	0	; force () banked
  4166  001CAE  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4167  001CB0  0E15               	movlw	21
  4168  001CB2  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4169  001CB4  EC85  F012         	call	___wmul	;wreg free
  4170  001CB8  0E00               	movlw	low _m_tabVue
  4171  001CBA  0100               	movlb	0	; force () banked
  4172  001CBC  6FBC               	movwf	??_gagne& (0+255),b
  4173  001CBE  0E01               	movlw	high _m_tabVue
  4174  001CC0  6FBD               	movwf	(??_gagne+1)& (0+255),b
  4175  001CC2  0100               	movlb	0	; force () banked
  4176  001CC4  51B4               	movf	?___wmul& (0+255),w,b
  4177  001CC6  0100               	movlb	0	; force () banked
  4178  001CC8  27BC               	addwf	??_gagne& (0+255),f,b
  4179  001CCA  0100               	movlb	0	; force () banked
  4180  001CCC  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4181  001CCE  0100               	movlb	0	; force () banked
  4182  001CD0  23BD               	addwfc	(??_gagne+1)& (0+255),f,b
  4183  001CD2  0100               	movlb	0	; force () banked
  4184  001CD4  51C4               	movf	gagne@j& (0+255),w,b
  4185  001CD6  0100               	movlb	0	; force () banked
  4186  001CD8  25BC               	addwf	??_gagne& (0+255),w,b
  4187  001CDA  6ED9               	movwf	fsr2l,c
  4188  001CDC  0100               	movlb	0	; force () banked
  4189  001CDE  51C5               	movf	(gagne@j+1)& (0+255),w,b
  4190  001CE0  0100               	movlb	0	; force () banked
  4191  001CE2  21BD               	addwfc	(??_gagne+1)& (0+255),w,b
  4192  001CE4  6EDA               	movwf	fsr2h,c
  4193  001CE6  04DE               	decf	postinc2,w,c
  4194  001CE8  A4D8               	btfss	status,2,c
  4195  001CEA  EF79  F00E         	goto	u2501
  4196  001CEE  EF7B  F00E         	goto	u2500
  4197  001CF2                     u2501:
  4198  001CF2  EF7E  F00E         	goto	l201
  4199  001CF6                     u2500:
  4200  001CF6                     
  4201                           ; BSR set to: 0
  4202                           ;main.c: 465: {;main.c: 466: nb_Tuile++;
  4203  001CF6  0100               	movlb	0	; force () banked
  4204  001CF8  4BBF               	infsnz	gagne@nb_Tuile& (0+255),f,b
  4205  001CFA  2BC0               	incf	(gagne@nb_Tuile+1)& (0+255),f,b
  4206  001CFC                     l201:
  4207                           
  4208                           ; BSR set to: 0
  4209  001CFC  0100               	movlb	0	; force () banked
  4210  001CFE  4BC4               	infsnz	gagne@j& (0+255),f,b
  4211  001D00  2BC5               	incf	(gagne@j+1)& (0+255),f,b
  4212  001D02                     
  4213                           ; BSR set to: 0
  4214  001D02  0100               	movlb	0	; force () banked
  4215  001D04  BFC5               	btfsc	(gagne@j+1)& (0+255),7,b
  4216  001D06  EF8E  F00E         	goto	u2511
  4217  001D0A  51C5               	movf	(gagne@j+1)& (0+255),w,b
  4218  001D0C  E109               	bnz	u2510
  4219  001D0E  0E14               	movlw	20
  4220  001D10  5DC4               	subwf	gagne@j& (0+255),w,b
  4221  001D12  A0D8               	btfss	status,0,c
  4222  001D14  EF8E  F00E         	goto	u2511
  4223  001D18  EF90  F00E         	goto	u2510
  4224  001D1C                     u2511:
  4225  001D1C  EF51  F00E         	goto	l2605
  4226  001D20                     u2510:
  4227  001D20                     l2611:
  4228                           
  4229                           ; BSR set to: 0
  4230  001D20  0100               	movlb	0	; force () banked
  4231  001D22  4BC2               	infsnz	gagne@i& (0+255),f,b
  4232  001D24  2BC3               	incf	(gagne@i+1)& (0+255),f,b
  4233  001D26                     
  4234                           ; BSR set to: 0
  4235  001D26  0100               	movlb	0	; force () banked
  4236  001D28  BFC3               	btfsc	(gagne@i+1)& (0+255),7,b
  4237  001D2A  EFA0  F00E         	goto	u2521
  4238  001D2E  51C3               	movf	(gagne@i+1)& (0+255),w,b
  4239  001D30  E109               	bnz	u2520
  4240  001D32  0E04               	movlw	4
  4241  001D34  5DC2               	subwf	gagne@i& (0+255),w,b
  4242  001D36  A0D8               	btfss	status,0,c
  4243  001D38  EFA0  F00E         	goto	u2521
  4244  001D3C  EFA2  F00E         	goto	u2520
  4245  001D40                     u2521:
  4246  001D40  EF3B  F00E         	goto	l2599
  4247  001D44                     u2520:
  4248  001D44                     l2615:
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;main.c: 467: };main.c: 468: };main.c: 469: };main.c: 470: if (*pMines == nb_Tuile)
  4252  001D44  C0BA  FFD9         	movff	gagne@pMines,fsr2l
  4253  001D48  C0BB  FFDA         	movff	gagne@pMines+1,fsr2h
  4254  001D4C  0100               	movlb	0	; force () banked
  4255  001D4E  51BF               	movf	gagne@nb_Tuile& (0+255),w,b
  4256  001D50  18DE               	xorwf	postinc2,w,c
  4257  001D52  E107               	bnz	u2531
  4258  001D54  51C0               	movf	(gagne@nb_Tuile+1)& (0+255),w,b
  4259  001D56  18DE               	xorwf	postinc2,w,c
  4260  001D58  A4D8               	btfss	status,2,c
  4261  001D5A  EFB1  F00E         	goto	u2531
  4262  001D5E  EFB3  F00E         	goto	u2530
  4263  001D62                     u2531:
  4264  001D62  EFCD  F00E         	goto	l2623
  4265  001D66                     u2530:
  4266  001D66                     
  4267                           ; BSR set to: 0
  4268                           ;main.c: 471: {;main.c: 472: lcd_effaceAffichage();
  4269  001D66  ECC9  F012         	call	_lcd_effaceAffichage	;wreg free
  4270  001D6A                     
  4271                           ;main.c: 473: (*pMines)=(*pMines) +1;
  4272  001D6A  C0BA  FFD9         	movff	gagne@pMines,fsr2l
  4273  001D6E  C0BB  FFDA         	movff	gagne@pMines+1,fsr2h
  4274  001D72  CFDE F0BC          	movff	postinc2,??_gagne
  4275  001D76  CFDD F0BD          	movff	postdec2,??_gagne+1
  4276  001D7A  0E01               	movlw	1
  4277  001D7C  0100               	movlb	0	; force () banked
  4278  001D7E  27BC               	addwf	??_gagne& (0+255),f,b
  4279  001D80  0E00               	movlw	0
  4280  001D82  23BD               	addwfc	(??_gagne+1)& (0+255),f,b
  4281  001D84  C0BA  FFD9         	movff	gagne@pMines,fsr2l
  4282  001D88  C0BB  FFDA         	movff	gagne@pMines+1,fsr2h
  4283  001D8C  C0BC  FFDE         	movff	??_gagne,postinc2
  4284  001D90  C0BD  FFDD         	movff	??_gagne+1,postdec2
  4285  001D94                     
  4286                           ; BSR set to: 0
  4287                           ;main.c: 474: gagne=1;
  4288  001D94  0E01               	movlw	1
  4289  001D96  0100               	movlb	0	; force () banked
  4290  001D98  6FC1               	movwf	gagne@gagne& (0+255),b
  4291  001D9A                     l2623:
  4292                           
  4293                           ; BSR set to: 0
  4294                           ;main.c: 475: };main.c: 476: return gagne;
  4295  001D9A  0100               	movlb	0	; force () banked
  4296  001D9C  51C1               	movf	gagne@gagne& (0+255),w,b
  4297  001D9E                     
  4298                           ; BSR set to: 0
  4299  001D9E  0012               	return		;funcret
  4300  001DA0                     __end_of_gagne:
  4301                           	opt callstack 0
  4302                           
  4303 ;; *************** function _lcd_effaceAffichage *****************
  4304 ;; Defined at:
  4305 ;;		line 276 in file "Lcd4Lignes.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;		None
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;		None
  4310 ;; Return value:  Size  Location     Type
  4311 ;;                  1    wreg      void 
  4312 ;; Registers used:
  4313 ;;		wreg, status,2, status,0, cstack
  4314 ;; Tracked objects:
  4315 ;;		On entry : 0/0
  4316 ;;		On exit  : 0/0
  4317 ;;		Unchanged: 0/0
  4318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4319 ;;      Params:         0       0       0       0       0       0       0
  4320 ;;      Locals:         0       0       0       0       0       0       0
  4321 ;;      Temps:          0       0       0       0       0       0       0
  4322 ;;      Totals:         0       0       0       0       0       0       0
  4323 ;;Total ram usage:        0 bytes
  4324 ;; Hardware stack levels used:    1
  4325 ;; Hardware stack levels required when called:    3
  4326 ;; This function calls:
  4327 ;;		_lcd_wrCom
  4328 ;; This function is called by:
  4329 ;;		_gagne
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text15
  4334  002592                     __ptext15:
  4335                           	opt callstack 0
  4336  002592                     _lcd_effaceAffichage:
  4337                           	opt callstack 26
  4338  002592                     
  4339                           ;Lcd4Lignes.c: 278: lcd_wrCom(0x01);
  4340  002592  0E01               	movlw	1
  4341  002594  EC11  F011         	call	_lcd_wrCom
  4342                           
  4343                           ;Lcd4Lignes.c: 279: lcd_wrCom(0x80);
  4344  002598  0E80               	movlw	128
  4345  00259A  EC11  F011         	call	_lcd_wrCom
  4346  00259E  0012               	return		;funcret
  4347  0025A0                     __end_of_lcd_effaceAffichage:
  4348                           	opt callstack 0
  4349                           
  4350 ;; *************** function _deplace *****************
  4351 ;; Defined at:
  4352 ;;		line 342 in file "main.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;  x               2    5[BANK0 ] PTR unsigned char 
  4355 ;;		 -> main@x(1), 
  4356 ;;  y               2    7[BANK0 ] PTR unsigned char 
  4357 ;;		 -> main@y(1), 
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;		None
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  1    wreg      void 
  4362 ;; Registers used:
  4363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4369 ;;      Params:         0       4       0       0       0       0       0
  4370 ;;      Locals:         0       0       0       0       0       0       0
  4371 ;;      Temps:          0       1       0       0       0       0       0
  4372 ;;      Totals:         0       5       0       0       0       0       0
  4373 ;;Total ram usage:        5 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; Hardware stack levels required when called:    4
  4376 ;; This function calls:
  4377 ;;		_getAnalog
  4378 ;;		_lcd_gotoXY
  4379 ;; This function is called by:
  4380 ;;		_main
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           	psect	text16
  4385  00194E                     __ptext16:
  4386                           	opt callstack 0
  4387  00194E                     _deplace:
  4388                           	opt callstack 26
  4389  00194E                     
  4390                           ;main.c: 344: if(getAnalog(6)>220)
  4391  00194E  0E06               	movlw	6
  4392  001950  EC5B  F012         	call	_getAnalog
  4393  001954  0100               	movlb	0	; force () banked
  4394  001956  6FBD               	movwf	??_deplace& (0+255),b
  4395  001958  0EDC               	movlw	220
  4396  00195A  65BD               	cpfsgt	??_deplace& (0+255),b
  4397  00195C  EFB2  F00C         	goto	u2371
  4398  001960  EFB4  F00C         	goto	u2370
  4399  001964                     u2371:
  4400  001964  EFD5  F00C         	goto	l2543
  4401  001968                     u2370:
  4402  001968                     
  4403                           ; BSR set to: 0
  4404                           ;main.c: 345: {;main.c: 346: (*x)= (*x) +1;
  4405  001968  C0B9  FFD9         	movff	deplace@x,fsr2l
  4406  00196C  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4407  001970  50DF               	movf	indf2,w,c
  4408  001972  0100               	movlb	0	; force () banked
  4409  001974  6FBD               	movwf	??_deplace& (0+255),b
  4410  001976  29BD               	incf	??_deplace& (0+255),w,b
  4411  001978  C0B9  FFD9         	movff	deplace@x,fsr2l
  4412  00197C  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4413  001980  6EDF               	movwf	indf2,c
  4414                           
  4415                           ;main.c: 347: if (*x > 20)
  4416  001982  C0B9  FFD9         	movff	deplace@x,fsr2l
  4417  001986  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4418  00198A  0E14               	movlw	20
  4419  00198C  64DF               	cpfsgt	indf2,c
  4420  00198E  EFCB  F00C         	goto	u2381
  4421  001992  EFCD  F00C         	goto	u2380
  4422  001996                     u2381:
  4423  001996  EF01  F00D         	goto	l2551
  4424  00199A                     u2380:
  4425  00199A                     
  4426                           ; BSR set to: 0
  4427                           ;main.c: 348: {;main.c: 349: *x=1;
  4428  00199A  C0B9  FFD9         	movff	deplace@x,fsr2l
  4429  00199E  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4430  0019A2  0E01               	movlw	1
  4431  0019A4  6EDF               	movwf	indf2,c
  4432  0019A6  EF01  F00D         	goto	l2551
  4433  0019AA                     l2543:
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;main.c: 352: else if(getAnalog(6)<110)
  4437  0019AA  0E06               	movlw	6
  4438  0019AC  EC5B  F012         	call	_getAnalog
  4439  0019B0  0100               	movlb	0	; force () banked
  4440  0019B2  6FBD               	movwf	??_deplace& (0+255),b
  4441  0019B4  0E6E               	movlw	110
  4442  0019B6  61BD               	cpfslt	??_deplace& (0+255),b
  4443  0019B8  EFE0  F00C         	goto	u2391
  4444  0019BC  EFE2  F00C         	goto	u2390
  4445  0019C0                     u2391:
  4446  0019C0  EF01  F00D         	goto	l2551
  4447  0019C4                     u2390:
  4448  0019C4                     
  4449                           ; BSR set to: 0
  4450                           ;main.c: 353: {;main.c: 354: (*x)=(*x)-1;
  4451  0019C4  C0B9  FFD9         	movff	deplace@x,fsr2l
  4452  0019C8  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4453  0019CC  50DF               	movf	indf2,w,c
  4454  0019CE  0100               	movlb	0	; force () banked
  4455  0019D0  6FBD               	movwf	??_deplace& (0+255),b
  4456  0019D2  05BD               	decf	??_deplace& (0+255),w,b
  4457  0019D4  C0B9  FFD9         	movff	deplace@x,fsr2l
  4458  0019D8  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4459  0019DC  6EDF               	movwf	indf2,c
  4460  0019DE                     
  4461                           ; BSR set to: 0
  4462                           ;main.c: 355: if((*x)<1)
  4463  0019DE  C0B9  FFD9         	movff	deplace@x,fsr2l
  4464  0019E2  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4465  0019E6  50DF               	movf	indf2,w,c
  4466  0019E8  A4D8               	btfss	status,2,c
  4467  0019EA  EFF9  F00C         	goto	u2401
  4468  0019EE  EFFB  F00C         	goto	u2400
  4469  0019F2                     u2401:
  4470  0019F2  EF01  F00D         	goto	l2551
  4471  0019F6                     u2400:
  4472  0019F6                     
  4473                           ; BSR set to: 0
  4474                           ;main.c: 356: {;main.c: 357: (*x)=20;
  4475  0019F6  C0B9  FFD9         	movff	deplace@x,fsr2l
  4476  0019FA  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4477  0019FE  0E14               	movlw	20
  4478  001A00  6EDF               	movwf	indf2,c
  4479  001A02                     l2551:
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;main.c: 358: };main.c: 359: };main.c: 360: if(getAnalog(7)<110)
  4483  001A02  0E07               	movlw	7
  4484  001A04  EC5B  F012         	call	_getAnalog
  4485  001A08  0100               	movlb	0	; force () banked
  4486  001A0A  6FBD               	movwf	??_deplace& (0+255),b
  4487  001A0C  0E6E               	movlw	110
  4488  001A0E  61BD               	cpfslt	??_deplace& (0+255),b
  4489  001A10  EF0C  F00D         	goto	u2411
  4490  001A14  EF0E  F00D         	goto	u2410
  4491  001A18                     u2411:
  4492  001A18  EF2F  F00D         	goto	l2557
  4493  001A1C                     u2410:
  4494  001A1C                     
  4495                           ; BSR set to: 0
  4496                           ;main.c: 361: {;main.c: 362: (*y)= (*y) +1;
  4497  001A1C  C0BB  FFD9         	movff	deplace@y,fsr2l
  4498  001A20  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4499  001A24  50DF               	movf	indf2,w,c
  4500  001A26  0100               	movlb	0	; force () banked
  4501  001A28  6FBD               	movwf	??_deplace& (0+255),b
  4502  001A2A  29BD               	incf	??_deplace& (0+255),w,b
  4503  001A2C  C0BB  FFD9         	movff	deplace@y,fsr2l
  4504  001A30  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4505  001A34  6EDF               	movwf	indf2,c
  4506                           
  4507                           ;main.c: 363: if ((*y )> 4)
  4508  001A36  C0BB  FFD9         	movff	deplace@y,fsr2l
  4509  001A3A  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4510  001A3E  0E04               	movlw	4
  4511  001A40  64DF               	cpfsgt	indf2,c
  4512  001A42  EF25  F00D         	goto	u2421
  4513  001A46  EF27  F00D         	goto	u2420
  4514  001A4A                     u2421:
  4515  001A4A  EF5B  F00D         	goto	l2565
  4516  001A4E                     u2420:
  4517  001A4E                     
  4518                           ; BSR set to: 0
  4519                           ;main.c: 364: {;main.c: 365: (*y)=1;
  4520  001A4E  C0BB  FFD9         	movff	deplace@y,fsr2l
  4521  001A52  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4522  001A56  0E01               	movlw	1
  4523  001A58  6EDF               	movwf	indf2,c
  4524  001A5A  EF5B  F00D         	goto	l2565
  4525  001A5E                     l2557:
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;main.c: 368: else if(getAnalog(7)>200)
  4529  001A5E  0E07               	movlw	7
  4530  001A60  EC5B  F012         	call	_getAnalog
  4531  001A64  0100               	movlb	0	; force () banked
  4532  001A66  6FBD               	movwf	??_deplace& (0+255),b
  4533  001A68  0EC8               	movlw	200
  4534  001A6A  65BD               	cpfsgt	??_deplace& (0+255),b
  4535  001A6C  EF3A  F00D         	goto	u2431
  4536  001A70  EF3C  F00D         	goto	u2430
  4537  001A74                     u2431:
  4538  001A74  EF5B  F00D         	goto	l2565
  4539  001A78                     u2430:
  4540  001A78                     
  4541                           ; BSR set to: 0
  4542                           ;main.c: 369: {;main.c: 370: (*y)=(*y) - 1;
  4543  001A78  C0BB  FFD9         	movff	deplace@y,fsr2l
  4544  001A7C  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4545  001A80  50DF               	movf	indf2,w,c
  4546  001A82  0100               	movlb	0	; force () banked
  4547  001A84  6FBD               	movwf	??_deplace& (0+255),b
  4548  001A86  05BD               	decf	??_deplace& (0+255),w,b
  4549  001A88  C0BB  FFD9         	movff	deplace@y,fsr2l
  4550  001A8C  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4551  001A90  6EDF               	movwf	indf2,c
  4552  001A92                     
  4553                           ; BSR set to: 0
  4554                           ;main.c: 371: if (*y < 1)
  4555  001A92  C0BB  FFD9         	movff	deplace@y,fsr2l
  4556  001A96  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4557  001A9A  50DF               	movf	indf2,w,c
  4558  001A9C  A4D8               	btfss	status,2,c
  4559  001A9E  EF53  F00D         	goto	u2441
  4560  001AA2  EF55  F00D         	goto	u2440
  4561  001AA6                     u2441:
  4562  001AA6  EF5B  F00D         	goto	l2565
  4563  001AAA                     u2440:
  4564  001AAA                     
  4565                           ; BSR set to: 0
  4566                           ;main.c: 372: {;main.c: 373: (*y)=4;
  4567  001AAA  C0BB  FFD9         	movff	deplace@y,fsr2l
  4568  001AAE  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4569  001AB2  0E04               	movlw	4
  4570  001AB4  6EDF               	movwf	indf2,c
  4571  001AB6                     l2565:
  4572                           
  4573                           ; BSR set to: 0
  4574                           ;main.c: 374: };main.c: 375: };main.c: 376: lcd_gotoXY(*x ,*y);
  4575  001AB6  C0BB  FFD9         	movff	deplace@y,fsr2l
  4576  001ABA  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4577  001ABE  50DF               	movf	indf2,w,c
  4578  001AC0  0100               	movlb	0	; force () banked
  4579  001AC2  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  4580  001AC4  C0B9  FFD9         	movff	deplace@x,fsr2l
  4581  001AC8  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4582  001ACC  50DF               	movf	indf2,w,c
  4583  001ACE  ECA2  F010         	call	_lcd_gotoXY
  4584  001AD2  0012               	return		;funcret
  4585  001AD4                     __end_of_deplace:
  4586                           	opt callstack 0
  4587                           
  4588 ;; *************** function _getAnalog *****************
  4589 ;; Defined at:
  4590 ;;		line 112 in file "main.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  canal           1    wreg     unsigned char 
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;  canal           1    1[BANK0 ] unsigned char 
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  1    wreg      unsigned char 
  4597 ;; Registers used:
  4598 ;;		wreg, status,2, status,0
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4604 ;;      Params:         0       0       0       0       0       0       0
  4605 ;;      Locals:         0       1       0       0       0       0       0
  4606 ;;      Temps:          0       1       0       0       0       0       0
  4607 ;;      Totals:         0       2       0       0       0       0       0
  4608 ;;Total ram usage:        2 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; This function calls:
  4611 ;;		Nothing
  4612 ;; This function is called by:
  4613 ;;		_deplace
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           	psect	text17
  4618  0024B6                     __ptext17:
  4619                           	opt callstack 0
  4620  0024B6                     _getAnalog:
  4621                           	opt callstack 29
  4622                           
  4623                           ;incstack = 0
  4624                           ;getAnalog@canal stored from wreg
  4625  0024B6  0100               	movlb	0	; force () banked
  4626  0024B8  6FB5               	movwf	getAnalog@canal& (0+255),b
  4627  0024BA                     
  4628                           ;main.c: 114: ADCON0bits.CHS = canal;
  4629  0024BA  C0B5  F0B4         	movff	getAnalog@canal,??_getAnalog
  4630  0024BE  0100               	movlb	0	; force () banked
  4631  0024C0  47B4               	rlncf	??_getAnalog& (0+255),f,b
  4632  0024C2  47B4               	rlncf	??_getAnalog& (0+255),f,b
  4633  0024C4  50C2               	movf	194,w,c	;volatile
  4634  0024C6  19B4               	xorwf	??_getAnalog& (0+255),w,b
  4635  0024C8  0BC3               	andlw	-61
  4636  0024CA  19B4               	xorwf	??_getAnalog& (0+255),w,b
  4637  0024CC  6EC2               	movwf	194,c	;volatile
  4638  0024CE                     
  4639                           ;main.c: 116: ADCON0bits.GO_DONE = 1;
  4640  0024CE  82C2               	bsf	194,1,c	;volatile
  4641  0024D0                     l85:
  4642  0024D0  B2C2               	btfsc	194,1,c	;volatile
  4643  0024D2  EF6D  F012         	goto	u91
  4644  0024D6  EF6F  F012         	goto	u90
  4645  0024DA                     u91:
  4646  0024DA  EF68  F012         	goto	l85
  4647  0024DE                     u90:
  4648  0024DE                     
  4649                           ;main.c: 118: return ADRESH;
  4650  0024DE  50C4               	movf	196,w,c	;volatile
  4651  0024E0  0012               	return		;funcret
  4652  0024E2                     __end_of_getAnalog:
  4653                           	opt callstack 0
  4654                           
  4655 ;; *************** function _demine *****************
  4656 ;; Defined at:
  4657 ;;		line 387 in file "main.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;  x               1    wreg     unsigned char 
  4660 ;;  y               1   18[BANK0 ] unsigned char 
  4661 ;; Auto vars:     Size  Location     Type
  4662 ;;  x               1   24[BANK0 ] unsigned char 
  4663 ;;  mine            1   23[BANK0 ] unsigned char 
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      unsigned char 
  4666 ;; Registers used:
  4667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/0
  4670 ;;		On exit  : 0/0
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4673 ;;      Params:         0       1       0       0       0       0       0
  4674 ;;      Locals:         0       2       0       0       0       0       0
  4675 ;;      Temps:          0       4       0       0       0       0       0
  4676 ;;      Totals:         0       7       0       0       0       0       0
  4677 ;;Total ram usage:        7 bytes
  4678 ;; Hardware stack levels used:    1
  4679 ;; Hardware stack levels required when called:    5
  4680 ;; This function calls:
  4681 ;;		_enleveTuilesAutour
  4682 ;;		_lcd_ecritChar
  4683 ;; This function is called by:
  4684 ;;		_main
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text18
  4689  0017C4                     __ptext18:
  4690                           	opt callstack 0
  4691  0017C4                     _demine:
  4692                           	opt callstack 25
  4693                           
  4694                           ;incstack = 0
  4695                           ;demine@x stored from wreg
  4696  0017C4  0100               	movlb	0	; force () banked
  4697  0017C6  6FCC               	movwf	demine@x& (0+255),b
  4698  0017C8                     
  4699                           ;main.c: 389: x=x-1;
  4700  0017C8  0100               	movlb	0	; force () banked
  4701  0017CA  05CC               	decf	demine@x& (0+255),w,b
  4702  0017CC  6FCC               	movwf	demine@x& (0+255),b
  4703                           
  4704                           ;main.c: 390: y=y-1;
  4705  0017CE  0100               	movlb	0	; force () banked
  4706  0017D0  05C6               	decf	demine@y& (0+255),w,b
  4707  0017D2  6FC6               	movwf	demine@y& (0+255),b
  4708  0017D4                     
  4709                           ; BSR set to: 0
  4710                           ;main.c: 391: bool mine= 1;
  4711  0017D4  0E01               	movlw	1
  4712  0017D6  0100               	movlb	0	; force () banked
  4713  0017D8  6FCB               	movwf	demine@mine& (0+255),b
  4714  0017DA                     
  4715                           ; BSR set to: 0
  4716                           ;main.c: 392: if (m_tabMines[(y)][(x)]== 2)
  4717  0017DA  0100               	movlb	0	; force () banked
  4718  0017DC  51C6               	movf	demine@y& (0+255),w,b
  4719  0017DE  0D15               	mullw	21
  4720  0017E0  0E60               	movlw	low _m_tabMines
  4721  0017E2  0100               	movlb	0	; force () banked
  4722  0017E4  6FC7               	movwf	??_demine& (0+255),b
  4723  0017E6  0E00               	movlw	high _m_tabMines
  4724  0017E8  6FC8               	movwf	(??_demine+1)& (0+255),b
  4725  0017EA  50F3               	movf	243,w,c
  4726  0017EC  27C7               	addwf	??_demine& (0+255),f,b
  4727  0017EE  50F4               	movf	244,w,c
  4728  0017F0  23C8               	addwfc	(??_demine+1)& (0+255),f,b
  4729  0017F2  0100               	movlb	0	; force () banked
  4730  0017F4  51CC               	movf	demine@x& (0+255),w,b
  4731  0017F6  0100               	movlb	0	; force () banked
  4732  0017F8  25C7               	addwf	??_demine& (0+255),w,b
  4733  0017FA  6ED9               	movwf	fsr2l,c
  4734  0017FC  0100               	movlb	0	; force () banked
  4735  0017FE  0E00               	movlw	0
  4736  001800  0100               	movlb	0	; force () banked
  4737  001802  21C8               	addwfc	(??_demine+1)& (0+255),w,b
  4738  001804  6EDA               	movwf	fsr2h,c
  4739  001806  0E02               	movlw	2
  4740  001808  18DE               	xorwf	postinc2,w,c
  4741  00180A  A4D8               	btfss	status,2,c
  4742  00180C  EF0A  F00C         	goto	u2451
  4743  001810  EF0C  F00C         	goto	u2450
  4744  001814                     u2451:
  4745  001814  EF11  F00C         	goto	l2575
  4746  001818                     u2450:
  4747  001818                     
  4748                           ; BSR set to: 0
  4749                           ;main.c: 393: {;main.c: 394: mine=0;
  4750  001818  0E00               	movlw	0
  4751  00181A  0100               	movlb	0	; force () banked
  4752  00181C  6FCB               	movwf	demine@mine& (0+255),b
  4753                           
  4754                           ;main.c: 395: }
  4755  00181E  EFA4  F00C         	goto	l2589
  4756  001822                     l2575:
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;main.c: 396: else if ((m_tabMines[(y)][(x)]!= 2)&&(m_tabMines[(y)][(x)]==32))
  4760  001822  0100               	movlb	0	; force () banked
  4761  001824  51C6               	movf	demine@y& (0+255),w,b
  4762  001826  0D15               	mullw	21
  4763  001828  0E60               	movlw	low _m_tabMines
  4764  00182A  0100               	movlb	0	; force () banked
  4765  00182C  6FC7               	movwf	??_demine& (0+255),b
  4766  00182E  0E00               	movlw	high _m_tabMines
  4767  001830  6FC8               	movwf	(??_demine+1)& (0+255),b
  4768  001832  50F3               	movf	243,w,c
  4769  001834  27C7               	addwf	??_demine& (0+255),f,b
  4770  001836  50F4               	movf	244,w,c
  4771  001838  23C8               	addwfc	(??_demine+1)& (0+255),f,b
  4772  00183A  0100               	movlb	0	; force () banked
  4773  00183C  51CC               	movf	demine@x& (0+255),w,b
  4774  00183E  0100               	movlb	0	; force () banked
  4775  001840  25C7               	addwf	??_demine& (0+255),w,b
  4776  001842  6ED9               	movwf	fsr2l,c
  4777  001844  0100               	movlb	0	; force () banked
  4778  001846  0E00               	movlw	0
  4779  001848  0100               	movlb	0	; force () banked
  4780  00184A  21C8               	addwfc	(??_demine+1)& (0+255),w,b
  4781  00184C  6EDA               	movwf	fsr2h,c
  4782  00184E  0E02               	movlw	2
  4783  001850  18DE               	xorwf	postinc2,w,c
  4784  001852  B4D8               	btfsc	status,2,c
  4785  001854  EF2E  F00C         	goto	u2461
  4786  001858  EF30  F00C         	goto	u2460
  4787  00185C                     u2461:
  4788  00185C  EF5A  F00C         	goto	l2583
  4789  001860                     u2460:
  4790  001860                     
  4791                           ; BSR set to: 0
  4792  001860  0100               	movlb	0	; force () banked
  4793  001862  51C6               	movf	demine@y& (0+255),w,b
  4794  001864  0D15               	mullw	21
  4795  001866  0E60               	movlw	low _m_tabMines
  4796  001868  0100               	movlb	0	; force () banked
  4797  00186A  6FC7               	movwf	??_demine& (0+255),b
  4798  00186C  0E00               	movlw	high _m_tabMines
  4799  00186E  6FC8               	movwf	(??_demine+1)& (0+255),b
  4800  001870  50F3               	movf	243,w,c
  4801  001872  27C7               	addwf	??_demine& (0+255),f,b
  4802  001874  50F4               	movf	244,w,c
  4803  001876  23C8               	addwfc	(??_demine+1)& (0+255),f,b
  4804  001878  0100               	movlb	0	; force () banked
  4805  00187A  51CC               	movf	demine@x& (0+255),w,b
  4806  00187C  0100               	movlb	0	; force () banked
  4807  00187E  25C7               	addwf	??_demine& (0+255),w,b
  4808  001880  6ED9               	movwf	fsr2l,c
  4809  001882  0100               	movlb	0	; force () banked
  4810  001884  0E00               	movlw	0
  4811  001886  0100               	movlb	0	; force () banked
  4812  001888  21C8               	addwfc	(??_demine+1)& (0+255),w,b
  4813  00188A  6EDA               	movwf	fsr2h,c
  4814  00188C  0E20               	movlw	32
  4815  00188E  18DE               	xorwf	postinc2,w,c
  4816  001890  A4D8               	btfss	status,2,c
  4817  001892  EF4D  F00C         	goto	u2471
  4818  001896  EF4F  F00C         	goto	u2470
  4819  00189A                     u2471:
  4820  00189A  EF5A  F00C         	goto	l2583
  4821  00189E                     u2470:
  4822  00189E                     
  4823                           ; BSR set to: 0
  4824                           ;main.c: 397: {;main.c: 398: mine=1;
  4825  00189E  0E01               	movlw	1
  4826  0018A0  0100               	movlb	0	; force () banked
  4827  0018A2  6FCB               	movwf	demine@mine& (0+255),b
  4828  0018A4                     
  4829                           ; BSR set to: 0
  4830                           ;main.c: 399: enleveTuilesAutour((x),(y));
  4831  0018A4  C0C6  F0BA         	movff	demine@y,enleveTuilesAutour@y
  4832  0018A8  0100               	movlb	0	; force () banked
  4833  0018AA  51CC               	movf	demine@x& (0+255),w,b
  4834  0018AC  ECA7  F008         	call	_enleveTuilesAutour
  4835                           
  4836                           ;main.c: 400: }
  4837  0018B0  EFA4  F00C         	goto	l2589
  4838  0018B4                     l2583:
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;main.c: 401: else;main.c: 402: {;main.c: 403: mine=1;
  4842  0018B4  0E01               	movlw	1
  4843  0018B6  0100               	movlb	0	; force () banked
  4844  0018B8  6FCB               	movwf	demine@mine& (0+255),b
  4845  0018BA                     
  4846                           ; BSR set to: 0
  4847                           ;main.c: 404: m_tabVue[y][x]=m_tabMines[y][x];
  4848  0018BA  0100               	movlb	0	; force () banked
  4849  0018BC  51C6               	movf	demine@y& (0+255),w,b
  4850  0018BE  0D15               	mullw	21
  4851  0018C0  0E60               	movlw	low _m_tabMines
  4852  0018C2  0100               	movlb	0	; force () banked
  4853  0018C4  6FC7               	movwf	??_demine& (0+255),b
  4854  0018C6  0E00               	movlw	high _m_tabMines
  4855  0018C8  6FC8               	movwf	(??_demine+1)& (0+255),b
  4856  0018CA  50F3               	movf	243,w,c
  4857  0018CC  27C7               	addwf	??_demine& (0+255),f,b
  4858  0018CE  50F4               	movf	244,w,c
  4859  0018D0  23C8               	addwfc	(??_demine+1)& (0+255),f,b
  4860  0018D2  0100               	movlb	0	; force () banked
  4861  0018D4  51CC               	movf	demine@x& (0+255),w,b
  4862  0018D6  0100               	movlb	0	; force () banked
  4863  0018D8  25C7               	addwf	??_demine& (0+255),w,b
  4864  0018DA  6ED9               	movwf	fsr2l,c
  4865  0018DC  0100               	movlb	0	; force () banked
  4866  0018DE  0E00               	movlw	0
  4867  0018E0  0100               	movlb	0	; force () banked
  4868  0018E2  21C8               	addwfc	(??_demine+1)& (0+255),w,b
  4869  0018E4  6EDA               	movwf	fsr2h,c
  4870  0018E6  0100               	movlb	0	; force () banked
  4871  0018E8  51C6               	movf	demine@y& (0+255),w,b
  4872  0018EA  0D15               	mullw	21
  4873  0018EC  0E00               	movlw	low _m_tabVue
  4874  0018EE  0100               	movlb	0	; force () banked
  4875  0018F0  6FC9               	movwf	(??_demine+2)& (0+255),b
  4876  0018F2  0E01               	movlw	high _m_tabVue
  4877  0018F4  6FCA               	movwf	(??_demine+3)& (0+255),b
  4878  0018F6  50F3               	movf	243,w,c
  4879  0018F8  27C9               	addwf	(??_demine+2)& (0+255),f,b
  4880  0018FA  50F4               	movf	244,w,c
  4881  0018FC  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  4882  0018FE  0100               	movlb	0	; force () banked
  4883  001900  51CC               	movf	demine@x& (0+255),w,b
  4884  001902  0100               	movlb	0	; force () banked
  4885  001904  25C9               	addwf	(??_demine+2)& (0+255),w,b
  4886  001906  6EE1               	movwf	fsr1l,c
  4887  001908  0100               	movlb	0	; force () banked
  4888  00190A  0E00               	movlw	0
  4889  00190C  0100               	movlb	0	; force () banked
  4890  00190E  21CA               	addwfc	(??_demine+3)& (0+255),w,b
  4891  001910  6EE2               	movwf	fsr1h,c
  4892  001912  CFDF FFE7          	movff	indf2,indf1
  4893  001916                     
  4894                           ; BSR set to: 0
  4895                           ;main.c: 405: lcd_ecritChar(m_tabVue[y][x]);
  4896  001916  0100               	movlb	0	; force () banked
  4897  001918  51C6               	movf	demine@y& (0+255),w,b
  4898  00191A  0D15               	mullw	21
  4899  00191C  0E00               	movlw	low _m_tabVue
  4900  00191E  0100               	movlb	0	; force () banked
  4901  001920  6FC7               	movwf	??_demine& (0+255),b
  4902  001922  0E01               	movlw	high _m_tabVue
  4903  001924  6FC8               	movwf	(??_demine+1)& (0+255),b
  4904  001926  50F3               	movf	243,w,c
  4905  001928  27C7               	addwf	??_demine& (0+255),f,b
  4906  00192A  50F4               	movf	244,w,c
  4907  00192C  23C8               	addwfc	(??_demine+1)& (0+255),f,b
  4908  00192E  0100               	movlb	0	; force () banked
  4909  001930  51CC               	movf	demine@x& (0+255),w,b
  4910  001932  0100               	movlb	0	; force () banked
  4911  001934  25C7               	addwf	??_demine& (0+255),w,b
  4912  001936  6ED9               	movwf	fsr2l,c
  4913  001938  0100               	movlb	0	; force () banked
  4914  00193A  0E00               	movlw	0
  4915  00193C  0100               	movlb	0	; force () banked
  4916  00193E  21C8               	addwfc	(??_demine+1)& (0+255),w,b
  4917  001940  6EDA               	movwf	fsr2h,c
  4918  001942  50DF               	movf	indf2,w,c
  4919  001944  ECD6  F011         	call	_lcd_ecritChar
  4920  001948                     l2589:
  4921                           
  4922                           ;main.c: 406: };main.c: 407: return mine;
  4923  001948  0100               	movlb	0	; force () banked
  4924  00194A  51CB               	movf	demine@mine& (0+255),w,b
  4925  00194C                     
  4926                           ; BSR set to: 0
  4927  00194C  0012               	return		;funcret
  4928  00194E                     __end_of_demine:
  4929                           	opt callstack 0
  4930                           
  4931 ;; *************** function _enleveTuilesAutour *****************
  4932 ;; Defined at:
  4933 ;;		line 416 in file "main.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;  x               1    wreg     unsigned char 
  4936 ;;  y               1    6[BANK0 ] unsigned char 
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;  x               1   13[BANK0 ] unsigned char 
  4939 ;;  j               2   14[BANK0 ] int 
  4940 ;;  i               2   16[BANK0 ] int 
  4941 ;;  mine            2   11[BANK0 ] int 
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  1    wreg      void 
  4944 ;; Registers used:
  4945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4951 ;;      Params:         0       1       0       0       0       0       0
  4952 ;;      Locals:         0       7       0       0       0       0       0
  4953 ;;      Temps:          0       4       0       0       0       0       0
  4954 ;;      Totals:         0      12       0       0       0       0       0
  4955 ;;Total ram usage:       12 bytes
  4956 ;; Hardware stack levels used:    1
  4957 ;; Hardware stack levels required when called:    4
  4958 ;; This function calls:
  4959 ;;		___wmul
  4960 ;;		_lcd_ecritChar
  4961 ;;		_lcd_gotoXY
  4962 ;; This function is called by:
  4963 ;;		_demine
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           	psect	text19
  4968  00114E                     __ptext19:
  4969                           	opt callstack 0
  4970  00114E                     _enleveTuilesAutour:
  4971                           	opt callstack 25
  4972                           
  4973                           ; BSR set to: 0
  4974                           ;incstack = 0
  4975                           ;enleveTuilesAutour@x stored from wreg
  4976  00114E  0100               	movlb	0	; force () banked
  4977  001150  6FC1               	movwf	enleveTuilesAutour@x& (0+255),b
  4978  001152                     
  4979                           ;main.c: 418: int i=0;
  4980  001152  0E00               	movlw	0
  4981  001154  0100               	movlb	0	; force () banked
  4982  001156  6FC5               	movwf	(enleveTuilesAutour@i+1)& (0+255),b
  4983  001158  0E00               	movlw	0
  4984  00115A  6FC4               	movwf	enleveTuilesAutour@i& (0+255),b
  4985                           
  4986                           ;main.c: 419: int mine=0;
  4987  00115C  0E00               	movlw	0
  4988  00115E  0100               	movlb	0	; force () banked
  4989  001160  6FC0               	movwf	(enleveTuilesAutour@mine+1)& (0+255),b
  4990  001162  0E00               	movlw	0
  4991  001164  6FBF               	movwf	enleveTuilesAutour@mine& (0+255),b
  4992  001166                     
  4993                           ; BSR set to: 0
  4994                           ;main.c: 421: for ( i=-1;i<=1;i++)
  4995  001166  0100               	movlb	0	; force () banked
  4996  001168  69C4               	setf	enleveTuilesAutour@i& (0+255),b
  4997  00116A  69C5               	setf	(enleveTuilesAutour@i+1)& (0+255),b
  4998  00116C                     
  4999                           ; BSR set to: 0
  5000  00116C  0100               	movlb	0	; force () banked
  5001  00116E  BFC5               	btfsc	(enleveTuilesAutour@i+1)& (0+255),7,b
  5002  001170  EFC3  F008         	goto	u1941
  5003  001174  51C5               	movf	(enleveTuilesAutour@i+1)& (0+255),w,b
  5004  001176  E109               	bnz	u1940
  5005  001178  0E02               	movlw	2
  5006  00117A  5DC4               	subwf	enleveTuilesAutour@i& (0+255),w,b
  5007  00117C  A0D8               	btfss	status,0,c
  5008  00117E  EFC3  F008         	goto	u1941
  5009  001182  EFC5  F008         	goto	u1940
  5010  001186                     u1941:
  5011  001186  EFC7  F008         	goto	l2285
  5012  00118A                     u1940:
  5013  00118A  EF07  F00A         	goto	l194
  5014  00118E                     l2285:
  5015                           
  5016                           ; BSR set to: 0
  5017                           ;main.c: 422: {;main.c: 423: if((y==0)&&(i==-1))
  5018  00118E  0100               	movlb	0	; force () banked
  5019  001190  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5020  001192  A4D8               	btfss	status,2,c
  5021  001194  EFCE  F008         	goto	u1951
  5022  001198  EFD0  F008         	goto	u1950
  5023  00119C                     u1951:
  5024  00119C  EFE0  F008         	goto	l2291
  5025  0011A0                     u1950:
  5026  0011A0                     
  5027                           ; BSR set to: 0
  5028  0011A0  0100               	movlb	0	; force () banked
  5029  0011A2  29C4               	incf	enleveTuilesAutour@i& (0+255),w,b
  5030  0011A4  E106               	bnz	u1961
  5031  0011A6  29C5               	incf	(enleveTuilesAutour@i+1)& (0+255),w,b
  5032  0011A8  A4D8               	btfss	status,2,c
  5033  0011AA  EFD9  F008         	goto	u1961
  5034  0011AE  EFDB  F008         	goto	u1960
  5035  0011B2                     u1961:
  5036  0011B2  EFE0  F008         	goto	l2291
  5037  0011B6                     u1960:
  5038  0011B6                     
  5039                           ; BSR set to: 0
  5040                           ;main.c: 424: {;main.c: 425: i=0;
  5041  0011B6  0E00               	movlw	0
  5042  0011B8  0100               	movlb	0	; force () banked
  5043  0011BA  6FC5               	movwf	(enleveTuilesAutour@i+1)& (0+255),b
  5044  0011BC  0E00               	movlw	0
  5045  0011BE  6FC4               	movwf	enleveTuilesAutour@i& (0+255),b
  5046  0011C0                     l2291:
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;main.c: 426: };main.c: 427: for(int j=-1;j<=1;j++)
  5050  0011C0  0100               	movlb	0	; force () banked
  5051  0011C2  69C2               	setf	enleveTuilesAutour@j& (0+255),b
  5052  0011C4  69C3               	setf	(enleveTuilesAutour@j+1)& (0+255),b
  5053  0011C6                     
  5054                           ; BSR set to: 0
  5055  0011C6  0100               	movlb	0	; force () banked
  5056  0011C8  BFC3               	btfsc	(enleveTuilesAutour@j+1)& (0+255),7,b
  5057  0011CA  EFF0  F008         	goto	u1971
  5058  0011CE  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5059  0011D0  E109               	bnz	u1970
  5060  0011D2  0E02               	movlw	2
  5061  0011D4  5DC2               	subwf	enleveTuilesAutour@j& (0+255),w,b
  5062  0011D6  A0D8               	btfss	status,0,c
  5063  0011D8  EFF0  F008         	goto	u1971
  5064  0011DC  EFF2  F008         	goto	u1970
  5065  0011E0                     u1971:
  5066  0011E0  EFF4  F008         	goto	l2297
  5067  0011E4                     u1970:
  5068  0011E4  EFDC  F009         	goto	l2319
  5069  0011E8                     l2297:
  5070                           
  5071                           ; BSR set to: 0
  5072                           ;main.c: 428: {;main.c: 429: if((x==0)&&(j==-1))
  5073  0011E8  0100               	movlb	0	; force () banked
  5074  0011EA  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5075  0011EC  A4D8               	btfss	status,2,c
  5076  0011EE  EFFB  F008         	goto	u1981
  5077  0011F2  EFFD  F008         	goto	u1980
  5078  0011F6                     u1981:
  5079  0011F6  EF0D  F009         	goto	l2303
  5080  0011FA                     u1980:
  5081  0011FA                     
  5082                           ; BSR set to: 0
  5083  0011FA  0100               	movlb	0	; force () banked
  5084  0011FC  29C2               	incf	enleveTuilesAutour@j& (0+255),w,b
  5085  0011FE  E106               	bnz	u1991
  5086  001200  29C3               	incf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5087  001202  A4D8               	btfss	status,2,c
  5088  001204  EF06  F009         	goto	u1991
  5089  001208  EF08  F009         	goto	u1990
  5090  00120C                     u1991:
  5091  00120C  EF0D  F009         	goto	l2303
  5092  001210                     u1990:
  5093  001210                     
  5094                           ; BSR set to: 0
  5095                           ;main.c: 430: {;main.c: 431: j=0;
  5096  001210  0E00               	movlw	0
  5097  001212  0100               	movlb	0	; force () banked
  5098  001214  6FC3               	movwf	(enleveTuilesAutour@j+1)& (0+255),b
  5099  001216  0E00               	movlw	0
  5100  001218  6FC2               	movwf	enleveTuilesAutour@j& (0+255),b
  5101  00121A                     l2303:
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;main.c: 432: };main.c: 433: m_tabVue[y+i][x+j]= m_tabMines[y+i][x+j];
  5105  00121A  C0C4  F0B4         	movff	enleveTuilesAutour@i,___wmul@multiplier
  5106  00121E  C0C5  F0B5         	movff	enleveTuilesAutour@i+1,___wmul@multiplier+1
  5107  001222  0E00               	movlw	0
  5108  001224  0100               	movlb	0	; force () banked
  5109  001226  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5110  001228  0E15               	movlw	21
  5111  00122A  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  5112  00122C  EC85  F012         	call	___wmul	;wreg free
  5113  001230  0100               	movlb	0	; force () banked
  5114  001232  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5115  001234  0D15               	mullw	21
  5116  001236  0E60               	movlw	low _m_tabMines
  5117  001238  0100               	movlb	0	; force () banked
  5118  00123A  6FBB               	movwf	??_enleveTuilesAutour& (0+255),b
  5119  00123C  0E00               	movlw	high _m_tabMines
  5120  00123E  6FBC               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  5121  001240  50F3               	movf	243,w,c
  5122  001242  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5123  001244  50F4               	movf	244,w,c
  5124  001246  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5125  001248  0100               	movlb	0	; force () banked
  5126  00124A  51B4               	movf	?___wmul& (0+255),w,b
  5127  00124C  0100               	movlb	0	; force () banked
  5128  00124E  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5129  001250  0100               	movlb	0	; force () banked
  5130  001252  51B5               	movf	(?___wmul+1)& (0+255),w,b
  5131  001254  0100               	movlb	0	; force () banked
  5132  001256  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5133  001258  0100               	movlb	0	; force () banked
  5134  00125A  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5135  00125C  0100               	movlb	0	; force () banked
  5136  00125E  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5137  001260  0E00               	movlw	0
  5138  001262  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5139  001264  0100               	movlb	0	; force () banked
  5140  001266  51C2               	movf	enleveTuilesAutour@j& (0+255),w,b
  5141  001268  0100               	movlb	0	; force () banked
  5142  00126A  25BB               	addwf	??_enleveTuilesAutour& (0+255),w,b
  5143  00126C  6ED9               	movwf	fsr2l,c
  5144  00126E  0100               	movlb	0	; force () banked
  5145  001270  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5146  001272  0100               	movlb	0	; force () banked
  5147  001274  21BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  5148  001276  6EDA               	movwf	fsr2h,c
  5149  001278  C0C4  F0B4         	movff	enleveTuilesAutour@i,___wmul@multiplier
  5150  00127C  C0C5  F0B5         	movff	enleveTuilesAutour@i+1,___wmul@multiplier+1
  5151  001280  0E00               	movlw	0
  5152  001282  0100               	movlb	0	; force () banked
  5153  001284  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5154  001286  0E15               	movlw	21
  5155  001288  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  5156  00128A  EC85  F012         	call	___wmul	;wreg free
  5157  00128E  0100               	movlb	0	; force () banked
  5158  001290  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5159  001292  0D15               	mullw	21
  5160  001294  0E00               	movlw	low _m_tabVue
  5161  001296  0100               	movlb	0	; force () banked
  5162  001298  6FBD               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  5163  00129A  0E01               	movlw	high _m_tabVue
  5164  00129C  6FBE               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  5165  00129E  50F3               	movf	243,w,c
  5166  0012A0  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  5167  0012A2  50F4               	movf	244,w,c
  5168  0012A4  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  5169  0012A6  0100               	movlb	0	; force () banked
  5170  0012A8  51B4               	movf	?___wmul& (0+255),w,b
  5171  0012AA  0100               	movlb	0	; force () banked
  5172  0012AC  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  5173  0012AE  0100               	movlb	0	; force () banked
  5174  0012B0  51B5               	movf	(?___wmul+1)& (0+255),w,b
  5175  0012B2  0100               	movlb	0	; force () banked
  5176  0012B4  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  5177  0012B6  0100               	movlb	0	; force () banked
  5178  0012B8  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5179  0012BA  0100               	movlb	0	; force () banked
  5180  0012BC  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  5181  0012BE  0E00               	movlw	0
  5182  0012C0  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  5183  0012C2  0100               	movlb	0	; force () banked
  5184  0012C4  51C2               	movf	enleveTuilesAutour@j& (0+255),w,b
  5185  0012C6  0100               	movlb	0	; force () banked
  5186  0012C8  25BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  5187  0012CA  6EE1               	movwf	fsr1l,c
  5188  0012CC  0100               	movlb	0	; force () banked
  5189  0012CE  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5190  0012D0  0100               	movlb	0	; force () banked
  5191  0012D2  21BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  5192  0012D4  6EE2               	movwf	fsr1h,c
  5193  0012D6  CFDF FFE7          	movff	indf2,indf1
  5194  0012DA                     
  5195                           ; BSR set to: 0
  5196                           ;main.c: 434: lcd_gotoXY(x+1+j,y+i+1);
  5197  0012DA  0100               	movlb	0	; force () banked
  5198  0012DC  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5199  0012DE  0100               	movlb	0	; force () banked
  5200  0012E0  25C4               	addwf	enleveTuilesAutour@i& (0+255),w,b
  5201  0012E2  0100               	movlb	0	; force () banked
  5202  0012E4  6FBB               	movwf	??_enleveTuilesAutour& (0+255),b
  5203  0012E6  29BB               	incf	??_enleveTuilesAutour& (0+255),w,b
  5204  0012E8  0100               	movlb	0	; force () banked
  5205  0012EA  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  5206  0012EC  0100               	movlb	0	; force () banked
  5207  0012EE  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5208  0012F0  0100               	movlb	0	; force () banked
  5209  0012F2  25C2               	addwf	enleveTuilesAutour@j& (0+255),w,b
  5210  0012F4  0100               	movlb	0	; force () banked
  5211  0012F6  6FBC               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  5212  0012F8  29BC               	incf	(??_enleveTuilesAutour+1)& (0+255),w,b
  5213  0012FA  ECA2  F010         	call	_lcd_gotoXY
  5214  0012FE                     
  5215                           ;main.c: 435: lcd_ecritChar(m_tabVue[y+i][x+j]);
  5216  0012FE  C0C4  F0B4         	movff	enleveTuilesAutour@i,___wmul@multiplier
  5217  001302  C0C5  F0B5         	movff	enleveTuilesAutour@i+1,___wmul@multiplier+1
  5218  001306  0E00               	movlw	0
  5219  001308  0100               	movlb	0	; force () banked
  5220  00130A  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5221  00130C  0E15               	movlw	21
  5222  00130E  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  5223  001310  EC85  F012         	call	___wmul	;wreg free
  5224  001314  0100               	movlb	0	; force () banked
  5225  001316  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5226  001318  0D15               	mullw	21
  5227  00131A  0E00               	movlw	low _m_tabVue
  5228  00131C  0100               	movlb	0	; force () banked
  5229  00131E  6FBB               	movwf	??_enleveTuilesAutour& (0+255),b
  5230  001320  0E01               	movlw	high _m_tabVue
  5231  001322  6FBC               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  5232  001324  50F3               	movf	243,w,c
  5233  001326  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5234  001328  50F4               	movf	244,w,c
  5235  00132A  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5236  00132C  0100               	movlb	0	; force () banked
  5237  00132E  51B4               	movf	?___wmul& (0+255),w,b
  5238  001330  0100               	movlb	0	; force () banked
  5239  001332  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5240  001334  0100               	movlb	0	; force () banked
  5241  001336  51B5               	movf	(?___wmul+1)& (0+255),w,b
  5242  001338  0100               	movlb	0	; force () banked
  5243  00133A  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5244  00133C  0100               	movlb	0	; force () banked
  5245  00133E  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5246  001340  0100               	movlb	0	; force () banked
  5247  001342  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5248  001344  0E00               	movlw	0
  5249  001346  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5250  001348  0100               	movlb	0	; force () banked
  5251  00134A  51C2               	movf	enleveTuilesAutour@j& (0+255),w,b
  5252  00134C  0100               	movlb	0	; force () banked
  5253  00134E  25BB               	addwf	??_enleveTuilesAutour& (0+255),w,b
  5254  001350  6ED9               	movwf	fsr2l,c
  5255  001352  0100               	movlb	0	; force () banked
  5256  001354  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5257  001356  0100               	movlb	0	; force () banked
  5258  001358  21BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  5259  00135A  6EDA               	movwf	fsr2h,c
  5260  00135C  50DF               	movf	indf2,w,c
  5261  00135E  ECD6  F011         	call	_lcd_ecritChar
  5262  001362                     
  5263                           ;main.c: 436: if((x==19)&&(j==0))
  5264  001362  0E13               	movlw	19
  5265  001364  0100               	movlb	0	; force () banked
  5266  001366  19C1               	xorwf	enleveTuilesAutour@x& (0+255),w,b
  5267  001368  A4D8               	btfss	status,2,c
  5268  00136A  EFB9  F009         	goto	u2001
  5269  00136E  EFBB  F009         	goto	u2000
  5270  001372                     u2001:
  5271  001372  EFCA  F009         	goto	l2315
  5272  001376                     u2000:
  5273  001376                     
  5274                           ; BSR set to: 0
  5275  001376  0100               	movlb	0	; force () banked
  5276  001378  51C2               	movf	enleveTuilesAutour@j& (0+255),w,b
  5277  00137A  11C3               	iorwf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5278  00137C  A4D8               	btfss	status,2,c
  5279  00137E  EFC3  F009         	goto	u2011
  5280  001382  EFC5  F009         	goto	u2010
  5281  001386                     u2011:
  5282  001386  EFCA  F009         	goto	l2315
  5283  00138A                     u2010:
  5284  00138A                     
  5285                           ; BSR set to: 0
  5286                           ;main.c: 437: {;main.c: 438: j=1;
  5287  00138A  0E00               	movlw	0
  5288  00138C  0100               	movlb	0	; force () banked
  5289  00138E  6FC3               	movwf	(enleveTuilesAutour@j+1)& (0+255),b
  5290  001390  0E01               	movlw	1
  5291  001392  6FC2               	movwf	enleveTuilesAutour@j& (0+255),b
  5292  001394                     l2315:
  5293                           
  5294                           ; BSR set to: 0
  5295  001394  0100               	movlb	0	; force () banked
  5296  001396  4BC2               	infsnz	enleveTuilesAutour@j& (0+255),f,b
  5297  001398  2BC3               	incf	(enleveTuilesAutour@j+1)& (0+255),f,b
  5298  00139A                     
  5299                           ; BSR set to: 0
  5300  00139A  0100               	movlb	0	; force () banked
  5301  00139C  BFC3               	btfsc	(enleveTuilesAutour@j+1)& (0+255),7,b
  5302  00139E  EFDA  F009         	goto	u2021
  5303  0013A2  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5304  0013A4  E109               	bnz	u2020
  5305  0013A6  0E02               	movlw	2
  5306  0013A8  5DC2               	subwf	enleveTuilesAutour@j& (0+255),w,b
  5307  0013AA  A0D8               	btfss	status,0,c
  5308  0013AC  EFDA  F009         	goto	u2021
  5309  0013B0  EFDC  F009         	goto	u2020
  5310  0013B4                     u2021:
  5311  0013B4  EFF4  F008         	goto	l2297
  5312  0013B8                     u2020:
  5313  0013B8                     l2319:
  5314                           
  5315                           ; BSR set to: 0
  5316                           ;main.c: 439: };main.c: 440: };main.c: 441: if((y==3)&&(i==0))
  5317  0013B8  0E03               	movlw	3
  5318  0013BA  0100               	movlb	0	; force () banked
  5319  0013BC  19BA               	xorwf	enleveTuilesAutour@y& (0+255),w,b
  5320  0013BE  A4D8               	btfss	status,2,c
  5321  0013C0  EFE4  F009         	goto	u2031
  5322  0013C4  EFE6  F009         	goto	u2030
  5323  0013C8                     u2031:
  5324  0013C8  EFF5  F009         	goto	l2325
  5325  0013CC                     u2030:
  5326  0013CC                     
  5327                           ; BSR set to: 0
  5328  0013CC  0100               	movlb	0	; force () banked
  5329  0013CE  51C4               	movf	enleveTuilesAutour@i& (0+255),w,b
  5330  0013D0  11C5               	iorwf	(enleveTuilesAutour@i+1)& (0+255),w,b
  5331  0013D2  A4D8               	btfss	status,2,c
  5332  0013D4  EFEE  F009         	goto	u2041
  5333  0013D8  EFF0  F009         	goto	u2040
  5334  0013DC                     u2041:
  5335  0013DC  EFF5  F009         	goto	l2325
  5336  0013E0                     u2040:
  5337  0013E0                     
  5338                           ; BSR set to: 0
  5339                           ;main.c: 442: {;main.c: 443: i=1;
  5340  0013E0  0E00               	movlw	0
  5341  0013E2  0100               	movlb	0	; force () banked
  5342  0013E4  6FC5               	movwf	(enleveTuilesAutour@i+1)& (0+255),b
  5343  0013E6  0E01               	movlw	1
  5344  0013E8  6FC4               	movwf	enleveTuilesAutour@i& (0+255),b
  5345  0013EA                     l2325:
  5346                           
  5347                           ; BSR set to: 0
  5348  0013EA  0100               	movlb	0	; force () banked
  5349  0013EC  4BC4               	infsnz	enleveTuilesAutour@i& (0+255),f,b
  5350  0013EE  2BC5               	incf	(enleveTuilesAutour@i+1)& (0+255),f,b
  5351  0013F0                     
  5352                           ; BSR set to: 0
  5353  0013F0  0100               	movlb	0	; force () banked
  5354  0013F2  BFC5               	btfsc	(enleveTuilesAutour@i+1)& (0+255),7,b
  5355  0013F4  EF05  F00A         	goto	u2051
  5356  0013F8  51C5               	movf	(enleveTuilesAutour@i+1)& (0+255),w,b
  5357  0013FA  E109               	bnz	u2050
  5358  0013FC  0E02               	movlw	2
  5359  0013FE  5DC4               	subwf	enleveTuilesAutour@i& (0+255),w,b
  5360  001400  A0D8               	btfss	status,0,c
  5361  001402  EF05  F00A         	goto	u2051
  5362  001406  EF07  F00A         	goto	u2050
  5363  00140A                     u2051:
  5364  00140A  EFC7  F008         	goto	l2285
  5365  00140E                     u2050:
  5366  00140E                     l194:
  5367                           
  5368                           ; BSR set to: 0
  5369  00140E  0012               	return		;funcret
  5370  001410                     __end_of_enleveTuilesAutour:
  5371                           	opt callstack 0
  5372                           
  5373 ;; *************** function _afficheTabVue *****************
  5374 ;; Defined at:
  5375 ;;		line 483 in file "main.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;		None
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  i               2   17[BANK0 ] int 
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  1    wreg      void 
  5382 ;; Registers used:
  5383 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5389 ;;      Params:         0       0       0       0       0       0       0
  5390 ;;      Locals:         0       2       0       0       0       0       0
  5391 ;;      Temps:          0       2       0       0       0       0       0
  5392 ;;      Totals:         0       4       0       0       0       0       0
  5393 ;;Total ram usage:        4 bytes
  5394 ;; Hardware stack levels used:    1
  5395 ;; Hardware stack levels required when called:    5
  5396 ;; This function calls:
  5397 ;;		___wmul
  5398 ;;		_lcd_gotoXY
  5399 ;;		_lcd_putMessage
  5400 ;; This function is called by:
  5401 ;;		_main
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           	psect	text20
  5406  0020A2                     __ptext20:
  5407                           	opt callstack 0
  5408  0020A2                     _afficheTabVue:
  5409                           	opt callstack 25
  5410  0020A2                     
  5411                           ;main.c: 485: for(int i=0;i<4;i++)
  5412  0020A2  0E00               	movlw	0
  5413  0020A4  0100               	movlb	0	; force () banked
  5414  0020A6  6FC6               	movwf	(afficheTabVue@i+1)& (0+255),b
  5415  0020A8  0E00               	movlw	0
  5416  0020AA  6FC5               	movwf	afficheTabVue@i& (0+255),b
  5417  0020AC                     
  5418                           ; BSR set to: 0
  5419  0020AC  0100               	movlb	0	; force () banked
  5420  0020AE  BFC6               	btfsc	(afficheTabVue@i+1)& (0+255),7,b
  5421  0020B0  EF63  F010         	goto	u2351
  5422  0020B4  51C6               	movf	(afficheTabVue@i+1)& (0+255),w,b
  5423  0020B6  E109               	bnz	u2350
  5424  0020B8  0E04               	movlw	4
  5425  0020BA  5DC5               	subwf	afficheTabVue@i& (0+255),w,b
  5426  0020BC  A0D8               	btfss	status,0,c
  5427  0020BE  EF63  F010         	goto	u2351
  5428  0020C2  EF65  F010         	goto	u2350
  5429  0020C6                     u2351:
  5430  0020C6  EF67  F010         	goto	l2529
  5431  0020CA                     u2350:
  5432  0020CA  EFA1  F010         	goto	l208
  5433  0020CE                     l2529:
  5434                           
  5435                           ; BSR set to: 0
  5436                           ;main.c: 486: {;main.c: 487: lcd_gotoXY( 1, i+1);
  5437  0020CE  0100               	movlb	0	; force () banked
  5438  0020D0  29C5               	incf	afficheTabVue@i& (0+255),w,b
  5439  0020D2  0100               	movlb	0	; force () banked
  5440  0020D4  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  5441  0020D6  0E01               	movlw	1
  5442  0020D8  ECA2  F010         	call	_lcd_gotoXY
  5443  0020DC                     
  5444                           ;main.c: 488: lcd_putMessage(m_tabVue[i]);
  5445  0020DC  C0C5  F0B4         	movff	afficheTabVue@i,___wmul@multiplier
  5446  0020E0  C0C6  F0B5         	movff	afficheTabVue@i+1,___wmul@multiplier+1
  5447  0020E4  0E00               	movlw	0
  5448  0020E6  0100               	movlb	0	; force () banked
  5449  0020E8  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5450  0020EA  0E15               	movlw	21
  5451  0020EC  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  5452  0020EE  EC85  F012         	call	___wmul	;wreg free
  5453  0020F2  0E00               	movlw	low _m_tabVue
  5454  0020F4  0100               	movlb	0	; force () banked
  5455  0020F6  25B4               	addwf	?___wmul& (0+255),w,b
  5456  0020F8  0100               	movlb	0	; force () banked
  5457  0020FA  6FC3               	movwf	??_afficheTabVue& (0+255),b
  5458  0020FC  0E01               	movlw	high _m_tabVue
  5459  0020FE  0100               	movlb	0	; force () banked
  5460  002100  21B5               	addwfc	(?___wmul+1)& (0+255),w,b
  5461  002102  0100               	movlb	0	; force () banked
  5462  002104  6FC4               	movwf	(??_afficheTabVue+1)& (0+255),b
  5463  002106  C0C3  F0BA         	movff	??_afficheTabVue,lcd_putMessage@chaine
  5464  00210A  C0C4  F0BB         	movff	??_afficheTabVue+1,lcd_putMessage@chaine+1
  5465  00210E  0100               	movlb	0	; force () banked
  5466  002110  51BA               	movf	lcd_putMessage@chaine& (0+255),w,b
  5467  002112  11BB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  5468  002114  A4D8               	btfss	status,2,c
  5469  002116  0E20               	movlw	32
  5470  002118  6FBC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  5471  00211A  EC4D  F00F         	call	_lcd_putMessage	;wreg free
  5472  00211E  0100               	movlb	0	; force () banked
  5473  002120  4BC5               	infsnz	afficheTabVue@i& (0+255),f,b
  5474  002122  2BC6               	incf	(afficheTabVue@i+1)& (0+255),f,b
  5475  002124                     
  5476                           ; BSR set to: 0
  5477  002124  0100               	movlb	0	; force () banked
  5478  002126  BFC6               	btfsc	(afficheTabVue@i+1)& (0+255),7,b
  5479  002128  EF9F  F010         	goto	u2361
  5480  00212C  51C6               	movf	(afficheTabVue@i+1)& (0+255),w,b
  5481  00212E  E109               	bnz	u2360
  5482  002130  0E04               	movlw	4
  5483  002132  5DC5               	subwf	afficheTabVue@i& (0+255),w,b
  5484  002134  A0D8               	btfss	status,0,c
  5485  002136  EF9F  F010         	goto	u2361
  5486  00213A  EFA1  F010         	goto	u2360
  5487  00213E                     u2361:
  5488  00213E  EF67  F010         	goto	l2529
  5489  002142                     u2360:
  5490  002142                     l208:
  5491                           
  5492                           ; BSR set to: 0
  5493  002142  0012               	return		;funcret
  5494  002144                     __end_of_afficheTabVue:
  5495                           	opt callstack 0
  5496                           
  5497 ;; *************** function _lcd_putMessage *****************
  5498 ;; Defined at:
  5499 ;;		line 387 in file "Lcd4Lignes.c"
  5500 ;; Parameters:    Size  Location     Type
  5501 ;;  chaine          3    6[BANK0 ] PTR const unsigned char 
  5502 ;;		 -> m_tabVue(84), STR_1(24), 
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;  j               1   14[BANK0 ] unsigned char 
  5505 ;; Return value:  Size  Location     Type
  5506 ;;                  1    wreg      void 
  5507 ;; Registers used:
  5508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5509 ;; Tracked objects:
  5510 ;;		On entry : 0/0
  5511 ;;		On exit  : 0/0
  5512 ;;		Unchanged: 0/0
  5513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5514 ;;      Params:         0       3       0       0       0       0       0
  5515 ;;      Locals:         0       1       0       0       0       0       0
  5516 ;;      Temps:          0       5       0       0       0       0       0
  5517 ;;      Totals:         0       9       0       0       0       0       0
  5518 ;;Total ram usage:        9 bytes
  5519 ;; Hardware stack levels used:    1
  5520 ;; Hardware stack levels required when called:    4
  5521 ;; This function calls:
  5522 ;;		_lcd_ecritChar
  5523 ;; This function is called by:
  5524 ;;		_main
  5525 ;;		_afficheTabVue
  5526 ;; This function uses a non-reentrant model
  5527 ;;
  5528                           
  5529                           	psect	text21
  5530  001E9A                     __ptext21:
  5531                           	opt callstack 0
  5532  001E9A                     _lcd_putMessage:
  5533                           	opt callstack 26
  5534  001E9A                     
  5535                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  5536  001E9A  0E00               	movlw	0
  5537  001E9C  0100               	movlb	0	; force () banked
  5538  001E9E  6FC2               	movwf	lcd_putMessage@j& (0+255),b
  5539  001EA0  EF7A  F00F         	goto	l2087
  5540  001EA4                     l2083:
  5541                           
  5542                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  5543  001EA4  0100               	movlb	0	; force () banked
  5544  001EA6  51C2               	movf	lcd_putMessage@j& (0+255),w,b
  5545  001EA8  0100               	movlb	0	; force () banked
  5546  001EAA  6FBD               	movwf	??_lcd_putMessage& (0+255),b
  5547  001EAC  6BBE               	clrf	(??_lcd_putMessage+1)& (0+255),b
  5548  001EAE  51BD               	movf	??_lcd_putMessage& (0+255),w,b
  5549  001EB0  0100               	movlb	0	; force () banked
  5550  001EB2  25BA               	addwf	lcd_putMessage@chaine& (0+255),w,b
  5551  001EB4  0100               	movlb	0	; force () banked
  5552  001EB6  6FBF               	movwf	(??_lcd_putMessage+2)& (0+255),b
  5553  001EB8  51BE               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  5554  001EBA  0100               	movlb	0	; force () banked
  5555  001EBC  21BB               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  5556  001EBE  0100               	movlb	0	; force () banked
  5557  001EC0  6FC0               	movwf	(??_lcd_putMessage+3)& (0+255),b
  5558  001EC2  0E00               	movlw	0
  5559  001EC4  0100               	movlb	0	; force () banked
  5560  001EC6  21BC               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  5561  001EC8  0100               	movlb	0	; force () banked
  5562  001ECA  6FC1               	movwf	(??_lcd_putMessage+4)& (0+255),b
  5563  001ECC  C0BF  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  5564  001ED0  C0C0  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  5565  001ED4  C0C1  FFF8         	movff	??_lcd_putMessage+4,tblptru
  5566  001ED8  BAF8               	btfsc	tblptru,5,c
  5567  001EDA  D003               	bra	u1387
  5568  001EDC  0008               	tblrd		*
  5569  001EDE  50F5               	movf	tablat,w,c
  5570  001EE0  D005               	bra	u1380
  5571  001EE2                     u1387:
  5572  001EE2  CFF6 FFE9          	movff	tblptrl,fsr0l
  5573  001EE6  CFF7 FFEA          	movff	tblptrh,fsr0h
  5574  001EEA  50EF               	movf	indf0,w,c
  5575  001EEC                     u1380:
  5576  001EEC  ECD6  F011         	call	_lcd_ecritChar
  5577  001EF0  0100               	movlb	0	; force () banked
  5578  001EF2  2BC2               	incf	lcd_putMessage@j& (0+255),f,b
  5579  001EF4                     l2087:
  5580                           
  5581                           ; BSR set to: 0
  5582  001EF4  0100               	movlb	0	; force () banked
  5583  001EF6  51C2               	movf	lcd_putMessage@j& (0+255),w,b
  5584  001EF8  0100               	movlb	0	; force () banked
  5585  001EFA  6FBD               	movwf	??_lcd_putMessage& (0+255),b
  5586  001EFC  6BBE               	clrf	(??_lcd_putMessage+1)& (0+255),b
  5587  001EFE  51BD               	movf	??_lcd_putMessage& (0+255),w,b
  5588  001F00  0100               	movlb	0	; force () banked
  5589  001F02  25BA               	addwf	lcd_putMessage@chaine& (0+255),w,b
  5590  001F04  0100               	movlb	0	; force () banked
  5591  001F06  6FBF               	movwf	(??_lcd_putMessage+2)& (0+255),b
  5592  001F08  51BE               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  5593  001F0A  0100               	movlb	0	; force () banked
  5594  001F0C  21BB               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  5595  001F0E  0100               	movlb	0	; force () banked
  5596  001F10  6FC0               	movwf	(??_lcd_putMessage+3)& (0+255),b
  5597  001F12  0E00               	movlw	0
  5598  001F14  0100               	movlb	0	; force () banked
  5599  001F16  21BC               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  5600  001F18  0100               	movlb	0	; force () banked
  5601  001F1A  6FC1               	movwf	(??_lcd_putMessage+4)& (0+255),b
  5602  001F1C  C0BF  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  5603  001F20  C0C0  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  5604  001F24  C0C1  FFF8         	movff	??_lcd_putMessage+4,tblptru
  5605  001F28  BAF8               	btfsc	tblptru,5,c
  5606  001F2A  D003               	bra	u1397
  5607  001F2C  0008               	tblrd		*
  5608  001F2E  50F5               	movf	tablat,w,c
  5609  001F30  D005               	bra	u1390
  5610  001F32                     u1397:
  5611  001F32  CFF6 FFE9          	movff	tblptrl,fsr0l
  5612  001F36  CFF7 FFEA          	movff	tblptrh,fsr0h
  5613  001F3A  50EF               	movf	indf0,w,c
  5614  001F3C                     u1390:
  5615  001F3C  0900               	iorlw	0
  5616  001F3E  A4D8               	btfss	status,2,c
  5617  001F40  EFA4  F00F         	goto	u1401
  5618  001F44  EFA6  F00F         	goto	u1400
  5619  001F48                     u1401:
  5620  001F48  EF52  F00F         	goto	l2083
  5621  001F4C                     u1400:
  5622  001F4C  0012               	return		;funcret
  5623  001F4E                     __end_of_lcd_putMessage:
  5624                           	opt callstack 0
  5625                           
  5626 ;; *************** function _lcd_ecritChar *****************
  5627 ;; Defined at:
  5628 ;;		line 359 in file "Lcd4Lignes.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;  car             1    wreg     unsigned char 
  5631 ;; Auto vars:     Size  Location     Type
  5632 ;;  car             1    3[BANK0 ] unsigned char 
  5633 ;;  posRam          1    4[BANK0 ] unsigned char 
  5634 ;; Return value:  Size  Location     Type
  5635 ;;                  1    wreg      void 
  5636 ;; Registers used:
  5637 ;;		wreg, status,2, status,0, cstack
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5643 ;;      Params:         0       0       0       0       0       0       0
  5644 ;;      Locals:         0       2       0       0       0       0       0
  5645 ;;      Temps:          0       0       0       0       0       0       0
  5646 ;;      Totals:         0       2       0       0       0       0       0
  5647 ;;Total ram usage:        2 bytes
  5648 ;; Hardware stack levels used:    1
  5649 ;; Hardware stack levels required when called:    3
  5650 ;; This function calls:
  5651 ;;		_lcd_wrCom
  5652 ;;		_lcd_wrData
  5653 ;; This function is called by:
  5654 ;;		_demine
  5655 ;;		_enleveTuilesAutour
  5656 ;;		_lcd_putMessage
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           	psect	text22
  5661  0023AC                     __ptext22:
  5662                           	opt callstack 0
  5663  0023AC                     _lcd_ecritChar:
  5664                           	opt callstack 26
  5665                           
  5666                           ;incstack = 0
  5667                           ;lcd_ecritChar@car stored from wreg
  5668  0023AC  0100               	movlb	0	; force () banked
  5669  0023AE  6FB7               	movwf	lcd_ecritChar@car& (0+255),b
  5670  0023B0                     
  5671                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  5672  0023B0  0100               	movlb	0	; force () banked
  5673  0023B2  51B7               	movf	lcd_ecritChar@car& (0+255),w,b
  5674  0023B4  EC41  F012         	call	_lcd_wrData
  5675  0023B8  0100               	movlb	0	; force () banked
  5676  0023BA  6FB8               	movwf	lcd_ecritChar@posRam& (0+255),b
  5677                           
  5678                           ;Lcd4Lignes.c: 364: switch(posRam)
  5679  0023BC  EFEF  F011         	goto	l2063
  5680  0023C0                     l2055:
  5681                           
  5682                           ; BSR set to: 0
  5683                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  5684  0023C0  0EC0               	movlw	192
  5685  0023C2  EC11  F011         	call	_lcd_wrCom
  5686                           
  5687                           ;Lcd4Lignes.c: 368: break;
  5688  0023C6  EFFF  F011         	goto	l329
  5689  0023CA                     l2057:
  5690                           
  5691                           ; BSR set to: 0
  5692                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  5693  0023CA  0E94               	movlw	148
  5694  0023CC  EC11  F011         	call	_lcd_wrCom
  5695                           
  5696                           ;Lcd4Lignes.c: 371: break;
  5697  0023D0  EFFF  F011         	goto	l329
  5698  0023D4                     l2059:
  5699                           
  5700                           ; BSR set to: 0
  5701                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  5702  0023D4  0ED4               	movlw	212
  5703  0023D6  EC11  F011         	call	_lcd_wrCom
  5704                           
  5705                           ;Lcd4Lignes.c: 374: break;
  5706  0023DA  EFFF  F011         	goto	l329
  5707  0023DE                     l2063:
  5708                           
  5709                           ; BSR set to: 0
  5710  0023DE  0100               	movlb	0	; force () banked
  5711  0023E0  51B8               	movf	lcd_ecritChar@posRam& (0+255),w,b
  5712                           
  5713                           ; Switch size 1, requested type "simple"
  5714                           ; Number of cases is 3, Range of values is 148 to 212
  5715                           ; switch strategies available:
  5716                           ; Name         Instructions Cycles
  5717                           ; simple_byte           10     6 (average)
  5718                           ;	Chosen strategy is simple_byte
  5719  0023E2  0A94               	xorlw	148	; case 148
  5720  0023E4  B4D8               	btfsc	status,2,c
  5721  0023E6  EFE0  F011         	goto	l2055
  5722  0023EA  0A54               	xorlw	84	; case 192
  5723  0023EC  B4D8               	btfsc	status,2,c
  5724  0023EE  EFEA  F011         	goto	l2059
  5725  0023F2  0A14               	xorlw	20	; case 212
  5726  0023F4  B4D8               	btfsc	status,2,c
  5727  0023F6  EFE5  F011         	goto	l2057
  5728  0023FA  EFFF  F011         	goto	l329
  5729  0023FE                     l329:
  5730  0023FE  0012               	return		;funcret
  5731  002400                     __end_of_lcd_ecritChar:
  5732                           	opt callstack 0
  5733                           
  5734 ;; *************** function _lcd_wrData *****************
  5735 ;; Defined at:
  5736 ;;		line 188 in file "Lcd4Lignes.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;  caractere       1    wreg     unsigned char 
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;  caractere       1    2[BANK0 ] unsigned char 
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  1    wreg      unsigned char 
  5743 ;; Registers used:
  5744 ;;		wreg, status,2, status,0, cstack
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5750 ;;      Params:         0       0       0       0       0       0       0
  5751 ;;      Locals:         0       1       0       0       0       0       0
  5752 ;;      Temps:          0       0       0       0       0       0       0
  5753 ;;      Totals:         0       1       0       0       0       0       0
  5754 ;;Total ram usage:        1 bytes
  5755 ;; Hardware stack levels used:    1
  5756 ;; Hardware stack levels required when called:    2
  5757 ;; This function calls:
  5758 ;;		_lcd_busy
  5759 ;;		_lcd_ecrireDonnees
  5760 ;;		_lcd_strobeEnableBit
  5761 ;; This function is called by:
  5762 ;;		_lcd_ecritChar
  5763 ;;		_lcd_initCGRam
  5764 ;;		_lcd_effaceChar
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           
  5768                           	psect	text23
  5769  002482                     __ptext23:
  5770                           	opt callstack 0
  5771  002482                     _lcd_wrData:
  5772                           	opt callstack 26
  5773                           
  5774                           ;incstack = 0
  5775                           ;lcd_wrData@caractere stored from wreg
  5776  002482  0100               	movlb	0	; force () banked
  5777  002484  6FB6               	movwf	lcd_wrData@caractere& (0+255),b
  5778  002486                     
  5779                           ;Lcd4Lignes.c: 190: lcd_busy();
  5780  002486  EC00  F012         	call	_lcd_busy	;wreg free
  5781  00248A                     
  5782                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  5783  00248A  0E00               	movlw	0
  5784  00248C  6E95               	movwf	149,c	;volatile
  5785  00248E                     
  5786                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  5787  00248E  8080               	bsf	128,0,c	;volatile
  5788  002490                     
  5789                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  5790  002490  9280               	bcf	128,1,c	;volatile
  5791  002492                     
  5792                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  5793  002492  0100               	movlb	0	; force () banked
  5794  002494  39B6               	swapf	lcd_wrData@caractere& (0+255),w,b
  5795  002496  0B0F               	andlw	15
  5796  002498  ECBB  F012         	call	_lcd_ecrireDonnees
  5797  00249C                     
  5798                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  5799  00249C  ECD4  F012         	call	_lcd_strobeEnableBit	;wreg free
  5800  0024A0                     
  5801                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  5802  0024A0  0100               	movlb	0	; force () banked
  5803  0024A2  51B6               	movf	lcd_wrData@caractere& (0+255),w,b
  5804  0024A4  ECBB  F012         	call	_lcd_ecrireDonnees
  5805  0024A8                     
  5806                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  5807  0024A8  ECD4  F012         	call	_lcd_strobeEnableBit	;wreg free
  5808  0024AC                     
  5809                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  5810  0024AC  0E0F               	movlw	15
  5811  0024AE  6E95               	movwf	149,c	;volatile
  5812  0024B0                     
  5813                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  5814                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  5815  0024B0  EC00  F012         	call	_lcd_busy	;wreg free
  5816  0024B4  0012               	return		;funcret
  5817  0024B6                     __end_of_lcd_wrData:
  5818                           	opt callstack 0
  5819                           
  5820 ;; *************** function _lcd_gotoXY *****************
  5821 ;; Defined at:
  5822 ;;		line 314 in file "Lcd4Lignes.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;  x               1    wreg     unsigned char 
  5825 ;;  y               1    3[BANK0 ] unsigned char 
  5826 ;; Auto vars:     Size  Location     Type
  5827 ;;  x               1    4[BANK0 ] unsigned char 
  5828 ;; Return value:  Size  Location     Type
  5829 ;;                  1    wreg      void 
  5830 ;; Registers used:
  5831 ;;		wreg, status,2, status,0, cstack
  5832 ;; Tracked objects:
  5833 ;;		On entry : 0/0
  5834 ;;		On exit  : 0/0
  5835 ;;		Unchanged: 0/0
  5836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5837 ;;      Params:         0       1       0       0       0       0       0
  5838 ;;      Locals:         0       1       0       0       0       0       0
  5839 ;;      Temps:          0       0       0       0       0       0       0
  5840 ;;      Totals:         0       2       0       0       0       0       0
  5841 ;;Total ram usage:        2 bytes
  5842 ;; Hardware stack levels used:    1
  5843 ;; Hardware stack levels required when called:    3
  5844 ;; This function calls:
  5845 ;;		_lcd_wrCom
  5846 ;; This function is called by:
  5847 ;;		_deplace
  5848 ;;		_enleveTuilesAutour
  5849 ;;		_afficheTabVue
  5850 ;;		_lcd_effaceLigne
  5851 ;; This function uses a non-reentrant model
  5852 ;;
  5853                           
  5854                           	psect	text24
  5855  002144                     __ptext24:
  5856                           	opt callstack 0
  5857  002144                     _lcd_gotoXY:
  5858                           	opt callstack 26
  5859                           
  5860                           ;incstack = 0
  5861                           ;lcd_gotoXY@x stored from wreg
  5862  002144  0100               	movlb	0	; force () banked
  5863  002146  6FB8               	movwf	lcd_gotoXY@x& (0+255),b
  5864  002148                     
  5865                           ;Lcd4Lignes.c: 316: switch(y)
  5866  002148  EFC6  F010         	goto	l2051
  5867  00214C                     l2041:
  5868                           
  5869                           ; BSR set to: 0
  5870                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  5871  00214C  0100               	movlb	0	; force () banked
  5872  00214E  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  5873  002150  0F7F               	addlw	127
  5874  002152  0980               	iorlw	128
  5875  002154  EC11  F011         	call	_lcd_wrCom
  5876                           
  5877                           ;Lcd4Lignes.c: 320: break;
  5878  002158  EFDA  F010         	goto	l318
  5879  00215C                     l2043:
  5880                           
  5881                           ; BSR set to: 0
  5882                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  5883  00215C  0100               	movlb	0	; force () banked
  5884  00215E  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  5885  002160  0FBF               	addlw	191
  5886  002162  0980               	iorlw	128
  5887  002164  EC11  F011         	call	_lcd_wrCom
  5888                           
  5889                           ;Lcd4Lignes.c: 323: break;
  5890  002168  EFDA  F010         	goto	l318
  5891  00216C                     l2045:
  5892                           
  5893                           ; BSR set to: 0
  5894                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  5895  00216C  0100               	movlb	0	; force () banked
  5896  00216E  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  5897  002170  0F93               	addlw	147
  5898  002172  0980               	iorlw	128
  5899  002174  EC11  F011         	call	_lcd_wrCom
  5900                           
  5901                           ;Lcd4Lignes.c: 326: break;
  5902  002178  EFDA  F010         	goto	l318
  5903  00217C                     l2047:
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  5907  00217C  0100               	movlb	0	; force () banked
  5908  00217E  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  5909  002180  0FD3               	addlw	211
  5910  002182  0980               	iorlw	128
  5911  002184  EC11  F011         	call	_lcd_wrCom
  5912                           
  5913                           ;Lcd4Lignes.c: 329: break;
  5914  002188  EFDA  F010         	goto	l318
  5915  00218C                     l2051:
  5916  00218C  0100               	movlb	0	; force () banked
  5917  00218E  51B7               	movf	lcd_gotoXY@y& (0+255),w,b
  5918                           
  5919                           ; Switch size 1, requested type "simple"
  5920                           ; Number of cases is 4, Range of values is 1 to 4
  5921                           ; switch strategies available:
  5922                           ; Name         Instructions Cycles
  5923                           ; simple_byte           13     7 (average)
  5924                           ;	Chosen strategy is simple_byte
  5925  002190  0A01               	xorlw	1	; case 1
  5926  002192  B4D8               	btfsc	status,2,c
  5927  002194  EFA6  F010         	goto	l2041
  5928  002198  0A03               	xorlw	3	; case 2
  5929  00219A  B4D8               	btfsc	status,2,c
  5930  00219C  EFAE  F010         	goto	l2043
  5931  0021A0  0A01               	xorlw	1	; case 3
  5932  0021A2  B4D8               	btfsc	status,2,c
  5933  0021A4  EFB6  F010         	goto	l2045
  5934  0021A8  0A07               	xorlw	7	; case 4
  5935  0021AA  B4D8               	btfsc	status,2,c
  5936  0021AC  EFBE  F010         	goto	l2047
  5937  0021B0  EFDA  F010         	goto	l318
  5938  0021B4                     l318:
  5939  0021B4  0012               	return		;funcret
  5940  0021B6                     __end_of_lcd_gotoXY:
  5941                           	opt callstack 0
  5942                           
  5943 ;; *************** function _lcd_wrCom *****************
  5944 ;; Defined at:
  5945 ;;		line 156 in file "Lcd4Lignes.c"
  5946 ;; Parameters:    Size  Location     Type
  5947 ;;  commande        1    wreg     unsigned char 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;  commande        1    2[BANK0 ] unsigned char 
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  1    wreg      unsigned char 
  5952 ;; Registers used:
  5953 ;;		wreg, status,2, status,0, cstack
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5959 ;;      Params:         0       0       0       0       0       0       0
  5960 ;;      Locals:         0       1       0       0       0       0       0
  5961 ;;      Temps:          0       0       0       0       0       0       0
  5962 ;;      Totals:         0       1       0       0       0       0       0
  5963 ;;Total ram usage:        1 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:    2
  5966 ;; This function calls:
  5967 ;;		_lcd_busy
  5968 ;;		_lcd_ecrireDonnees
  5969 ;;		_lcd_strobeEnableBit
  5970 ;; This function is called by:
  5971 ;;		_lcd_init
  5972 ;;		_lcd_effaceAffichage
  5973 ;;		_lcd_curseurHome
  5974 ;;		_lcd_gotoXY
  5975 ;;		_lcd_ecritChar
  5976 ;;		_lcd_initCGRam
  5977 ;;		_lcd_cacheCurseur
  5978 ;;		_lcd_montreCurseur
  5979 ;; This function uses a non-reentrant model
  5980 ;;
  5981                           
  5982                           	psect	text25
  5983  002222                     __ptext25:
  5984                           	opt callstack 0
  5985  002222                     _lcd_wrCom:
  5986                           	opt callstack 26
  5987                           
  5988                           ;incstack = 0
  5989                           ;lcd_wrCom@commande stored from wreg
  5990  002222  0100               	movlb	0	; force () banked
  5991  002224  6FB6               	movwf	lcd_wrCom@commande& (0+255),b
  5992  002226                     
  5993                           ;Lcd4Lignes.c: 158: lcd_busy();
  5994  002226  EC00  F012         	call	_lcd_busy	;wreg free
  5995  00222A                     
  5996                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  5997  00222A  0E00               	movlw	0
  5998  00222C  6E95               	movwf	149,c	;volatile
  5999  00222E                     
  6000                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  6001  00222E  9080               	bcf	128,0,c	;volatile
  6002  002230                     
  6003                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  6004  002230  9280               	bcf	128,1,c	;volatile
  6005  002232                     
  6006                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  6007  002232  0100               	movlb	0	; force () banked
  6008  002234  39B6               	swapf	lcd_wrCom@commande& (0+255),w,b
  6009  002236  0B0F               	andlw	15
  6010  002238  ECBB  F012         	call	_lcd_ecrireDonnees
  6011  00223C                     
  6012                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  6013  00223C  ECD4  F012         	call	_lcd_strobeEnableBit	;wreg free
  6014  002240                     
  6015                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  6016  002240  0100               	movlb	0	; force () banked
  6017  002242  51B6               	movf	lcd_wrCom@commande& (0+255),w,b
  6018  002244  ECBB  F012         	call	_lcd_ecrireDonnees
  6019  002248                     
  6020                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  6021  002248  ECD4  F012         	call	_lcd_strobeEnableBit	;wreg free
  6022  00224C                     
  6023                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  6024  00224C  0E03               	movlw	3
  6025  00224E                     u2657:
  6026  00224E  2EE8               	decfsz	wreg,f,c
  6027  002250  D7FE               	bra	u2657
  6028  002252  F000               	nop	
  6029  002254                     
  6030                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  6031  002254  0100               	movlb	0	; force () banked
  6032  002256  05B6               	decf	lcd_wrCom@commande& (0+255),w,b
  6033  002258  B4D8               	btfsc	status,2,c
  6034  00225A  EF31  F011         	goto	u1341
  6035  00225E  EF33  F011         	goto	u1340
  6036  002262                     u1341:
  6037  002262  EF3D  F011         	goto	l1999
  6038  002266                     u1340:
  6039  002266                     
  6040                           ; BSR set to: 0
  6041  002266  0E02               	movlw	2
  6042  002268  0100               	movlb	0	; force () banked
  6043  00226A  19B6               	xorwf	lcd_wrCom@commande& (0+255),w,b
  6044  00226C  A4D8               	btfss	status,2,c
  6045  00226E  EF3B  F011         	goto	u1351
  6046  002272  EF3D  F011         	goto	u1350
  6047  002276                     u1351:
  6048  002276  EF42  F011         	goto	l2001
  6049  00227A                     u1350:
  6050  00227A                     l1999:
  6051                           
  6052                           ; BSR set to: 0
  6053                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  6054  00227A  0EA6               	movlw	166
  6055  00227C                     u2667:
  6056  00227C  2EE8               	decfsz	wreg,f,c
  6057  00227E  D7FE               	bra	u2667
  6058  002280  F000 F000          	nop2	
  6059  002284                     l2001:
  6060                           
  6061                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  6062  002284  0E0F               	movlw	15
  6063  002286  6E95               	movwf	149,c	;volatile
  6064  002288                     
  6065                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  6066  002288  EC00  F012         	call	_lcd_busy	;wreg free
  6067  00228C  0012               	return		;funcret
  6068  00228E                     __end_of_lcd_wrCom:
  6069                           	opt callstack 0
  6070                           
  6071 ;; *************** function _lcd_strobeEnableBit *****************
  6072 ;; Defined at:
  6073 ;;		line 431 in file "Lcd4Lignes.c"
  6074 ;; Parameters:    Size  Location     Type
  6075 ;;		None
  6076 ;; Auto vars:     Size  Location     Type
  6077 ;;		None
  6078 ;; Return value:  Size  Location     Type
  6079 ;;                  1    wreg      void 
  6080 ;; Registers used:
  6081 ;;		None
  6082 ;; Tracked objects:
  6083 ;;		On entry : 0/0
  6084 ;;		On exit  : 0/0
  6085 ;;		Unchanged: 0/0
  6086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6087 ;;      Params:         0       0       0       0       0       0       0
  6088 ;;      Locals:         0       0       0       0       0       0       0
  6089 ;;      Temps:          0       0       0       0       0       0       0
  6090 ;;      Totals:         0       0       0       0       0       0       0
  6091 ;;Total ram usage:        0 bytes
  6092 ;; Hardware stack levels used:    1
  6093 ;; This function calls:
  6094 ;;		Nothing
  6095 ;; This function is called by:
  6096 ;;		_lcd_wrCom
  6097 ;;		_lcd_wrData
  6098 ;;		_lcd_resetSequence
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           	psect	text26
  6103  0025A8                     __ptext26:
  6104                           	opt callstack 0
  6105  0025A8                     _lcd_strobeEnableBit:
  6106                           	opt callstack 27
  6107  0025A8                     
  6108                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  6109  0025A8  8480               	bsf	128,2,c	;volatile
  6110                           
  6111                           ;Lcd4Lignes.c: 434: __nop();
  6112  0025AA  F000               	nop	
  6113                           
  6114                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  6115  0025AC  9480               	bcf	128,2,c	;volatile
  6116  0025AE  0012               	return		;funcret
  6117  0025B0                     __end_of_lcd_strobeEnableBit:
  6118                           	opt callstack 0
  6119                           
  6120 ;; *************** function _lcd_ecrireDonnees *****************
  6121 ;; Defined at:
  6122 ;;		line 107 in file "Lcd4Lignes.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;  donnee          1    wreg     unsigned char 
  6125 ;; Auto vars:     Size  Location     Type
  6126 ;;  donnee          1    1[BANK0 ] unsigned char 
  6127 ;; Return value:  Size  Location     Type
  6128 ;;                  1    wreg      void 
  6129 ;; Registers used:
  6130 ;;		wreg, status,2, status,0
  6131 ;; Tracked objects:
  6132 ;;		On entry : 0/0
  6133 ;;		On exit  : 0/0
  6134 ;;		Unchanged: 0/0
  6135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6136 ;;      Params:         0       0       0       0       0       0       0
  6137 ;;      Locals:         0       1       0       0       0       0       0
  6138 ;;      Temps:          0       1       0       0       0       0       0
  6139 ;;      Totals:         0       2       0       0       0       0       0
  6140 ;;Total ram usage:        2 bytes
  6141 ;; Hardware stack levels used:    1
  6142 ;; This function calls:
  6143 ;;		Nothing
  6144 ;; This function is called by:
  6145 ;;		_lcd_wrCom
  6146 ;;		_lcd_wrData
  6147 ;;		_lcd_resetSequence
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           	psect	text27
  6152  002576                     __ptext27:
  6153                           	opt callstack 0
  6154  002576                     _lcd_ecrireDonnees:
  6155                           	opt callstack 27
  6156                           
  6157                           ;incstack = 0
  6158                           ;lcd_ecrireDonnees@donnee stored from wreg
  6159  002576  0100               	movlb	0	; force () banked
  6160  002578  6FB5               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  6161  00257A                     
  6162                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  6163  00257A  CF83 F0B4          	movff	3971,??_lcd_ecrireDonnees	;volatile
  6164  00257E  0EF0               	movlw	240
  6165  002580  0100               	movlb	0	; force () banked
  6166  002582  17B4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  6167  002584  0100               	movlb	0	; force () banked
  6168  002586  51B5               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  6169  002588  0B0F               	andlw	15
  6170  00258A  0100               	movlb	0	; force () banked
  6171  00258C  11B4               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  6172  00258E  6E83               	movwf	131,c	;volatile
  6173  002590                     
  6174                           ; BSR set to: 0
  6175  002590  0012               	return		;funcret
  6176  002592                     __end_of_lcd_ecrireDonnees:
  6177                           	opt callstack 0
  6178                           
  6179 ;; *************** function _lcd_busy *****************
  6180 ;; Defined at:
  6181 ;;		line 124 in file "Lcd4Lignes.c"
  6182 ;; Parameters:    Size  Location     Type
  6183 ;;		None
  6184 ;; Auto vars:     Size  Location     Type
  6185 ;;  adresse         1    1[BANK0 ] unsigned char 
  6186 ;; Return value:  Size  Location     Type
  6187 ;;                  1    wreg      unsigned char 
  6188 ;; Registers used:
  6189 ;;		wreg, status,2, status,0, cstack
  6190 ;; Tracked objects:
  6191 ;;		On entry : 0/0
  6192 ;;		On exit  : 0/0
  6193 ;;		Unchanged: 0/0
  6194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6195 ;;      Params:         0       0       0       0       0       0       0
  6196 ;;      Locals:         0       1       0       0       0       0       0
  6197 ;;      Temps:          0       1       0       0       0       0       0
  6198 ;;      Totals:         0       2       0       0       0       0       0
  6199 ;;Total ram usage:        2 bytes
  6200 ;; Hardware stack levels used:    1
  6201 ;; Hardware stack levels required when called:    1
  6202 ;; This function calls:
  6203 ;;		_lcd_lireDonnees
  6204 ;; This function is called by:
  6205 ;;		_lcd_wrCom
  6206 ;;		_lcd_wrData
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           	psect	text28
  6211  002400                     __ptext28:
  6212                           	opt callstack 0
  6213  002400                     _lcd_busy:
  6214                           	opt callstack 26
  6215  002400                     
  6216                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  6217  002400  9080               	bcf	128,0,c	;volatile
  6218                           
  6219                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  6220  002402  8280               	bsf	128,1,c	;volatile
  6221  002404                     l280:
  6222                           
  6223                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  6224  002404  8480               	bsf	128,2,c	;volatile
  6225                           
  6226                           ;Lcd4Lignes.c: 134: __nop();
  6227  002406  F000               	nop	
  6228  002408                     
  6229                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  6230  002408  ECD8  F012         	call	_lcd_lireDonnees	;wreg free
  6231  00240C  0100               	movlb	0	; force () banked
  6232  00240E  6FB4               	movwf	??_lcd_busy& (0+255),b
  6233  002410  39B4               	swapf	??_lcd_busy& (0+255),w,b
  6234  002412  0BF0               	andlw	240
  6235  002414  0100               	movlb	0	; force () banked
  6236  002416  6FB5               	movwf	lcd_busy@adresse& (0+255),b
  6237  002418                     
  6238                           ; BSR set to: 0
  6239                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  6240  002418  9480               	bcf	128,2,c	;volatile
  6241  00241A                     
  6242                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  6243  00241A  8480               	bsf	128,2,c	;volatile
  6244  00241C                     
  6245                           ;Lcd4Lignes.c: 139: __nop();
  6246  00241C  F000               	nop	
  6247                           
  6248                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  6249  00241E  ECD8  F012         	call	_lcd_lireDonnees	;wreg free
  6250  002422  0100               	movlb	0	; force () banked
  6251  002424  13B5               	iorwf	lcd_busy@adresse& (0+255),f,b
  6252  002426                     
  6253                           ; BSR set to: 0
  6254                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  6255  002426  9480               	bcf	128,2,c	;volatile
  6256  002428                     
  6257                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  6258  002428  0100               	movlb	0	; force () banked
  6259  00242A  BFB5               	btfsc	lcd_busy@adresse& (0+255),7,b
  6260  00242C  EF1A  F012         	goto	u1331
  6261  002430  EF1C  F012         	goto	u1330
  6262  002434                     u1331:
  6263  002434  EF02  F012         	goto	l280
  6264  002438                     u1330:
  6265  002438                     
  6266                           ; BSR set to: 0
  6267                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  6268  002438  9280               	bcf	128,1,c	;volatile
  6269  00243A                     
  6270                           ; BSR set to: 0
  6271                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  6272  00243A  0100               	movlb	0	; force () banked
  6273  00243C  51B5               	movf	lcd_busy@adresse& (0+255),w,b
  6274  00243E  0B7F               	andlw	127
  6275  002440                     
  6276                           ; BSR set to: 0
  6277  002440  0012               	return		;funcret
  6278  002442                     __end_of_lcd_busy:
  6279                           	opt callstack 0
  6280                           
  6281 ;; *************** function _lcd_lireDonnees *****************
  6282 ;; Defined at:
  6283 ;;		line 93 in file "Lcd4Lignes.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;		None
  6286 ;; Auto vars:     Size  Location     Type
  6287 ;;		None
  6288 ;; Return value:  Size  Location     Type
  6289 ;;                  1    wreg      unsigned char 
  6290 ;; Registers used:
  6291 ;;		wreg, status,2, status,0
  6292 ;; Tracked objects:
  6293 ;;		On entry : 0/0
  6294 ;;		On exit  : 0/0
  6295 ;;		Unchanged: 0/0
  6296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6297 ;;      Params:         0       0       0       0       0       0       0
  6298 ;;      Locals:         0       0       0       0       0       0       0
  6299 ;;      Temps:          0       0       0       0       0       0       0
  6300 ;;      Totals:         0       0       0       0       0       0       0
  6301 ;;Total ram usage:        0 bytes
  6302 ;; Hardware stack levels used:    1
  6303 ;; This function calls:
  6304 ;;		Nothing
  6305 ;; This function is called by:
  6306 ;;		_lcd_busy
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           	psect	text29
  6311  0025B0                     __ptext29:
  6312                           	opt callstack 0
  6313  0025B0                     _lcd_lireDonnees:
  6314                           	opt callstack 26
  6315  0025B0                     
  6316                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  6317  0025B0  5083               	movf	131,w,c	;volatile
  6318  0025B2  0B0F               	andlw	15
  6319  0025B4  0012               	return		;funcret
  6320  0025B6                     __end_of_lcd_lireDonnees:
  6321                           	opt callstack 0
  6322                           
  6323 ;; *************** function ___wmul *****************
  6324 ;; Defined at:
  6325 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6328 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;  product         2    4[BANK0 ] unsigned int 
  6331 ;; Return value:  Size  Location     Type
  6332 ;;                  2    0[BANK0 ] unsigned int 
  6333 ;; Registers used:
  6334 ;;		wreg, status,2, status,0, prodl, prodh
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6340 ;;      Params:         0       4       0       0       0       0       0
  6341 ;;      Locals:         0       2       0       0       0       0       0
  6342 ;;      Temps:          0       0       0       0       0       0       0
  6343 ;;      Totals:         0       6       0       0       0       0       0
  6344 ;;Total ram usage:        6 bytes
  6345 ;; Hardware stack levels used:    1
  6346 ;; This function calls:
  6347 ;;		Nothing
  6348 ;; This function is called by:
  6349 ;;		_initTabVue
  6350 ;;		_rempliMines
  6351 ;;		_metToucheCombien
  6352 ;;		_calculToucheCombien
  6353 ;;		_enleveTuilesAutour
  6354 ;;		_gagne
  6355 ;;		_afficheTabVue
  6356 ;; This function uses a non-reentrant model
  6357 ;;
  6358                           
  6359                           	psect	text30
  6360  00250A                     __ptext30:
  6361                           	opt callstack 0
  6362  00250A                     ___wmul:
  6363                           	opt callstack 29
  6364  00250A  0100               	movlb	0	; () banked
  6365  00250C  51B4               	movf	___wmul@multiplier& (0+255),w,b
  6366  00250E  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  6367  002510  CFF3 F0B8          	movff	prodl,___wmul@product
  6368  002514  CFF4 F0B9          	movff	prodh,___wmul@product+1
  6369  002518  51B4               	movf	___wmul@multiplier& (0+255),w,b
  6370  00251A  03B7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6371  00251C  50F3               	movf	243,w,c
  6372  00251E  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  6373  002520  51B5               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6374  002522  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  6375  002524  50F3               	movf	243,w,c
  6376  002526  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  6377  002528                     
  6378                           ; BSR set to: 0
  6379  002528  C0B8  F0B4         	movff	___wmul@product,?___wmul
  6380  00252C  C0B9  F0B5         	movff	___wmul@product+1,?___wmul+1
  6381  002530                     
  6382                           ; BSR set to: 0
  6383  002530  0012               	return		;funcret
  6384  002532                     __end_of___wmul:
  6385                           	opt callstack 0
  6386                           
  6387                           	psect	param0
  6388  0000                     tosu	equ	0xFFF
  6389                           tosh	equ	0xFFE
  6390                           tosl	equ	0xFFD
  6391                           stkptr	equ	0xFFC
  6392                           pclatu	equ	0xFFB
  6393                           pclath	equ	0xFFA
  6394                           pcl	equ	0xFF9
  6395                           tblptru	equ	0xFF8
  6396                           tblptrh	equ	0xFF7
  6397                           tblptrl	equ	0xFF6
  6398                           tablat	equ	0xFF5
  6399                           prodh	equ	0xFF4
  6400                           prodl	equ	0xFF3
  6401                           indf0	equ	0xFEF
  6402                           postinc0	equ	0xFEE
  6403                           postdec0	equ	0xFED
  6404                           preinc0	equ	0xFEC
  6405                           plusw0	equ	0xFEB
  6406                           fsr0h	equ	0xFEA
  6407                           fsr0l	equ	0xFE9
  6408                           wreg	equ	0xFE8
  6409                           indf1	equ	0xFE7
  6410                           postinc1	equ	0xFE6
  6411                           postdec1	equ	0xFE5
  6412                           preinc1	equ	0xFE4
  6413                           plusw1	equ	0xFE3
  6414                           fsr1h	equ	0xFE2
  6415                           fsr1l	equ	0xFE1
  6416                           bsr	equ	0xFE0
  6417                           indf2	equ	0xFDF
  6418                           postinc2	equ	0xFDE
  6419                           postdec2	equ	0xFDD
  6420                           preinc2	equ	0xFDC
  6421                           plusw2	equ	0xFDB
  6422                           fsr2h	equ	0xFDA
  6423                           fsr2l	equ	0xFD9
  6424                           status	equ	0xFD8


Data Sizes:
    Strings     24
    Constant    0
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     37     125
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(3) Largest target is 84
		 -> m_tabVue(BANK1[84]), STR_1(CODE[24]), 

    gagne@pMines	PTR int  size(2) Largest target is 2
		 -> main@NBMines(BANK0[2]), 

    deplace@y	PTR unsigned char  size(2) Largest target is 1
		 -> main@y(BANK0[1]), 

    deplace@x	PTR unsigned char  size(2) Largest target is 1
		 -> main@x(BANK0[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_rempliMines
    _rempliMines->___awmod
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _calculToucheCombien->___wmul
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _initTabVue->___wmul
    _gagne->___wmul
    _lcd_effaceAffichage->_lcd_wrCom
    _deplace->_lcd_gotoXY
    _demine->_enleveTuilesAutour
    _enleveTuilesAutour->___wmul
    _afficheTabVue->_lcd_putMessage
    _lcd_putMessage->___wmul
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   38523
                                             32 BANK0      5     5      0
                      _afficheTabVue
                             _demine
                            _deplace
                              _gagne
                         _initTabVue
                         _init_serie
                     _initialisation
                    _lcd_curseurHome
                           _lcd_init
                     _lcd_putMessage
                   _metToucheCombien
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                         12    10      2    5229
                                             20 BANK0     12    10      2
                            ___awmod
                             ___wmul
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     9     9      0   10170
                                             21 BANK0      9     9      0
                             ___wmul
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 15    11      4    5871
                                              6 BANK0     15    11      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_serie                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           6     6      0    4187
                                              6 BANK0      6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _gagne                                               12    10      2    4445
                                              6 BANK0     12    10      2
                             ___wmul
                _lcd_effaceAffichage
 ---------------------------------------------------------------------------------
 (2) _lcd_effaceAffichage                                  0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _deplace                                              5     1      4    1209
                                              5 BANK0      5     1      4
                          _getAnalog
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      15
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _demine                                               7     6      1    6393
                                             18 BANK0      7     6      1
                 _enleveTuilesAutour
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _enleveTuilesAutour                                  12    11      1    5624
                                              6 BANK0     12    11      1
                             ___wmul
                      _lcd_ecritChar
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (1) _afficheTabVue                                        4     4      0    5254
                                             15 BANK0      4     4      0
                             ___wmul
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       9     6      3     555
                                              6 BANK0      9     6      3
                             ___wmul (ARG)
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoXY                                           2     1      1     646
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    3963
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheTabVue
     ___wmul
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _demine
     _enleveTuilesAutour
       ___wmul
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_gotoXY
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _deplace
     _getAnalog
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _gagne
     ___wmul
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _initTabVue
     ___wmul
   _init_serie
   _initialisation
   _lcd_curseurHome
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_putMessage
     ___wmul (ARG)
     _lcd_ecritChar (ARG)
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _metToucheCombien
     ___wmul
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     ___wmul
     _rand
       ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      94       7       57.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     25      7D       5       78.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     111      15        0.0%
DATA                 0      0     111       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec 16 21:58:09 2019

 __end_of_calculToucheCombien 114E                            l82 2556                            l74 1E5A  
                          l85 24D0                            l88 24E0                            l97 1C38  
                          u90 24DE                            u91 24DA          ??_enleveTuilesAutour 00BB  
         ___wmul@multiplicand 00B6                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  __size_of_lcd_strobeEnableBit 0008  
                         l201 1CFC                           l122 06D4                           l203 1D9E  
                         l131 0902                           l300 259E                           l140 0B5A  
                         l108 17C2                           l141 0BAE                           l150 0DF6  
                         l126 078E                           l118 15F4                           l231 2574  
                         l303 25A6                           l208 2142                           l136 0A56  
                         l145 0C68                           l162 1120                           l154 0EE6  
                         l163 114C                           l318 21B4                           l158 108C  
                         l351 25AE                           l335 1F4C                           l183 194C  
                         l159 1068                           l280 2404                           l176 1AD2  
                         l281 2438                           l329 23FE                           l354 2530  
                         l274 25B4                           l282 2440                           l194 140E  
                         l291 24B4                           l348 20A0                           l277 2590  
                         l365 2210                           l294 22F6                           l366 2220  
                         l288 228C                           l297 2508                           l598 1FFE  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                  __CFG_BORV$18 000000  
                ___awmod@sign 00C7                   lcd_gotoXY@x 00B8                           wreg 000FE8  
                 lcd_gotoXY@y 00B7  __size_of_lcd_effaceAffichage 000E                  __CFG_LVP$OFF 000000  
                        l1021 23AA                          l2001 2284                          l2003 2288  
                        l2011 248A                          l2005 2288                          l2021 249C  
                        l2013 248E                          l2101 0656                          l2031 24AC  
                        l2023 24A0                          l2015 248E                          l2103 0672  
                        l2041 214C                          l2033 24B0                          l2025 24A0  
                        l2017 2490                          l2009 2486                          l2201 0C8C  
                        l2121 0794                          l2113 06DA                          l2105 068E  
                        l2043 215C                          l2051 218C                          l2027 24A8  
                        l2019 2492                          l2211 0D40                          l2203 0C92  
                        l2131 07FE                          l2123 07B2                          l2107 06AC  
                        l2045 216C                          l2029 24AC                          l2053 23B0  
                        l2301 1210                          l2037 25A0                          l2221 0DF0  
                        l2213 0D46                          l2205 0CB0                          l2141 088E  
                        l2133 085C                          l2125 07B8                          l2117 06FC  
                        l2109 06B2                          l2047 217C                          l2039 2148  
                        l2055 23C0                          l2063 23DE                          l2311 1376  
                        l2303 121A                          l2231 0E4A                          l2223 0DFC  
                        l2215 0D4C                          l2207 0CC6                          l2151 0950  
                        l2143 08FC                          l2135 0862                          l2119 0788  
                        l2127 07D6                          l2071 21B6                          l2065 250A  
                        l2057 23CA                          l2081 1E9A                          l2321 13CC  
                        l2313 138A                          l2305 12DA                          l2241 0F08  
                        l2209 0CDA                          l2225 0E18                          l2161 09E2  
                        l2153 09B6                          l2145 0908                          l2137 086C  
                        l2129 07EA                          l2401 1F7C                          l2073 21C8  
                        l2067 2528                          l2059 23D4                          l2083 1EA4  
                        l2323 13E0                          l2315 1394                          l2307 12FE  
                        l2331 228E                          l2251 0FC4                          l2243 0F6E  
                        l2235 0E6A                          l2227 0E2E                          l2219 0D6C  
                        l2171 0AAA                          l2163 0A50                          l2155 09BC  
                        l2147 0926                          l2411 1FB4                          l2403 1F84  
                        l2075 21D6                          l2091 238C                          l2085 1EF0  
                        l2325 13EA                          l2317 139A                          l2309 1362  
                        l1293 24BA                          l2341 22B0                          l2333 2292  
                        l2261 106E                          l2253 0FCA                          l2237 0EE0  
                        l2229 0E44                          l2245 0F74                          l2181 0B54  
                        l2173 0AC6                          l2165 0A5C                          l2157 09C2  
                        l2149 093A                          l2421 1FEE                          l2413 1FCA  
                        l2405 1F96                          l2077 21E6                          l2093 239E  
                        l2087 1EF4                          l2327 13F0                          l2319 13B8  
                        l1295 24CE                          l2431 1AD4                          l2351 22CE  
                        l2343 22B4                          l2335 22A6                          l2271 112A  
                        l2263 1092                          l2247 0F8A                          l2239 0EEC  
                        l2191 0BB4                          l2183 0B64                          l2175 0ACC  
                        l2167 0A78                          l2511 1544                          l2503 1472  
                        l2423 1FF6                          l2415 1FD2                          l2407 1F9E  
                        l2079 21F0                          l2281 116C                          l1297 24CE  
                        l2329 2592                          l2601 1C80                          l2433 1ADE  
                        l1641 2532                          l2361 22EA                          l2353 22D4  
                        l2345 22BC                          l2337 22A8                          l2257 0FEC  
                        l2249 0FA8                          l2273 1148                          l2185 0B82  
                        l2169 0A8C                          l2097 061A                          l2521 15D6  
                        l2513 1560                          l2505 14C8                          l2417 1FD8  
                        l2409 1FA6                          l2089 2356                          l2531 20DC  
                        l2523 20A2                          l2291 11C0                          l1299 24DE  
                        l2611 1D20                          l2451 1BF0                          l2443 1B2C  
                        l1651 2558                          l1643 253A                          l2363 22F2  
                        l2355 22D8                          l2347 22C2                          l2339 22AA  
                        l2427 24E2                          l2267 10B4                          l2259 1062  
                        l2195 0BD6                          l2187 0B8C                          l2179 0AEE  
                        l2099 0638                          l2507 14E8                          l2515 15AC  
                        l2419 1FDE                          l2533 211E                          l2525 20AC  
                        l2293 11C6                          l2285 118E                          l2277 1152  
                        l2541 199A                          l2621 1D94                          l2613 1D26  
                        l2605 1CA2                          l2453 1BF6                          l2445 1B4A  
                        l2437 1B00                          l1661 256A                          l1653 255C  
                        l1645 2548                          l2381 2070                          l2373 2022  
                        l2365 2000                          l2357 22E0                          l2349 22C6  
                        l2429 2504                          l2269 111A                          l2197 0C62  
                        l2517 15B2                          l2509 14FC                          l2461 1612  
                        l2535 2124                          l2287 11A0                          l2279 1166  
                        l2551 1A02                          l2543 19AA                          l2623 1D9A  
                        l2607 1CF6                          l2615 1D44                          l2447 1B92  
                        l2455 1C14                          l2439 1B0A                          l1663 256C  
                        l1655 2564                          l1647 254A                          l2383 2074  
                        l2375 2028                          l2367 2006                          l2359 22E6  
                        l2199 0C6E                          l2519 15D0                          l2391 1F4E  
                        l2471 1660                          l2529 20CE                          l2297 11E8  
                        l2289 11B6                          l2561 1A92                          l2553 1A1C  
                        l2545 19C4                          l2537 194E                          l2617 1D66  
                        l2609 1D02                          l2457 1C1A                          l2449 1BA8  
                        l1665 256E                          l1657 2566                          l1649 254C  
                        l2385 2086                          l2369 200C                          l2393 1F54  
                        l2481 16F4                          l2473 16A8                          l2465 1634  
                        l2641 1DB0                          l2299 11FA                          l2571 17DA  
                        l2563 1AAA                          l2555 1A4E                          l2547 19DE  
                        l2539 1968                          l2619 1D6A                          l1659 2568  
                        l2387 208A                          l2379 203E                          l2491 1410  
                        l2395 1F62                          l2483 1724                          l2475 16AE  
                        l2467 163E                          l2459 15F6                          l2651 1DE2  
                        l2643 1DB4                          l2635 1DA0                          l2581 18A4  
                        l2573 1818                          l2565 1AB6                          l2557 1A5E  
                        l2549 19F6                          l2389 209C                          l2493 1424  
                        l2397 1F6A                          l2485 1762                          l2477 16CC  
                        l2661 1E1C                          l2653 1DEE                          l2645 1DBE  
                        l2637 1DA8                          l1943 25B0                          l1951 2408  
                        l2583 18B4                          l2575 1822                          l2567 17C8  
                        l2559 1A78                          l2399 1F6E                          l2487 1792  
                        l2479 16D2                          l2663 1E38                          l2671 1E80  
                        l2655 1DF2                          l2647 1DC4                          l2639 1DAC  
                        l1961 2426                          l1953 2418                          l2585 18BA  
                        l2577 1860                          l2569 17D4                          l2593 1C3A  
                        l2497 1446                          l2489 1798                          l2665 1E56  
                        l2657 1DF6                          l2649 1DCA                          l1963 2428  
                        l1955 241A                          l1947 257A                          l1971 25A8  
                        l2587 1916                          l2579 189E                          l2595 1C54  
                        l2499 1450                          l2667 1E68                          l2659 1E0E  
                        l1965 2428                          l1957 241A                          l1949 2400  
                        l1981 2230                          l1973 2226                          l2589 1948  
                        l2669 1E7C                          l1967 243A                          l1959 241C  
                        l1991 2248                          l1983 2232                          l1975 222A  
                        l2599 1C76                          l1993 224C                          l1985 223C  
                        l1977 222E                          l1995 2254                          l1987 2240  
                        l1979 222E                          l1997 2266                          l1989 2240  
                        l1999 227A                          STR_1 0601                          u2000 1376  
                        u2001 1372                          u2010 138A                          u2011 1386  
                        u2020 13B8                          u2100 1F62                          u2021 13B4  
                        u2101 1F5E                          u2030 13CC                          u2110 1F7C  
                        u2031 13C8                          u2111 1F78                          u1400 1F4C  
                        u2040 13E0                          u2200 1C14                          u2120 1F96  
                        u1401 1F48                          u2041 13DC                          u2201 1C10  
                        u2121 1F92                          u1330 2438                          u2050 140E  
                        u2210 1C38                          u1410 0656                          u2130 1FB4  
                        u1331 2434                          u2051 140A                          u2211 1C34  
                        u1411 0652                          u2131 1FB0                          u1340 2266  
                        u2060 201E                          u1500 07EA                          u1420 0672  
                        u2300 14C8                          u2140 1FCA                          u2220 1630  
                        u1341 2262                          u2061 201A                          u1501 07E6  
                        u1421 066E                          u2301 14C4                          u2141 1FC6  
                        u2221 162C                          u1350 227A                          u2070 203A  
                        u1510 07FE                          u1430 068E                          u2310 14FC  
                        u2150 1FEE                          u2230 165C                          u1351 2276  
                        u2071 2036                          u1511 07FA                          u1431 068A  
                        u2311 14F8                          u2151 1FEA                          u2231 1658  
                        u2400 19F6                          u2160 1AFC                          u2080 2086  
                        u1600 0A50                          u1520 085C                          u1440 06AC  
                        u2320 1560                          u1360 21D6                          u2240 16CC  
                        u2401 19F2                          u2161 1AF8                          u2081 2082  
                        u1601 0A4C                          u1521 0858                          u1441 06A8  
                        u2321 155C                          u1361 21D2                          u2241 16C8  
                        u2410 1A1C                          u2170 1B28                          u2090 209C  
                        u1610 0A78                          u1530 088A                          u1450 06D0  
                        u2330 15D0                          u1370 2210                          u2250 16F0  
                        u2411 1A18                          u2171 1B24                          u2091 2098  
                        u1611 0A74                          u1531 0886                          u1451 06CC  
                        u2331 15CC                          u1371 220C                          u2251 16EC  
                        u1380 1EEC                          u2420 1A4E                          u2500 1CF6  
                        u2180 1B4A                          u1700 0C62                          u1620 0A8C  
                        u1540 08FC                          u1460 06F8                          u2340 15F4  
                        u2260 1762                          u2421 1A4A                          u2501 1CF2  
                        u2181 1B46                          u1701 0C5E                          u1621 0A88  
                        u1541 08F8                          u1461 06F4                          u2341 15F0  
                        u2261 175E                          u1390 1F3C                          u2350 20CA  
                        u2430 1A78                          u2510 1D20                          u2190 1BA8  
                        u1710 0C8C                          u1630 0AAA                          u1550 0926  
                        u1470 0788                          u2270 17C2                          u2351 20C6  
                        u2431 1A74                          u2511 1D1C                          u2191 1BA4  
                        u1711 0C88                          u1631 0AA6                          u1551 0922  
                        u1471 0784                          u2271 17BE                          u2360 2142  
                        u2440 1AAA                          u2520 1D44                          u1800 0E44  
                        u1720 0CB0                          u1640 0AC6                          u1560 093A  
                        u1480 07B2                          u2280 1442                          u2361 213E  
                        u2441 1AA6                          u2521 1D40                          u1801 0E40  
                        u1721 0CAC                          u1641 0AC2                          u1561 0936  
                        u1481 07AE                          u2281 143E                          u2450 1818  
                        u2370 1968                          u2530 1D66                          u1810 0E66  
                        u1730 0CC6                          u1650 0AEA                          u1570 0950  
                        u1490 07D6                          u2290 146E                          u1387 1EE2  
                        u2451 1814                          u2371 1964                          u2531 1D62  
                        u1811 0E62                          u1731 0CC2                          u1651 0AE6  
                        u1571 094C                          u1491 07D2                          u2291 146A  
                        u2460 1860                          u2380 199A                          u1900 108C  
                        u1820 0EE0                          u1740 0CDA                          u1660 0B54  
                        u1580 09B6                          u1397 1F32                          u2461 185C  
                        u2381 1996                          u1901 1088                          u1821 0EDC  
                        u1741 0CD6                          u1661 0B50                          u1581 09B2  
                        u2470 189E                          u2390 19C4                          u1910 10B0  
                        u1830 0F08                          u1750 0D40                          u1670 0B82  
                        u1590 09DE                          u2550 1E1C                          u2471 189A  
                        u2391 19C0                          u2607 229A                          u1911 10AC  
                        u1831 0F04                          u1751 0D3C                          u1671 0B7E  
                        u1591 09DA                          u2551 1E18                          u2480 1C72  
                        u1920 111A                          u1840 0F6E                          u1760 0D68  
                        u1680 0BAA                          u2560 1E38                          u2481 1C6E  
                        u2617 22B6                          u1921 1116                          u1841 0F6A  
                        u1761 0D64                          u1681 0BA6                          u2561 1E34  
                        u2490 1C9E                          u1930 1148                          u1850 0F8A  
                        u1770 0DF0                          u1690 0BD2                          u2570 1E56  
                        u2491 1C9A                          u2627 22C8                          u1931 1144  
                        u1851 0F86                          u1771 0DEC                          u1691 0BCE  
                        u2571 1E52                          u1940 118A                          u1860 0FA8  
                        u1780 0E18                          u2580 1E68                          u1941 1186  
                        u2637 22DA                          u1861 0FA4                          u1781 0E14  
                        u2581 1E64                          u1950 11A0                          u1870 0FC4  
                        u1790 0E2E                          u1951 119C                          u2647 22EC  
                        u1871 0FC0                          u1791 0E2A                          u1960 11B6  
                        u1880 0FE8                          u2657 224E                          u1961 11B2  
                        u1881 0FE4                          u1970 11E4                          u1890 1062  
                        u2667 227C                          u1971 11E0                          u1891 105E  
                        u1980 11FA                          u1981 11F6                          u2597 1E88  
                        u1990 1210                          u1991 120C                          _RCIF 007CF5  
            ??_initialisation 00B4                          _main 1DA0                          _rand 2356  
                        fsr0h 000FEA                          indf0 000FEF                          fsr2h 000FDA  
                        fsr0l 000FE9                          indf1 000FE7                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          prodh 000FF4  
                        prodl 000FF3                          start 0000               ?_lcd_putMessage 00BA  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
             ??_lcd_ecritChar 00B7                         ?_main 00B4                         ?_rand 00C0  
             __end_of___awmod 2000                         _ANSEL 000F7E                         _RCREG 000FAE  
                       _SPBRG 000FAF                         _PORTD 000F83                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISD 000F95                         _TXREG 000FAD  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000               __end_of_deplace 1AD4           ___lmul@multiplicand 00B8  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000               ??_lcd_initCGRam 00B7                         _gagne 1C3A  
                       _randx 00D9                         main@x 00D7                         main@y 00D8  
                       tablat 000FF5                         status 000FD8                __CFG_HFOFST$ON 000000  
              __CFG_PBADEN$ON 000000              _metToucheCombien 1410               __initialization 22F8  
                __end_of_main 1E9A                  __end_of_rand 23AC        enleveTuilesAutour@mine 00BF  
         enleveTuilesAutour@i 00C4           enleveTuilesAutour@j 00C2           enleveTuilesAutour@x 00C1  
         enleveTuilesAutour@y 00BA          lcd_putMessage@chaine 00BA    calculToucheCombien@colonne 00BC  
  calculToucheCombien@nb_mine 00C3                        ??_main 00D4                        ??_rand 00C2  
               __activetblptr 000003                        ?_gagne 00BA                        _ADCON1 000FC1  
                      _ADRESH 000FC4                        _ANSELH 000F7F                   initTabVue@i 00BC  
                 initTabVue@j 00BE                __CFG_WDTEN$OFF 000000                  ?_rempliMines 00C8  
                      _SPBRGH 000FB0                __CFG_XINST$OFF 000000                lcd_initCGRam@i 00B9  
              lcd_initCGRam@j 00BA                getAnalog@canal 00B5              __end_of_lcd_busy 2442  
            __end_of_lcd_init 250A                        ___lmul 21B6                        ___wmul 250A  
              __CFG_STVREN$ON 000000                     ??___awmod 00C6                        _demine 17C4  
                      gagne@i 00C2                        gagne@j 00C4                        clear_0 233E  
                      clear_1 234A               ___awmod@divisor 00C4                     ??_deplace 00BD  
             ___awmod@counter 00C6                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8        __size_of_afficheTabVue 00A2  
           _lcd_resetSequence 228E                    __accesstop 0060       __end_of__initialization 2350  
         _lcd_strobeEnableBit 25A8            ?_lcd_resetSequence 00B4                 ___rparam_used 000000  
         _lcd_effaceAffichage 2592                  __pidataBANK0 25B6                  __pidataBANK1 2442  
         ??_lcd_resetSequence 00B6                 __end_of_gagne 1DA0          ?_lcd_strobeEnableBit 00B4  
          __size_of_getAnalog 002C          ?_lcd_effaceAffichage 00B4            __size_of_lcd_wrCom 006C  
                     ??_gagne 00BC     __end_of_lcd_resetSequence 22F8      __size_of_lcd_lireDonnees 0006  
           _lcd_ecrireDonnees 2576                    __pbssBANK0 0060                    __pbssBANK1 0100  
            ??_lcd_putMessage 00BD            ?_lcd_ecrireDonnees 00B4      __size_of_lcd_curseurHome 0008  
         ??_lcd_ecrireDonnees 00B4                       ?___lmul 00B4                       ?___wmul 00B4  
                     ?_demine 00C6                 _afficheTabVue 20A2                ___lmul@product 00BC  
 __size_of_enleveTuilesAutour 02C2         ??_lcd_strobeEnableBit 00B4  __size_of_calculToucheCombien 0B34  
    __end_of_metToucheCombien 15F6                    _lcd_gotoXY 2144         ??_lcd_effaceAffichage 00B7  
                  _lcd_wrData 2482     __end_of_lcd_ecrireDonnees 2592                     ?_lcd_busy 00B4  
                   ?_lcd_init 00B4       lcd_ecrireDonnees@donnee 00B5                    _m_tabMines 0060  
           __end_of_getAnalog 24E2          __size_of_rempliMines 01CE                       __Hparam 0000  
                     __Lparam 0000                    _initTabVue 1AD4             __end_of_lcd_wrCom 228E  
              ?_afficheTabVue 00B4               __size_of___lmul 006C                       ___awmod 1F4E  
             __size_of___wmul 0028               __size_of_demine 018A                  __psmallconst 0600  
                     __pcinit 22F8                    _init_serie 2558                     _ANSELbits 000F7E  
                     __ramtop 0600                       _deplace 194E                       __ptext0 1DA0  
                     __ptext1 15F6                       __ptext2 2356                       __ptext3 21B6  
                     __ptext4 1F4E                       __ptext5 1410                       __ptext6 061A  
                     __ptext7 24E2                       __ptext8 228E                       __ptext9 2000  
       __end_of_lcd_ecritChar 2400               lcd_busy@adresse 00B5                    gagne@gagne 00C1  
            ___awmod@dividend 00C2                 gagne@nb_Tuile 00BF                       demine@x 00CC  
                     demine@y 00C6              lcd_ecritChar@car 00B7                    ??_lcd_busy 00B4  
                  ??_lcd_init 00BB    __size_of_lcd_resetSequence 006A          end_of_initialization 2350  
       __end_of_lcd_initCGRam 20A2                    demine@mine 00CB             ??_lcd_lireDonnees 00B4  
                   _RCSTAbits 000FAB                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE       __size_of_initialisation 0026  
           ??_lcd_curseurHome 00B7           lcd_ecritChar@posRam 00B8                     _PORTAbits 000F80  
                   _PORTBbits 000F81                   ?_lcd_gotoXY 00B7                     _TRISCbits 000F94  
                 ?_lcd_wrData 00B4    __size_of_lcd_ecrireDonnees 001C                     _TXSTAbits 000FAC  
             ??_afficheTabVue 00C3                   ?_initTabVue 00B4                __end_of___lmul 2222  
              __end_of___wmul 2532                   _BAUDCONbits 000FB8                   ?_init_serie 00B4  
              __end_of_demine 194E           start_initialization 22F8           _calculToucheCombien 061A  
         __size_of_lcd_gotoXY 0072                      ??___lmul 00BC                      ??___wmul 00B8  
               rempliMines@nb 00C8           __size_of_lcd_wrData 0034                      ??_demine 00C7  
                 __pdataBANK0 00D9                   __pdataBANK1 0154              __CFG_LPT1OSC$OFF 000000  
        ?_calculToucheCombien 00BA                 __pcstackBANK0 00B4             ?_metToucheCombien 00B4  
         __size_of_initTabVue 0166            ??_metToucheCombien 00C9             __size_of_lcd_busy 0042  
           __size_of_lcd_init 0028           __size_of_init_serie 001E             __CFG_CCP2MX$PORTC 000000  
                   _getAnalog 24B6   __end_of_lcd_strobeEnableBit 25B0                _initialisation 2532  
  __end_of_enleveTuilesAutour 1410                      ?___awmod 00C2                      ?_deplace 00B9  
 __end_of_lcd_effaceAffichage 25A0                     _lcd_wrCom 2222         ??_calculToucheCombien 00BE  
                 __smallconst 0600             rempliMines@nbMine 00CF                __size_of_gagne 0166  
             _lcd_lireDonnees 25B0           lcd_wrData@caractere 00B6                 ??_rempliMines 00CA  
        metToucheCombien@mine 00CC               _lcd_curseurHome 25A0                ___wmul@product 00B8  
      __end_of_initialisation 2558                    ?_getAnalog 00B4              __CFG_WDTPS$32768 000000  
     __size_of_lcd_putMessage 00B4                    ?_lcd_wrCom 00B4                    _ADCON0bits 000FC2  
                  _ADCON2bits 000FC0             ___wmul@multiplier 00B4                  ??_lcd_gotoXY 00B8  
                ??_lcd_wrData 00B6             lcd_wrCom@commande 00B6             ___lmul@multiplier 00B4  
                   copy_data0 230C                     copy_data1 232C                      __Hparam0 0000  
      __size_of_lcd_ecritChar 0054                      __Lparam0 0000               ?_initialisation 00B4  
         __end_of_rempliMines 17C4                  ??_initTabVue 00BA            __CFG_BOREN$SBORDIS 000000  
                rempliMines@i 00D0                  rempliMines@j 00D2                  rempliMines@x 00CD  
                rempliMines@y 00CE            __end_of_lcd_gotoXY 21B6            __end_of_lcd_wrData 24B6  
            __size_of___awmod 00B2                  ??_init_serie 00B4        __size_of_lcd_initCGRam 00A2  
             lcd_putMessage@j 00C2              __size_of_deplace 0186       __end_of_lcd_lireDonnees 25B6  
                    _matCGRAM 0154       __end_of_lcd_curseurHome 25A8                      __ptext10 25A0  
                    __ptext11 2532                      __ptext20 20A2                      __ptext12 2558  
                    __ptext21 1E9A                      __ptext13 1AD4                      __ptext30 250A  
                    __ptext22 23AC                      __ptext14 1C3A                      __ptext23 2482  
                    __ptext15 2592                      __ptext24 2144                      __ptext16 194E  
                    __ptext25 2222                      __ptext17 24B6                      __ptext26 25A8  
                    __ptext18 17C4                      __ptext27 2576                      __ptext19 114E  
                    __ptext28 2400                      __ptext29 25B0             metToucheCombien@i 00CE  
           metToucheCombien@j 00D0                      _lcd_busy 2400                      _lcd_init 24E2  
          __end_of_initTabVue 1C3A      calculToucheCombien@ligne 00BA                      _m_tabVue 0100  
               __size_of_main 00FA                 __size_of_rand 0056                   gagne@pMines 00BA  
          __end_of_init_serie 2576                      deplace@x 00B9                      deplace@y 00BB  
                 ??_getAnalog 00B4         __end_of_afficheTabVue 2144                   ??_lcd_wrCom 00B6  
               _lcd_ecritChar 23AC                afficheTabVue@i 00C5                 _lcd_initCGRam 2000  
                 _rempliMines 15F6          calculToucheCombien@i 00C7          calculToucheCombien@j 00C5  
   __size_of_metToucheCombien 01E6                _lcd_putMessage 1E9A                ?_lcd_ecritChar 00B4  
            ?_lcd_lireDonnees 00B4            _enleveTuilesAutour 114E              ?_lcd_curseurHome 00B4  
              ?_lcd_initCGRam 00B4           ?_enleveTuilesAutour 00BA             __CFG_FOSC$INTIO67 000000  
                 main@NBMines 00D5        __end_of_lcd_putMessage 1F4E  
