

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec 16 21:20:13 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2,minocg
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1,minocg
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1,minocg
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    47  0000                     
    48                           ; Version 2.10
    49                           ; Generated 31/07/2019 GMT
    50                           ; 
    51                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F45K20 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataBANK0
    84  002636                     __pidataBANK0:
    85                           	opt callstack 0
    86                           
    87                           ;initializer for _randx
    88  002636  0001               	dw	1
    89  002638  0000               	dw	0
    90                           
    91                           	psect	idataBANK1
    92  0024C2                     __pidataBANK1:
    93                           	opt callstack 0
    94                           
    95                           ;initializer for _matCGRAM
    96  0024C2  08                 	db	8
    97  0024C3  04                 	db	4
    98  0024C4  04                 	db	4
    99  0024C5  0A                 	db	10
   100  0024C6  11                 	db	17
   101  0024C7  1F                 	db	31
   102  0024C8  11                 	db	17
   103  0024C9  00                 	db	0
   104  0024CA  00                 	db	0
   105  0024CB  0E                 	db	14
   106  0024CC  0E                 	db	14
   107  0024CD  0E                 	db	14
   108  0024CE  0E                 	db	14
   109  0024CF  0E                 	db	14
   110  0024D0  0E                 	db	14
   111  0024D1  00                 	db	0
   112  0024D2  00                 	db	0
   113  0024D3  00                 	db	0
   114  0024D4  04                 	db	4
   115  0024D5  0E                 	db	14
   116  0024D6  0E                 	db	14
   117  0024D7  0E                 	db	14
   118  0024D8  04                 	db	4
   119  0024D9  00                 	db	0
   120  0024DA  08                 	db	8
   121  0024DB  04                 	db	4
   122  0024DC  0E                 	db	14
   123  0024DD  11                 	db	17
   124  0024DE  1F                 	db	31
   125  0024DF  10                 	db	16
   126  0024E0  0E                 	db	14
   127  0024E1  00                 	db	0
   128  0024E2  08                 	db	8
   129  0024E3  04                 	db	4
   130  0024E4  1F                 	db	31
   131  0024E5  10                 	db	16
   132  0024E6  1E                 	db	30
   133  0024E7  10                 	db	16
   134  0024E8  1F                 	db	31
   135  0024E9  00                 	db	0
   136  0024EA  04                 	db	4
   137  0024EB  0A                 	db	10
   138  0024EC  0E                 	db	14
   139  0024ED  11                 	db	17
   140  0024EE  1F                 	db	31
   141  0024EF  10                 	db	16
   142  0024F0  0E                 	db	14
   143  0024F1  00                 	db	0
   144  0024F2  08                 	db	8
   145  0024F3  04                 	db	4
   146  0024F4  0E                 	db	14
   147  0024F5  01                 	db	1
   148  0024F6  0F                 	db	15
   149  0024F7  11                 	db	17
   150  0024F8  0F                 	db	15
   151  0024F9  00                 	db	0
   152  0024FA  04                 	db	4
   153  0024FB  0A                 	db	10
   154  0024FC  0E                 	db	14
   155  0024FD  01                 	db	1
   156  0024FE  0F                 	db	15
   157  0024FF  11                 	db	17
   158  002500  0F                 	db	15
   159  002501  00                 	db	0
   160  0000                     _PORTAbits	set	3968
   161  0000                     _PORTD	set	3971
   162  0000                     _RCREG	set	4014
   163  0000                     _TXREG	set	4013
   164  0000                     _RCSTAbits	set	4011
   165  0000                     _TXSTAbits	set	4012
   166  0000                     _BAUDCONbits	set	4024
   167  0000                     _SPBRG	set	4015
   168  0000                     _SPBRGH	set	4016
   169  0000                     _TRISCbits	set	3988
   170  0000                     _ADRESH	set	4036
   171  0000                     _ADCON2bits	set	4032
   172  0000                     _ADCON0bits	set	4034
   173  0000                     _ANSELbits	set	3966
   174  0000                     _ADCON1	set	4033
   175  0000                     _TRISA	set	3986
   176  0000                     _ANSEL	set	3966
   177  0000                     _TRISB	set	3987
   178  0000                     _ANSELH	set	3967
   179  0000                     _TRISD	set	3989
   180  0000                     _PORTBbits	set	3969
   181  0000                     _RCIF	set	31989
   182                           
   183                           	psect	smallconst
   184  000600                     __psmallconst:
   185                           	opt callstack 0
   186  000600  00                 	db	0
   187  000601                     STR_1:
   188                           
   189                           ; BSR set to: 0
   190  000601  4C                 	db	76	;'L'
   191  000602  41                 	db	65	;'A'
   192  000603  42                 	db	66	;'B'
   193  000604  36                 	db	54	;'6'
   194  000605  20                 	db	32
   195  000606  59                 	db	89	;'Y'
   196  000607  6F                 	db	111	;'o'
   197  000608  75                 	db	117	;'u'
   198  000609  6C                 	db	108	;'l'
   199  00060A  69                 	db	105	;'i'
   200  00060B  61                 	db	97	;'a'
   201  00060C  6E                 	db	110	;'n'
   202  00060D  20                 	db	32
   203  00060E  48                 	db	72	;'H'
   204  00060F  6F                 	db	111	;'o'
   205  000610  75                 	db	117	;'u'
   206  000611  65                 	db	101	;'e'
   207  000612  68                 	db	104	;'h'
   208  000613  6F                 	db	111	;'o'
   209  000614  75                 	db	117	;'u'
   210  000615  6E                 	db	110	;'n'
   211  000616  6F                 	db	111	;'o'
   212  000617  75                 	db	117	;'u'
   213  000618  00                 	db	0
   214                           
   215                           ; #config settings
   216  000619  00                 	db	0	; dummy byte at the end
   217  0000                     
   218                           	psect	cinit
   219  002378                     __pcinit:
   220                           	opt callstack 0
   221  002378                     start_initialization:
   222                           	opt callstack 0
   223  002378                     __initialization:
   224                           	opt callstack 0
   225                           
   226                           ; Initialize objects allocated to BANK1 (64 bytes)
   227                           ; load TBLPTR registers with __pidataBANK1
   228  002378  0EC2               	movlw	low __pidataBANK1
   229  00237A  6EF6               	movwf	tblptrl,c
   230  00237C  0E24               	movlw	high __pidataBANK1
   231  00237E  6EF7               	movwf	tblptrh,c
   232  002380  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   233  002382  6EF8               	movwf	tblptru,c
   234  002384  EE01  F054         	lfsr	0,__pdataBANK1
   235  002388  EE10 F040          	lfsr	1,64
   236  00238C                     copy_data0:
   237  00238C  0009               	tblrd		*+
   238  00238E  CFF5 FFEE          	movff	tablat,postinc0
   239  002392  50E5               	movf	postdec1,w,c
   240  002394  50E1               	movf	fsr1l,w,c
   241  002396  E1FA               	bnz	copy_data0
   242                           
   243                           ; Initialize objects allocated to BANK0 (4 bytes)
   244                           ; load TBLPTR registers with __pidataBANK0
   245  002398  0E36               	movlw	low __pidataBANK0
   246  00239A  6EF6               	movwf	tblptrl,c
   247  00239C  0E26               	movlw	high __pidataBANK0
   248  00239E  6EF7               	movwf	tblptrh,c
   249  0023A0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   250  0023A2  6EF8               	movwf	tblptru,c
   251  0023A4  EE00  F0DD         	lfsr	0,__pdataBANK0
   252  0023A8  EE10 F004          	lfsr	1,4
   253  0023AC                     copy_data1:
   254  0023AC  0009               	tblrd		*+
   255  0023AE  CFF5 FFEE          	movff	tablat,postinc0
   256  0023B2  50E5               	movf	postdec1,w,c
   257  0023B4  50E1               	movf	fsr1l,w,c
   258  0023B6  E1FA               	bnz	copy_data1
   259                           
   260                           ; Clear objects allocated to BANK1 (84 bytes)
   261  0023B8  EE01  F000         	lfsr	0,__pbssBANK1
   262  0023BC  0E54               	movlw	84
   263  0023BE                     clear_0:
   264  0023BE  6AEE               	clrf	postinc0,c
   265  0023C0  06E8               	decf	wreg,f,c
   266  0023C2  E1FD               	bnz	clear_0
   267                           
   268                           ; Clear objects allocated to BANK0 (84 bytes)
   269  0023C4  EE00  F060         	lfsr	0,__pbssBANK0
   270  0023C8  0E54               	movlw	84
   271  0023CA                     clear_1:
   272  0023CA  6AEE               	clrf	postinc0,c
   273  0023CC  06E8               	decf	wreg,f,c
   274  0023CE  E1FD               	bnz	clear_1
   275  0023D0                     end_of_initialization:
   276                           	opt callstack 0
   277  0023D0                     __end_of__initialization:
   278                           	opt callstack 0
   279  0023D0  0100               	movlb	0
   280  0023D2  EF10  F00F         	goto	_main	;jump to C main() function
   281                           
   282                           	psect	bssBANK0
   283  000060                     __pbssBANK0:
   284                           	opt callstack 0
   285  000060                     _m_tabMines:
   286                           	opt callstack 0
   287  000060                     	ds	84
   288                           
   289                           	psect	dataBANK0
   290  0000DD                     __pdataBANK0:
   291                           	opt callstack 0
   292  0000DD                     _randx:
   293                           	opt callstack 0
   294  0000DD                     	ds	4
   295                           
   296                           	psect	bssBANK1
   297  000100                     __pbssBANK1:
   298                           	opt callstack 0
   299  000100                     _m_tabVue:
   300                           	opt callstack 0
   301  000100                     	ds	84
   302                           
   303                           	psect	dataBANK1
   304  000154                     __pdataBANK1:
   305                           	opt callstack 0
   306  000154                     _matCGRAM:
   307                           	opt callstack 0
   308  000154                     	ds	64
   309                           
   310                           	psect	cstackBANK0
   311  0000B4                     __pcstackBANK0:
   312                           	opt callstack 0
   313  0000B4                     ??_getAnalog:
   314  0000B4                     ??_lcd_ecrireDonnees:
   315  0000B4                     ??_lcd_busy:
   316  0000B4                     ?___wmul:
   317                           	opt callstack 0
   318  0000B4                     ?___lmul:
   319                           	opt callstack 0
   320  0000B4                     ___wmul@multiplier:
   321                           	opt callstack 0
   322  0000B4                     ___lmul@multiplier:
   323                           	opt callstack 0
   324                           
   325                           ; 4 bytes @ 0x0
   326  0000B4                     	ds	1
   327  0000B5                     getAnalog@canal:
   328                           	opt callstack 0
   329  0000B5                     lcd_ecrireDonnees@donnee:
   330                           	opt callstack 0
   331  0000B5                     lcd_busy@adresse:
   332                           	opt callstack 0
   333                           
   334                           ; 1 bytes @ 0x1
   335  0000B5                     	ds	1
   336  0000B6                     ??_lcd_resetSequence:
   337  0000B6                     lcd_wrCom@commande:
   338                           	opt callstack 0
   339  0000B6                     lcd_wrData@caractere:
   340                           	opt callstack 0
   341  0000B6                     ___wmul@multiplicand:
   342                           	opt callstack 0
   343                           
   344                           ; 2 bytes @ 0x2
   345  0000B6                     	ds	1
   346  0000B7                     ??_lcd_initCGRam:
   347  0000B7                     lcd_gotoXY@y:
   348                           	opt callstack 0
   349  0000B7                     lcd_ecritChar@car:
   350                           	opt callstack 0
   351                           
   352                           ; 1 bytes @ 0x3
   353  0000B7                     	ds	1
   354  0000B8                     lcd_gotoXY@x:
   355                           	opt callstack 0
   356  0000B8                     lcd_ecritChar@posRam:
   357                           	opt callstack 0
   358  0000B8                     ___wmul@product:
   359                           	opt callstack 0
   360  0000B8                     ___lmul@multiplicand:
   361                           	opt callstack 0
   362                           
   363                           ; 4 bytes @ 0x4
   364  0000B8                     	ds	1
   365  0000B9                     lcd_initCGRam@i:
   366                           	opt callstack 0
   367  0000B9                     deplace@x:
   368                           	opt callstack 0
   369                           
   370                           ; 2 bytes @ 0x5
   371  0000B9                     	ds	1
   372  0000BA                     ??_initTabVue:
   373  0000BA                     enleveTuilesAutour@y:
   374                           	opt callstack 0
   375  0000BA                     lcd_initCGRam@j:
   376                           	opt callstack 0
   377  0000BA                     calculToucheCombien@ligne:
   378                           	opt callstack 0
   379  0000BA                     gagne@pMines:
   380                           	opt callstack 0
   381  0000BA                     lcd_putMessage@chaine:
   382                           	opt callstack 0
   383                           
   384                           ; 3 bytes @ 0x6
   385  0000BA                     	ds	1
   386  0000BB                     ??_enleveTuilesAutour:
   387  0000BB                     deplace@y:
   388                           	opt callstack 0
   389                           
   390                           ; 2 bytes @ 0x7
   391  0000BB                     	ds	1
   392  0000BC                     ??_gagne:
   393  0000BC                     initTabVue@i:
   394                           	opt callstack 0
   395  0000BC                     calculToucheCombien@colonne:
   396                           	opt callstack 0
   397  0000BC                     ___lmul@product:
   398                           	opt callstack 0
   399                           
   400                           ; 4 bytes @ 0x8
   401  0000BC                     	ds	1
   402  0000BD                     ??_lcd_putMessage:
   403  0000BD                     ??_deplace:
   404                           
   405                           ; 1 bytes @ 0x9
   406  0000BD                     	ds	1
   407  0000BE                     ??_calculToucheCombien:
   408  0000BE                     initTabVue@j:
   409                           	opt callstack 0
   410                           
   411                           ; 2 bytes @ 0xA
   412  0000BE                     	ds	1
   413  0000BF                     enleveTuilesAutour@mine:
   414                           	opt callstack 0
   415  0000BF                     gagne@nb_Tuile:
   416                           	opt callstack 0
   417                           
   418                           ; 2 bytes @ 0xB
   419  0000BF                     	ds	1
   420  0000C0                     ?_rand:
   421                           	opt callstack 0
   422                           
   423                           ; 2 bytes @ 0xC
   424  0000C0                     	ds	1
   425  0000C1                     enleveTuilesAutour@x:
   426                           	opt callstack 0
   427  0000C1                     gagne@gagne:
   428                           	opt callstack 0
   429                           
   430                           ; 1 bytes @ 0xD
   431  0000C1                     	ds	1
   432  0000C2                     ?___awmod:
   433                           	opt callstack 0
   434  0000C2                     lcd_putMessage@j:
   435                           	opt callstack 0
   436  0000C2                     enleveTuilesAutour@j:
   437                           	opt callstack 0
   438  0000C2                     gagne@i:
   439                           	opt callstack 0
   440  0000C2                     ___awmod@dividend:
   441                           	opt callstack 0
   442                           
   443                           ; 2 bytes @ 0xE
   444  0000C2                     	ds	1
   445  0000C3                     ??_afficheTabVue:
   446  0000C3                     calculToucheCombien@nb_mine:
   447                           	opt callstack 0
   448                           
   449                           ; 2 bytes @ 0xF
   450  0000C3                     	ds	1
   451  0000C4                     enleveTuilesAutour@i:
   452                           	opt callstack 0
   453  0000C4                     gagne@j:
   454                           	opt callstack 0
   455  0000C4                     ___awmod@divisor:
   456                           	opt callstack 0
   457                           
   458                           ; 2 bytes @ 0x10
   459  0000C4                     	ds	1
   460  0000C5                     calculToucheCombien@j:
   461                           	opt callstack 0
   462  0000C5                     afficheTabVue@i:
   463                           	opt callstack 0
   464                           
   465                           ; 2 bytes @ 0x11
   466  0000C5                     	ds	1
   467  0000C6                     demine@y:
   468                           	opt callstack 0
   469  0000C6                     ___awmod@counter:
   470                           	opt callstack 0
   471                           
   472                           ; 1 bytes @ 0x12
   473  0000C6                     	ds	1
   474  0000C7                     ??_demine:
   475  0000C7                     ___awmod@sign:
   476                           	opt callstack 0
   477  0000C7                     calculToucheCombien@i:
   478                           	opt callstack 0
   479                           
   480                           ; 2 bytes @ 0x13
   481  0000C7                     	ds	1
   482  0000C8                     rempliMines@nb:
   483                           	opt callstack 0
   484                           
   485                           ; 2 bytes @ 0x14
   486  0000C8                     	ds	1
   487  0000C9                     ??_metToucheCombien:
   488                           
   489                           ; 1 bytes @ 0x15
   490  0000C9                     	ds	1
   491  0000CA                     ??_rempliMines:
   492                           
   493                           ; 1 bytes @ 0x16
   494  0000CA                     	ds	1
   495  0000CB                     demine@mine:
   496                           	opt callstack 0
   497                           
   498                           ; 1 bytes @ 0x17
   499  0000CB                     	ds	1
   500  0000CC                     demine@x:
   501                           	opt callstack 0
   502  0000CC                     metToucheCombien@mine:
   503                           	opt callstack 0
   504                           
   505                           ; 2 bytes @ 0x18
   506  0000CC                     	ds	1
   507  0000CD                     rempliMines@i:
   508                           	opt callstack 0
   509                           
   510                           ; 2 bytes @ 0x19
   511  0000CD                     	ds	1
   512  0000CE                     metToucheCombien@i:
   513                           	opt callstack 0
   514                           
   515                           ; 2 bytes @ 0x1A
   516  0000CE                     	ds	1
   517  0000CF                     rempliMines@j:
   518                           	opt callstack 0
   519                           
   520                           ; 2 bytes @ 0x1B
   521  0000CF                     	ds	1
   522  0000D0                     metToucheCombien@j:
   523                           	opt callstack 0
   524                           
   525                           ; 2 bytes @ 0x1C
   526  0000D0                     	ds	1
   527  0000D1                     rempliMines@x:
   528                           	opt callstack 0
   529                           
   530                           ; 1 bytes @ 0x1D
   531  0000D1                     	ds	1
   532  0000D2                     rempliMines@y:
   533                           	opt callstack 0
   534                           
   535                           ; 1 bytes @ 0x1E
   536  0000D2                     	ds	1
   537  0000D3                     rempliMines@nbMine:
   538                           	opt callstack 0
   539                           
   540                           ; 1 bytes @ 0x1F
   541  0000D3                     	ds	1
   542  0000D4                     rempliMines@i_384:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x20
   546  0000D4                     	ds	2
   547  0000D6                     rempliMines@j_385:
   548                           	opt callstack 0
   549                           
   550                           ; 2 bytes @ 0x22
   551  0000D6                     	ds	2
   552  0000D8                     ??_main:
   553                           
   554                           ; 1 bytes @ 0x24
   555  0000D8                     	ds	1
   556  0000D9                     main@NBMines:
   557                           	opt callstack 0
   558                           
   559                           ; 2 bytes @ 0x25
   560  0000D9                     	ds	2
   561  0000DB                     main@x:
   562                           	opt callstack 0
   563                           
   564                           ; 1 bytes @ 0x27
   565  0000DB                     	ds	1
   566  0000DC                     main@y:
   567                           	opt callstack 0
   568                           
   569                           ; 1 bytes @ 0x28
   570  0000DC                     	ds	1
   571                           
   572 ;;
   573 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   574 ;;
   575 ;; *************** function _main *****************
   576 ;; Defined at:
   577 ;;		line 51 in file "main.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  NBMines         2   37[BANK0 ] int 
   582 ;;  y               1   40[BANK0 ] unsigned char 
   583 ;;  x               1   39[BANK0 ] unsigned char 
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      void 
   586 ;; Registers used:
   587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   593 ;;      Params:         0       0       0       0       0       0       0
   594 ;;      Locals:         0       4       0       0       0       0       0
   595 ;;      Temps:          0       1       0       0       0       0       0
   596 ;;      Totals:         0       5       0       0       0       0       0
   597 ;;Total ram usage:        5 bytes
   598 ;; Hardware stack levels required when called:    6
   599 ;; This function calls:
   600 ;;		_afficheTabVue
   601 ;;		_demine
   602 ;;		_deplace
   603 ;;		_gagne
   604 ;;		_initTabVue
   605 ;;		_init_serie
   606 ;;		_initialisation
   607 ;;		_lcd_curseurHome
   608 ;;		_lcd_init
   609 ;;		_lcd_putMessage
   610 ;;		_metToucheCombien
   611 ;;		_rempliMines
   612 ;; This function is called by:
   613 ;;		Startup code after reset
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           	psect	text0
   618  001E20                     __ptext0:
   619                           	opt callstack 0
   620  001E20                     _main:
   621                           	opt callstack 25
   622  001E20                     
   623                           ;main.c: 53: initialisation();
   624  001E20  ECD9  F012         	call	_initialisation	;wreg free
   625                           
   626                           ;main.c: 54: init_serie();
   627  001E24  ECEC  F012         	call	_init_serie	;wreg free
   628  001E28                     
   629                           ;main.c: 55: lcd_init();
   630  001E28  ECB1  F012         	call	_lcd_init	;wreg free
   631  001E2C                     
   632                           ;main.c: 56: initTabVue();
   633  001E2C  EC96  F00D         	call	_initTabVue	;wreg free
   634  001E30                     
   635                           ;main.c: 57: lcd_curseurHome();
   636  001E30  EC10  F013         	call	_lcd_curseurHome	;wreg free
   637  001E34                     
   638                           ;main.c: 59: int NBMines=12;
   639  001E34  0E00               	movlw	0
   640  001E36  0100               	movlb	0	; force () banked
   641  001E38  6FDA               	movwf	(main@NBMines+1)& (0+255),b
   642  001E3A  0E0C               	movlw	12
   643  001E3C  6FD9               	movwf	main@NBMines& (0+255),b
   644  001E3E                     
   645                           ; BSR set to: 0
   646                           ;main.c: 60: char x =(20/2);
   647  001E3E  0E0A               	movlw	10
   648  001E40  0100               	movlb	0	; force () banked
   649  001E42  6FDB               	movwf	main@x& (0+255),b
   650  001E44                     
   651                           ; BSR set to: 0
   652                           ;main.c: 61: char y = (4/2);
   653  001E44  0E02               	movlw	2
   654  001E46  0100               	movlb	0	; force () banked
   655  001E48  6FDC               	movwf	main@y& (0+255),b
   656  001E4A                     
   657                           ; BSR set to: 0
   658                           ;main.c: 63: lcd_putMessage("LAB6 Youlian Houehounou");
   659  001E4A  0E01               	movlw	low STR_1
   660  001E4C  0100               	movlb	0	; force () banked
   661  001E4E  6FBA               	movwf	lcd_putMessage@chaine& (0+255),b
   662  001E50  0E06               	movlw	high STR_1
   663  001E52  6FBB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   664  001E54  51BA               	movf	lcd_putMessage@chaine& (0+255),w,b
   665  001E56  11BB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   666  001E58  A4D8               	btfss	status,2,c
   667  001E5A  0E00               	movlw	low (__mediumconst shr (0+16))
   668  001E5C  6FBC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   669  001E5E  EC8D  F00F         	call	_lcd_putMessage	;wreg free
   670  001E62                     
   671                           ;main.c: 64: rempliMines(NBMines);
   672  001E62  C0D9  F0C8         	movff	main@NBMines,rempliMines@nb
   673  001E66  C0DA  F0C9         	movff	main@NBMines+1,rempliMines@nb+1
   674  001E6A  EC1D  F00B         	call	_rempliMines	;wreg free
   675  001E6E                     
   676                           ;main.c: 65: metToucheCombien();
   677  001E6E  EC20  F00A         	call	_metToucheCombien	;wreg free
   678  001E72                     
   679                           ;main.c: 66: afficheTabVue();
   680  001E72  EC91  F010         	call	_afficheTabVue	;wreg free
   681  001E76                     l2661:
   682                           
   683                           ;main.c: 68: {;main.c: 69: deplace(&x,&y);
   684  001E76  0EDB               	movlw	low main@x
   685  001E78  0100               	movlb	0	; force () banked
   686  001E7A  6FB9               	movwf	deplace@x& (0+255),b
   687  001E7C  0E00               	movlw	high main@x
   688  001E7E  6FBA               	movwf	(deplace@x+1)& (0+255),b
   689  001E80  0EDC               	movlw	low main@y
   690  001E82  0100               	movlb	0	; force () banked
   691  001E84  6FBB               	movwf	deplace@y& (0+255),b
   692  001E86  0E00               	movlw	high main@y
   693  001E88  6FBC               	movwf	(deplace@y+1)& (0+255),b
   694  001E8A  ECD3  F00C         	call	_deplace	;wreg free
   695  001E8E                     
   696                           ;main.c: 70: if (PORTBbits.RB1 ==0)
   697  001E8E  B281               	btfsc	129,1,c	;volatile
   698  001E90  EF4C  F00F         	goto	u2551
   699  001E94  EF4E  F00F         	goto	u2550
   700  001E98                     u2551:
   701  001E98  EF80  F00F         	goto	l2675
   702  001E9C                     u2550:
   703  001E9C                     
   704                           ;main.c: 71: {;main.c: 72: if((demine(x,y)==0)||(gagne(&NBMines)==1))
   705  001E9C  C0DC  F0C6         	movff	main@y,demine@y
   706  001EA0  0100               	movlb	0	; force () banked
   707  001EA2  51DB               	movf	main@x& (0+255),w,b
   708  001EA4  EC0E  F00C         	call	_demine
   709  001EA8  0900               	iorlw	0
   710  001EAA  B4D8               	btfsc	status,2,c
   711  001EAC  EF5A  F00F         	goto	u2561
   712  001EB0  EF5C  F00F         	goto	u2560
   713  001EB4                     u2561:
   714  001EB4  EF6B  F00F         	goto	l2669
   715  001EB8                     u2560:
   716  001EB8  0ED9               	movlw	low main@NBMines
   717  001EBA  0100               	movlb	0	; force () banked
   718  001EBC  6FBA               	movwf	gagne@pMines& (0+255),b
   719  001EBE  0E00               	movlw	high main@NBMines
   720  001EC0  6FBB               	movwf	(gagne@pMines+1)& (0+255),b
   721  001EC2  EC53  F00E         	call	_gagne	;wreg free
   722  001EC6  06E8               	decf	wreg,f,c
   723  001EC8  A4D8               	btfss	status,2,c
   724  001ECA  EF69  F00F         	goto	u2571
   725  001ECE  EF6B  F00F         	goto	u2570
   726  001ED2                     u2571:
   727  001ED2  EF80  F00F         	goto	l2675
   728  001ED6                     u2570:
   729  001ED6                     l2669:
   730                           
   731                           ;main.c: 73: {;main.c: 74: afficheTabVue();
   732  001ED6  EC91  F010         	call	_afficheTabVue	;wreg free
   733  001EDA                     l74:
   734  001EDA  B281               	btfsc	129,1,c	;volatile
   735  001EDC  EF72  F00F         	goto	u2581
   736  001EE0  EF74  F00F         	goto	u2580
   737  001EE4                     u2581:
   738  001EE4  EF6D  F00F         	goto	l74
   739  001EE8                     u2580:
   740  001EE8                     
   741                           ;main.c: 76: initTabVue();
   742  001EE8  EC96  F00D         	call	_initTabVue	;wreg free
   743                           
   744                           ;main.c: 77: rempliMines(NBMines);
   745  001EEC  C0D9  F0C8         	movff	main@NBMines,rempliMines@nb
   746  001EF0  C0DA  F0C9         	movff	main@NBMines+1,rempliMines@nb+1
   747  001EF4  EC1D  F00B         	call	_rempliMines	;wreg free
   748                           
   749                           ;main.c: 78: metToucheCombien();
   750  001EF8  EC20  F00A         	call	_metToucheCombien	;wreg free
   751  001EFC                     
   752                           ;main.c: 79: afficheTabVue();
   753  001EFC  EC91  F010         	call	_afficheTabVue	;wreg free
   754  001F00                     l2675:
   755                           
   756                           ;main.c: 80: };main.c: 81: };main.c: 82: _delay((unsigned long)((100)*(1000000/4000.0)))
      +                          ;
   757  001F00  0E21               	movlw	33
   758  001F02  0100               	movlb	0	; force () banked
   759  001F04  6FD8               	movwf	??_main& (0+255),b
   760  001F06  0E76               	movlw	118
   761  001F08                     u2597:
   762  001F08  2EE8               	decfsz	wreg,f,c
   763  001F0A  D7FE               	bra	u2597
   764  001F0C  2FD8               	decfsz	??_main& (0+255),f,b
   765  001F0E  D7FC               	bra	u2597
   766  001F10  F000               	nop	
   767  001F12  EF3B  F00F         	goto	l2661
   768  001F16  EF00  F000         	goto	start
   769  001F1A                     __end_of_main:
   770                           	opt callstack 0
   771                           
   772 ;; *************** function _rempliMines *****************
   773 ;; Defined at:
   774 ;;		line 155 in file "main.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;  nb              2   20[BANK0 ] int 
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  j               2   34[BANK0 ] int 
   779 ;;  i               2   32[BANK0 ] int 
   780 ;;  j               2   27[BANK0 ] int 
   781 ;;  i               2   25[BANK0 ] int 
   782 ;;  nbMine          1   31[BANK0 ] unsigned char 
   783 ;;  y               1   30[BANK0 ] unsigned char 
   784 ;;  x               1   29[BANK0 ] unsigned char 
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   794 ;;      Params:         0       2       0       0       0       0       0
   795 ;;      Locals:         0      11       0       0       0       0       0
   796 ;;      Temps:          0       3       0       0       0       0       0
   797 ;;      Totals:         0      16       0       0       0       0       0
   798 ;;Total ram usage:       16 bytes
   799 ;; Hardware stack levels used:    1
   800 ;; Hardware stack levels required when called:    2
   801 ;; This function calls:
   802 ;;		___awmod
   803 ;;		___wmul
   804 ;;		_rand
   805 ;; This function is called by:
   806 ;;		_main
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text1
   811  00163A                     __ptext1:
   812                           	opt callstack 0
   813  00163A                     _rempliMines:
   814                           	opt callstack 28
   815  00163A                     
   816                           ;main.c: 157: int i=0;
   817  00163A  0E00               	movlw	0
   818  00163C  0100               	movlb	0	; force () banked
   819  00163E  6FCE               	movwf	(rempliMines@i+1)& (0+255),b
   820  001640  0E00               	movlw	0
   821  001642  6FCD               	movwf	rempliMines@i& (0+255),b
   822                           
   823                           ;main.c: 158: int j=0;
   824  001644  0E00               	movlw	0
   825  001646  0100               	movlb	0	; force () banked
   826  001648  6FD0               	movwf	(rempliMines@j+1)& (0+255),b
   827  00164A  0E00               	movlw	0
   828  00164C  6FCF               	movwf	rempliMines@j& (0+255),b
   829                           
   830                           ;main.c: 159: char x =0;
   831  00164E  0E00               	movlw	0
   832  001650  0100               	movlb	0	; force () banked
   833  001652  6FD1               	movwf	rempliMines@x& (0+255),b
   834                           
   835                           ;main.c: 160: char y =0;
   836  001654  0E00               	movlw	0
   837  001656  0100               	movlb	0	; force () banked
   838  001658  6FD2               	movwf	rempliMines@y& (0+255),b
   839                           
   840                           ;main.c: 161: char nbMine =0;
   841  00165A  0E00               	movlw	0
   842  00165C  0100               	movlb	0	; force () banked
   843  00165E  6FD3               	movwf	rempliMines@nbMine& (0+255),b
   844                           
   845                           ;main.c: 163: for (int i=0;i<4;i++)
   846  001660  0E00               	movlw	0
   847  001662  0100               	movlb	0	; force () banked
   848  001664  6FD5               	movwf	(rempliMines@i_384+1)& (0+255),b
   849  001666  0E00               	movlw	0
   850  001668  6FD4               	movwf	rempliMines@i_384& (0+255),b
   851  00166A                     
   852                           ; BSR set to: 0
   853  00166A  0100               	movlb	0	; force () banked
   854  00166C  BFD5               	btfsc	(rempliMines@i_384+1)& (0+255),7,b
   855  00166E  EF42  F00B         	goto	u2221
   856  001672  51D5               	movf	(rempliMines@i_384+1)& (0+255),w,b
   857  001674  E109               	bnz	u2220
   858  001676  0E04               	movlw	4
   859  001678  5DD4               	subwf	rempliMines@i_384& (0+255),w,b
   860  00167A  A0D8               	btfss	status,0,c
   861  00167C  EF42  F00B         	goto	u2221
   862  001680  EF44  F00B         	goto	u2220
   863  001684                     u2221:
   864  001684  EF46  F00B         	goto	l2469
   865  001688                     u2220:
   866  001688  EFF8  F00B         	goto	l2493
   867  00168C                     l2469:
   868                           
   869                           ; BSR set to: 0
   870                           ;main.c: 164: {;main.c: 165: for (int j=0;j<20;j++)
   871  00168C  0E00               	movlw	0
   872  00168E  0100               	movlb	0	; force () banked
   873  001690  6FD7               	movwf	(rempliMines@j_385+1)& (0+255),b
   874  001692  0E00               	movlw	0
   875  001694  6FD6               	movwf	rempliMines@j_385& (0+255),b
   876  001696                     
   877                           ; BSR set to: 0
   878  001696  0100               	movlb	0	; force () banked
   879  001698  BFD7               	btfsc	(rempliMines@j_385+1)& (0+255),7,b
   880  00169A  EF58  F00B         	goto	u2231
   881  00169E  51D7               	movf	(rempliMines@j_385+1)& (0+255),w,b
   882  0016A0  E109               	bnz	u2230
   883  0016A2  0E14               	movlw	20
   884  0016A4  5DD6               	subwf	rempliMines@j_385& (0+255),w,b
   885  0016A6  A0D8               	btfss	status,0,c
   886  0016A8  EF58  F00B         	goto	u2231
   887  0016AC  EF5A  F00B         	goto	u2230
   888  0016B0                     u2231:
   889  0016B0  EF5C  F00B         	goto	l2475
   890  0016B4                     u2230:
   891  0016B4  EF92  F00B         	goto	l2481
   892  0016B8                     l2475:
   893                           
   894                           ; BSR set to: 0
   895                           ;main.c: 166: {;main.c: 167: m_tabMines[i][j]=32;
   896  0016B8  C0D4  F0B4         	movff	rempliMines@i_384,___wmul@multiplier
   897  0016BC  C0D5  F0B5         	movff	rempliMines@i_384+1,___wmul@multiplier+1
   898  0016C0  0E00               	movlw	0
   899  0016C2  0100               	movlb	0	; force () banked
   900  0016C4  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
   901  0016C6  0E15               	movlw	21
   902  0016C8  6FB6               	movwf	___wmul@multiplicand& (0+255),b
   903  0016CA  ECC5  F012         	call	___wmul	;wreg free
   904  0016CE  0E60               	movlw	low _m_tabMines
   905  0016D0  0100               	movlb	0	; force () banked
   906  0016D2  6FCA               	movwf	??_rempliMines& (0+255),b
   907  0016D4  0E00               	movlw	high _m_tabMines
   908  0016D6  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   909  0016D8  0100               	movlb	0	; force () banked
   910  0016DA  51B4               	movf	?___wmul& (0+255),w,b
   911  0016DC  0100               	movlb	0	; force () banked
   912  0016DE  27CA               	addwf	??_rempliMines& (0+255),f,b
   913  0016E0  0100               	movlb	0	; force () banked
   914  0016E2  51B5               	movf	(?___wmul+1)& (0+255),w,b
   915  0016E4  0100               	movlb	0	; force () banked
   916  0016E6  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   917  0016E8  0100               	movlb	0	; force () banked
   918  0016EA  51D6               	movf	rempliMines@j_385& (0+255),w,b
   919  0016EC  0100               	movlb	0	; force () banked
   920  0016EE  25CA               	addwf	??_rempliMines& (0+255),w,b
   921  0016F0  6ED9               	movwf	fsr2l,c
   922  0016F2  0100               	movlb	0	; force () banked
   923  0016F4  51D7               	movf	(rempliMines@j_385+1)& (0+255),w,b
   924  0016F6  0100               	movlb	0	; force () banked
   925  0016F8  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   926  0016FA  6EDA               	movwf	fsr2h,c
   927  0016FC  0E20               	movlw	32
   928  0016FE  6EDF               	movwf	indf2,c
   929  001700                     
   930                           ; BSR set to: 0
   931  001700  0100               	movlb	0	; force () banked
   932  001702  4BD6               	infsnz	rempliMines@j_385& (0+255),f,b
   933  001704  2BD7               	incf	(rempliMines@j_385+1)& (0+255),f,b
   934  001706                     
   935                           ; BSR set to: 0
   936  001706  0100               	movlb	0	; force () banked
   937  001708  BFD7               	btfsc	(rempliMines@j_385+1)& (0+255),7,b
   938  00170A  EF90  F00B         	goto	u2241
   939  00170E  51D7               	movf	(rempliMines@j_385+1)& (0+255),w,b
   940  001710  E109               	bnz	u2240
   941  001712  0E14               	movlw	20
   942  001714  5DD6               	subwf	rempliMines@j_385& (0+255),w,b
   943  001716  A0D8               	btfss	status,0,c
   944  001718  EF90  F00B         	goto	u2241
   945  00171C  EF92  F00B         	goto	u2240
   946  001720                     u2241:
   947  001720  EF5C  F00B         	goto	l2475
   948  001724                     u2240:
   949  001724                     l2481:
   950                           
   951                           ; BSR set to: 0
   952  001724  0100               	movlb	0	; force () banked
   953  001726  4BD4               	infsnz	rempliMines@i_384& (0+255),f,b
   954  001728  2BD5               	incf	(rempliMines@i_384+1)& (0+255),f,b
   955  00172A                     
   956                           ; BSR set to: 0
   957  00172A  0100               	movlb	0	; force () banked
   958  00172C  BFD5               	btfsc	(rempliMines@i_384+1)& (0+255),7,b
   959  00172E  EFA2  F00B         	goto	u2251
   960  001732  51D5               	movf	(rempliMines@i_384+1)& (0+255),w,b
   961  001734  E109               	bnz	u2250
   962  001736  0E04               	movlw	4
   963  001738  5DD4               	subwf	rempliMines@i_384& (0+255),w,b
   964  00173A  A0D8               	btfss	status,0,c
   965  00173C  EFA2  F00B         	goto	u2251
   966  001740  EFA4  F00B         	goto	u2250
   967  001744                     u2251:
   968  001744  EF46  F00B         	goto	l2469
   969  001748                     u2250:
   970  001748  EFF8  F00B         	goto	l2493
   971  00174C                     l2485:
   972                           
   973                           ; BSR set to: 0
   974                           ;main.c: 172: {;main.c: 173: x = rand()%20;
   975  00174C  ECEB  F011         	call	_rand	;wreg free
   976  001750  C0C0  F0C2         	movff	?_rand,___awmod@dividend
   977  001754  C0C1  F0C3         	movff	?_rand+1,___awmod@dividend+1
   978  001758  0E00               	movlw	0
   979  00175A  0100               	movlb	0	; force () banked
   980  00175C  6FC5               	movwf	(___awmod@divisor+1)& (0+255),b
   981  00175E  0E14               	movlw	20
   982  001760  6FC4               	movwf	___awmod@divisor& (0+255),b
   983  001762  ECE7  F00F         	call	___awmod	;wreg free
   984  001766  0100               	movlb	0	; force () banked
   985  001768  51C2               	movf	?___awmod& (0+255),w,b
   986  00176A  0100               	movlb	0	; force () banked
   987  00176C  6FD1               	movwf	rempliMines@x& (0+255),b
   988                           
   989                           ;main.c: 174: y = rand()%4;
   990  00176E  ECEB  F011         	call	_rand	;wreg free
   991  001772  0100               	movlb	0	; force () banked
   992  001774  51C0               	movf	?_rand& (0+255),w,b
   993  001776  0B03               	andlw	3
   994  001778  0100               	movlb	0	; force () banked
   995  00177A  6FD2               	movwf	rempliMines@y& (0+255),b
   996  00177C                     
   997                           ; BSR set to: 0
   998                           ;main.c: 175: if (m_tabMines[y][x]==32)
   999  00177C  0100               	movlb	0	; force () banked
  1000  00177E  51D2               	movf	rempliMines@y& (0+255),w,b
  1001  001780  0D15               	mullw	21
  1002  001782  0E60               	movlw	low _m_tabMines
  1003  001784  0100               	movlb	0	; force () banked
  1004  001786  6FCA               	movwf	??_rempliMines& (0+255),b
  1005  001788  0E00               	movlw	high _m_tabMines
  1006  00178A  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
  1007  00178C  50F3               	movf	243,w,c
  1008  00178E  27CA               	addwf	??_rempliMines& (0+255),f,b
  1009  001790  50F4               	movf	244,w,c
  1010  001792  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
  1011  001794  0100               	movlb	0	; force () banked
  1012  001796  51D1               	movf	rempliMines@x& (0+255),w,b
  1013  001798  0100               	movlb	0	; force () banked
  1014  00179A  25CA               	addwf	??_rempliMines& (0+255),w,b
  1015  00179C  6ED9               	movwf	fsr2l,c
  1016  00179E  0100               	movlb	0	; force () banked
  1017  0017A0  0E00               	movlw	0
  1018  0017A2  0100               	movlb	0	; force () banked
  1019  0017A4  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
  1020  0017A6  6EDA               	movwf	fsr2h,c
  1021  0017A8  0E20               	movlw	32
  1022  0017AA  18DE               	xorwf	postinc2,w,c
  1023  0017AC  A4D8               	btfss	status,2,c
  1024  0017AE  EFDB  F00B         	goto	u2261
  1025  0017B2  EFDD  F00B         	goto	u2260
  1026  0017B6                     u2261:
  1027  0017B6  EFF8  F00B         	goto	l2493
  1028  0017BA                     u2260:
  1029  0017BA                     
  1030                           ; BSR set to: 0
  1031                           ;main.c: 176: {;main.c: 177: m_tabMines[y][x] = 2;
  1032  0017BA  0100               	movlb	0	; force () banked
  1033  0017BC  51D2               	movf	rempliMines@y& (0+255),w,b
  1034  0017BE  0D15               	mullw	21
  1035  0017C0  0E60               	movlw	low _m_tabMines
  1036  0017C2  0100               	movlb	0	; force () banked
  1037  0017C4  6FCA               	movwf	??_rempliMines& (0+255),b
  1038  0017C6  0E00               	movlw	high _m_tabMines
  1039  0017C8  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
  1040  0017CA  50F3               	movf	243,w,c
  1041  0017CC  27CA               	addwf	??_rempliMines& (0+255),f,b
  1042  0017CE  50F4               	movf	244,w,c
  1043  0017D0  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
  1044  0017D2  0100               	movlb	0	; force () banked
  1045  0017D4  51D1               	movf	rempliMines@x& (0+255),w,b
  1046  0017D6  0100               	movlb	0	; force () banked
  1047  0017D8  25CA               	addwf	??_rempliMines& (0+255),w,b
  1048  0017DA  6ED9               	movwf	fsr2l,c
  1049  0017DC  0100               	movlb	0	; force () banked
  1050  0017DE  0E00               	movlw	0
  1051  0017E0  0100               	movlb	0	; force () banked
  1052  0017E2  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
  1053  0017E4  6EDA               	movwf	fsr2h,c
  1054  0017E6  0E02               	movlw	2
  1055  0017E8  6EDF               	movwf	indf2,c
  1056  0017EA                     
  1057                           ; BSR set to: 0
  1058                           ;main.c: 178: nbMine = nbMine + 1;
  1059  0017EA  0100               	movlb	0	; force () banked
  1060  0017EC  29D3               	incf	rempliMines@nbMine& (0+255),w,b
  1061  0017EE  6FD3               	movwf	rempliMines@nbMine& (0+255),b
  1062  0017F0                     l2493:
  1063                           
  1064                           ; BSR set to: 0
  1065  0017F0  0100               	movlb	0	; force () banked
  1066  0017F2  51D3               	movf	rempliMines@nbMine& (0+255),w,b
  1067  0017F4  0100               	movlb	0	; force () banked
  1068  0017F6  6FCA               	movwf	??_rempliMines& (0+255),b
  1069  0017F8  6BCB               	clrf	(??_rempliMines+1)& (0+255),b
  1070  0017FA  0100               	movlb	0	; force () banked
  1071  0017FC  51C8               	movf	rempliMines@nb& (0+255),w,b
  1072  0017FE  0100               	movlb	0	; force () banked
  1073  001800  19CA               	xorwf	??_rempliMines& (0+255),w,b
  1074  001802  E109               	bnz	u2271
  1075  001804  0100               	movlb	0	; force () banked
  1076  001806  51C9               	movf	(rempliMines@nb+1)& (0+255),w,b
  1077  001808  0100               	movlb	0	; force () banked
  1078  00180A  19CB               	xorwf	(??_rempliMines+1)& (0+255),w,b
  1079  00180C  A4D8               	btfss	status,2,c
  1080  00180E  EF0B  F00C         	goto	u2271
  1081  001812  EF0D  F00C         	goto	u2270
  1082  001816                     u2271:
  1083  001816  EFA6  F00B         	goto	l2485
  1084  00181A                     u2270:
  1085  00181A                     
  1086                           ; BSR set to: 0
  1087  00181A  0012               	return		;funcret
  1088  00181C                     __end_of_rempliMines:
  1089                           	opt callstack 0
  1090                           
  1091 ;; *************** function _rand *****************
  1092 ;; Defined at:
  1093 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  2   12[BANK0 ] int 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2, status,0, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1107 ;;      Params:         0       2       0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0       0       0
  1110 ;;      Totals:         0       2       0       0       0       0       0
  1111 ;;Total ram usage:        2 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:    1
  1114 ;; This function calls:
  1115 ;;		___lmul
  1116 ;; This function is called by:
  1117 ;;		_rempliMines
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text2
  1122  0023D6                     __ptext2:
  1123                           	opt callstack 0
  1124  0023D6                     _rand:
  1125                           	opt callstack 28
  1126  0023D6  C0DD  F0B4         	movff	_randx,___lmul@multiplier
  1127  0023DA  C0DE  F0B5         	movff	_randx+1,___lmul@multiplier+1
  1128  0023DE  C0DF  F0B6         	movff	_randx+2,___lmul@multiplier+2
  1129  0023E2  C0E0  F0B7         	movff	_randx+3,___lmul@multiplier+3
  1130  0023E6  0E6D               	movlw	109
  1131  0023E8  0100               	movlb	0	; () banked
  1132  0023EA  6FB8               	movwf	___lmul@multiplicand& (0+255),b
  1133  0023EC  0E4E               	movlw	78
  1134  0023EE  6FB9               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1135  0023F0  0EC6               	movlw	198
  1136  0023F2  6FBA               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1137  0023F4  0E41               	movlw	65
  1138  0023F6  6FBB               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1139  0023F8  EC1B  F011         	call	___lmul	;wreg free
  1140  0023FC  C0B4  F0DD         	movff	?___lmul,_randx
  1141  002400  C0B5  F0DE         	movff	?___lmul+1,_randx+1
  1142  002404  C0B6  F0DF         	movff	?___lmul+2,_randx+2
  1143  002408  C0B7  F0E0         	movff	?___lmul+3,_randx+3
  1144  00240C  0E39               	movlw	57
  1145  00240E  0100               	movlb	0	; () banked
  1146  002410  27DD               	addwf	_randx& (0+255),f,b
  1147  002412  0E30               	movlw	48
  1148  002414  23DE               	addwfc	(_randx+1)& (0+255),f,b
  1149  002416  0E00               	movlw	0
  1150  002418  23DF               	addwfc	(_randx+2)& (0+255),f,b
  1151  00241A  0E00               	movlw	0
  1152  00241C  23E0               	addwfc	(_randx+3)& (0+255),f,b
  1153  00241E                     
  1154                           ; BSR set to: 0
  1155  00241E  0EFF               	movlw	255
  1156  002420  15DF               	andwf	(_randx+2)& (0+255),w,b
  1157  002422  6FC0               	movwf	?_rand& (0+255),b
  1158  002424  0E7F               	movlw	127
  1159  002426  15E0               	andwf	(_randx+3)& (0+255),w,b
  1160  002428  6FC1               	movwf	(?_rand+1)& (0+255),b
  1161  00242A                     
  1162                           ; BSR set to: 0
  1163  00242A  0012               	return		;funcret
  1164  00242C                     __end_of_rand:
  1165                           	opt callstack 0
  1166                           
  1167 ;; *************** function ___lmul *****************
  1168 ;; Defined at:
  1169 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1172 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;  product         4    8[BANK0 ] unsigned long 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  4    0[BANK0 ] unsigned long 
  1177 ;; Registers used:
  1178 ;;		wreg, status,2, status,0
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1184 ;;      Params:         0       8       0       0       0       0       0
  1185 ;;      Locals:         0       4       0       0       0       0       0
  1186 ;;      Temps:          0       0       0       0       0       0       0
  1187 ;;      Totals:         0      12       0       0       0       0       0
  1188 ;;Total ram usage:       12 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; This function calls:
  1191 ;;		Nothing
  1192 ;; This function is called by:
  1193 ;;		_rand
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text3
  1198  002236                     __ptext3:
  1199                           	opt callstack 0
  1200  002236                     ___lmul:
  1201                           	opt callstack 28
  1202  002236  0E00               	movlw	0
  1203  002238  0100               	movlb	0	; () banked
  1204  00223A  6FBC               	movwf	___lmul@product& (0+255),b
  1205  00223C  0E00               	movlw	0
  1206  00223E  6FBD               	movwf	(___lmul@product+1)& (0+255),b
  1207  002240  0E00               	movlw	0
  1208  002242  6FBE               	movwf	(___lmul@product+2)& (0+255),b
  1209  002244  0E00               	movlw	0
  1210  002246  6FBF               	movwf	(___lmul@product+3)& (0+255),b
  1211  002248                     l2075:
  1212                           
  1213                           ; BSR set to: 0
  1214  002248  A1B4               	btfss	___lmul@multiplier& (0+255),0,b
  1215  00224A  EF29  F011         	goto	u1361
  1216  00224E  EF2B  F011         	goto	u1360
  1217  002252                     u1361:
  1218  002252  EF33  F011         	goto	l2079
  1219  002256                     u1360:
  1220  002256                     
  1221                           ; BSR set to: 0
  1222  002256  51B8               	movf	___lmul@multiplicand& (0+255),w,b
  1223  002258  27BC               	addwf	___lmul@product& (0+255),f,b
  1224  00225A  51B9               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1225  00225C  23BD               	addwfc	(___lmul@product+1)& (0+255),f,b
  1226  00225E  51BA               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1227  002260  23BE               	addwfc	(___lmul@product+2)& (0+255),f,b
  1228  002262  51BB               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1229  002264  23BF               	addwfc	(___lmul@product+3)& (0+255),f,b
  1230  002266                     l2079:
  1231                           
  1232                           ; BSR set to: 0
  1233  002266  90D8               	bcf	status,0,c
  1234  002268  37B8               	rlcf	___lmul@multiplicand& (0+255),f,b
  1235  00226A  37B9               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1236  00226C  37BA               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1237  00226E  37BB               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1238  002270                     
  1239                           ; BSR set to: 0
  1240  002270  90D8               	bcf	status,0,c
  1241  002272  33B7               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1242  002274  33B6               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1243  002276  33B5               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1244  002278  33B4               	rrcf	___lmul@multiplier& (0+255),f,b
  1245  00227A  51B4               	movf	___lmul@multiplier& (0+255),w,b
  1246  00227C  11B5               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1247  00227E  11B6               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1248  002280  11B7               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1249  002282  A4D8               	btfss	status,2,c
  1250  002284  EF46  F011         	goto	u1371
  1251  002288  EF48  F011         	goto	u1370
  1252  00228C                     u1371:
  1253  00228C  EF24  F011         	goto	l2075
  1254  002290                     u1370:
  1255  002290                     
  1256                           ; BSR set to: 0
  1257  002290  C0BC  F0B4         	movff	___lmul@product,?___lmul
  1258  002294  C0BD  F0B5         	movff	___lmul@product+1,?___lmul+1
  1259  002298  C0BE  F0B6         	movff	___lmul@product+2,?___lmul+2
  1260  00229C  C0BF  F0B7         	movff	___lmul@product+3,?___lmul+3
  1261  0022A0                     
  1262                           ; BSR set to: 0
  1263  0022A0  0012               	return		;funcret
  1264  0022A2                     __end_of___lmul:
  1265                           	opt callstack 0
  1266                           
  1267 ;; *************** function ___awmod *****************
  1268 ;; Defined at:
  1269 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  dividend        2   14[BANK0 ] int 
  1272 ;;  divisor         2   16[BANK0 ] int 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  sign            1   19[BANK0 ] unsigned char 
  1275 ;;  counter         1   18[BANK0 ] unsigned char 
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  2   14[BANK0 ] int 
  1278 ;; Registers used:
  1279 ;;		wreg, status,2, status,0
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1285 ;;      Params:         0       4       0       0       0       0       0
  1286 ;;      Locals:         0       2       0       0       0       0       0
  1287 ;;      Temps:          0       0       0       0       0       0       0
  1288 ;;      Totals:         0       6       0       0       0       0       0
  1289 ;;Total ram usage:        6 bytes
  1290 ;; Hardware stack levels used:    1
  1291 ;; This function calls:
  1292 ;;		Nothing
  1293 ;; This function is called by:
  1294 ;;		_rempliMines
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text4
  1299  001FCE                     __ptext4:
  1300                           	opt callstack 0
  1301  001FCE                     ___awmod:
  1302                           	opt callstack 29
  1303  001FCE  0E00               	movlw	0
  1304  001FD0  0100               	movlb	0	; () banked
  1305  001FD2  6FC7               	movwf	___awmod@sign& (0+255),b
  1306  001FD4                     
  1307                           ; BSR set to: 0
  1308  001FD4  BFC3               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1309  001FD6  EFF1  F00F         	goto	u2100
  1310  001FDA  EFEF  F00F         	goto	u2101
  1311  001FDE                     u2101:
  1312  001FDE  EFF7  F00F         	goto	l2403
  1313  001FE2                     u2100:
  1314  001FE2                     
  1315                           ; BSR set to: 0
  1316  001FE2  6DC2               	negf	___awmod@dividend& (0+255),b
  1317  001FE4  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1318  001FE6  B0D8               	btfsc	status,0,c
  1319  001FE8  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1320  001FEA                     
  1321                           ; BSR set to: 0
  1322  001FEA  0E01               	movlw	1
  1323  001FEC  6FC7               	movwf	___awmod@sign& (0+255),b
  1324  001FEE                     l2403:
  1325                           
  1326                           ; BSR set to: 0
  1327  001FEE  BFC5               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1328  001FF0  EFFE  F00F         	goto	u2110
  1329  001FF4  EFFC  F00F         	goto	u2111
  1330  001FF8                     u2111:
  1331  001FF8  EF02  F010         	goto	l2407
  1332  001FFC                     u2110:
  1333  001FFC                     
  1334                           ; BSR set to: 0
  1335  001FFC  6DC4               	negf	___awmod@divisor& (0+255),b
  1336  001FFE  1FC5               	comf	(___awmod@divisor+1)& (0+255),f,b
  1337  002000  B0D8               	btfsc	status,0,c
  1338  002002  2BC5               	incf	(___awmod@divisor+1)& (0+255),f,b
  1339  002004                     l2407:
  1340                           
  1341                           ; BSR set to: 0
  1342  002004  51C4               	movf	___awmod@divisor& (0+255),w,b
  1343  002006  11C5               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1344  002008  B4D8               	btfsc	status,2,c
  1345  00200A  EF09  F010         	goto	u2121
  1346  00200E  EF0B  F010         	goto	u2120
  1347  002012                     u2121:
  1348  002012  EF2F  F010         	goto	l2423
  1349  002016                     u2120:
  1350  002016                     
  1351                           ; BSR set to: 0
  1352  002016  0E01               	movlw	1
  1353  002018  6FC6               	movwf	___awmod@counter& (0+255),b
  1354  00201A  EF13  F010         	goto	l2413
  1355  00201E                     l2411:
  1356                           
  1357                           ; BSR set to: 0
  1358  00201E  90D8               	bcf	status,0,c
  1359  002020  37C4               	rlcf	___awmod@divisor& (0+255),f,b
  1360  002022  37C5               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1361  002024  2BC6               	incf	___awmod@counter& (0+255),f,b
  1362  002026                     l2413:
  1363                           
  1364                           ; BSR set to: 0
  1365  002026  AFC5               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1366  002028  EF18  F010         	goto	u2131
  1367  00202C  EF1A  F010         	goto	u2130
  1368  002030                     u2131:
  1369  002030  EF0F  F010         	goto	l2411
  1370  002034                     u2130:
  1371  002034                     l2415:
  1372                           
  1373                           ; BSR set to: 0
  1374  002034  51C4               	movf	___awmod@divisor& (0+255),w,b
  1375  002036  5DC2               	subwf	___awmod@dividend& (0+255),w,b
  1376  002038  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1377  00203A  59C3               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1378  00203C  A0D8               	btfss	status,0,c
  1379  00203E  EF23  F010         	goto	u2141
  1380  002042  EF25  F010         	goto	u2140
  1381  002046                     u2141:
  1382  002046  EF29  F010         	goto	l2419
  1383  00204A                     u2140:
  1384  00204A                     
  1385                           ; BSR set to: 0
  1386  00204A  51C4               	movf	___awmod@divisor& (0+255),w,b
  1387  00204C  5FC2               	subwf	___awmod@dividend& (0+255),f,b
  1388  00204E  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1389  002050  5BC3               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1390  002052                     l2419:
  1391                           
  1392                           ; BSR set to: 0
  1393  002052  90D8               	bcf	status,0,c
  1394  002054  33C5               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1395  002056  33C4               	rrcf	___awmod@divisor& (0+255),f,b
  1396  002058                     
  1397                           ; BSR set to: 0
  1398  002058  2FC6               	decfsz	___awmod@counter& (0+255),f,b
  1399  00205A  EF1A  F010         	goto	l2415
  1400  00205E                     l2423:
  1401                           
  1402                           ; BSR set to: 0
  1403  00205E  51C7               	movf	___awmod@sign& (0+255),w,b
  1404  002060  B4D8               	btfsc	status,2,c
  1405  002062  EF35  F010         	goto	u2151
  1406  002066  EF37  F010         	goto	u2150
  1407  00206A                     u2151:
  1408  00206A  EF3B  F010         	goto	l2427
  1409  00206E                     u2150:
  1410  00206E                     
  1411                           ; BSR set to: 0
  1412  00206E  6DC2               	negf	___awmod@dividend& (0+255),b
  1413  002070  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1414  002072  B0D8               	btfsc	status,0,c
  1415  002074  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1416  002076                     l2427:
  1417                           
  1418                           ; BSR set to: 0
  1419  002076  C0C2  F0C2         	movff	___awmod@dividend,?___awmod
  1420  00207A  C0C3  F0C3         	movff	___awmod@dividend+1,?___awmod+1
  1421  00207E                     
  1422                           ; BSR set to: 0
  1423  00207E  0012               	return		;funcret
  1424  002080                     __end_of___awmod:
  1425                           	opt callstack 0
  1426                           
  1427 ;; *************** function _metToucheCombien *****************
  1428 ;; Defined at:
  1429 ;;		line 192 in file "main.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;  j               2   28[BANK0 ] int 
  1434 ;;  i               2   26[BANK0 ] int 
  1435 ;;  mine            2   24[BANK0 ] int 
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1445 ;;      Params:         0       0       0       0       0       0       0
  1446 ;;      Locals:         0       6       0       0       0       0       0
  1447 ;;      Temps:          0       3       0       0       0       0       0
  1448 ;;      Totals:         0       9       0       0       0       0       0
  1449 ;;Total ram usage:        9 bytes
  1450 ;; Hardware stack levels used:    1
  1451 ;; Hardware stack levels required when called:    2
  1452 ;; This function calls:
  1453 ;;		___wmul
  1454 ;;		_calculToucheCombien
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text5
  1461  001440                     __ptext5:
  1462                           	opt callstack 0
  1463  001440                     _metToucheCombien:
  1464                           	opt callstack 28
  1465  001440                     
  1466                           ;main.c: 194: int i=0;
  1467  001440  0E00               	movlw	0
  1468  001442  0100               	movlb	0	; force () banked
  1469  001444  6FCF               	movwf	(metToucheCombien@i+1)& (0+255),b
  1470  001446  0E00               	movlw	0
  1471  001448  6FCE               	movwf	metToucheCombien@i& (0+255),b
  1472                           
  1473                           ;main.c: 195: int j=0;
  1474  00144A  0E00               	movlw	0
  1475  00144C  0100               	movlb	0	; force () banked
  1476  00144E  6FD1               	movwf	(metToucheCombien@j+1)& (0+255),b
  1477  001450  0E00               	movlw	0
  1478  001452  6FD0               	movwf	metToucheCombien@j& (0+255),b
  1479                           
  1480                           ;main.c: 196: int mine=0;
  1481  001454  0E00               	movlw	0
  1482  001456  0100               	movlb	0	; force () banked
  1483  001458  6FCD               	movwf	(metToucheCombien@mine+1)& (0+255),b
  1484  00145A  0E00               	movlw	0
  1485  00145C  6FCC               	movwf	metToucheCombien@mine& (0+255),b
  1486                           
  1487                           ;main.c: 198: for ( i=0;i<4;i++)
  1488  00145E  0E00               	movlw	0
  1489  001460  0100               	movlb	0	; force () banked
  1490  001462  6FCF               	movwf	(metToucheCombien@i+1)& (0+255),b
  1491  001464  0E00               	movlw	0
  1492  001466  6FCE               	movwf	metToucheCombien@i& (0+255),b
  1493  001468                     
  1494                           ; BSR set to: 0
  1495  001468  0100               	movlb	0	; force () banked
  1496  00146A  BFCF               	btfsc	(metToucheCombien@i+1)& (0+255),7,b
  1497  00146C  EF41  F00A         	goto	u2281
  1498  001470  51CF               	movf	(metToucheCombien@i+1)& (0+255),w,b
  1499  001472  E109               	bnz	u2280
  1500  001474  0E04               	movlw	4
  1501  001476  5DCE               	subwf	metToucheCombien@i& (0+255),w,b
  1502  001478  A0D8               	btfss	status,0,c
  1503  00147A  EF41  F00A         	goto	u2281
  1504  00147E  EF43  F00A         	goto	u2280
  1505  001482                     u2281:
  1506  001482  EF45  F00A         	goto	l2501
  1507  001486                     u2280:
  1508  001486  EF1C  F00B         	goto	l118
  1509  00148A                     l2501:
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;main.c: 199: {;main.c: 200: for (j=0;j<20;j++)
  1513  00148A  0E00               	movlw	0
  1514  00148C  0100               	movlb	0	; force () banked
  1515  00148E  6FD1               	movwf	(metToucheCombien@j+1)& (0+255),b
  1516  001490  0E00               	movlw	0
  1517  001492  6FD0               	movwf	metToucheCombien@j& (0+255),b
  1518  001494                     
  1519                           ; BSR set to: 0
  1520  001494  0100               	movlb	0	; force () banked
  1521  001496  BFD1               	btfsc	(metToucheCombien@j+1)& (0+255),7,b
  1522  001498  EF57  F00A         	goto	u2291
  1523  00149C  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1524  00149E  E109               	bnz	u2290
  1525  0014A0  0E14               	movlw	20
  1526  0014A2  5DD0               	subwf	metToucheCombien@j& (0+255),w,b
  1527  0014A4  A0D8               	btfss	status,0,c
  1528  0014A6  EF57  F00A         	goto	u2291
  1529  0014AA  EF59  F00A         	goto	u2290
  1530  0014AE                     u2291:
  1531  0014AE  EF5B  F00A         	goto	l2507
  1532  0014B2                     u2290:
  1533  0014B2  EF0A  F00B         	goto	l2523
  1534  0014B6                     l2507:
  1535                           
  1536                           ; BSR set to: 0
  1537                           ;main.c: 201: {;main.c: 202: if(m_tabMines[i][j]!= 2)
  1538  0014B6  C0CE  F0B4         	movff	metToucheCombien@i,___wmul@multiplier
  1539  0014BA  C0CF  F0B5         	movff	metToucheCombien@i+1,___wmul@multiplier+1
  1540  0014BE  0E00               	movlw	0
  1541  0014C0  0100               	movlb	0	; force () banked
  1542  0014C2  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1543  0014C4  0E15               	movlw	21
  1544  0014C6  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1545  0014C8  ECC5  F012         	call	___wmul	;wreg free
  1546  0014CC  0E60               	movlw	low _m_tabMines
  1547  0014CE  0100               	movlb	0	; force () banked
  1548  0014D0  6FC9               	movwf	??_metToucheCombien& (0+255),b
  1549  0014D2  0E00               	movlw	high _m_tabMines
  1550  0014D4  6FCA               	movwf	(??_metToucheCombien+1)& (0+255),b
  1551  0014D6  0100               	movlb	0	; force () banked
  1552  0014D8  51B4               	movf	?___wmul& (0+255),w,b
  1553  0014DA  0100               	movlb	0	; force () banked
  1554  0014DC  27C9               	addwf	??_metToucheCombien& (0+255),f,b
  1555  0014DE  0100               	movlb	0	; force () banked
  1556  0014E0  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1557  0014E2  0100               	movlb	0	; force () banked
  1558  0014E4  23CA               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1559  0014E6  0100               	movlb	0	; force () banked
  1560  0014E8  51D0               	movf	metToucheCombien@j& (0+255),w,b
  1561  0014EA  0100               	movlb	0	; force () banked
  1562  0014EC  25C9               	addwf	??_metToucheCombien& (0+255),w,b
  1563  0014EE  6ED9               	movwf	fsr2l,c
  1564  0014F0  0100               	movlb	0	; force () banked
  1565  0014F2  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1566  0014F4  0100               	movlb	0	; force () banked
  1567  0014F6  21CA               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1568  0014F8  6EDA               	movwf	fsr2h,c
  1569  0014FA  0E02               	movlw	2
  1570  0014FC  18DE               	xorwf	postinc2,w,c
  1571  0014FE  B4D8               	btfsc	status,2,c
  1572  001500  EF84  F00A         	goto	u2301
  1573  001504  EF86  F00A         	goto	u2300
  1574  001508                     u2301:
  1575  001508  EFF8  F00A         	goto	l2519
  1576  00150C                     u2300:
  1577  00150C                     
  1578                           ; BSR set to: 0
  1579                           ;main.c: 203: {;main.c: 204: mine = calculToucheCombien(i,j);
  1580  00150C  C0CE  F0BA         	movff	metToucheCombien@i,calculToucheCombien@ligne
  1581  001510  C0CF  F0BB         	movff	metToucheCombien@i+1,calculToucheCombien@ligne+1
  1582  001514  C0D0  F0BC         	movff	metToucheCombien@j,calculToucheCombien@colonne
  1583  001518  C0D1  F0BD         	movff	metToucheCombien@j+1,calculToucheCombien@colonne+1
  1584  00151C  EC0D  F003         	call	_calculToucheCombien	;wreg free
  1585  001520  0100               	movlb	0	; force () banked
  1586  001522  6FC9               	movwf	??_metToucheCombien& (0+255),b
  1587  001524  51C9               	movf	??_metToucheCombien& (0+255),w,b
  1588  001526  0100               	movlb	0	; force () banked
  1589  001528  6FCC               	movwf	metToucheCombien@mine& (0+255),b
  1590  00152A  6BCD               	clrf	(metToucheCombien@mine+1)& (0+255),b
  1591  00152C                     
  1592                           ; BSR set to: 0
  1593                           ;main.c: 205: if (mine==0)
  1594  00152C  0100               	movlb	0	; force () banked
  1595  00152E  51CC               	movf	metToucheCombien@mine& (0+255),w,b
  1596  001530  11CD               	iorwf	(metToucheCombien@mine+1)& (0+255),w,b
  1597  001532  A4D8               	btfss	status,2,c
  1598  001534  EF9E  F00A         	goto	u2311
  1599  001538  EFA0  F00A         	goto	u2310
  1600  00153C                     u2311:
  1601  00153C  EFC4  F00A         	goto	l2515
  1602  001540                     u2310:
  1603  001540                     
  1604                           ; BSR set to: 0
  1605                           ;main.c: 206: {;main.c: 207: m_tabMines[i][j]=32;
  1606  001540  C0CE  F0B4         	movff	metToucheCombien@i,___wmul@multiplier
  1607  001544  C0CF  F0B5         	movff	metToucheCombien@i+1,___wmul@multiplier+1
  1608  001548  0E00               	movlw	0
  1609  00154A  0100               	movlb	0	; force () banked
  1610  00154C  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1611  00154E  0E15               	movlw	21
  1612  001550  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1613  001552  ECC5  F012         	call	___wmul	;wreg free
  1614  001556  0E60               	movlw	low _m_tabMines
  1615  001558  0100               	movlb	0	; force () banked
  1616  00155A  6FC9               	movwf	??_metToucheCombien& (0+255),b
  1617  00155C  0E00               	movlw	high _m_tabMines
  1618  00155E  6FCA               	movwf	(??_metToucheCombien+1)& (0+255),b
  1619  001560  0100               	movlb	0	; force () banked
  1620  001562  51B4               	movf	?___wmul& (0+255),w,b
  1621  001564  0100               	movlb	0	; force () banked
  1622  001566  27C9               	addwf	??_metToucheCombien& (0+255),f,b
  1623  001568  0100               	movlb	0	; force () banked
  1624  00156A  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1625  00156C  0100               	movlb	0	; force () banked
  1626  00156E  23CA               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1627  001570  0100               	movlb	0	; force () banked
  1628  001572  51D0               	movf	metToucheCombien@j& (0+255),w,b
  1629  001574  0100               	movlb	0	; force () banked
  1630  001576  25C9               	addwf	??_metToucheCombien& (0+255),w,b
  1631  001578  6ED9               	movwf	fsr2l,c
  1632  00157A  0100               	movlb	0	; force () banked
  1633  00157C  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1634  00157E  0100               	movlb	0	; force () banked
  1635  001580  21CA               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1636  001582  6EDA               	movwf	fsr2h,c
  1637  001584  0E20               	movlw	32
  1638  001586  6EDF               	movwf	indf2,c
  1639  001588                     l2515:
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;main.c: 208: };main.c: 209: if (mine>0)
  1643  001588  0100               	movlb	0	; force () banked
  1644  00158A  BFCD               	btfsc	(metToucheCombien@mine+1)& (0+255),7,b
  1645  00158C  EFD0  F00A         	goto	u2321
  1646  001590  51CD               	movf	(metToucheCombien@mine+1)& (0+255),w,b
  1647  001592  E108               	bnz	u2320
  1648  001594  05CC               	decf	metToucheCombien@mine& (0+255),w,b
  1649  001596  A0D8               	btfss	status,0,c
  1650  001598  EFD0  F00A         	goto	u2321
  1651  00159C  EFD2  F00A         	goto	u2320
  1652  0015A0                     u2321:
  1653  0015A0  EFF8  F00A         	goto	l2519
  1654  0015A4                     u2320:
  1655  0015A4                     
  1656                           ; BSR set to: 0
  1657                           ;main.c: 210: {;main.c: 211: m_tabMines[i][j]= (mine+48);
  1658  0015A4  C0CE  F0B4         	movff	metToucheCombien@i,___wmul@multiplier
  1659  0015A8  C0CF  F0B5         	movff	metToucheCombien@i+1,___wmul@multiplier+1
  1660  0015AC  0E00               	movlw	0
  1661  0015AE  0100               	movlb	0	; force () banked
  1662  0015B0  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1663  0015B2  0E15               	movlw	21
  1664  0015B4  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1665  0015B6  ECC5  F012         	call	___wmul	;wreg free
  1666  0015BA  0E60               	movlw	low _m_tabMines
  1667  0015BC  0100               	movlb	0	; force () banked
  1668  0015BE  6FC9               	movwf	??_metToucheCombien& (0+255),b
  1669  0015C0  0E00               	movlw	high _m_tabMines
  1670  0015C2  6FCA               	movwf	(??_metToucheCombien+1)& (0+255),b
  1671  0015C4  0100               	movlb	0	; force () banked
  1672  0015C6  51B4               	movf	?___wmul& (0+255),w,b
  1673  0015C8  0100               	movlb	0	; force () banked
  1674  0015CA  27C9               	addwf	??_metToucheCombien& (0+255),f,b
  1675  0015CC  0100               	movlb	0	; force () banked
  1676  0015CE  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1677  0015D0  0100               	movlb	0	; force () banked
  1678  0015D2  23CA               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1679  0015D4  0100               	movlb	0	; force () banked
  1680  0015D6  51D0               	movf	metToucheCombien@j& (0+255),w,b
  1681  0015D8  0100               	movlb	0	; force () banked
  1682  0015DA  25C9               	addwf	??_metToucheCombien& (0+255),w,b
  1683  0015DC  6ED9               	movwf	fsr2l,c
  1684  0015DE  0100               	movlb	0	; force () banked
  1685  0015E0  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1686  0015E2  0100               	movlb	0	; force () banked
  1687  0015E4  21CA               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1688  0015E6  6EDA               	movwf	fsr2h,c
  1689  0015E8  0100               	movlb	0	; force () banked
  1690  0015EA  51CC               	movf	metToucheCombien@mine& (0+255),w,b
  1691  0015EC  0F30               	addlw	48
  1692  0015EE  6EDF               	movwf	indf2,c
  1693  0015F0                     l2519:
  1694                           
  1695                           ; BSR set to: 0
  1696  0015F0  0100               	movlb	0	; force () banked
  1697  0015F2  4BD0               	infsnz	metToucheCombien@j& (0+255),f,b
  1698  0015F4  2BD1               	incf	(metToucheCombien@j+1)& (0+255),f,b
  1699  0015F6                     
  1700                           ; BSR set to: 0
  1701  0015F6  0100               	movlb	0	; force () banked
  1702  0015F8  BFD1               	btfsc	(metToucheCombien@j+1)& (0+255),7,b
  1703  0015FA  EF08  F00B         	goto	u2331
  1704  0015FE  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1705  001600  E109               	bnz	u2330
  1706  001602  0E14               	movlw	20
  1707  001604  5DD0               	subwf	metToucheCombien@j& (0+255),w,b
  1708  001606  A0D8               	btfss	status,0,c
  1709  001608  EF08  F00B         	goto	u2331
  1710  00160C  EF0A  F00B         	goto	u2330
  1711  001610                     u2331:
  1712  001610  EF5B  F00A         	goto	l2507
  1713  001614                     u2330:
  1714  001614                     l2523:
  1715                           
  1716                           ; BSR set to: 0
  1717  001614  0100               	movlb	0	; force () banked
  1718  001616  4BCE               	infsnz	metToucheCombien@i& (0+255),f,b
  1719  001618  2BCF               	incf	(metToucheCombien@i+1)& (0+255),f,b
  1720  00161A                     
  1721                           ; BSR set to: 0
  1722  00161A  0100               	movlb	0	; force () banked
  1723  00161C  BFCF               	btfsc	(metToucheCombien@i+1)& (0+255),7,b
  1724  00161E  EF1A  F00B         	goto	u2341
  1725  001622  51CF               	movf	(metToucheCombien@i+1)& (0+255),w,b
  1726  001624  E109               	bnz	u2340
  1727  001626  0E04               	movlw	4
  1728  001628  5DCE               	subwf	metToucheCombien@i& (0+255),w,b
  1729  00162A  A0D8               	btfss	status,0,c
  1730  00162C  EF1A  F00B         	goto	u2341
  1731  001630  EF1C  F00B         	goto	u2340
  1732  001634                     u2341:
  1733  001634  EF45  F00A         	goto	l2501
  1734  001638                     u2340:
  1735  001638                     l118:
  1736                           
  1737                           ; BSR set to: 0
  1738  001638  0012               	return		;funcret
  1739  00163A                     __end_of_metToucheCombien:
  1740                           	opt callstack 0
  1741                           
  1742 ;; *************** function _calculToucheCombien *****************
  1743 ;; Defined at:
  1744 ;;		line 224 in file "main.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  ligne           2    6[BANK0 ] int 
  1747 ;;  colonne         2    8[BANK0 ] int 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  i               2   19[BANK0 ] int 
  1750 ;;  j               2   17[BANK0 ] int 
  1751 ;;  nb_mine         2   15[BANK0 ] int 
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      unsigned char 
  1754 ;; Registers used:
  1755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1761 ;;      Params:         0       4       0       0       0       0       0
  1762 ;;      Locals:         0       6       0       0       0       0       0
  1763 ;;      Temps:          0       5       0       0       0       0       0
  1764 ;;      Totals:         0      15       0       0       0       0       0
  1765 ;;Total ram usage:       15 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    1
  1768 ;; This function calls:
  1769 ;;		___wmul
  1770 ;; This function is called by:
  1771 ;;		_metToucheCombien
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text6
  1776  00061A                     __ptext6:
  1777                           	opt callstack 0
  1778  00061A                     _calculToucheCombien:
  1779                           	opt callstack 28
  1780  00061A                     
  1781                           ;main.c: 226: int nb_mine =0;
  1782  00061A  0E00               	movlw	0
  1783  00061C  0100               	movlb	0	; force () banked
  1784  00061E  6FC4               	movwf	(calculToucheCombien@nb_mine+1)& (0+255),b
  1785  000620  0E00               	movlw	0
  1786  000622  6FC3               	movwf	calculToucheCombien@nb_mine& (0+255),b
  1787                           
  1788                           ;main.c: 227: int i=0;
  1789  000624  0E00               	movlw	0
  1790  000626  0100               	movlb	0	; force () banked
  1791  000628  6FC8               	movwf	(calculToucheCombien@i+1)& (0+255),b
  1792  00062A  0E00               	movlw	0
  1793  00062C  6FC7               	movwf	calculToucheCombien@i& (0+255),b
  1794                           
  1795                           ;main.c: 228: int j=0;
  1796  00062E  0E00               	movlw	0
  1797  000630  0100               	movlb	0	; force () banked
  1798  000632  6FC6               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1799  000634  0E00               	movlw	0
  1800  000636  6FC5               	movwf	calculToucheCombien@j& (0+255),b
  1801  000638                     
  1802                           ; BSR set to: 0
  1803                           ;main.c: 229: if ((ligne<3)&&(ligne>0)&&(colonne>0)&&(colonne<20))
  1804  000638  0100               	movlb	0	; force () banked
  1805  00063A  BFBB               	btfsc	(calculToucheCombien@ligne+1)& (0+255),7,b
  1806  00063C  EF2B  F003         	goto	u1410
  1807  000640  51BB               	movf	(calculToucheCombien@ligne+1)& (0+255),w,b
  1808  000642  E107               	bnz	u1411
  1809  000644  0E03               	movlw	3
  1810  000646  5DBA               	subwf	calculToucheCombien@ligne& (0+255),w,b
  1811  000648  B0D8               	btfsc	status,0,c
  1812  00064A  EF29  F003         	goto	u1411
  1813  00064E  EF2B  F003         	goto	u1410
  1814  000652                     u1411:
  1815  000652  EFEB  F003         	goto	l2129
  1816  000656                     u1410:
  1817  000656                     
  1818                           ; BSR set to: 0
  1819  000656  0100               	movlb	0	; force () banked
  1820  000658  BFBB               	btfsc	(calculToucheCombien@ligne+1)& (0+255),7,b
  1821  00065A  EF37  F003         	goto	u1421
  1822  00065E  51BB               	movf	(calculToucheCombien@ligne+1)& (0+255),w,b
  1823  000660  E108               	bnz	u1420
  1824  000662  05BA               	decf	calculToucheCombien@ligne& (0+255),w,b
  1825  000664  A0D8               	btfss	status,0,c
  1826  000666  EF37  F003         	goto	u1421
  1827  00066A  EF39  F003         	goto	u1420
  1828  00066E                     u1421:
  1829  00066E  EFEB  F003         	goto	l2129
  1830  000672                     u1420:
  1831  000672                     
  1832                           ; BSR set to: 0
  1833  000672  0100               	movlb	0	; force () banked
  1834  000674  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  1835  000676  EF45  F003         	goto	u1431
  1836  00067A  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1837  00067C  E108               	bnz	u1430
  1838  00067E  05BC               	decf	calculToucheCombien@colonne& (0+255),w,b
  1839  000680  A0D8               	btfss	status,0,c
  1840  000682  EF45  F003         	goto	u1431
  1841  000686  EF47  F003         	goto	u1430
  1842  00068A                     u1431:
  1843  00068A  EFEB  F003         	goto	l2129
  1844  00068E                     u1430:
  1845  00068E                     
  1846                           ; BSR set to: 0
  1847  00068E  0100               	movlb	0	; force () banked
  1848  000690  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  1849  000692  EF56  F003         	goto	u1440
  1850  000696  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1851  000698  E107               	bnz	u1441
  1852  00069A  0E14               	movlw	20
  1853  00069C  5DBC               	subwf	calculToucheCombien@colonne& (0+255),w,b
  1854  00069E  B0D8               	btfsc	status,0,c
  1855  0006A0  EF54  F003         	goto	u1441
  1856  0006A4  EF56  F003         	goto	u1440
  1857  0006A8                     u1441:
  1858  0006A8  EFEB  F003         	goto	l2129
  1859  0006AC                     u1440:
  1860  0006AC                     
  1861                           ; BSR set to: 0
  1862                           ;main.c: 230: {;main.c: 231: for(i=-1;i<2;i++)
  1863  0006AC  0100               	movlb	0	; force () banked
  1864  0006AE  69C7               	setf	calculToucheCombien@i& (0+255),b
  1865  0006B0  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  1866  0006B2                     
  1867                           ; BSR set to: 0
  1868  0006B2  0100               	movlb	0	; force () banked
  1869  0006B4  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  1870  0006B6  EF66  F003         	goto	u1451
  1871  0006BA  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  1872  0006BC  E109               	bnz	u1450
  1873  0006BE  0E02               	movlw	2
  1874  0006C0  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  1875  0006C2  A0D8               	btfss	status,0,c
  1876  0006C4  EF66  F003         	goto	u1451
  1877  0006C8  EF68  F003         	goto	u1450
  1878  0006CC                     u1451:
  1879  0006CC  EF6A  F003         	goto	l122
  1880  0006D0                     u1450:
  1881  0006D0  EFEB  F003         	goto	l2129
  1882  0006D4                     l122:
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;main.c: 232: {;main.c: 233: for(j=-1;j<=1;j++)
  1886  0006D4  0100               	movlb	0	; force () banked
  1887  0006D6  69C5               	setf	calculToucheCombien@j& (0+255),b
  1888  0006D8  69C6               	setf	(calculToucheCombien@j+1)& (0+255),b
  1889  0006DA                     
  1890                           ; BSR set to: 0
  1891  0006DA  0100               	movlb	0	; force () banked
  1892  0006DC  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1893  0006DE  EF7A  F003         	goto	u1461
  1894  0006E2  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1895  0006E4  E109               	bnz	u1460
  1896  0006E6  0E02               	movlw	2
  1897  0006E8  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  1898  0006EA  A0D8               	btfss	status,0,c
  1899  0006EC  EF7A  F003         	goto	u1461
  1900  0006F0  EF7C  F003         	goto	u1460
  1901  0006F4                     u1461:
  1902  0006F4  EF7E  F003         	goto	l2119
  1903  0006F8                     u1460:
  1904  0006F8  EFD9  F003         	goto	l2125
  1905  0006FC                     l2119:
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;main.c: 234: {;main.c: 235: if (m_tabMines[ligne+(i)][colonne+j]== 2)
  1909  0006FC  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  1910  000700  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  1911  000704  0E00               	movlw	0
  1912  000706  0100               	movlb	0	; force () banked
  1913  000708  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1914  00070A  0E15               	movlw	21
  1915  00070C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1916  00070E  ECC5  F012         	call	___wmul	;wreg free
  1917  000712  0E60               	movlw	low _m_tabMines
  1918  000714  0100               	movlb	0	; force () banked
  1919  000716  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1920  000718  0E00               	movlw	high _m_tabMines
  1921  00071A  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1922  00071C  0100               	movlb	0	; force () banked
  1923  00071E  51B4               	movf	?___wmul& (0+255),w,b
  1924  000720  0100               	movlb	0	; force () banked
  1925  000722  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  1926  000724  0100               	movlb	0	; force () banked
  1927  000726  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1928  000728  0100               	movlb	0	; force () banked
  1929  00072A  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1930  00072C  C0C7  F0B4         	movff	calculToucheCombien@i,___wmul@multiplier
  1931  000730  C0C8  F0B5         	movff	calculToucheCombien@i+1,___wmul@multiplier+1
  1932  000734  0E00               	movlw	0
  1933  000736  0100               	movlb	0	; force () banked
  1934  000738  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1935  00073A  0E15               	movlw	21
  1936  00073C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1937  00073E  ECC5  F012         	call	___wmul	;wreg free
  1938  000742  0100               	movlb	0	; force () banked
  1939  000744  51B4               	movf	?___wmul& (0+255),w,b
  1940  000746  0100               	movlb	0	; force () banked
  1941  000748  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  1942  00074A  0100               	movlb	0	; force () banked
  1943  00074C  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1944  00074E  0100               	movlb	0	; force () banked
  1945  000750  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1946  000752  0100               	movlb	0	; force () banked
  1947  000754  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  1948  000756  0100               	movlb	0	; force () banked
  1949  000758  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  1950  00075A  0100               	movlb	0	; force () banked
  1951  00075C  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1952  00075E  0100               	movlb	0	; force () banked
  1953  000760  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1954  000762  0100               	movlb	0	; force () banked
  1955  000764  51C5               	movf	calculToucheCombien@j& (0+255),w,b
  1956  000766  0100               	movlb	0	; force () banked
  1957  000768  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  1958  00076A  6ED9               	movwf	fsr2l,c
  1959  00076C  0100               	movlb	0	; force () banked
  1960  00076E  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1961  000770  0100               	movlb	0	; force () banked
  1962  000772  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  1963  000774  6EDA               	movwf	fsr2h,c
  1964  000776  0E02               	movlw	2
  1965  000778  18DE               	xorwf	postinc2,w,c
  1966  00077A  A4D8               	btfss	status,2,c
  1967  00077C  EFC2  F003         	goto	u1471
  1968  000780  EFC4  F003         	goto	u1470
  1969  000784                     u1471:
  1970  000784  EFC7  F003         	goto	l126
  1971  000788                     u1470:
  1972  000788                     
  1973                           ; BSR set to: 0
  1974                           ;main.c: 236: {;main.c: 237: nb_mine++;
  1975  000788  0100               	movlb	0	; force () banked
  1976  00078A  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  1977  00078C  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  1978  00078E                     l126:
  1979                           
  1980                           ; BSR set to: 0
  1981  00078E  0100               	movlb	0	; force () banked
  1982  000790  4BC5               	infsnz	calculToucheCombien@j& (0+255),f,b
  1983  000792  2BC6               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  1984  000794                     
  1985                           ; BSR set to: 0
  1986  000794  0100               	movlb	0	; force () banked
  1987  000796  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1988  000798  EFD7  F003         	goto	u1481
  1989  00079C  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1990  00079E  E109               	bnz	u1480
  1991  0007A0  0E02               	movlw	2
  1992  0007A2  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  1993  0007A4  A0D8               	btfss	status,0,c
  1994  0007A6  EFD7  F003         	goto	u1481
  1995  0007AA  EFD9  F003         	goto	u1480
  1996  0007AE                     u1481:
  1997  0007AE  EF7E  F003         	goto	l2119
  1998  0007B2                     u1480:
  1999  0007B2                     l2125:
  2000                           
  2001                           ; BSR set to: 0
  2002  0007B2  0100               	movlb	0	; force () banked
  2003  0007B4  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2004  0007B6  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2005  0007B8                     
  2006                           ; BSR set to: 0
  2007  0007B8  0100               	movlb	0	; force () banked
  2008  0007BA  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2009  0007BC  EFE9  F003         	goto	u1491
  2010  0007C0  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2011  0007C2  E109               	bnz	u1490
  2012  0007C4  0E02               	movlw	2
  2013  0007C6  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  2014  0007C8  A0D8               	btfss	status,0,c
  2015  0007CA  EFE9  F003         	goto	u1491
  2016  0007CE  EFEB  F003         	goto	u1490
  2017  0007D2                     u1491:
  2018  0007D2  EF6A  F003         	goto	l122
  2019  0007D6                     u1490:
  2020  0007D6                     l2129:
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;main.c: 238: };main.c: 239: };main.c: 240: };main.c: 241: };main.c: 242: if((ligne==0)&
      +                          &(colonne==0))
  2024  0007D6  0100               	movlb	0	; force () banked
  2025  0007D8  51BA               	movf	calculToucheCombien@ligne& (0+255),w,b
  2026  0007DA  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2027  0007DC  A4D8               	btfss	status,2,c
  2028  0007DE  EFF3  F003         	goto	u1501
  2029  0007E2  EFF5  F003         	goto	u1500
  2030  0007E6                     u1501:
  2031  0007E6  EF93  F004         	goto	l2149
  2032  0007EA                     u1500:
  2033  0007EA                     
  2034                           ; BSR set to: 0
  2035  0007EA  0100               	movlb	0	; force () banked
  2036  0007EC  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2037  0007EE  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2038  0007F0  A4D8               	btfss	status,2,c
  2039  0007F2  EFFD  F003         	goto	u1511
  2040  0007F6  EFFF  F003         	goto	u1510
  2041  0007FA                     u1511:
  2042  0007FA  EF93  F004         	goto	l2149
  2043  0007FE                     u1510:
  2044  0007FE                     
  2045                           ; BSR set to: 0
  2046                           ;main.c: 243: {;main.c: 244: if(m_tabMines[ligne][colonne+1]==2)
  2047  0007FE  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2048  000802  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2049  000806  0E00               	movlw	0
  2050  000808  0100               	movlb	0	; force () banked
  2051  00080A  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2052  00080C  0E15               	movlw	21
  2053  00080E  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2054  000810  ECC5  F012         	call	___wmul	;wreg free
  2055  000814  0E60               	movlw	low _m_tabMines
  2056  000816  0100               	movlb	0	; force () banked
  2057  000818  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2058  00081A  0E00               	movlw	high _m_tabMines
  2059  00081C  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2060  00081E  0E01               	movlw	1
  2061  000820  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2062  000822  0E00               	movlw	0
  2063  000824  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2064  000826  0100               	movlb	0	; force () banked
  2065  000828  51B4               	movf	?___wmul& (0+255),w,b
  2066  00082A  0100               	movlb	0	; force () banked
  2067  00082C  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2068  00082E  0100               	movlb	0	; force () banked
  2069  000830  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2070  000832  0100               	movlb	0	; force () banked
  2071  000834  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2072  000836  0100               	movlb	0	; force () banked
  2073  000838  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2074  00083A  0100               	movlb	0	; force () banked
  2075  00083C  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2076  00083E  6ED9               	movwf	fsr2l,c
  2077  000840  0100               	movlb	0	; force () banked
  2078  000842  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2079  000844  0100               	movlb	0	; force () banked
  2080  000846  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2081  000848  6EDA               	movwf	fsr2h,c
  2082  00084A  0E02               	movlw	2
  2083  00084C  18DE               	xorwf	postinc2,w,c
  2084  00084E  A4D8               	btfss	status,2,c
  2085  000850  EF2C  F004         	goto	u1521
  2086  000854  EF2E  F004         	goto	u1520
  2087  000858                     u1521:
  2088  000858  EF31  F004         	goto	l2137
  2089  00085C                     u1520:
  2090  00085C                     
  2091                           ; BSR set to: 0
  2092                           ;main.c: 245: {;main.c: 246: nb_mine++;
  2093  00085C  0100               	movlb	0	; force () banked
  2094  00085E  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2095  000860  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2096  000862                     l2137:
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;main.c: 247: };main.c: 248: for(j=0;j<=1;j++)
  2100  000862  0E00               	movlw	0
  2101  000864  0100               	movlb	0	; force () banked
  2102  000866  6FC6               	movwf	(calculToucheCombien@j+1)& (0+255),b
  2103  000868  0E00               	movlw	0
  2104  00086A  6FC5               	movwf	calculToucheCombien@j& (0+255),b
  2105  00086C                     
  2106                           ; BSR set to: 0
  2107  00086C  0100               	movlb	0	; force () banked
  2108  00086E  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  2109  000870  EF43  F004         	goto	u1531
  2110  000874  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2111  000876  E109               	bnz	u1530
  2112  000878  0E02               	movlw	2
  2113  00087A  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  2114  00087C  A0D8               	btfss	status,0,c
  2115  00087E  EF43  F004         	goto	u1531
  2116  000882  EF45  F004         	goto	u1530
  2117  000886                     u1531:
  2118  000886  EF47  F004         	goto	l2143
  2119  00088A                     u1530:
  2120  00088A  EF93  F004         	goto	l2149
  2121  00088E                     l2143:
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;main.c: 249: {;main.c: 250: if(m_tabMines[ligne+1][colonne+j]==2)
  2125  00088E  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2126  000892  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2127  000896  0E00               	movlw	0
  2128  000898  0100               	movlb	0	; force () banked
  2129  00089A  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2130  00089C  0E15               	movlw	21
  2131  00089E  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2132  0008A0  ECC5  F012         	call	___wmul	;wreg free
  2133  0008A4  0E60               	movlw	low _m_tabMines
  2134  0008A6  0100               	movlb	0	; force () banked
  2135  0008A8  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2136  0008AA  0E00               	movlw	high _m_tabMines
  2137  0008AC  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2138  0008AE  0E15               	movlw	21
  2139  0008B0  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2140  0008B2  0E00               	movlw	0
  2141  0008B4  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2142  0008B6  0100               	movlb	0	; force () banked
  2143  0008B8  51B4               	movf	?___wmul& (0+255),w,b
  2144  0008BA  0100               	movlb	0	; force () banked
  2145  0008BC  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2146  0008BE  0100               	movlb	0	; force () banked
  2147  0008C0  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2148  0008C2  0100               	movlb	0	; force () banked
  2149  0008C4  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2150  0008C6  0100               	movlb	0	; force () banked
  2151  0008C8  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2152  0008CA  0100               	movlb	0	; force () banked
  2153  0008CC  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2154  0008CE  0100               	movlb	0	; force () banked
  2155  0008D0  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2156  0008D2  0100               	movlb	0	; force () banked
  2157  0008D4  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2158  0008D6  0100               	movlb	0	; force () banked
  2159  0008D8  51C5               	movf	calculToucheCombien@j& (0+255),w,b
  2160  0008DA  0100               	movlb	0	; force () banked
  2161  0008DC  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2162  0008DE  6ED9               	movwf	fsr2l,c
  2163  0008E0  0100               	movlb	0	; force () banked
  2164  0008E2  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2165  0008E4  0100               	movlb	0	; force () banked
  2166  0008E6  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2167  0008E8  6EDA               	movwf	fsr2h,c
  2168  0008EA  0E02               	movlw	2
  2169  0008EC  18DE               	xorwf	postinc2,w,c
  2170  0008EE  A4D8               	btfss	status,2,c
  2171  0008F0  EF7C  F004         	goto	u1541
  2172  0008F4  EF7E  F004         	goto	u1540
  2173  0008F8                     u1541:
  2174  0008F8  EF81  F004         	goto	l131
  2175  0008FC                     u1540:
  2176  0008FC                     
  2177                           ; BSR set to: 0
  2178                           ;main.c: 251: {;main.c: 252: nb_mine++;
  2179  0008FC  0100               	movlb	0	; force () banked
  2180  0008FE  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2181  000900  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2182  000902                     l131:
  2183                           
  2184                           ; BSR set to: 0
  2185  000902  0100               	movlb	0	; force () banked
  2186  000904  4BC5               	infsnz	calculToucheCombien@j& (0+255),f,b
  2187  000906  2BC6               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  2188  000908                     
  2189                           ; BSR set to: 0
  2190  000908  0100               	movlb	0	; force () banked
  2191  00090A  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  2192  00090C  EF91  F004         	goto	u1551
  2193  000910  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2194  000912  E109               	bnz	u1550
  2195  000914  0E02               	movlw	2
  2196  000916  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  2197  000918  A0D8               	btfss	status,0,c
  2198  00091A  EF91  F004         	goto	u1551
  2199  00091E  EF93  F004         	goto	u1550
  2200  000922                     u1551:
  2201  000922  EF47  F004         	goto	l2143
  2202  000926                     u1550:
  2203  000926                     l2149:
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;main.c: 253: };main.c: 254: };main.c: 255: };main.c: 256: if((ligne==0)&&(colonne==20))
  2207  000926  0100               	movlb	0	; force () banked
  2208  000928  51BA               	movf	calculToucheCombien@ligne& (0+255),w,b
  2209  00092A  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2210  00092C  A4D8               	btfss	status,2,c
  2211  00092E  EF9B  F004         	goto	u1561
  2212  000932  EF9D  F004         	goto	u1560
  2213  000936                     u1561:
  2214  000936  EF3C  F005         	goto	l2169
  2215  00093A                     u1560:
  2216  00093A                     
  2217                           ; BSR set to: 0
  2218  00093A  0E14               	movlw	20
  2219  00093C  0100               	movlb	0	; force () banked
  2220  00093E  19BC               	xorwf	calculToucheCombien@colonne& (0+255),w,b
  2221  000940  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2222  000942  A4D8               	btfss	status,2,c
  2223  000944  EFA6  F004         	goto	u1571
  2224  000948  EFA8  F004         	goto	u1570
  2225  00094C                     u1571:
  2226  00094C  EF3C  F005         	goto	l2169
  2227  000950                     u1570:
  2228  000950                     
  2229                           ; BSR set to: 0
  2230                           ;main.c: 257: {;main.c: 258: if(m_tabMines[ligne][colonne-1]==2)
  2231  000950  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2232  000954  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2233  000958  0E00               	movlw	0
  2234  00095A  0100               	movlb	0	; force () banked
  2235  00095C  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2236  00095E  0E15               	movlw	21
  2237  000960  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2238  000962  ECC5  F012         	call	___wmul	;wreg free
  2239  000966  0EFF               	movlw	255
  2240  000968  0100               	movlb	0	; force () banked
  2241  00096A  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2242  00096C  0EFF               	movlw	255
  2243  00096E  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2244  000970  0E60               	movlw	low _m_tabMines
  2245  000972  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2246  000974  0E00               	movlw	high _m_tabMines
  2247  000976  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2248  000978  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  2249  00097A  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2250  00097C  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2251  00097E  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2252  000980  0100               	movlb	0	; force () banked
  2253  000982  51B4               	movf	?___wmul& (0+255),w,b
  2254  000984  0100               	movlb	0	; force () banked
  2255  000986  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2256  000988  0100               	movlb	0	; force () banked
  2257  00098A  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2258  00098C  0100               	movlb	0	; force () banked
  2259  00098E  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2260  000990  0100               	movlb	0	; force () banked
  2261  000992  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2262  000994  0100               	movlb	0	; force () banked
  2263  000996  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2264  000998  6ED9               	movwf	fsr2l,c
  2265  00099A  0100               	movlb	0	; force () banked
  2266  00099C  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2267  00099E  0100               	movlb	0	; force () banked
  2268  0009A0  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2269  0009A2  6EDA               	movwf	fsr2h,c
  2270  0009A4  0E02               	movlw	2
  2271  0009A6  18DE               	xorwf	postinc2,w,c
  2272  0009A8  A4D8               	btfss	status,2,c
  2273  0009AA  EFD9  F004         	goto	u1581
  2274  0009AE  EFDB  F004         	goto	u1580
  2275  0009B2                     u1581:
  2276  0009B2  EFDE  F004         	goto	l2157
  2277  0009B6                     u1580:
  2278  0009B6                     
  2279                           ; BSR set to: 0
  2280                           ;main.c: 259: {;main.c: 260: nb_mine++;
  2281  0009B6  0100               	movlb	0	; force () banked
  2282  0009B8  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2283  0009BA  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2284  0009BC                     l2157:
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;main.c: 261: };main.c: 262: for(i=-1;i<1;i++)
  2288  0009BC  0100               	movlb	0	; force () banked
  2289  0009BE  69C7               	setf	calculToucheCombien@i& (0+255),b
  2290  0009C0  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  2291  0009C2                     
  2292                           ; BSR set to: 0
  2293  0009C2  0100               	movlb	0	; force () banked
  2294  0009C4  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2295  0009C6  EFED  F004         	goto	u1591
  2296  0009CA  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2297  0009CC  E108               	bnz	u1590
  2298  0009CE  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  2299  0009D0  A0D8               	btfss	status,0,c
  2300  0009D2  EFED  F004         	goto	u1591
  2301  0009D6  EFEF  F004         	goto	u1590
  2302  0009DA                     u1591:
  2303  0009DA  EFF1  F004         	goto	l2163
  2304  0009DE                     u1590:
  2305  0009DE  EF3C  F005         	goto	l2169
  2306  0009E2                     l2163:
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;main.c: 263: {;main.c: 264: if(m_tabMines[ligne+1][colonne+i]==2)
  2310  0009E2  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2311  0009E6  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2312  0009EA  0E00               	movlw	0
  2313  0009EC  0100               	movlb	0	; force () banked
  2314  0009EE  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2315  0009F0  0E15               	movlw	21
  2316  0009F2  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2317  0009F4  ECC5  F012         	call	___wmul	;wreg free
  2318  0009F8  0E60               	movlw	low _m_tabMines
  2319  0009FA  0100               	movlb	0	; force () banked
  2320  0009FC  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2321  0009FE  0E00               	movlw	high _m_tabMines
  2322  000A00  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2323  000A02  0E15               	movlw	21
  2324  000A04  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2325  000A06  0E00               	movlw	0
  2326  000A08  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2327  000A0A  0100               	movlb	0	; force () banked
  2328  000A0C  51B4               	movf	?___wmul& (0+255),w,b
  2329  000A0E  0100               	movlb	0	; force () banked
  2330  000A10  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2331  000A12  0100               	movlb	0	; force () banked
  2332  000A14  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2333  000A16  0100               	movlb	0	; force () banked
  2334  000A18  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2335  000A1A  0100               	movlb	0	; force () banked
  2336  000A1C  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2337  000A1E  0100               	movlb	0	; force () banked
  2338  000A20  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2339  000A22  0100               	movlb	0	; force () banked
  2340  000A24  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2341  000A26  0100               	movlb	0	; force () banked
  2342  000A28  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2343  000A2A  0100               	movlb	0	; force () banked
  2344  000A2C  51C7               	movf	calculToucheCombien@i& (0+255),w,b
  2345  000A2E  0100               	movlb	0	; force () banked
  2346  000A30  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2347  000A32  6ED9               	movwf	fsr2l,c
  2348  000A34  0100               	movlb	0	; force () banked
  2349  000A36  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2350  000A38  0100               	movlb	0	; force () banked
  2351  000A3A  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2352  000A3C  6EDA               	movwf	fsr2h,c
  2353  000A3E  0E02               	movlw	2
  2354  000A40  18DE               	xorwf	postinc2,w,c
  2355  000A42  A4D8               	btfss	status,2,c
  2356  000A44  EF26  F005         	goto	u1601
  2357  000A48  EF28  F005         	goto	u1600
  2358  000A4C                     u1601:
  2359  000A4C  EF2B  F005         	goto	l136
  2360  000A50                     u1600:
  2361  000A50                     
  2362                           ; BSR set to: 0
  2363                           ;main.c: 265: {;main.c: 266: nb_mine++;
  2364  000A50  0100               	movlb	0	; force () banked
  2365  000A52  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2366  000A54  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2367  000A56                     l136:
  2368                           
  2369                           ; BSR set to: 0
  2370  000A56  0100               	movlb	0	; force () banked
  2371  000A58  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2372  000A5A  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2373  000A5C                     
  2374                           ; BSR set to: 0
  2375  000A5C  0100               	movlb	0	; force () banked
  2376  000A5E  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2377  000A60  EF3A  F005         	goto	u1611
  2378  000A64  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2379  000A66  E108               	bnz	u1610
  2380  000A68  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  2381  000A6A  A0D8               	btfss	status,0,c
  2382  000A6C  EF3A  F005         	goto	u1611
  2383  000A70  EF3C  F005         	goto	u1610
  2384  000A74                     u1611:
  2385  000A74  EFF1  F004         	goto	l2163
  2386  000A78                     u1610:
  2387  000A78                     l2169:
  2388                           
  2389                           ; BSR set to: 0
  2390                           ;main.c: 267: };main.c: 268: };main.c: 269: };main.c: 270: if((ligne==0)&&(colonne<20)&&
      +                          (colonne>0))
  2391  000A78  0100               	movlb	0	; force () banked
  2392  000A7A  51BA               	movf	calculToucheCombien@ligne& (0+255),w,b
  2393  000A7C  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2394  000A7E  A4D8               	btfss	status,2,c
  2395  000A80  EF44  F005         	goto	u1621
  2396  000A84  EF46  F005         	goto	u1620
  2397  000A88                     u1621:
  2398  000A88  EF58  F006         	goto	l2207
  2399  000A8C                     u1620:
  2400  000A8C                     
  2401                           ; BSR set to: 0
  2402  000A8C  0100               	movlb	0	; force () banked
  2403  000A8E  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  2404  000A90  EF55  F005         	goto	u1630
  2405  000A94  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2406  000A96  E107               	bnz	u1631
  2407  000A98  0E14               	movlw	20
  2408  000A9A  5DBC               	subwf	calculToucheCombien@colonne& (0+255),w,b
  2409  000A9C  B0D8               	btfsc	status,0,c
  2410  000A9E  EF53  F005         	goto	u1631
  2411  000AA2  EF55  F005         	goto	u1630
  2412  000AA6                     u1631:
  2413  000AA6  EF58  F006         	goto	l2207
  2414  000AAA                     u1630:
  2415  000AAA                     
  2416                           ; BSR set to: 0
  2417  000AAA  0100               	movlb	0	; force () banked
  2418  000AAC  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  2419  000AAE  EF61  F005         	goto	u1641
  2420  000AB2  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2421  000AB4  E108               	bnz	u1640
  2422  000AB6  05BC               	decf	calculToucheCombien@colonne& (0+255),w,b
  2423  000AB8  A0D8               	btfss	status,0,c
  2424  000ABA  EF61  F005         	goto	u1641
  2425  000ABE  EF63  F005         	goto	u1640
  2426  000AC2                     u1641:
  2427  000AC2  EF58  F006         	goto	l2207
  2428  000AC6                     u1640:
  2429  000AC6                     
  2430                           ; BSR set to: 0
  2431                           ;main.c: 271: {;main.c: 272: for(i=-1;i<=1;i++)
  2432  000AC6  0100               	movlb	0	; force () banked
  2433  000AC8  69C7               	setf	calculToucheCombien@i& (0+255),b
  2434  000ACA  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  2435  000ACC                     
  2436                           ; BSR set to: 0
  2437  000ACC  0100               	movlb	0	; force () banked
  2438  000ACE  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2439  000AD0  EF73  F005         	goto	u1651
  2440  000AD4  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2441  000AD6  E109               	bnz	u1650
  2442  000AD8  0E02               	movlw	2
  2443  000ADA  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  2444  000ADC  A0D8               	btfss	status,0,c
  2445  000ADE  EF73  F005         	goto	u1651
  2446  000AE2  EF75  F005         	goto	u1650
  2447  000AE6                     u1651:
  2448  000AE6  EF77  F005         	goto	l2181
  2449  000AEA                     u1650:
  2450  000AEA  EFC1  F005         	goto	l2187
  2451  000AEE                     l2181:
  2452                           
  2453                           ; BSR set to: 0
  2454                           ;main.c: 273: {;main.c: 274: if(m_tabMines[ligne][colonne+(i)]==2)
  2455  000AEE  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2456  000AF2  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2457  000AF6  0E00               	movlw	0
  2458  000AF8  0100               	movlb	0	; force () banked
  2459  000AFA  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2460  000AFC  0E15               	movlw	21
  2461  000AFE  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2462  000B00  ECC5  F012         	call	___wmul	;wreg free
  2463  000B04  0E60               	movlw	low _m_tabMines
  2464  000B06  0100               	movlb	0	; force () banked
  2465  000B08  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2466  000B0A  0E00               	movlw	high _m_tabMines
  2467  000B0C  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2468  000B0E  0100               	movlb	0	; force () banked
  2469  000B10  51B4               	movf	?___wmul& (0+255),w,b
  2470  000B12  0100               	movlb	0	; force () banked
  2471  000B14  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2472  000B16  0100               	movlb	0	; force () banked
  2473  000B18  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2474  000B1A  0100               	movlb	0	; force () banked
  2475  000B1C  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2476  000B1E  0100               	movlb	0	; force () banked
  2477  000B20  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2478  000B22  0100               	movlb	0	; force () banked
  2479  000B24  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2480  000B26  0100               	movlb	0	; force () banked
  2481  000B28  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2482  000B2A  0100               	movlb	0	; force () banked
  2483  000B2C  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2484  000B2E  0100               	movlb	0	; force () banked
  2485  000B30  51C7               	movf	calculToucheCombien@i& (0+255),w,b
  2486  000B32  0100               	movlb	0	; force () banked
  2487  000B34  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2488  000B36  6ED9               	movwf	fsr2l,c
  2489  000B38  0100               	movlb	0	; force () banked
  2490  000B3A  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2491  000B3C  0100               	movlb	0	; force () banked
  2492  000B3E  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2493  000B40  6EDA               	movwf	fsr2h,c
  2494  000B42  0E02               	movlw	2
  2495  000B44  18DE               	xorwf	postinc2,w,c
  2496  000B46  A4D8               	btfss	status,2,c
  2497  000B48  EFA8  F005         	goto	u1661
  2498  000B4C  EFAA  F005         	goto	u1660
  2499  000B50                     u1661:
  2500  000B50  EFAD  F005         	goto	l140
  2501  000B54                     u1660:
  2502  000B54                     
  2503                           ; BSR set to: 0
  2504                           ;main.c: 275: {;main.c: 276: nb_mine ++;
  2505  000B54  0100               	movlb	0	; force () banked
  2506  000B56  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2507  000B58  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2508  000B5A                     l140:
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;main.c: 277: };main.c: 278: i++;
  2512  000B5A  0100               	movlb	0	; force () banked
  2513  000B5C  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2514  000B5E  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2515  000B60  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2516  000B62  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2517  000B64                     
  2518                           ; BSR set to: 0
  2519  000B64  0100               	movlb	0	; force () banked
  2520  000B66  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2521  000B68  EFBF  F005         	goto	u1671
  2522  000B6C  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2523  000B6E  E109               	bnz	u1670
  2524  000B70  0E02               	movlw	2
  2525  000B72  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  2526  000B74  A0D8               	btfss	status,0,c
  2527  000B76  EFBF  F005         	goto	u1671
  2528  000B7A  EFC1  F005         	goto	u1670
  2529  000B7E                     u1671:
  2530  000B7E  EF77  F005         	goto	l2181
  2531  000B82                     u1670:
  2532  000B82                     l2187:
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;main.c: 279: };main.c: 280: for(i=1;i<=1;i++)
  2536  000B82  0E00               	movlw	0
  2537  000B84  0100               	movlb	0	; force () banked
  2538  000B86  6FC8               	movwf	(calculToucheCombien@i+1)& (0+255),b
  2539  000B88  0E01               	movlw	1
  2540  000B8A  6FC7               	movwf	calculToucheCombien@i& (0+255),b
  2541  000B8C                     
  2542                           ; BSR set to: 0
  2543  000B8C  0100               	movlb	0	; force () banked
  2544  000B8E  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2545  000B90  EFD3  F005         	goto	u1681
  2546  000B94  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2547  000B96  E109               	bnz	u1680
  2548  000B98  0E02               	movlw	2
  2549  000B9A  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  2550  000B9C  A0D8               	btfss	status,0,c
  2551  000B9E  EFD3  F005         	goto	u1681
  2552  000BA2  EFD5  F005         	goto	u1680
  2553  000BA6                     u1681:
  2554  000BA6  EFD7  F005         	goto	l141
  2555  000BAA                     u1680:
  2556  000BAA  EF58  F006         	goto	l2207
  2557  000BAE                     l141:
  2558                           
  2559                           ; BSR set to: 0
  2560                           ;main.c: 281: {;main.c: 282: for(j=-1;j<=1;j++)
  2561  000BAE  0100               	movlb	0	; force () banked
  2562  000BB0  69C5               	setf	calculToucheCombien@j& (0+255),b
  2563  000BB2  69C6               	setf	(calculToucheCombien@j+1)& (0+255),b
  2564  000BB4                     
  2565                           ; BSR set to: 0
  2566  000BB4  0100               	movlb	0	; force () banked
  2567  000BB6  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  2568  000BB8  EFE7  F005         	goto	u1691
  2569  000BBC  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2570  000BBE  E109               	bnz	u1690
  2571  000BC0  0E02               	movlw	2
  2572  000BC2  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  2573  000BC4  A0D8               	btfss	status,0,c
  2574  000BC6  EFE7  F005         	goto	u1691
  2575  000BCA  EFE9  F005         	goto	u1690
  2576  000BCE                     u1691:
  2577  000BCE  EFEB  F005         	goto	l2197
  2578  000BD2                     u1690:
  2579  000BD2  EF46  F006         	goto	l2203
  2580  000BD6                     l2197:
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;main.c: 283: {;main.c: 284: if(m_tabMines[ligne+i][colonne+j]==2)
  2584  000BD6  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2585  000BDA  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2586  000BDE  0E00               	movlw	0
  2587  000BE0  0100               	movlb	0	; force () banked
  2588  000BE2  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2589  000BE4  0E15               	movlw	21
  2590  000BE6  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2591  000BE8  ECC5  F012         	call	___wmul	;wreg free
  2592  000BEC  0E60               	movlw	low _m_tabMines
  2593  000BEE  0100               	movlb	0	; force () banked
  2594  000BF0  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2595  000BF2  0E00               	movlw	high _m_tabMines
  2596  000BF4  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2597  000BF6  0100               	movlb	0	; force () banked
  2598  000BF8  51B4               	movf	?___wmul& (0+255),w,b
  2599  000BFA  0100               	movlb	0	; force () banked
  2600  000BFC  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2601  000BFE  0100               	movlb	0	; force () banked
  2602  000C00  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2603  000C02  0100               	movlb	0	; force () banked
  2604  000C04  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2605  000C06  C0C7  F0B4         	movff	calculToucheCombien@i,___wmul@multiplier
  2606  000C0A  C0C8  F0B5         	movff	calculToucheCombien@i+1,___wmul@multiplier+1
  2607  000C0E  0E00               	movlw	0
  2608  000C10  0100               	movlb	0	; force () banked
  2609  000C12  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2610  000C14  0E15               	movlw	21
  2611  000C16  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2612  000C18  ECC5  F012         	call	___wmul	;wreg free
  2613  000C1C  0100               	movlb	0	; force () banked
  2614  000C1E  51B4               	movf	?___wmul& (0+255),w,b
  2615  000C20  0100               	movlb	0	; force () banked
  2616  000C22  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2617  000C24  0100               	movlb	0	; force () banked
  2618  000C26  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2619  000C28  0100               	movlb	0	; force () banked
  2620  000C2A  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2621  000C2C  0100               	movlb	0	; force () banked
  2622  000C2E  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2623  000C30  0100               	movlb	0	; force () banked
  2624  000C32  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2625  000C34  0100               	movlb	0	; force () banked
  2626  000C36  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2627  000C38  0100               	movlb	0	; force () banked
  2628  000C3A  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2629  000C3C  0100               	movlb	0	; force () banked
  2630  000C3E  51C5               	movf	calculToucheCombien@j& (0+255),w,b
  2631  000C40  0100               	movlb	0	; force () banked
  2632  000C42  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2633  000C44  6ED9               	movwf	fsr2l,c
  2634  000C46  0100               	movlb	0	; force () banked
  2635  000C48  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2636  000C4A  0100               	movlb	0	; force () banked
  2637  000C4C  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2638  000C4E  6EDA               	movwf	fsr2h,c
  2639  000C50  0E02               	movlw	2
  2640  000C52  18DE               	xorwf	postinc2,w,c
  2641  000C54  A4D8               	btfss	status,2,c
  2642  000C56  EF2F  F006         	goto	u1701
  2643  000C5A  EF31  F006         	goto	u1700
  2644  000C5E                     u1701:
  2645  000C5E  EF34  F006         	goto	l145
  2646  000C62                     u1700:
  2647  000C62                     
  2648                           ; BSR set to: 0
  2649                           ;main.c: 285: {;main.c: 286: nb_mine ++;
  2650  000C62  0100               	movlb	0	; force () banked
  2651  000C64  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2652  000C66  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2653  000C68                     l145:
  2654                           
  2655                           ; BSR set to: 0
  2656  000C68  0100               	movlb	0	; force () banked
  2657  000C6A  4BC5               	infsnz	calculToucheCombien@j& (0+255),f,b
  2658  000C6C  2BC6               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  2659  000C6E                     
  2660                           ; BSR set to: 0
  2661  000C6E  0100               	movlb	0	; force () banked
  2662  000C70  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  2663  000C72  EF44  F006         	goto	u1711
  2664  000C76  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2665  000C78  E109               	bnz	u1710
  2666  000C7A  0E02               	movlw	2
  2667  000C7C  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  2668  000C7E  A0D8               	btfss	status,0,c
  2669  000C80  EF44  F006         	goto	u1711
  2670  000C84  EF46  F006         	goto	u1710
  2671  000C88                     u1711:
  2672  000C88  EFEB  F005         	goto	l2197
  2673  000C8C                     u1710:
  2674  000C8C                     l2203:
  2675                           
  2676                           ; BSR set to: 0
  2677  000C8C  0100               	movlb	0	; force () banked
  2678  000C8E  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2679  000C90  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2680  000C92                     
  2681                           ; BSR set to: 0
  2682  000C92  0100               	movlb	0	; force () banked
  2683  000C94  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2684  000C96  EF56  F006         	goto	u1721
  2685  000C9A  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2686  000C9C  E109               	bnz	u1720
  2687  000C9E  0E02               	movlw	2
  2688  000CA0  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  2689  000CA2  A0D8               	btfss	status,0,c
  2690  000CA4  EF56  F006         	goto	u1721
  2691  000CA8  EF58  F006         	goto	u1720
  2692  000CAC                     u1721:
  2693  000CAC  EFD7  F005         	goto	l141
  2694  000CB0                     u1720:
  2695  000CB0                     l2207:
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;main.c: 287: };main.c: 288: };main.c: 289: };main.c: 290: };main.c: 291: if((ligne==3)&
      +                          &(colonne==0))
  2699  000CB0  0E03               	movlw	3
  2700  000CB2  0100               	movlb	0	; force () banked
  2701  000CB4  19BA               	xorwf	calculToucheCombien@ligne& (0+255),w,b
  2702  000CB6  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2703  000CB8  A4D8               	btfss	status,2,c
  2704  000CBA  EF61  F006         	goto	u1731
  2705  000CBE  EF63  F006         	goto	u1730
  2706  000CC2                     u1731:
  2707  000CC2  EF0C  F007         	goto	l2227
  2708  000CC6                     u1730:
  2709  000CC6                     
  2710                           ; BSR set to: 0
  2711  000CC6  0100               	movlb	0	; force () banked
  2712  000CC8  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2713  000CCA  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2714  000CCC  A4D8               	btfss	status,2,c
  2715  000CCE  EF6B  F006         	goto	u1741
  2716  000CD2  EF6D  F006         	goto	u1740
  2717  000CD6                     u1741:
  2718  000CD6  EF0C  F007         	goto	l2227
  2719  000CDA                     u1740:
  2720  000CDA                     
  2721                           ; BSR set to: 0
  2722                           ;main.c: 292: {;main.c: 293: if(m_tabMines[ligne-1][colonne]==2)
  2723  000CDA  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2724  000CDE  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2725  000CE2  0E00               	movlw	0
  2726  000CE4  0100               	movlb	0	; force () banked
  2727  000CE6  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2728  000CE8  0E15               	movlw	21
  2729  000CEA  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2730  000CEC  ECC5  F012         	call	___wmul	;wreg free
  2731  000CF0  0EEB               	movlw	235
  2732  000CF2  0100               	movlb	0	; force () banked
  2733  000CF4  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2734  000CF6  0EFF               	movlw	255
  2735  000CF8  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2736  000CFA  0E60               	movlw	low _m_tabMines
  2737  000CFC  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2738  000CFE  0E00               	movlw	high _m_tabMines
  2739  000D00  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2740  000D02  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  2741  000D04  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2742  000D06  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2743  000D08  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2744  000D0A  0100               	movlb	0	; force () banked
  2745  000D0C  51B4               	movf	?___wmul& (0+255),w,b
  2746  000D0E  0100               	movlb	0	; force () banked
  2747  000D10  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2748  000D12  0100               	movlb	0	; force () banked
  2749  000D14  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2750  000D16  0100               	movlb	0	; force () banked
  2751  000D18  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2752  000D1A  0100               	movlb	0	; force () banked
  2753  000D1C  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2754  000D1E  0100               	movlb	0	; force () banked
  2755  000D20  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2756  000D22  6ED9               	movwf	fsr2l,c
  2757  000D24  0100               	movlb	0	; force () banked
  2758  000D26  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2759  000D28  0100               	movlb	0	; force () banked
  2760  000D2A  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2761  000D2C  6EDA               	movwf	fsr2h,c
  2762  000D2E  0E02               	movlw	2
  2763  000D30  18DE               	xorwf	postinc2,w,c
  2764  000D32  A4D8               	btfss	status,2,c
  2765  000D34  EF9E  F006         	goto	u1751
  2766  000D38  EFA0  F006         	goto	u1750
  2767  000D3C                     u1751:
  2768  000D3C  EFA3  F006         	goto	l2215
  2769  000D40                     u1750:
  2770  000D40                     
  2771                           ; BSR set to: 0
  2772                           ;main.c: 294: {;main.c: 295: nb_mine++;
  2773  000D40  0100               	movlb	0	; force () banked
  2774  000D42  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2775  000D44  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2776  000D46                     l2215:
  2777                           
  2778                           ; BSR set to: 0
  2779                           ;main.c: 296: };main.c: 297: for(i=-1;i<=0;i++)
  2780  000D46  0100               	movlb	0	; force () banked
  2781  000D48  69C7               	setf	calculToucheCombien@i& (0+255),b
  2782  000D4A  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  2783  000D4C                     
  2784                           ; BSR set to: 0
  2785  000D4C  0100               	movlb	0	; force () banked
  2786  000D4E  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2787  000D50  EFB2  F006         	goto	u1761
  2788  000D54  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2789  000D56  E108               	bnz	u1760
  2790  000D58  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  2791  000D5A  A0D8               	btfss	status,0,c
  2792  000D5C  EFB2  F006         	goto	u1761
  2793  000D60  EFB4  F006         	goto	u1760
  2794  000D64                     u1761:
  2795  000D64  EFB6  F006         	goto	l2221
  2796  000D68                     u1760:
  2797  000D68  EF0C  F007         	goto	l2227
  2798  000D6C                     l2221:
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;main.c: 298: {;main.c: 299: if(m_tabMines[ligne+i][colonne+1]==2)
  2802  000D6C  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2803  000D70  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2804  000D74  0E00               	movlw	0
  2805  000D76  0100               	movlb	0	; force () banked
  2806  000D78  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2807  000D7A  0E15               	movlw	21
  2808  000D7C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2809  000D7E  ECC5  F012         	call	___wmul	;wreg free
  2810  000D82  0E60               	movlw	low _m_tabMines
  2811  000D84  0100               	movlb	0	; force () banked
  2812  000D86  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2813  000D88  0E00               	movlw	high _m_tabMines
  2814  000D8A  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2815  000D8C  0E01               	movlw	1
  2816  000D8E  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2817  000D90  0E00               	movlw	0
  2818  000D92  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2819  000D94  0100               	movlb	0	; force () banked
  2820  000D96  51B4               	movf	?___wmul& (0+255),w,b
  2821  000D98  0100               	movlb	0	; force () banked
  2822  000D9A  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2823  000D9C  0100               	movlb	0	; force () banked
  2824  000D9E  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2825  000DA0  0100               	movlb	0	; force () banked
  2826  000DA2  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2827  000DA4  C0C7  F0B4         	movff	calculToucheCombien@i,___wmul@multiplier
  2828  000DA8  C0C8  F0B5         	movff	calculToucheCombien@i+1,___wmul@multiplier+1
  2829  000DAC  0E00               	movlw	0
  2830  000DAE  0100               	movlb	0	; force () banked
  2831  000DB0  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2832  000DB2  0E15               	movlw	21
  2833  000DB4  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2834  000DB6  ECC5  F012         	call	___wmul	;wreg free
  2835  000DBA  0100               	movlb	0	; force () banked
  2836  000DBC  51B4               	movf	?___wmul& (0+255),w,b
  2837  000DBE  0100               	movlb	0	; force () banked
  2838  000DC0  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2839  000DC2  0100               	movlb	0	; force () banked
  2840  000DC4  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2841  000DC6  0100               	movlb	0	; force () banked
  2842  000DC8  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2843  000DCA  0100               	movlb	0	; force () banked
  2844  000DCC  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2845  000DCE  0100               	movlb	0	; force () banked
  2846  000DD0  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2847  000DD2  6ED9               	movwf	fsr2l,c
  2848  000DD4  0100               	movlb	0	; force () banked
  2849  000DD6  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2850  000DD8  0100               	movlb	0	; force () banked
  2851  000DDA  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2852  000DDC  6EDA               	movwf	fsr2h,c
  2853  000DDE  0E02               	movlw	2
  2854  000DE0  18DE               	xorwf	postinc2,w,c
  2855  000DE2  A4D8               	btfss	status,2,c
  2856  000DE4  EFF6  F006         	goto	u1771
  2857  000DE8  EFF8  F006         	goto	u1770
  2858  000DEC                     u1771:
  2859  000DEC  EFFB  F006         	goto	l150
  2860  000DF0                     u1770:
  2861  000DF0                     
  2862                           ; BSR set to: 0
  2863                           ;main.c: 300: {;main.c: 301: nb_mine++;
  2864  000DF0  0100               	movlb	0	; force () banked
  2865  000DF2  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2866  000DF4  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2867  000DF6                     l150:
  2868                           
  2869                           ; BSR set to: 0
  2870  000DF6  0100               	movlb	0	; force () banked
  2871  000DF8  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2872  000DFA  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2873  000DFC                     
  2874                           ; BSR set to: 0
  2875  000DFC  0100               	movlb	0	; force () banked
  2876  000DFE  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2877  000E00  EF0A  F007         	goto	u1781
  2878  000E04  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2879  000E06  E108               	bnz	u1780
  2880  000E08  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  2881  000E0A  A0D8               	btfss	status,0,c
  2882  000E0C  EF0A  F007         	goto	u1781
  2883  000E10  EF0C  F007         	goto	u1780
  2884  000E14                     u1781:
  2885  000E14  EFB6  F006         	goto	l2221
  2886  000E18                     u1780:
  2887  000E18                     l2227:
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;main.c: 302: };main.c: 303: };main.c: 304: };main.c: 305: if((ligne==3)&&(colonne==20))
  2891  000E18  0E03               	movlw	3
  2892  000E1A  0100               	movlb	0	; force () banked
  2893  000E1C  19BA               	xorwf	calculToucheCombien@ligne& (0+255),w,b
  2894  000E1E  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2895  000E20  A4D8               	btfss	status,2,c
  2896  000E22  EF15  F007         	goto	u1791
  2897  000E26  EF17  F007         	goto	u1790
  2898  000E2A                     u1791:
  2899  000E2A  EFBA  F007         	goto	l2247
  2900  000E2E                     u1790:
  2901  000E2E                     
  2902                           ; BSR set to: 0
  2903  000E2E  0E14               	movlw	20
  2904  000E30  0100               	movlb	0	; force () banked
  2905  000E32  19BC               	xorwf	calculToucheCombien@colonne& (0+255),w,b
  2906  000E34  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2907  000E36  A4D8               	btfss	status,2,c
  2908  000E38  EF20  F007         	goto	u1801
  2909  000E3C  EF22  F007         	goto	u1800
  2910  000E40                     u1801:
  2911  000E40  EFBA  F007         	goto	l2247
  2912  000E44                     u1800:
  2913  000E44                     
  2914                           ; BSR set to: 0
  2915                           ;main.c: 306: {;main.c: 307: for(i=-1;i<1;i++)
  2916  000E44  0100               	movlb	0	; force () banked
  2917  000E46  69C7               	setf	calculToucheCombien@i& (0+255),b
  2918  000E48  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  2919  000E4A                     
  2920                           ; BSR set to: 0
  2921  000E4A  0100               	movlb	0	; force () banked
  2922  000E4C  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2923  000E4E  EF31  F007         	goto	u1811
  2924  000E52  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2925  000E54  E108               	bnz	u1810
  2926  000E56  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  2927  000E58  A0D8               	btfss	status,0,c
  2928  000E5A  EF31  F007         	goto	u1811
  2929  000E5E  EF33  F007         	goto	u1810
  2930  000E62                     u1811:
  2931  000E62  EF35  F007         	goto	l2237
  2932  000E66                     u1810:
  2933  000E66  EF84  F007         	goto	l2243
  2934  000E6A                     l2237:
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;main.c: 308: {;main.c: 309: if(m_tabMines[ligne-1][colonne+i]== 2)
  2938  000E6A  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2939  000E6E  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2940  000E72  0E00               	movlw	0
  2941  000E74  0100               	movlb	0	; force () banked
  2942  000E76  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2943  000E78  0E15               	movlw	21
  2944  000E7A  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2945  000E7C  ECC5  F012         	call	___wmul	;wreg free
  2946  000E80  0EEB               	movlw	235
  2947  000E82  0100               	movlb	0	; force () banked
  2948  000E84  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2949  000E86  0EFF               	movlw	255
  2950  000E88  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2951  000E8A  0E60               	movlw	low _m_tabMines
  2952  000E8C  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2953  000E8E  0E00               	movlw	high _m_tabMines
  2954  000E90  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2955  000E92  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  2956  000E94  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2957  000E96  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2958  000E98  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2959  000E9A  0100               	movlb	0	; force () banked
  2960  000E9C  51B4               	movf	?___wmul& (0+255),w,b
  2961  000E9E  0100               	movlb	0	; force () banked
  2962  000EA0  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2963  000EA2  0100               	movlb	0	; force () banked
  2964  000EA4  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2965  000EA6  0100               	movlb	0	; force () banked
  2966  000EA8  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2967  000EAA  0100               	movlb	0	; force () banked
  2968  000EAC  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2969  000EAE  0100               	movlb	0	; force () banked
  2970  000EB0  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2971  000EB2  0100               	movlb	0	; force () banked
  2972  000EB4  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2973  000EB6  0100               	movlb	0	; force () banked
  2974  000EB8  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2975  000EBA  0100               	movlb	0	; force () banked
  2976  000EBC  51C7               	movf	calculToucheCombien@i& (0+255),w,b
  2977  000EBE  0100               	movlb	0	; force () banked
  2978  000EC0  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2979  000EC2  6ED9               	movwf	fsr2l,c
  2980  000EC4  0100               	movlb	0	; force () banked
  2981  000EC6  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2982  000EC8  0100               	movlb	0	; force () banked
  2983  000ECA  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2984  000ECC  6EDA               	movwf	fsr2h,c
  2985  000ECE  0E02               	movlw	2
  2986  000ED0  18DE               	xorwf	postinc2,w,c
  2987  000ED2  A4D8               	btfss	status,2,c
  2988  000ED4  EF6E  F007         	goto	u1821
  2989  000ED8  EF70  F007         	goto	u1820
  2990  000EDC                     u1821:
  2991  000EDC  EF73  F007         	goto	l154
  2992  000EE0                     u1820:
  2993  000EE0                     
  2994                           ; BSR set to: 0
  2995                           ;main.c: 310: {;main.c: 311: nb_mine++;
  2996  000EE0  0100               	movlb	0	; force () banked
  2997  000EE2  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2998  000EE4  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2999  000EE6                     l154:
  3000                           
  3001                           ; BSR set to: 0
  3002  000EE6  0100               	movlb	0	; force () banked
  3003  000EE8  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  3004  000EEA  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  3005  000EEC                     
  3006                           ; BSR set to: 0
  3007  000EEC  0100               	movlb	0	; force () banked
  3008  000EEE  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  3009  000EF0  EF82  F007         	goto	u1831
  3010  000EF4  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  3011  000EF6  E108               	bnz	u1830
  3012  000EF8  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  3013  000EFA  A0D8               	btfss	status,0,c
  3014  000EFC  EF82  F007         	goto	u1831
  3015  000F00  EF84  F007         	goto	u1830
  3016  000F04                     u1831:
  3017  000F04  EF35  F007         	goto	l2237
  3018  000F08                     u1830:
  3019  000F08                     l2243:
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;main.c: 312: };main.c: 313: };main.c: 314: if(m_tabMines[ligne][colonne-1]==2)
  3023  000F08  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  3024  000F0C  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  3025  000F10  0E00               	movlw	0
  3026  000F12  0100               	movlb	0	; force () banked
  3027  000F14  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3028  000F16  0E15               	movlw	21
  3029  000F18  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3030  000F1A  ECC5  F012         	call	___wmul	;wreg free
  3031  000F1E  0EFF               	movlw	255
  3032  000F20  0100               	movlb	0	; force () banked
  3033  000F22  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  3034  000F24  0EFF               	movlw	255
  3035  000F26  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  3036  000F28  0E60               	movlw	low _m_tabMines
  3037  000F2A  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  3038  000F2C  0E00               	movlw	high _m_tabMines
  3039  000F2E  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  3040  000F30  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  3041  000F32  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  3042  000F34  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  3043  000F36  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  3044  000F38  0100               	movlb	0	; force () banked
  3045  000F3A  51B4               	movf	?___wmul& (0+255),w,b
  3046  000F3C  0100               	movlb	0	; force () banked
  3047  000F3E  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  3048  000F40  0100               	movlb	0	; force () banked
  3049  000F42  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3050  000F44  0100               	movlb	0	; force () banked
  3051  000F46  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  3052  000F48  0100               	movlb	0	; force () banked
  3053  000F4A  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  3054  000F4C  0100               	movlb	0	; force () banked
  3055  000F4E  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  3056  000F50  6ED9               	movwf	fsr2l,c
  3057  000F52  0100               	movlb	0	; force () banked
  3058  000F54  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3059  000F56  0100               	movlb	0	; force () banked
  3060  000F58  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  3061  000F5A  6EDA               	movwf	fsr2h,c
  3062  000F5C  0E02               	movlw	2
  3063  000F5E  18DE               	xorwf	postinc2,w,c
  3064  000F60  A4D8               	btfss	status,2,c
  3065  000F62  EFB5  F007         	goto	u1841
  3066  000F66  EFB7  F007         	goto	u1840
  3067  000F6A                     u1841:
  3068  000F6A  EFBA  F007         	goto	l2247
  3069  000F6E                     u1840:
  3070  000F6E                     
  3071                           ; BSR set to: 0
  3072                           ;main.c: 315: {;main.c: 316: nb_mine++;
  3073  000F6E  0100               	movlb	0	; force () banked
  3074  000F70  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  3075  000F72  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  3076  000F74                     l2247:
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;main.c: 317: };main.c: 318: };main.c: 319: if((ligne==3)&&(colonne<20)&&(colonne>0))
  3080  000F74  0E03               	movlw	3
  3081  000F76  0100               	movlb	0	; force () banked
  3082  000F78  19BA               	xorwf	calculToucheCombien@ligne& (0+255),w,b
  3083  000F7A  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  3084  000F7C  A4D8               	btfss	status,2,c
  3085  000F7E  EFC3  F007         	goto	u1851
  3086  000F82  EFC5  F007         	goto	u1850
  3087  000F86                     u1851:
  3088  000F86  EFA4  F008         	goto	l2275
  3089  000F8A                     u1850:
  3090  000F8A                     
  3091                           ; BSR set to: 0
  3092  000F8A  0100               	movlb	0	; force () banked
  3093  000F8C  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  3094  000F8E  EFD4  F007         	goto	u1860
  3095  000F92  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3096  000F94  E107               	bnz	u1861
  3097  000F96  0E14               	movlw	20
  3098  000F98  5DBC               	subwf	calculToucheCombien@colonne& (0+255),w,b
  3099  000F9A  B0D8               	btfsc	status,0,c
  3100  000F9C  EFD2  F007         	goto	u1861
  3101  000FA0  EFD4  F007         	goto	u1860
  3102  000FA4                     u1861:
  3103  000FA4  EFA4  F008         	goto	l2275
  3104  000FA8                     u1860:
  3105  000FA8                     
  3106                           ; BSR set to: 0
  3107  000FA8  0100               	movlb	0	; force () banked
  3108  000FAA  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  3109  000FAC  EFE0  F007         	goto	u1871
  3110  000FB0  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3111  000FB2  E108               	bnz	u1870
  3112  000FB4  05BC               	decf	calculToucheCombien@colonne& (0+255),w,b
  3113  000FB6  A0D8               	btfss	status,0,c
  3114  000FB8  EFE0  F007         	goto	u1871
  3115  000FBC  EFE2  F007         	goto	u1870
  3116  000FC0                     u1871:
  3117  000FC0  EFA4  F008         	goto	l2275
  3118  000FC4                     u1870:
  3119  000FC4                     
  3120                           ; BSR set to: 0
  3121                           ;main.c: 320: {;main.c: 321: for(j=-1;j<=1;j++)
  3122  000FC4  0100               	movlb	0	; force () banked
  3123  000FC6  69C5               	setf	calculToucheCombien@j& (0+255),b
  3124  000FC8  69C6               	setf	(calculToucheCombien@j+1)& (0+255),b
  3125  000FCA                     
  3126                           ; BSR set to: 0
  3127  000FCA  0100               	movlb	0	; force () banked
  3128  000FCC  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  3129  000FCE  EFF2  F007         	goto	u1881
  3130  000FD2  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  3131  000FD4  E109               	bnz	u1880
  3132  000FD6  0E02               	movlw	2
  3133  000FD8  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  3134  000FDA  A0D8               	btfss	status,0,c
  3135  000FDC  EFF2  F007         	goto	u1881
  3136  000FE0  EFF4  F007         	goto	u1880
  3137  000FE4                     u1881:
  3138  000FE4  EFF6  F007         	goto	l2259
  3139  000FE8                     u1880:
  3140  000FE8  EF46  F008         	goto	l158
  3141  000FEC                     l2259:
  3142                           
  3143                           ; BSR set to: 0
  3144                           ;main.c: 322: {;main.c: 323: if(m_tabMines[ligne-1][colonne+j]== 2)
  3145  000FEC  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  3146  000FF0  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  3147  000FF4  0E00               	movlw	0
  3148  000FF6  0100               	movlb	0	; force () banked
  3149  000FF8  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3150  000FFA  0E15               	movlw	21
  3151  000FFC  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3152  000FFE  ECC5  F012         	call	___wmul	;wreg free
  3153  001002  0EEB               	movlw	235
  3154  001004  0100               	movlb	0	; force () banked
  3155  001006  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  3156  001008  0EFF               	movlw	255
  3157  00100A  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  3158  00100C  0E60               	movlw	low _m_tabMines
  3159  00100E  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  3160  001010  0E00               	movlw	high _m_tabMines
  3161  001012  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  3162  001014  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  3163  001016  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  3164  001018  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  3165  00101A  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  3166  00101C  0100               	movlb	0	; force () banked
  3167  00101E  51B4               	movf	?___wmul& (0+255),w,b
  3168  001020  0100               	movlb	0	; force () banked
  3169  001022  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  3170  001024  0100               	movlb	0	; force () banked
  3171  001026  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3172  001028  0100               	movlb	0	; force () banked
  3173  00102A  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  3174  00102C  0100               	movlb	0	; force () banked
  3175  00102E  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  3176  001030  0100               	movlb	0	; force () banked
  3177  001032  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  3178  001034  0100               	movlb	0	; force () banked
  3179  001036  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3180  001038  0100               	movlb	0	; force () banked
  3181  00103A  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  3182  00103C  0100               	movlb	0	; force () banked
  3183  00103E  51C5               	movf	calculToucheCombien@j& (0+255),w,b
  3184  001040  0100               	movlb	0	; force () banked
  3185  001042  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  3186  001044  6ED9               	movwf	fsr2l,c
  3187  001046  0100               	movlb	0	; force () banked
  3188  001048  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  3189  00104A  0100               	movlb	0	; force () banked
  3190  00104C  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  3191  00104E  6EDA               	movwf	fsr2h,c
  3192  001050  0E02               	movlw	2
  3193  001052  18DE               	xorwf	postinc2,w,c
  3194  001054  A4D8               	btfss	status,2,c
  3195  001056  EF2F  F008         	goto	u1891
  3196  00105A  EF31  F008         	goto	u1890
  3197  00105E                     u1891:
  3198  00105E  EF34  F008         	goto	l159
  3199  001062                     u1890:
  3200  001062                     
  3201                           ; BSR set to: 0
  3202                           ;main.c: 324: {;main.c: 325: nb_mine++;
  3203  001062  0100               	movlb	0	; force () banked
  3204  001064  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  3205  001066  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  3206  001068                     l159:
  3207                           
  3208                           ; BSR set to: 0
  3209  001068  0100               	movlb	0	; force () banked
  3210  00106A  4BC5               	infsnz	calculToucheCombien@j& (0+255),f,b
  3211  00106C  2BC6               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  3212  00106E                     
  3213                           ; BSR set to: 0
  3214  00106E  0100               	movlb	0	; force () banked
  3215  001070  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  3216  001072  EF44  F008         	goto	u1901
  3217  001076  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  3218  001078  E109               	bnz	u1900
  3219  00107A  0E02               	movlw	2
  3220  00107C  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  3221  00107E  A0D8               	btfss	status,0,c
  3222  001080  EF44  F008         	goto	u1901
  3223  001084  EF46  F008         	goto	u1900
  3224  001088                     u1901:
  3225  001088  EFF6  F007         	goto	l2259
  3226  00108C                     u1900:
  3227  00108C                     l158:
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;main.c: 326: };main.c: 327: };main.c: 328: for(i=-1;i<=1;i++)
  3231  00108C  0100               	movlb	0	; force () banked
  3232  00108E  69C7               	setf	calculToucheCombien@i& (0+255),b
  3233  001090  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  3234  001092                     
  3235                           ; BSR set to: 0
  3236  001092  0100               	movlb	0	; force () banked
  3237  001094  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  3238  001096  EF56  F008         	goto	u1911
  3239  00109A  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  3240  00109C  E109               	bnz	u1910
  3241  00109E  0E02               	movlw	2
  3242  0010A0  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  3243  0010A2  A0D8               	btfss	status,0,c
  3244  0010A4  EF56  F008         	goto	u1911
  3245  0010A8  EF58  F008         	goto	u1910
  3246  0010AC                     u1911:
  3247  0010AC  EF5A  F008         	goto	l2269
  3248  0010B0                     u1910:
  3249  0010B0  EFA4  F008         	goto	l2275
  3250  0010B4                     l2269:
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;main.c: 329: {;main.c: 330: if(m_tabMines[ligne][colonne+i]==2)
  3254  0010B4  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  3255  0010B8  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  3256  0010BC  0E00               	movlw	0
  3257  0010BE  0100               	movlb	0	; force () banked
  3258  0010C0  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3259  0010C2  0E15               	movlw	21
  3260  0010C4  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3261  0010C6  ECC5  F012         	call	___wmul	;wreg free
  3262  0010CA  0E60               	movlw	low _m_tabMines
  3263  0010CC  0100               	movlb	0	; force () banked
  3264  0010CE  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  3265  0010D0  0E00               	movlw	high _m_tabMines
  3266  0010D2  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  3267  0010D4  0100               	movlb	0	; force () banked
  3268  0010D6  51B4               	movf	?___wmul& (0+255),w,b
  3269  0010D8  0100               	movlb	0	; force () banked
  3270  0010DA  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  3271  0010DC  0100               	movlb	0	; force () banked
  3272  0010DE  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3273  0010E0  0100               	movlb	0	; force () banked
  3274  0010E2  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  3275  0010E4  0100               	movlb	0	; force () banked
  3276  0010E6  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  3277  0010E8  0100               	movlb	0	; force () banked
  3278  0010EA  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  3279  0010EC  0100               	movlb	0	; force () banked
  3280  0010EE  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3281  0010F0  0100               	movlb	0	; force () banked
  3282  0010F2  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  3283  0010F4  0100               	movlb	0	; force () banked
  3284  0010F6  51C7               	movf	calculToucheCombien@i& (0+255),w,b
  3285  0010F8  0100               	movlb	0	; force () banked
  3286  0010FA  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  3287  0010FC  6ED9               	movwf	fsr2l,c
  3288  0010FE  0100               	movlb	0	; force () banked
  3289  001100  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  3290  001102  0100               	movlb	0	; force () banked
  3291  001104  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  3292  001106  6EDA               	movwf	fsr2h,c
  3293  001108  0E02               	movlw	2
  3294  00110A  18DE               	xorwf	postinc2,w,c
  3295  00110C  A4D8               	btfss	status,2,c
  3296  00110E  EF8B  F008         	goto	u1921
  3297  001112  EF8D  F008         	goto	u1920
  3298  001116                     u1921:
  3299  001116  EF90  F008         	goto	l162
  3300  00111A                     u1920:
  3301  00111A                     
  3302                           ; BSR set to: 0
  3303                           ;main.c: 331: {;main.c: 332: nb_mine++;
  3304  00111A  0100               	movlb	0	; force () banked
  3305  00111C  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  3306  00111E  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  3307  001120                     l162:
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;main.c: 333: };main.c: 334: i++;
  3311  001120  0100               	movlb	0	; force () banked
  3312  001122  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  3313  001124  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  3314  001126  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  3315  001128  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  3316  00112A                     
  3317                           ; BSR set to: 0
  3318  00112A  0100               	movlb	0	; force () banked
  3319  00112C  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  3320  00112E  EFA2  F008         	goto	u1931
  3321  001132  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  3322  001134  E109               	bnz	u1930
  3323  001136  0E02               	movlw	2
  3324  001138  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  3325  00113A  A0D8               	btfss	status,0,c
  3326  00113C  EFA2  F008         	goto	u1931
  3327  001140  EFA4  F008         	goto	u1930
  3328  001144                     u1931:
  3329  001144  EF5A  F008         	goto	l2269
  3330  001148                     u1930:
  3331  001148                     l2275:
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;main.c: 335: };main.c: 336: };main.c: 337: return nb_mine;
  3335  001148  0100               	movlb	0	; force () banked
  3336  00114A  51C3               	movf	calculToucheCombien@nb_mine& (0+255),w,b
  3337  00114C                     
  3338                           ; BSR set to: 0
  3339  00114C  0012               	return		;funcret
  3340  00114E                     __end_of_calculToucheCombien:
  3341                           	opt callstack 0
  3342                           
  3343 ;; *************** function _lcd_init *****************
  3344 ;; Defined at:
  3345 ;;		line 258 in file "Lcd4Lignes.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;		None
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;		None
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3359 ;;      Params:         0       0       0       0       0       0       0
  3360 ;;      Locals:         0       0       0       0       0       0       0
  3361 ;;      Temps:          0       0       0       0       0       0       0
  3362 ;;      Totals:         0       0       0       0       0       0       0
  3363 ;;Total ram usage:        0 bytes
  3364 ;; Hardware stack levels used:    1
  3365 ;; Hardware stack levels required when called:    5
  3366 ;; This function calls:
  3367 ;;		_lcd_initCGRam
  3368 ;;		_lcd_resetSequence
  3369 ;;		_lcd_wrCom
  3370 ;; This function is called by:
  3371 ;;		_main
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text7
  3376  002562                     __ptext7:
  3377                           	opt callstack 0
  3378  002562                     _lcd_init:
  3379                           	opt callstack 25
  3380  002562                     
  3381                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  3382  002562  EC87  F011         	call	_lcd_resetSequence	;wreg free
  3383                           
  3384                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  3385  002566  0E28               	movlw	40
  3386  002568  EC51  F011         	call	_lcd_wrCom
  3387                           
  3388                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  3389  00256C  0E0F               	movlw	15
  3390  00256E  EC51  F011         	call	_lcd_wrCom
  3391                           
  3392                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  3393  002572  0E01               	movlw	1
  3394  002574  EC51  F011         	call	_lcd_wrCom
  3395                           
  3396                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  3397  002578  0E06               	movlw	6
  3398  00257A  EC51  F011         	call	_lcd_wrCom
  3399                           
  3400                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  3401  00257E  0E80               	movlw	128
  3402  002580  EC51  F011         	call	_lcd_wrCom
  3403  002584                     
  3404                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  3405  002584  EC40  F010         	call	_lcd_initCGRam	;wreg free
  3406  002588  0012               	return		;funcret
  3407  00258A                     __end_of_lcd_init:
  3408                           	opt callstack 0
  3409                           
  3410 ;; *************** function _lcd_resetSequence *****************
  3411 ;; Defined at:
  3412 ;;		line 221 in file "Lcd4Lignes.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		wreg, status,2, status,0, cstack
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3426 ;;      Params:         0       0       0       0       0       0       0
  3427 ;;      Locals:         0       0       0       0       0       0       0
  3428 ;;      Temps:          0       1       0       0       0       0       0
  3429 ;;      Totals:         0       1       0       0       0       0       0
  3430 ;;Total ram usage:        1 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; Hardware stack levels required when called:    1
  3433 ;; This function calls:
  3434 ;;		_lcd_ecrireDonnees
  3435 ;;		_lcd_strobeEnableBit
  3436 ;; This function is called by:
  3437 ;;		_lcd_init
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           	psect	text8
  3442  00230E                     __ptext8:
  3443                           	opt callstack 0
  3444  00230E                     _lcd_resetSequence:
  3445                           	opt callstack 28
  3446  00230E                     
  3447                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  3448  00230E  0E00               	movlw	0
  3449  002310  6E95               	movwf	149,c	;volatile
  3450  002312                     
  3451                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  3452  002312  0E0D               	movlw	13
  3453  002314  0100               	movlb	0	; force () banked
  3454  002316  6FB6               	movwf	??_lcd_resetSequence& (0+255),b
  3455  002318  0EFB               	movlw	251
  3456  00231A                     u2607:
  3457  00231A  2EE8               	decfsz	wreg,f,c
  3458  00231C  D7FE               	bra	u2607
  3459  00231E  2FB6               	decfsz	??_lcd_resetSequence& (0+255),f,b
  3460  002320  D7FC               	bra	u2607
  3461  002322  F000 F000          	nop2	
  3462  002326                     
  3463                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  3464  002326  9080               	bcf	128,0,c	;volatile
  3465  002328                     
  3466                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  3467  002328  9280               	bcf	128,1,c	;volatile
  3468  00232A                     
  3469                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  3470  00232A  0E03               	movlw	3
  3471  00232C  ECFB  F012         	call	_lcd_ecrireDonnees
  3472  002330                     
  3473                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  3474  002330  EC14  F013         	call	_lcd_strobeEnableBit	;wreg free
  3475  002334                     
  3476                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3477  002334  0E03               	movlw	3
  3478  002336                     u2617:
  3479  002336  2EE8               	decfsz	wreg,f,c
  3480  002338  D7FE               	bra	u2617
  3481  00233A  F000               	nop	
  3482  00233C                     
  3483                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  3484  00233C  0E03               	movlw	3
  3485  00233E  ECFB  F012         	call	_lcd_ecrireDonnees
  3486  002342                     
  3487                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  3488  002342  EC14  F013         	call	_lcd_strobeEnableBit	;wreg free
  3489  002346                     
  3490                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3491  002346  0E03               	movlw	3
  3492  002348                     u2627:
  3493  002348  2EE8               	decfsz	wreg,f,c
  3494  00234A  D7FE               	bra	u2627
  3495  00234C  F000               	nop	
  3496  00234E                     
  3497                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  3498  00234E  0E03               	movlw	3
  3499  002350  ECFB  F012         	call	_lcd_ecrireDonnees
  3500  002354                     
  3501                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  3502  002354  EC14  F013         	call	_lcd_strobeEnableBit	;wreg free
  3503  002358                     
  3504                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3505  002358  0E03               	movlw	3
  3506  00235A                     u2637:
  3507  00235A  2EE8               	decfsz	wreg,f,c
  3508  00235C  D7FE               	bra	u2637
  3509  00235E  F000               	nop	
  3510  002360                     
  3511                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  3512  002360  0E02               	movlw	2
  3513  002362  ECFB  F012         	call	_lcd_ecrireDonnees
  3514  002366                     
  3515                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  3516  002366  EC14  F013         	call	_lcd_strobeEnableBit	;wreg free
  3517  00236A                     
  3518                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3519  00236A  0E03               	movlw	3
  3520  00236C                     u2647:
  3521  00236C  2EE8               	decfsz	wreg,f,c
  3522  00236E  D7FE               	bra	u2647
  3523  002370  F000               	nop	
  3524  002372                     
  3525                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  3526  002372  0E0F               	movlw	15
  3527  002374  6E95               	movwf	149,c	;volatile
  3528  002376  0012               	return		;funcret
  3529  002378                     __end_of_lcd_resetSequence:
  3530                           	opt callstack 0
  3531                           
  3532 ;; *************** function _lcd_initCGRam *****************
  3533 ;; Defined at:
  3534 ;;		line 417 in file "Lcd4Lignes.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;		None
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;  j               1    6[BANK0 ] unsigned char 
  3539 ;;  i               1    5[BANK0 ] unsigned char 
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  1    wreg      void 
  3542 ;; Registers used:
  3543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3549 ;;      Params:         0       0       0       0       0       0       0
  3550 ;;      Locals:         0       2       0       0       0       0       0
  3551 ;;      Temps:          0       2       0       0       0       0       0
  3552 ;;      Totals:         0       4       0       0       0       0       0
  3553 ;;Total ram usage:        4 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:    4
  3556 ;; This function calls:
  3557 ;;		_lcd_curseurHome
  3558 ;;		_lcd_wrCom
  3559 ;;		_lcd_wrData
  3560 ;; This function is called by:
  3561 ;;		_lcd_init
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text9
  3566  002080                     __ptext9:
  3567                           	opt callstack 0
  3568  002080                     _lcd_initCGRam:
  3569                           	opt callstack 25
  3570  002080                     
  3571                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  3572  002080  0E40               	movlw	64
  3573  002082  EC51  F011         	call	_lcd_wrCom
  3574  002086                     
  3575                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  3576  002086  0E00               	movlw	0
  3577  002088  0100               	movlb	0	; force () banked
  3578  00208A  6FB9               	movwf	lcd_initCGRam@i& (0+255),b
  3579  00208C                     
  3580                           ; BSR set to: 0
  3581  00208C  0E07               	movlw	7
  3582  00208E  0100               	movlb	0	; force () banked
  3583  002090  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  3584  002092  EF4D  F010         	goto	u2061
  3585  002096  EF4F  F010         	goto	u2060
  3586  00209A                     u2061:
  3587  00209A  EF51  F010         	goto	l2377
  3588  00209E                     u2060:
  3589  00209E  EF8E  F010         	goto	l2393
  3590  0020A2                     l2377:
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  3594  0020A2  0E00               	movlw	0
  3595  0020A4  0100               	movlb	0	; force () banked
  3596  0020A6  6FBA               	movwf	lcd_initCGRam@j& (0+255),b
  3597  0020A8                     
  3598                           ; BSR set to: 0
  3599  0020A8  0E07               	movlw	7
  3600  0020AA  0100               	movlb	0	; force () banked
  3601  0020AC  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  3602  0020AE  EF5B  F010         	goto	u2071
  3603  0020B2  EF5D  F010         	goto	u2070
  3604  0020B6                     u2071:
  3605  0020B6  EF5F  F010         	goto	l2383
  3606  0020BA                     u2070:
  3607  0020BA  EF83  F010         	goto	l2389
  3608  0020BE                     l2383:
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  3612  0020BE  0100               	movlb	0	; force () banked
  3613  0020C0  51B9               	movf	lcd_initCGRam@i& (0+255),w,b
  3614  0020C2  0D08               	mullw	8
  3615  0020C4  0E54               	movlw	low _matCGRAM
  3616  0020C6  0100               	movlb	0	; force () banked
  3617  0020C8  6FB7               	movwf	??_lcd_initCGRam& (0+255),b
  3618  0020CA  0E01               	movlw	high _matCGRAM
  3619  0020CC  6FB8               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  3620  0020CE  50F3               	movf	243,w,c
  3621  0020D0  27B7               	addwf	??_lcd_initCGRam& (0+255),f,b
  3622  0020D2  50F4               	movf	244,w,c
  3623  0020D4  23B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  3624  0020D6  0100               	movlb	0	; force () banked
  3625  0020D8  51BA               	movf	lcd_initCGRam@j& (0+255),w,b
  3626  0020DA  0100               	movlb	0	; force () banked
  3627  0020DC  25B7               	addwf	??_lcd_initCGRam& (0+255),w,b
  3628  0020DE  6ED9               	movwf	fsr2l,c
  3629  0020E0  0100               	movlb	0	; force () banked
  3630  0020E2  0E00               	movlw	0
  3631  0020E4  0100               	movlb	0	; force () banked
  3632  0020E6  21B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  3633  0020E8  6EDA               	movwf	fsr2h,c
  3634  0020EA  50DF               	movf	indf2,w,c
  3635  0020EC  EC81  F012         	call	_lcd_wrData
  3636  0020F0  0100               	movlb	0	; force () banked
  3637  0020F2  2BBA               	incf	lcd_initCGRam@j& (0+255),f,b
  3638  0020F4                     
  3639                           ; BSR set to: 0
  3640  0020F4  0E07               	movlw	7
  3641  0020F6  0100               	movlb	0	; force () banked
  3642  0020F8  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  3643  0020FA  EF81  F010         	goto	u2081
  3644  0020FE  EF83  F010         	goto	u2080
  3645  002102                     u2081:
  3646  002102  EF5F  F010         	goto	l2383
  3647  002106                     u2080:
  3648  002106                     l2389:
  3649                           
  3650                           ; BSR set to: 0
  3651  002106  0100               	movlb	0	; force () banked
  3652  002108  2BB9               	incf	lcd_initCGRam@i& (0+255),f,b
  3653  00210A                     
  3654                           ; BSR set to: 0
  3655  00210A  0E07               	movlw	7
  3656  00210C  0100               	movlb	0	; force () banked
  3657  00210E  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  3658  002110  EF8C  F010         	goto	u2091
  3659  002114  EF8E  F010         	goto	u2090
  3660  002118                     u2091:
  3661  002118  EF51  F010         	goto	l2377
  3662  00211C                     u2090:
  3663  00211C                     l2393:
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  3667  00211C  EC10  F013         	call	_lcd_curseurHome	;wreg free
  3668  002120  0012               	return		;funcret
  3669  002122                     __end_of_lcd_initCGRam:
  3670                           	opt callstack 0
  3671                           
  3672 ;; *************** function _lcd_curseurHome *****************
  3673 ;; Defined at:
  3674 ;;		line 288 in file "Lcd4Lignes.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;		None
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      void 
  3681 ;; Registers used:
  3682 ;;		wreg, status,2, status,0, cstack
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3688 ;;      Params:         0       0       0       0       0       0       0
  3689 ;;      Locals:         0       0       0       0       0       0       0
  3690 ;;      Temps:          0       0       0       0       0       0       0
  3691 ;;      Totals:         0       0       0       0       0       0       0
  3692 ;;Total ram usage:        0 bytes
  3693 ;; Hardware stack levels used:    1
  3694 ;; Hardware stack levels required when called:    3
  3695 ;; This function calls:
  3696 ;;		_lcd_wrCom
  3697 ;; This function is called by:
  3698 ;;		_main
  3699 ;;		_lcd_initCGRam
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text10
  3704  002620                     __ptext10:
  3705                           	opt callstack 0
  3706  002620                     _lcd_curseurHome:
  3707                           	opt callstack 25
  3708  002620                     
  3709                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  3710  002620  0E02               	movlw	2
  3711  002622  EC51  F011         	call	_lcd_wrCom
  3712  002626  0012               	return		;funcret
  3713  002628                     __end_of_lcd_curseurHome:
  3714                           	opt callstack 0
  3715                           
  3716 ;; *************** function _initialisation *****************
  3717 ;; Defined at:
  3718 ;;		line 91 in file "main.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;		None
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;		None
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  1    wreg      void 
  3725 ;; Registers used:
  3726 ;;		wreg, status,2
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3732 ;;      Params:         0       0       0       0       0       0       0
  3733 ;;      Locals:         0       0       0       0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0
  3735 ;;      Totals:         0       0       0       0       0       0       0
  3736 ;;Total ram usage:        0 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; This function calls:
  3739 ;;		Nothing
  3740 ;; This function is called by:
  3741 ;;		_main
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text11
  3746  0025B2                     __ptext11:
  3747                           	opt callstack 0
  3748  0025B2                     _initialisation:
  3749                           	opt callstack 30
  3750  0025B2                     
  3751                           ;main.c: 93: TRISD = 0;
  3752  0025B2  0E00               	movlw	0
  3753  0025B4  6E95               	movwf	149,c	;volatile
  3754                           
  3755                           ;main.c: 94: ANSELH = 0;
  3756  0025B6  0E00               	movlw	0
  3757  0025B8  6E7F               	movwf	127,c	;volatile
  3758  0025BA                     
  3759                           ;main.c: 95: TRISB = 0xFF;
  3760  0025BA  6893               	setf	147,c	;volatile
  3761                           
  3762                           ;main.c: 96: ANSEL = 0;
  3763  0025BC  0E00               	movlw	0
  3764  0025BE  6E7E               	movwf	126,c	;volatile
  3765                           
  3766                           ;main.c: 97: TRISA = 0;
  3767  0025C0  0E00               	movlw	0
  3768  0025C2  6E92               	movwf	146,c	;volatile
  3769                           
  3770                           ;main.c: 99: ADCON1 = 0;
  3771  0025C4  0E00               	movlw	0
  3772  0025C6  6EC1               	movwf	193,c	;volatile
  3773  0025C8                     
  3774                           ;main.c: 100: ANSELbits.ANS7 = 1;
  3775  0025C8  8E7E               	bsf	126,7,c	;volatile
  3776  0025CA                     
  3777                           ;main.c: 101: ADCON0bits.ADON = 1;
  3778  0025CA  80C2               	bsf	194,0,c	;volatile
  3779  0025CC                     
  3780                           ;main.c: 102: ADCON2bits.ADFM = 0;
  3781  0025CC  9EC0               	bcf	192,7,c	;volatile
  3782                           
  3783                           ;main.c: 103: ADCON2bits.ACQT = 0;
  3784  0025CE  0EC7               	movlw	-57
  3785  0025D0  16C0               	andwf	192,f,c	;volatile
  3786                           
  3787                           ;main.c: 104: ADCON2bits.ADCS = 0;
  3788  0025D2  0EF8               	movlw	-8
  3789  0025D4  16C0               	andwf	192,f,c	;volatile
  3790  0025D6  0012               	return		;funcret
  3791  0025D8                     __end_of_initialisation:
  3792                           	opt callstack 0
  3793                           
  3794 ;; *************** function _init_serie *****************
  3795 ;; Defined at:
  3796 ;;		line 29 in file "serie.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;		None
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, status,2
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3810 ;;      Params:         0       0       0       0       0       0       0
  3811 ;;      Locals:         0       0       0       0       0       0       0
  3812 ;;      Temps:          0       0       0       0       0       0       0
  3813 ;;      Totals:         0       0       0       0       0       0       0
  3814 ;;Total ram usage:        0 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; This function calls:
  3817 ;;		Nothing
  3818 ;; This function is called by:
  3819 ;;		_main
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           	psect	text12
  3824  0025D8                     __ptext12:
  3825                           	opt callstack 0
  3826  0025D8                     _init_serie:
  3827                           	opt callstack 30
  3828  0025D8                     
  3829                           ;serie.c: 32: TRISCbits.TRISC7=1;
  3830  0025D8  8E94               	bsf	148,7,c	;volatile
  3831                           
  3832                           ;serie.c: 33: TRISCbits.TRISC6=1;
  3833  0025DA  8C94               	bsf	148,6,c	;volatile
  3834  0025DC                     
  3835                           ;serie.c: 37: SPBRGH=0x00;
  3836  0025DC  0E00               	movlw	0
  3837  0025DE  6EB0               	movwf	176,c	;volatile
  3838                           
  3839                           ;serie.c: 38: SPBRG=25;
  3840  0025E0  0E19               	movlw	25
  3841  0025E2  6EAF               	movwf	175,c	;volatile
  3842  0025E4                     
  3843                           ;serie.c: 39: BAUDCONbits.BRG16=1;
  3844  0025E4  86B8               	bsf	184,3,c	;volatile
  3845  0025E6                     
  3846                           ;serie.c: 40: TXSTAbits.BRGH=1;
  3847  0025E6  84AC               	bsf	172,2,c	;volatile
  3848  0025E8                     
  3849                           ;serie.c: 43: TXSTAbits.SYNC=0;
  3850  0025E8  98AC               	bcf	172,4,c	;volatile
  3851  0025EA                     
  3852                           ;serie.c: 44: TXSTAbits.TXEN=1;
  3853  0025EA  8AAC               	bsf	172,5,c	;volatile
  3854  0025EC                     
  3855                           ;serie.c: 45: RCSTAbits.CREN = 1;
  3856  0025EC  88AB               	bsf	171,4,c	;volatile
  3857  0025EE                     
  3858                           ;serie.c: 46: RCSTAbits.SPEN=1;
  3859  0025EE  8EAB               	bsf	171,7,c	;volatile
  3860                           
  3861                           ;serie.c: 47: ANSEL = 0;
  3862  0025F0  0E00               	movlw	0
  3863  0025F2  6E7E               	movwf	126,c	;volatile
  3864  0025F4  0012               	return		;funcret
  3865  0025F6                     __end_of_init_serie:
  3866                           	opt callstack 0
  3867                           
  3868 ;; *************** function _initTabVue *****************
  3869 ;; Defined at:
  3870 ;;		line 127 in file "main.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;		None
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  j               2   10[BANK0 ] int 
  3875 ;;  i               2    8[BANK0 ] int 
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      void 
  3878 ;; Registers used:
  3879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3885 ;;      Params:         0       0       0       0       0       0       0
  3886 ;;      Locals:         0       4       0       0       0       0       0
  3887 ;;      Temps:          0       2       0       0       0       0       0
  3888 ;;      Totals:         0       6       0       0       0       0       0
  3889 ;;Total ram usage:        6 bytes
  3890 ;; Hardware stack levels used:    1
  3891 ;; Hardware stack levels required when called:    1
  3892 ;; This function calls:
  3893 ;;		___wmul
  3894 ;; This function is called by:
  3895 ;;		_main
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text13
  3900  001B2C                     __ptext13:
  3901                           	opt callstack 0
  3902  001B2C                     _initTabVue:
  3903                           	opt callstack 29
  3904  001B2C                     
  3905                           ;main.c: 129: int i=0;
  3906  001B2C  0E00               	movlw	0
  3907  001B2E  0100               	movlb	0	; force () banked
  3908  001B30  6FBD               	movwf	(initTabVue@i+1)& (0+255),b
  3909  001B32  0E00               	movlw	0
  3910  001B34  6FBC               	movwf	initTabVue@i& (0+255),b
  3911                           
  3912                           ;main.c: 130: int j=0;
  3913  001B36  0E00               	movlw	0
  3914  001B38  0100               	movlb	0	; force () banked
  3915  001B3A  6FBF               	movwf	(initTabVue@j+1)& (0+255),b
  3916  001B3C  0E00               	movlw	0
  3917  001B3E  6FBE               	movwf	initTabVue@j& (0+255),b
  3918                           
  3919                           ;main.c: 131: for ( i=0;i<4;i++)
  3920  001B40  0E00               	movlw	0
  3921  001B42  0100               	movlb	0	; force () banked
  3922  001B44  6FBD               	movwf	(initTabVue@i+1)& (0+255),b
  3923  001B46  0E00               	movlw	0
  3924  001B48  6FBC               	movwf	initTabVue@i& (0+255),b
  3925  001B4A                     
  3926                           ; BSR set to: 0
  3927  001B4A  0100               	movlb	0	; force () banked
  3928  001B4C  BFBD               	btfsc	(initTabVue@i+1)& (0+255),7,b
  3929  001B4E  EFB2  F00D         	goto	u2161
  3930  001B52  51BD               	movf	(initTabVue@i+1)& (0+255),w,b
  3931  001B54  E109               	bnz	u2160
  3932  001B56  0E04               	movlw	4
  3933  001B58  5DBC               	subwf	initTabVue@i& (0+255),w,b
  3934  001B5A  A0D8               	btfss	status,0,c
  3935  001B5C  EFB2  F00D         	goto	u2161
  3936  001B60  EFB4  F00D         	goto	u2160
  3937  001B64                     u2161:
  3938  001B64  EFB6  F00D         	goto	l2441
  3939  001B68                     u2160:
  3940  001B68  EF52  F00E         	goto	l97
  3941  001B6C                     l2441:
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;main.c: 132: {;main.c: 133: for (j=0;j<=(20);j++)
  3945  001B6C  0E00               	movlw	0
  3946  001B6E  0100               	movlb	0	; force () banked
  3947  001B70  6FBF               	movwf	(initTabVue@j+1)& (0+255),b
  3948  001B72  0E00               	movlw	0
  3949  001B74  6FBE               	movwf	initTabVue@j& (0+255),b
  3950  001B76                     
  3951                           ; BSR set to: 0
  3952  001B76  0100               	movlb	0	; force () banked
  3953  001B78  BFBF               	btfsc	(initTabVue@j+1)& (0+255),7,b
  3954  001B7A  EFC8  F00D         	goto	u2171
  3955  001B7E  51BF               	movf	(initTabVue@j+1)& (0+255),w,b
  3956  001B80  E109               	bnz	u2170
  3957  001B82  0E15               	movlw	21
  3958  001B84  5DBE               	subwf	initTabVue@j& (0+255),w,b
  3959  001B86  A0D8               	btfss	status,0,c
  3960  001B88  EFC8  F00D         	goto	u2171
  3961  001B8C  EFCA  F00D         	goto	u2170
  3962  001B90                     u2171:
  3963  001B90  EFCC  F00D         	goto	l2447
  3964  001B94                     u2170:
  3965  001B94  EF40  F00E         	goto	l2459
  3966  001B98                     l2447:
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;main.c: 134: {;main.c: 135: if(i<20)
  3970  001B98  0100               	movlb	0	; force () banked
  3971  001B9A  BFBD               	btfsc	(initTabVue@i+1)& (0+255),7,b
  3972  001B9C  EFDB  F00D         	goto	u2180
  3973  001BA0  51BD               	movf	(initTabVue@i+1)& (0+255),w,b
  3974  001BA2  E107               	bnz	u2181
  3975  001BA4  0E14               	movlw	20
  3976  001BA6  5DBC               	subwf	initTabVue@i& (0+255),w,b
  3977  001BA8  B0D8               	btfsc	status,0,c
  3978  001BAA  EFD9  F00D         	goto	u2181
  3979  001BAE  EFDB  F00D         	goto	u2180
  3980  001BB2                     u2181:
  3981  001BB2  EFFF  F00D         	goto	l2451
  3982  001BB6                     u2180:
  3983  001BB6                     
  3984                           ; BSR set to: 0
  3985                           ;main.c: 136: {;main.c: 137: m_tabVue[i][j]= 1;
  3986  001BB6  C0BC  F0B4         	movff	initTabVue@i,___wmul@multiplier
  3987  001BBA  C0BD  F0B5         	movff	initTabVue@i+1,___wmul@multiplier+1
  3988  001BBE  0E00               	movlw	0
  3989  001BC0  0100               	movlb	0	; force () banked
  3990  001BC2  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3991  001BC4  0E15               	movlw	21
  3992  001BC6  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3993  001BC8  ECC5  F012         	call	___wmul	;wreg free
  3994  001BCC  0E00               	movlw	low _m_tabVue
  3995  001BCE  0100               	movlb	0	; force () banked
  3996  001BD0  6FBA               	movwf	??_initTabVue& (0+255),b
  3997  001BD2  0E01               	movlw	high _m_tabVue
  3998  001BD4  6FBB               	movwf	(??_initTabVue+1)& (0+255),b
  3999  001BD6  0100               	movlb	0	; force () banked
  4000  001BD8  51B4               	movf	?___wmul& (0+255),w,b
  4001  001BDA  0100               	movlb	0	; force () banked
  4002  001BDC  27BA               	addwf	??_initTabVue& (0+255),f,b
  4003  001BDE  0100               	movlb	0	; force () banked
  4004  001BE0  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4005  001BE2  0100               	movlb	0	; force () banked
  4006  001BE4  23BB               	addwfc	(??_initTabVue+1)& (0+255),f,b
  4007  001BE6  0100               	movlb	0	; force () banked
  4008  001BE8  51BE               	movf	initTabVue@j& (0+255),w,b
  4009  001BEA  0100               	movlb	0	; force () banked
  4010  001BEC  25BA               	addwf	??_initTabVue& (0+255),w,b
  4011  001BEE  6ED9               	movwf	fsr2l,c
  4012  001BF0  0100               	movlb	0	; force () banked
  4013  001BF2  51BF               	movf	(initTabVue@j+1)& (0+255),w,b
  4014  001BF4  0100               	movlb	0	; force () banked
  4015  001BF6  21BB               	addwfc	(??_initTabVue+1)& (0+255),w,b
  4016  001BF8  6EDA               	movwf	fsr2h,c
  4017  001BFA  0E01               	movlw	1
  4018  001BFC  6EDF               	movwf	indf2,c
  4019  001BFE                     l2451:
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;main.c: 138: };main.c: 139: if (j==20)
  4023  001BFE  0E14               	movlw	20
  4024  001C00  0100               	movlb	0	; force () banked
  4025  001C02  19BE               	xorwf	initTabVue@j& (0+255),w,b
  4026  001C04  11BF               	iorwf	(initTabVue@j+1)& (0+255),w,b
  4027  001C06  A4D8               	btfss	status,2,c
  4028  001C08  EF08  F00E         	goto	u2191
  4029  001C0C  EF0A  F00E         	goto	u2190
  4030  001C10                     u2191:
  4031  001C10  EF2E  F00E         	goto	l2455
  4032  001C14                     u2190:
  4033  001C14                     
  4034                           ; BSR set to: 0
  4035                           ;main.c: 140: {;main.c: 141: m_tabVue[i][j]= '\0';
  4036  001C14  C0BC  F0B4         	movff	initTabVue@i,___wmul@multiplier
  4037  001C18  C0BD  F0B5         	movff	initTabVue@i+1,___wmul@multiplier+1
  4038  001C1C  0E00               	movlw	0
  4039  001C1E  0100               	movlb	0	; force () banked
  4040  001C20  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4041  001C22  0E15               	movlw	21
  4042  001C24  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4043  001C26  ECC5  F012         	call	___wmul	;wreg free
  4044  001C2A  0E00               	movlw	low _m_tabVue
  4045  001C2C  0100               	movlb	0	; force () banked
  4046  001C2E  6FBA               	movwf	??_initTabVue& (0+255),b
  4047  001C30  0E01               	movlw	high _m_tabVue
  4048  001C32  6FBB               	movwf	(??_initTabVue+1)& (0+255),b
  4049  001C34  0100               	movlb	0	; force () banked
  4050  001C36  51B4               	movf	?___wmul& (0+255),w,b
  4051  001C38  0100               	movlb	0	; force () banked
  4052  001C3A  27BA               	addwf	??_initTabVue& (0+255),f,b
  4053  001C3C  0100               	movlb	0	; force () banked
  4054  001C3E  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4055  001C40  0100               	movlb	0	; force () banked
  4056  001C42  23BB               	addwfc	(??_initTabVue+1)& (0+255),f,b
  4057  001C44  0100               	movlb	0	; force () banked
  4058  001C46  51BE               	movf	initTabVue@j& (0+255),w,b
  4059  001C48  0100               	movlb	0	; force () banked
  4060  001C4A  25BA               	addwf	??_initTabVue& (0+255),w,b
  4061  001C4C  6ED9               	movwf	fsr2l,c
  4062  001C4E  0100               	movlb	0	; force () banked
  4063  001C50  51BF               	movf	(initTabVue@j+1)& (0+255),w,b
  4064  001C52  0100               	movlb	0	; force () banked
  4065  001C54  21BB               	addwfc	(??_initTabVue+1)& (0+255),w,b
  4066  001C56  6EDA               	movwf	fsr2h,c
  4067  001C58  0E00               	movlw	0
  4068  001C5A  6EDF               	movwf	indf2,c
  4069  001C5C                     l2455:
  4070                           
  4071                           ; BSR set to: 0
  4072  001C5C  0100               	movlb	0	; force () banked
  4073  001C5E  4BBE               	infsnz	initTabVue@j& (0+255),f,b
  4074  001C60  2BBF               	incf	(initTabVue@j+1)& (0+255),f,b
  4075  001C62                     
  4076                           ; BSR set to: 0
  4077  001C62  0100               	movlb	0	; force () banked
  4078  001C64  BFBF               	btfsc	(initTabVue@j+1)& (0+255),7,b
  4079  001C66  EF3E  F00E         	goto	u2201
  4080  001C6A  51BF               	movf	(initTabVue@j+1)& (0+255),w,b
  4081  001C6C  E109               	bnz	u2200
  4082  001C6E  0E15               	movlw	21
  4083  001C70  5DBE               	subwf	initTabVue@j& (0+255),w,b
  4084  001C72  A0D8               	btfss	status,0,c
  4085  001C74  EF3E  F00E         	goto	u2201
  4086  001C78  EF40  F00E         	goto	u2200
  4087  001C7C                     u2201:
  4088  001C7C  EFCC  F00D         	goto	l2447
  4089  001C80                     u2200:
  4090  001C80                     l2459:
  4091                           
  4092                           ; BSR set to: 0
  4093  001C80  0100               	movlb	0	; force () banked
  4094  001C82  4BBC               	infsnz	initTabVue@i& (0+255),f,b
  4095  001C84  2BBD               	incf	(initTabVue@i+1)& (0+255),f,b
  4096  001C86                     
  4097                           ; BSR set to: 0
  4098  001C86  0100               	movlb	0	; force () banked
  4099  001C88  BFBD               	btfsc	(initTabVue@i+1)& (0+255),7,b
  4100  001C8A  EF50  F00E         	goto	u2211
  4101  001C8E  51BD               	movf	(initTabVue@i+1)& (0+255),w,b
  4102  001C90  E109               	bnz	u2210
  4103  001C92  0E04               	movlw	4
  4104  001C94  5DBC               	subwf	initTabVue@i& (0+255),w,b
  4105  001C96  A0D8               	btfss	status,0,c
  4106  001C98  EF50  F00E         	goto	u2211
  4107  001C9C  EF52  F00E         	goto	u2210
  4108  001CA0                     u2211:
  4109  001CA0  EFB6  F00D         	goto	l2441
  4110  001CA4                     u2210:
  4111  001CA4                     l97:
  4112                           
  4113                           ; BSR set to: 0
  4114  001CA4  0012               	return		;funcret
  4115  001CA6                     __end_of_initTabVue:
  4116                           	opt callstack 0
  4117                           
  4118 ;; *************** function _gagne *****************
  4119 ;; Defined at:
  4120 ;;		line 462 in file "main.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;  pMines          2    6[BANK0 ] PTR int 
  4123 ;;		 -> main@NBMines(2), 
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;  j               2   16[BANK0 ] int 
  4126 ;;  i               2   14[BANK0 ] int 
  4127 ;;  nb_Tuile        2   11[BANK0 ] int 
  4128 ;;  gagne           1   13[BANK0 ] unsigned char 
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1    wreg      unsigned char 
  4131 ;; Registers used:
  4132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4138 ;;      Params:         0       2       0       0       0       0       0
  4139 ;;      Locals:         0       7       0       0       0       0       0
  4140 ;;      Temps:          0       3       0       0       0       0       0
  4141 ;;      Totals:         0      12       0       0       0       0       0
  4142 ;;Total ram usage:       12 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    4
  4145 ;; This function calls:
  4146 ;;		___wmul
  4147 ;;		_lcd_effaceAffichage
  4148 ;; This function is called by:
  4149 ;;		_main
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           	psect	text14
  4154  001CA6                     __ptext14:
  4155                           	opt callstack 0
  4156  001CA6                     _gagne:
  4157                           	opt callstack 26
  4158  001CA6                     
  4159                           ;main.c: 464: int nb_Tuile =0;
  4160  001CA6  0E00               	movlw	0
  4161  001CA8  0100               	movlb	0	; force () banked
  4162  001CAA  6FC0               	movwf	(gagne@nb_Tuile+1)& (0+255),b
  4163  001CAC  0E00               	movlw	0
  4164  001CAE  6FBF               	movwf	gagne@nb_Tuile& (0+255),b
  4165                           
  4166                           ;main.c: 465: bool gagne= 0;
  4167  001CB0  0E00               	movlw	0
  4168  001CB2  0100               	movlb	0	; force () banked
  4169  001CB4  6FC1               	movwf	gagne@gagne& (0+255),b
  4170                           
  4171                           ;main.c: 466: int i=0;
  4172  001CB6  0E00               	movlw	0
  4173  001CB8  0100               	movlb	0	; force () banked
  4174  001CBA  6FC3               	movwf	(gagne@i+1)& (0+255),b
  4175  001CBC  0E00               	movlw	0
  4176  001CBE  6FC2               	movwf	gagne@i& (0+255),b
  4177                           
  4178                           ;main.c: 467: int j=0;
  4179  001CC0  0E00               	movlw	0
  4180  001CC2  0100               	movlb	0	; force () banked
  4181  001CC4  6FC5               	movwf	(gagne@j+1)& (0+255),b
  4182  001CC6  0E00               	movlw	0
  4183  001CC8  6FC4               	movwf	gagne@j& (0+255),b
  4184                           
  4185                           ;main.c: 468: for(i=0;i<4;i++)
  4186  001CCA  0E00               	movlw	0
  4187  001CCC  0100               	movlb	0	; force () banked
  4188  001CCE  6FC3               	movwf	(gagne@i+1)& (0+255),b
  4189  001CD0  0E00               	movlw	0
  4190  001CD2  6FC2               	movwf	gagne@i& (0+255),b
  4191  001CD4                     
  4192                           ; BSR set to: 0
  4193  001CD4  0100               	movlb	0	; force () banked
  4194  001CD6  BFC3               	btfsc	(gagne@i+1)& (0+255),7,b
  4195  001CD8  EF77  F00E         	goto	u2481
  4196  001CDC  51C3               	movf	(gagne@i+1)& (0+255),w,b
  4197  001CDE  E109               	bnz	u2480
  4198  001CE0  0E04               	movlw	4
  4199  001CE2  5DC2               	subwf	gagne@i& (0+255),w,b
  4200  001CE4  A0D8               	btfss	status,0,c
  4201  001CE6  EF77  F00E         	goto	u2481
  4202  001CEA  EF79  F00E         	goto	u2480
  4203  001CEE                     u2481:
  4204  001CEE  EF7B  F00E         	goto	l2603
  4205  001CF2                     u2480:
  4206  001CF2  EFE2  F00E         	goto	l2619
  4207  001CF6                     l2603:
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;main.c: 469: {;main.c: 470: for(j=0;j<20;j++)
  4211  001CF6  0E00               	movlw	0
  4212  001CF8  0100               	movlb	0	; force () banked
  4213  001CFA  6FC5               	movwf	(gagne@j+1)& (0+255),b
  4214  001CFC  0E00               	movlw	0
  4215  001CFE  6FC4               	movwf	gagne@j& (0+255),b
  4216  001D00                     
  4217                           ; BSR set to: 0
  4218  001D00  0100               	movlb	0	; force () banked
  4219  001D02  BFC5               	btfsc	(gagne@j+1)& (0+255),7,b
  4220  001D04  EF8D  F00E         	goto	u2491
  4221  001D08  51C5               	movf	(gagne@j+1)& (0+255),w,b
  4222  001D0A  E109               	bnz	u2490
  4223  001D0C  0E14               	movlw	20
  4224  001D0E  5DC4               	subwf	gagne@j& (0+255),w,b
  4225  001D10  A0D8               	btfss	status,0,c
  4226  001D12  EF8D  F00E         	goto	u2491
  4227  001D16  EF8F  F00E         	goto	u2490
  4228  001D1A                     u2491:
  4229  001D1A  EF91  F00E         	goto	l2609
  4230  001D1E                     u2490:
  4231  001D1E  EFD0  F00E         	goto	l2615
  4232  001D22                     l2609:
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;main.c: 471: {;main.c: 472: if(m_tabVue[i][j]==1)
  4236  001D22  C0C2  F0B4         	movff	gagne@i,___wmul@multiplier
  4237  001D26  C0C3  F0B5         	movff	gagne@i+1,___wmul@multiplier+1
  4238  001D2A  0E00               	movlw	0
  4239  001D2C  0100               	movlb	0	; force () banked
  4240  001D2E  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4241  001D30  0E15               	movlw	21
  4242  001D32  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4243  001D34  ECC5  F012         	call	___wmul	;wreg free
  4244  001D38  0E00               	movlw	low _m_tabVue
  4245  001D3A  0100               	movlb	0	; force () banked
  4246  001D3C  6FBC               	movwf	??_gagne& (0+255),b
  4247  001D3E  0E01               	movlw	high _m_tabVue
  4248  001D40  6FBD               	movwf	(??_gagne+1)& (0+255),b
  4249  001D42  0100               	movlb	0	; force () banked
  4250  001D44  51B4               	movf	?___wmul& (0+255),w,b
  4251  001D46  0100               	movlb	0	; force () banked
  4252  001D48  27BC               	addwf	??_gagne& (0+255),f,b
  4253  001D4A  0100               	movlb	0	; force () banked
  4254  001D4C  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4255  001D4E  0100               	movlb	0	; force () banked
  4256  001D50  23BD               	addwfc	(??_gagne+1)& (0+255),f,b
  4257  001D52  0100               	movlb	0	; force () banked
  4258  001D54  51C4               	movf	gagne@j& (0+255),w,b
  4259  001D56  0100               	movlb	0	; force () banked
  4260  001D58  25BC               	addwf	??_gagne& (0+255),w,b
  4261  001D5A  6ED9               	movwf	fsr2l,c
  4262  001D5C  0100               	movlb	0	; force () banked
  4263  001D5E  51C5               	movf	(gagne@j+1)& (0+255),w,b
  4264  001D60  0100               	movlb	0	; force () banked
  4265  001D62  21BD               	addwfc	(??_gagne+1)& (0+255),w,b
  4266  001D64  6EDA               	movwf	fsr2h,c
  4267  001D66  04DE               	decf	postinc2,w,c
  4268  001D68  A4D8               	btfss	status,2,c
  4269  001D6A  EFB9  F00E         	goto	u2501
  4270  001D6E  EFBB  F00E         	goto	u2500
  4271  001D72                     u2501:
  4272  001D72  EFBE  F00E         	goto	l201
  4273  001D76                     u2500:
  4274  001D76                     
  4275                           ; BSR set to: 0
  4276                           ;main.c: 473: {;main.c: 474: nb_Tuile++;
  4277  001D76  0100               	movlb	0	; force () banked
  4278  001D78  4BBF               	infsnz	gagne@nb_Tuile& (0+255),f,b
  4279  001D7A  2BC0               	incf	(gagne@nb_Tuile+1)& (0+255),f,b
  4280  001D7C                     l201:
  4281                           
  4282                           ; BSR set to: 0
  4283  001D7C  0100               	movlb	0	; force () banked
  4284  001D7E  4BC4               	infsnz	gagne@j& (0+255),f,b
  4285  001D80  2BC5               	incf	(gagne@j+1)& (0+255),f,b
  4286  001D82                     
  4287                           ; BSR set to: 0
  4288  001D82  0100               	movlb	0	; force () banked
  4289  001D84  BFC5               	btfsc	(gagne@j+1)& (0+255),7,b
  4290  001D86  EFCE  F00E         	goto	u2511
  4291  001D8A  51C5               	movf	(gagne@j+1)& (0+255),w,b
  4292  001D8C  E109               	bnz	u2510
  4293  001D8E  0E14               	movlw	20
  4294  001D90  5DC4               	subwf	gagne@j& (0+255),w,b
  4295  001D92  A0D8               	btfss	status,0,c
  4296  001D94  EFCE  F00E         	goto	u2511
  4297  001D98  EFD0  F00E         	goto	u2510
  4298  001D9C                     u2511:
  4299  001D9C  EF91  F00E         	goto	l2609
  4300  001DA0                     u2510:
  4301  001DA0                     l2615:
  4302                           
  4303                           ; BSR set to: 0
  4304  001DA0  0100               	movlb	0	; force () banked
  4305  001DA2  4BC2               	infsnz	gagne@i& (0+255),f,b
  4306  001DA4  2BC3               	incf	(gagne@i+1)& (0+255),f,b
  4307  001DA6                     
  4308                           ; BSR set to: 0
  4309  001DA6  0100               	movlb	0	; force () banked
  4310  001DA8  BFC3               	btfsc	(gagne@i+1)& (0+255),7,b
  4311  001DAA  EFE0  F00E         	goto	u2521
  4312  001DAE  51C3               	movf	(gagne@i+1)& (0+255),w,b
  4313  001DB0  E109               	bnz	u2520
  4314  001DB2  0E04               	movlw	4
  4315  001DB4  5DC2               	subwf	gagne@i& (0+255),w,b
  4316  001DB6  A0D8               	btfss	status,0,c
  4317  001DB8  EFE0  F00E         	goto	u2521
  4318  001DBC  EFE2  F00E         	goto	u2520
  4319  001DC0                     u2521:
  4320  001DC0  EF7B  F00E         	goto	l2603
  4321  001DC4                     u2520:
  4322  001DC4                     l2619:
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;main.c: 475: };main.c: 476: };main.c: 477: };main.c: 478: if (*pMines == nb_Tuile)
  4326  001DC4  C0BA  FFD9         	movff	gagne@pMines,fsr2l
  4327  001DC8  C0BB  FFDA         	movff	gagne@pMines+1,fsr2h
  4328  001DCC  0100               	movlb	0	; force () banked
  4329  001DCE  51BF               	movf	gagne@nb_Tuile& (0+255),w,b
  4330  001DD0  18DE               	xorwf	postinc2,w,c
  4331  001DD2  E107               	bnz	u2531
  4332  001DD4  51C0               	movf	(gagne@nb_Tuile+1)& (0+255),w,b
  4333  001DD6  18DE               	xorwf	postinc2,w,c
  4334  001DD8  A4D8               	btfss	status,2,c
  4335  001DDA  EFF1  F00E         	goto	u2531
  4336  001DDE  EFF3  F00E         	goto	u2530
  4337  001DE2                     u2531:
  4338  001DE2  EF0D  F00F         	goto	l2627
  4339  001DE6                     u2530:
  4340  001DE6                     
  4341                           ; BSR set to: 0
  4342                           ;main.c: 479: {;main.c: 480: lcd_effaceAffichage();
  4343  001DE6  EC09  F013         	call	_lcd_effaceAffichage	;wreg free
  4344  001DEA                     
  4345                           ;main.c: 481: (*pMines)=(*pMines) +1;
  4346  001DEA  C0BA  FFD9         	movff	gagne@pMines,fsr2l
  4347  001DEE  C0BB  FFDA         	movff	gagne@pMines+1,fsr2h
  4348  001DF2  CFDE F0BC          	movff	postinc2,??_gagne
  4349  001DF6  CFDD F0BD          	movff	postdec2,??_gagne+1
  4350  001DFA  0E01               	movlw	1
  4351  001DFC  0100               	movlb	0	; force () banked
  4352  001DFE  27BC               	addwf	??_gagne& (0+255),f,b
  4353  001E00  0E00               	movlw	0
  4354  001E02  23BD               	addwfc	(??_gagne+1)& (0+255),f,b
  4355  001E04  C0BA  FFD9         	movff	gagne@pMines,fsr2l
  4356  001E08  C0BB  FFDA         	movff	gagne@pMines+1,fsr2h
  4357  001E0C  C0BC  FFDE         	movff	??_gagne,postinc2
  4358  001E10  C0BD  FFDD         	movff	??_gagne+1,postdec2
  4359  001E14                     
  4360                           ; BSR set to: 0
  4361                           ;main.c: 482: gagne=1;
  4362  001E14  0E01               	movlw	1
  4363  001E16  0100               	movlb	0	; force () banked
  4364  001E18  6FC1               	movwf	gagne@gagne& (0+255),b
  4365  001E1A                     l2627:
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;main.c: 483: };main.c: 484: return gagne;
  4369  001E1A  0100               	movlb	0	; force () banked
  4370  001E1C  51C1               	movf	gagne@gagne& (0+255),w,b
  4371  001E1E                     
  4372                           ; BSR set to: 0
  4373  001E1E  0012               	return		;funcret
  4374  001E20                     __end_of_gagne:
  4375                           	opt callstack 0
  4376                           
  4377 ;; *************** function _lcd_effaceAffichage *****************
  4378 ;; Defined at:
  4379 ;;		line 276 in file "Lcd4Lignes.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;		None
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;		None
  4384 ;; Return value:  Size  Location     Type
  4385 ;;                  1    wreg      void 
  4386 ;; Registers used:
  4387 ;;		wreg, status,2, status,0, cstack
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4393 ;;      Params:         0       0       0       0       0       0       0
  4394 ;;      Locals:         0       0       0       0       0       0       0
  4395 ;;      Temps:          0       0       0       0       0       0       0
  4396 ;;      Totals:         0       0       0       0       0       0       0
  4397 ;;Total ram usage:        0 bytes
  4398 ;; Hardware stack levels used:    1
  4399 ;; Hardware stack levels required when called:    3
  4400 ;; This function calls:
  4401 ;;		_lcd_wrCom
  4402 ;; This function is called by:
  4403 ;;		_gagne
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           	psect	text15
  4408  002612                     __ptext15:
  4409                           	opt callstack 0
  4410  002612                     _lcd_effaceAffichage:
  4411                           	opt callstack 26
  4412  002612                     
  4413                           ;Lcd4Lignes.c: 278: lcd_wrCom(0x01);
  4414  002612  0E01               	movlw	1
  4415  002614  EC51  F011         	call	_lcd_wrCom
  4416                           
  4417                           ;Lcd4Lignes.c: 279: lcd_wrCom(0x80);
  4418  002618  0E80               	movlw	128
  4419  00261A  EC51  F011         	call	_lcd_wrCom
  4420  00261E  0012               	return		;funcret
  4421  002620                     __end_of_lcd_effaceAffichage:
  4422                           	opt callstack 0
  4423                           
  4424 ;; *************** function _deplace *****************
  4425 ;; Defined at:
  4426 ;;		line 346 in file "main.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;  x               2    5[BANK0 ] PTR unsigned char 
  4429 ;;		 -> main@x(1), 
  4430 ;;  y               2    7[BANK0 ] PTR unsigned char 
  4431 ;;		 -> main@y(1), 
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;		None
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1    wreg      void 
  4436 ;; Registers used:
  4437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4443 ;;      Params:         0       4       0       0       0       0       0
  4444 ;;      Locals:         0       0       0       0       0       0       0
  4445 ;;      Temps:          0       1       0       0       0       0       0
  4446 ;;      Totals:         0       5       0       0       0       0       0
  4447 ;;Total ram usage:        5 bytes
  4448 ;; Hardware stack levels used:    1
  4449 ;; Hardware stack levels required when called:    4
  4450 ;; This function calls:
  4451 ;;		_getAnalog
  4452 ;;		_lcd_gotoXY
  4453 ;; This function is called by:
  4454 ;;		_main
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text16
  4459  0019A6                     __ptext16:
  4460                           	opt callstack 0
  4461  0019A6                     _deplace:
  4462                           	opt callstack 26
  4463  0019A6                     
  4464                           ;main.c: 348: if(getAnalog(6)>220)
  4465  0019A6  0E06               	movlw	6
  4466  0019A8  EC9B  F012         	call	_getAnalog
  4467  0019AC  0100               	movlb	0	; force () banked
  4468  0019AE  6FBD               	movwf	??_deplace& (0+255),b
  4469  0019B0  0EDC               	movlw	220
  4470  0019B2  65BD               	cpfsgt	??_deplace& (0+255),b
  4471  0019B4  EFDE  F00C         	goto	u2371
  4472  0019B8  EFE0  F00C         	goto	u2370
  4473  0019BC                     u2371:
  4474  0019BC  EF01  F00D         	goto	l2547
  4475  0019C0                     u2370:
  4476  0019C0                     
  4477                           ; BSR set to: 0
  4478                           ;main.c: 349: {;main.c: 350: (*x)= (*x) +1;
  4479  0019C0  C0B9  FFD9         	movff	deplace@x,fsr2l
  4480  0019C4  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4481  0019C8  50DF               	movf	indf2,w,c
  4482  0019CA  0100               	movlb	0	; force () banked
  4483  0019CC  6FBD               	movwf	??_deplace& (0+255),b
  4484  0019CE  29BD               	incf	??_deplace& (0+255),w,b
  4485  0019D0  C0B9  FFD9         	movff	deplace@x,fsr2l
  4486  0019D4  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4487  0019D8  6EDF               	movwf	indf2,c
  4488                           
  4489                           ;main.c: 351: if (*x > 20)
  4490  0019DA  C0B9  FFD9         	movff	deplace@x,fsr2l
  4491  0019DE  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4492  0019E2  0E14               	movlw	20
  4493  0019E4  64DF               	cpfsgt	indf2,c
  4494  0019E6  EFF7  F00C         	goto	u2381
  4495  0019EA  EFF9  F00C         	goto	u2380
  4496  0019EE                     u2381:
  4497  0019EE  EF2D  F00D         	goto	l2555
  4498  0019F2                     u2380:
  4499  0019F2                     
  4500                           ; BSR set to: 0
  4501                           ;main.c: 352: {;main.c: 353: *x=1;
  4502  0019F2  C0B9  FFD9         	movff	deplace@x,fsr2l
  4503  0019F6  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4504  0019FA  0E01               	movlw	1
  4505  0019FC  6EDF               	movwf	indf2,c
  4506  0019FE  EF2D  F00D         	goto	l2555
  4507  001A02                     l2547:
  4508                           
  4509                           ; BSR set to: 0
  4510                           ;main.c: 356: else if(getAnalog(6)<110)
  4511  001A02  0E06               	movlw	6
  4512  001A04  EC9B  F012         	call	_getAnalog
  4513  001A08  0100               	movlb	0	; force () banked
  4514  001A0A  6FBD               	movwf	??_deplace& (0+255),b
  4515  001A0C  0E6E               	movlw	110
  4516  001A0E  61BD               	cpfslt	??_deplace& (0+255),b
  4517  001A10  EF0C  F00D         	goto	u2391
  4518  001A14  EF0E  F00D         	goto	u2390
  4519  001A18                     u2391:
  4520  001A18  EF2D  F00D         	goto	l2555
  4521  001A1C                     u2390:
  4522  001A1C                     
  4523                           ; BSR set to: 0
  4524                           ;main.c: 357: {;main.c: 358: (*x)=(*x)-1;
  4525  001A1C  C0B9  FFD9         	movff	deplace@x,fsr2l
  4526  001A20  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4527  001A24  50DF               	movf	indf2,w,c
  4528  001A26  0100               	movlb	0	; force () banked
  4529  001A28  6FBD               	movwf	??_deplace& (0+255),b
  4530  001A2A  05BD               	decf	??_deplace& (0+255),w,b
  4531  001A2C  C0B9  FFD9         	movff	deplace@x,fsr2l
  4532  001A30  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4533  001A34  6EDF               	movwf	indf2,c
  4534  001A36                     
  4535                           ; BSR set to: 0
  4536                           ;main.c: 359: if((*x)<1)
  4537  001A36  C0B9  FFD9         	movff	deplace@x,fsr2l
  4538  001A3A  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4539  001A3E  50DF               	movf	indf2,w,c
  4540  001A40  A4D8               	btfss	status,2,c
  4541  001A42  EF25  F00D         	goto	u2401
  4542  001A46  EF27  F00D         	goto	u2400
  4543  001A4A                     u2401:
  4544  001A4A  EF2D  F00D         	goto	l2555
  4545  001A4E                     u2400:
  4546  001A4E                     
  4547                           ; BSR set to: 0
  4548                           ;main.c: 360: {;main.c: 361: (*x)=20;
  4549  001A4E  C0B9  FFD9         	movff	deplace@x,fsr2l
  4550  001A52  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4551  001A56  0E14               	movlw	20
  4552  001A58  6EDF               	movwf	indf2,c
  4553  001A5A                     l2555:
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;main.c: 362: };main.c: 363: };main.c: 364: if(getAnalog(7)<110)
  4557  001A5A  0E07               	movlw	7
  4558  001A5C  EC9B  F012         	call	_getAnalog
  4559  001A60  0100               	movlb	0	; force () banked
  4560  001A62  6FBD               	movwf	??_deplace& (0+255),b
  4561  001A64  0E6E               	movlw	110
  4562  001A66  61BD               	cpfslt	??_deplace& (0+255),b
  4563  001A68  EF38  F00D         	goto	u2411
  4564  001A6C  EF3A  F00D         	goto	u2410
  4565  001A70                     u2411:
  4566  001A70  EF5B  F00D         	goto	l2561
  4567  001A74                     u2410:
  4568  001A74                     
  4569                           ; BSR set to: 0
  4570                           ;main.c: 365: {;main.c: 366: (*y)= (*y) +1;
  4571  001A74  C0BB  FFD9         	movff	deplace@y,fsr2l
  4572  001A78  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4573  001A7C  50DF               	movf	indf2,w,c
  4574  001A7E  0100               	movlb	0	; force () banked
  4575  001A80  6FBD               	movwf	??_deplace& (0+255),b
  4576  001A82  29BD               	incf	??_deplace& (0+255),w,b
  4577  001A84  C0BB  FFD9         	movff	deplace@y,fsr2l
  4578  001A88  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4579  001A8C  6EDF               	movwf	indf2,c
  4580                           
  4581                           ;main.c: 367: if ((*y )> 4)
  4582  001A8E  C0BB  FFD9         	movff	deplace@y,fsr2l
  4583  001A92  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4584  001A96  0E04               	movlw	4
  4585  001A98  64DF               	cpfsgt	indf2,c
  4586  001A9A  EF51  F00D         	goto	u2421
  4587  001A9E  EF53  F00D         	goto	u2420
  4588  001AA2                     u2421:
  4589  001AA2  EF87  F00D         	goto	l2569
  4590  001AA6                     u2420:
  4591  001AA6                     
  4592                           ; BSR set to: 0
  4593                           ;main.c: 368: {;main.c: 369: (*y)=1;
  4594  001AA6  C0BB  FFD9         	movff	deplace@y,fsr2l
  4595  001AAA  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4596  001AAE  0E01               	movlw	1
  4597  001AB0  6EDF               	movwf	indf2,c
  4598  001AB2  EF87  F00D         	goto	l2569
  4599  001AB6                     l2561:
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;main.c: 372: else if(getAnalog(7)>200)
  4603  001AB6  0E07               	movlw	7
  4604  001AB8  EC9B  F012         	call	_getAnalog
  4605  001ABC  0100               	movlb	0	; force () banked
  4606  001ABE  6FBD               	movwf	??_deplace& (0+255),b
  4607  001AC0  0EC8               	movlw	200
  4608  001AC2  65BD               	cpfsgt	??_deplace& (0+255),b
  4609  001AC4  EF66  F00D         	goto	u2431
  4610  001AC8  EF68  F00D         	goto	u2430
  4611  001ACC                     u2431:
  4612  001ACC  EF87  F00D         	goto	l2569
  4613  001AD0                     u2430:
  4614  001AD0                     
  4615                           ; BSR set to: 0
  4616                           ;main.c: 373: {;main.c: 374: (*y)=(*y) - 1;
  4617  001AD0  C0BB  FFD9         	movff	deplace@y,fsr2l
  4618  001AD4  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4619  001AD8  50DF               	movf	indf2,w,c
  4620  001ADA  0100               	movlb	0	; force () banked
  4621  001ADC  6FBD               	movwf	??_deplace& (0+255),b
  4622  001ADE  05BD               	decf	??_deplace& (0+255),w,b
  4623  001AE0  C0BB  FFD9         	movff	deplace@y,fsr2l
  4624  001AE4  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4625  001AE8  6EDF               	movwf	indf2,c
  4626  001AEA                     
  4627                           ; BSR set to: 0
  4628                           ;main.c: 375: if (*y < 1)
  4629  001AEA  C0BB  FFD9         	movff	deplace@y,fsr2l
  4630  001AEE  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4631  001AF2  50DF               	movf	indf2,w,c
  4632  001AF4  A4D8               	btfss	status,2,c
  4633  001AF6  EF7F  F00D         	goto	u2441
  4634  001AFA  EF81  F00D         	goto	u2440
  4635  001AFE                     u2441:
  4636  001AFE  EF87  F00D         	goto	l2569
  4637  001B02                     u2440:
  4638  001B02                     
  4639                           ; BSR set to: 0
  4640                           ;main.c: 376: {;main.c: 377: (*y)=4;
  4641  001B02  C0BB  FFD9         	movff	deplace@y,fsr2l
  4642  001B06  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4643  001B0A  0E04               	movlw	4
  4644  001B0C  6EDF               	movwf	indf2,c
  4645  001B0E                     l2569:
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;main.c: 378: };main.c: 379: };main.c: 380: lcd_gotoXY(*x ,*y);
  4649  001B0E  C0BB  FFD9         	movff	deplace@y,fsr2l
  4650  001B12  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4651  001B16  50DF               	movf	indf2,w,c
  4652  001B18  0100               	movlb	0	; force () banked
  4653  001B1A  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  4654  001B1C  C0B9  FFD9         	movff	deplace@x,fsr2l
  4655  001B20  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4656  001B24  50DF               	movf	indf2,w,c
  4657  001B26  ECE2  F010         	call	_lcd_gotoXY
  4658  001B2A  0012               	return		;funcret
  4659  001B2C                     __end_of_deplace:
  4660                           	opt callstack 0
  4661                           
  4662 ;; *************** function _getAnalog *****************
  4663 ;; Defined at:
  4664 ;;		line 111 in file "main.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;  canal           1    wreg     unsigned char 
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;  canal           1    1[BANK0 ] unsigned char 
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  1    wreg      unsigned char 
  4671 ;; Registers used:
  4672 ;;		wreg, status,2, status,0
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4678 ;;      Params:         0       0       0       0       0       0       0
  4679 ;;      Locals:         0       1       0       0       0       0       0
  4680 ;;      Temps:          0       1       0       0       0       0       0
  4681 ;;      Totals:         0       2       0       0       0       0       0
  4682 ;;Total ram usage:        2 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_deplace
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text17
  4692  002536                     __ptext17:
  4693                           	opt callstack 0
  4694  002536                     _getAnalog:
  4695                           	opt callstack 29
  4696                           
  4697                           ;incstack = 0
  4698                           ;getAnalog@canal stored from wreg
  4699  002536  0100               	movlb	0	; force () banked
  4700  002538  6FB5               	movwf	getAnalog@canal& (0+255),b
  4701  00253A                     
  4702                           ;main.c: 113: ADCON0bits.CHS = canal;
  4703  00253A  C0B5  F0B4         	movff	getAnalog@canal,??_getAnalog
  4704  00253E  0100               	movlb	0	; force () banked
  4705  002540  47B4               	rlncf	??_getAnalog& (0+255),f,b
  4706  002542  47B4               	rlncf	??_getAnalog& (0+255),f,b
  4707  002544  50C2               	movf	194,w,c	;volatile
  4708  002546  19B4               	xorwf	??_getAnalog& (0+255),w,b
  4709  002548  0BC3               	andlw	-61
  4710  00254A  19B4               	xorwf	??_getAnalog& (0+255),w,b
  4711  00254C  6EC2               	movwf	194,c	;volatile
  4712  00254E                     
  4713                           ;main.c: 115: ADCON0bits.GO_DONE = 1;
  4714  00254E  82C2               	bsf	194,1,c	;volatile
  4715  002550                     l85:
  4716  002550  B2C2               	btfsc	194,1,c	;volatile
  4717  002552  EFAD  F012         	goto	u91
  4718  002556  EFAF  F012         	goto	u90
  4719  00255A                     u91:
  4720  00255A  EFA8  F012         	goto	l85
  4721  00255E                     u90:
  4722  00255E                     
  4723                           ;main.c: 117: return ADRESH;
  4724  00255E  50C4               	movf	196,w,c	;volatile
  4725  002560  0012               	return		;funcret
  4726  002562                     __end_of_getAnalog:
  4727                           	opt callstack 0
  4728                           
  4729 ;; *************** function _demine *****************
  4730 ;; Defined at:
  4731 ;;		line 391 in file "main.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  x               1    wreg     unsigned char 
  4734 ;;  y               1   18[BANK0 ] unsigned char 
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;  x               1   24[BANK0 ] unsigned char 
  4737 ;;  mine            1   23[BANK0 ] unsigned char 
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  1    wreg      unsigned char 
  4740 ;; Registers used:
  4741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4747 ;;      Params:         0       1       0       0       0       0       0
  4748 ;;      Locals:         0       2       0       0       0       0       0
  4749 ;;      Temps:          0       4       0       0       0       0       0
  4750 ;;      Totals:         0       7       0       0       0       0       0
  4751 ;;Total ram usage:        7 bytes
  4752 ;; Hardware stack levels used:    1
  4753 ;; Hardware stack levels required when called:    5
  4754 ;; This function calls:
  4755 ;;		_enleveTuilesAutour
  4756 ;;		_lcd_ecritChar
  4757 ;; This function is called by:
  4758 ;;		_main
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           	psect	text18
  4763  00181C                     __ptext18:
  4764                           	opt callstack 0
  4765  00181C                     _demine:
  4766                           	opt callstack 25
  4767                           
  4768                           ;incstack = 0
  4769                           ;demine@x stored from wreg
  4770  00181C  0100               	movlb	0	; force () banked
  4771  00181E  6FCC               	movwf	demine@x& (0+255),b
  4772  001820                     
  4773                           ;main.c: 393: x=x-1;
  4774  001820  0100               	movlb	0	; force () banked
  4775  001822  05CC               	decf	demine@x& (0+255),w,b
  4776  001824  6FCC               	movwf	demine@x& (0+255),b
  4777                           
  4778                           ;main.c: 394: y=y-1;
  4779  001826  0100               	movlb	0	; force () banked
  4780  001828  05C6               	decf	demine@y& (0+255),w,b
  4781  00182A  6FC6               	movwf	demine@y& (0+255),b
  4782  00182C                     
  4783                           ; BSR set to: 0
  4784                           ;main.c: 395: bool mine= 1;
  4785  00182C  0E01               	movlw	1
  4786  00182E  0100               	movlb	0	; force () banked
  4787  001830  6FCB               	movwf	demine@mine& (0+255),b
  4788  001832                     
  4789                           ; BSR set to: 0
  4790                           ;main.c: 396: if (m_tabMines[(y)][(x)]== 2)
  4791  001832  0100               	movlb	0	; force () banked
  4792  001834  51C6               	movf	demine@y& (0+255),w,b
  4793  001836  0D15               	mullw	21
  4794  001838  0E60               	movlw	low _m_tabMines
  4795  00183A  0100               	movlb	0	; force () banked
  4796  00183C  6FC7               	movwf	??_demine& (0+255),b
  4797  00183E  0E00               	movlw	high _m_tabMines
  4798  001840  6FC8               	movwf	(??_demine+1)& (0+255),b
  4799  001842  50F3               	movf	243,w,c
  4800  001844  27C7               	addwf	??_demine& (0+255),f,b
  4801  001846  50F4               	movf	244,w,c
  4802  001848  23C8               	addwfc	(??_demine+1)& (0+255),f,b
  4803  00184A  0100               	movlb	0	; force () banked
  4804  00184C  51CC               	movf	demine@x& (0+255),w,b
  4805  00184E  0100               	movlb	0	; force () banked
  4806  001850  25C7               	addwf	??_demine& (0+255),w,b
  4807  001852  6ED9               	movwf	fsr2l,c
  4808  001854  0100               	movlb	0	; force () banked
  4809  001856  0E00               	movlw	0
  4810  001858  0100               	movlb	0	; force () banked
  4811  00185A  21C8               	addwfc	(??_demine+1)& (0+255),w,b
  4812  00185C  6EDA               	movwf	fsr2h,c
  4813  00185E  0E02               	movlw	2
  4814  001860  18DE               	xorwf	postinc2,w,c
  4815  001862  A4D8               	btfss	status,2,c
  4816  001864  EF36  F00C         	goto	u2451
  4817  001868  EF38  F00C         	goto	u2450
  4818  00186C                     u2451:
  4819  00186C  EF3D  F00C         	goto	l2579
  4820  001870                     u2450:
  4821  001870                     
  4822                           ; BSR set to: 0
  4823                           ;main.c: 397: {;main.c: 398: mine=0;
  4824  001870  0E00               	movlw	0
  4825  001872  0100               	movlb	0	; force () banked
  4826  001874  6FCB               	movwf	demine@mine& (0+255),b
  4827                           
  4828                           ;main.c: 399: }
  4829  001876  EFD0  F00C         	goto	l2593
  4830  00187A                     l2579:
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;main.c: 400: else if ((m_tabMines[(y)][(x)]!= 2)&&(m_tabMines[(y)][(x)]==32))
  4834  00187A  0100               	movlb	0	; force () banked
  4835  00187C  51C6               	movf	demine@y& (0+255),w,b
  4836  00187E  0D15               	mullw	21
  4837  001880  0E60               	movlw	low _m_tabMines
  4838  001882  0100               	movlb	0	; force () banked
  4839  001884  6FC7               	movwf	??_demine& (0+255),b
  4840  001886  0E00               	movlw	high _m_tabMines
  4841  001888  6FC8               	movwf	(??_demine+1)& (0+255),b
  4842  00188A  50F3               	movf	243,w,c
  4843  00188C  27C7               	addwf	??_demine& (0+255),f,b
  4844  00188E  50F4               	movf	244,w,c
  4845  001890  23C8               	addwfc	(??_demine+1)& (0+255),f,b
  4846  001892  0100               	movlb	0	; force () banked
  4847  001894  51CC               	movf	demine@x& (0+255),w,b
  4848  001896  0100               	movlb	0	; force () banked
  4849  001898  25C7               	addwf	??_demine& (0+255),w,b
  4850  00189A  6ED9               	movwf	fsr2l,c
  4851  00189C  0100               	movlb	0	; force () banked
  4852  00189E  0E00               	movlw	0
  4853  0018A0  0100               	movlb	0	; force () banked
  4854  0018A2  21C8               	addwfc	(??_demine+1)& (0+255),w,b
  4855  0018A4  6EDA               	movwf	fsr2h,c
  4856  0018A6  0E02               	movlw	2
  4857  0018A8  18DE               	xorwf	postinc2,w,c
  4858  0018AA  B4D8               	btfsc	status,2,c
  4859  0018AC  EF5A  F00C         	goto	u2461
  4860  0018B0  EF5C  F00C         	goto	u2460
  4861  0018B4                     u2461:
  4862  0018B4  EF86  F00C         	goto	l2587
  4863  0018B8                     u2460:
  4864  0018B8                     
  4865                           ; BSR set to: 0
  4866  0018B8  0100               	movlb	0	; force () banked
  4867  0018BA  51C6               	movf	demine@y& (0+255),w,b
  4868  0018BC  0D15               	mullw	21
  4869  0018BE  0E60               	movlw	low _m_tabMines
  4870  0018C0  0100               	movlb	0	; force () banked
  4871  0018C2  6FC7               	movwf	??_demine& (0+255),b
  4872  0018C4  0E00               	movlw	high _m_tabMines
  4873  0018C6  6FC8               	movwf	(??_demine+1)& (0+255),b
  4874  0018C8  50F3               	movf	243,w,c
  4875  0018CA  27C7               	addwf	??_demine& (0+255),f,b
  4876  0018CC  50F4               	movf	244,w,c
  4877  0018CE  23C8               	addwfc	(??_demine+1)& (0+255),f,b
  4878  0018D0  0100               	movlb	0	; force () banked
  4879  0018D2  51CC               	movf	demine@x& (0+255),w,b
  4880  0018D4  0100               	movlb	0	; force () banked
  4881  0018D6  25C7               	addwf	??_demine& (0+255),w,b
  4882  0018D8  6ED9               	movwf	fsr2l,c
  4883  0018DA  0100               	movlb	0	; force () banked
  4884  0018DC  0E00               	movlw	0
  4885  0018DE  0100               	movlb	0	; force () banked
  4886  0018E0  21C8               	addwfc	(??_demine+1)& (0+255),w,b
  4887  0018E2  6EDA               	movwf	fsr2h,c
  4888  0018E4  0E20               	movlw	32
  4889  0018E6  18DE               	xorwf	postinc2,w,c
  4890  0018E8  A4D8               	btfss	status,2,c
  4891  0018EA  EF79  F00C         	goto	u2471
  4892  0018EE  EF7B  F00C         	goto	u2470
  4893  0018F2                     u2471:
  4894  0018F2  EF86  F00C         	goto	l2587
  4895  0018F6                     u2470:
  4896  0018F6                     
  4897                           ; BSR set to: 0
  4898                           ;main.c: 401: {;main.c: 402: mine=1;
  4899  0018F6  0E01               	movlw	1
  4900  0018F8  0100               	movlb	0	; force () banked
  4901  0018FA  6FCB               	movwf	demine@mine& (0+255),b
  4902  0018FC                     
  4903                           ; BSR set to: 0
  4904                           ;main.c: 403: enleveTuilesAutour((x),(y));
  4905  0018FC  C0C6  F0BA         	movff	demine@y,enleveTuilesAutour@y
  4906  001900  0100               	movlb	0	; force () banked
  4907  001902  51CC               	movf	demine@x& (0+255),w,b
  4908  001904  ECA7  F008         	call	_enleveTuilesAutour
  4909                           
  4910                           ;main.c: 404: }
  4911  001908  EFD0  F00C         	goto	l2593
  4912  00190C                     l2587:
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;main.c: 405: else;main.c: 406: {;main.c: 407: mine=1;
  4916  00190C  0E01               	movlw	1
  4917  00190E  0100               	movlb	0	; force () banked
  4918  001910  6FCB               	movwf	demine@mine& (0+255),b
  4919  001912                     
  4920                           ; BSR set to: 0
  4921                           ;main.c: 408: m_tabVue[y][x]=m_tabMines[y][x];
  4922  001912  0100               	movlb	0	; force () banked
  4923  001914  51C6               	movf	demine@y& (0+255),w,b
  4924  001916  0D15               	mullw	21
  4925  001918  0E60               	movlw	low _m_tabMines
  4926  00191A  0100               	movlb	0	; force () banked
  4927  00191C  6FC7               	movwf	??_demine& (0+255),b
  4928  00191E  0E00               	movlw	high _m_tabMines
  4929  001920  6FC8               	movwf	(??_demine+1)& (0+255),b
  4930  001922  50F3               	movf	243,w,c
  4931  001924  27C7               	addwf	??_demine& (0+255),f,b
  4932  001926  50F4               	movf	244,w,c
  4933  001928  23C8               	addwfc	(??_demine+1)& (0+255),f,b
  4934  00192A  0100               	movlb	0	; force () banked
  4935  00192C  51CC               	movf	demine@x& (0+255),w,b
  4936  00192E  0100               	movlb	0	; force () banked
  4937  001930  25C7               	addwf	??_demine& (0+255),w,b
  4938  001932  6ED9               	movwf	fsr2l,c
  4939  001934  0100               	movlb	0	; force () banked
  4940  001936  0E00               	movlw	0
  4941  001938  0100               	movlb	0	; force () banked
  4942  00193A  21C8               	addwfc	(??_demine+1)& (0+255),w,b
  4943  00193C  6EDA               	movwf	fsr2h,c
  4944  00193E  0100               	movlb	0	; force () banked
  4945  001940  51C6               	movf	demine@y& (0+255),w,b
  4946  001942  0D15               	mullw	21
  4947  001944  0E00               	movlw	low _m_tabVue
  4948  001946  0100               	movlb	0	; force () banked
  4949  001948  6FC9               	movwf	(??_demine+2)& (0+255),b
  4950  00194A  0E01               	movlw	high _m_tabVue
  4951  00194C  6FCA               	movwf	(??_demine+3)& (0+255),b
  4952  00194E  50F3               	movf	243,w,c
  4953  001950  27C9               	addwf	(??_demine+2)& (0+255),f,b
  4954  001952  50F4               	movf	244,w,c
  4955  001954  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  4956  001956  0100               	movlb	0	; force () banked
  4957  001958  51CC               	movf	demine@x& (0+255),w,b
  4958  00195A  0100               	movlb	0	; force () banked
  4959  00195C  25C9               	addwf	(??_demine+2)& (0+255),w,b
  4960  00195E  6EE1               	movwf	fsr1l,c
  4961  001960  0100               	movlb	0	; force () banked
  4962  001962  0E00               	movlw	0
  4963  001964  0100               	movlb	0	; force () banked
  4964  001966  21CA               	addwfc	(??_demine+3)& (0+255),w,b
  4965  001968  6EE2               	movwf	fsr1h,c
  4966  00196A  CFDF FFE7          	movff	indf2,indf1
  4967  00196E                     
  4968                           ; BSR set to: 0
  4969                           ;main.c: 409: lcd_ecritChar(m_tabVue[y][x]);
  4970  00196E  0100               	movlb	0	; force () banked
  4971  001970  51C6               	movf	demine@y& (0+255),w,b
  4972  001972  0D15               	mullw	21
  4973  001974  0E00               	movlw	low _m_tabVue
  4974  001976  0100               	movlb	0	; force () banked
  4975  001978  6FC7               	movwf	??_demine& (0+255),b
  4976  00197A  0E01               	movlw	high _m_tabVue
  4977  00197C  6FC8               	movwf	(??_demine+1)& (0+255),b
  4978  00197E  50F3               	movf	243,w,c
  4979  001980  27C7               	addwf	??_demine& (0+255),f,b
  4980  001982  50F4               	movf	244,w,c
  4981  001984  23C8               	addwfc	(??_demine+1)& (0+255),f,b
  4982  001986  0100               	movlb	0	; force () banked
  4983  001988  51CC               	movf	demine@x& (0+255),w,b
  4984  00198A  0100               	movlb	0	; force () banked
  4985  00198C  25C7               	addwf	??_demine& (0+255),w,b
  4986  00198E  6ED9               	movwf	fsr2l,c
  4987  001990  0100               	movlb	0	; force () banked
  4988  001992  0E00               	movlw	0
  4989  001994  0100               	movlb	0	; force () banked
  4990  001996  21C8               	addwfc	(??_demine+1)& (0+255),w,b
  4991  001998  6EDA               	movwf	fsr2h,c
  4992  00199A  50DF               	movf	indf2,w,c
  4993  00199C  EC16  F012         	call	_lcd_ecritChar
  4994  0019A0                     l2593:
  4995                           
  4996                           ;main.c: 410: };main.c: 411: return mine;
  4997  0019A0  0100               	movlb	0	; force () banked
  4998  0019A2  51CB               	movf	demine@mine& (0+255),w,b
  4999  0019A4                     
  5000                           ; BSR set to: 0
  5001  0019A4  0012               	return		;funcret
  5002  0019A6                     __end_of_demine:
  5003                           	opt callstack 0
  5004                           
  5005 ;; *************** function _enleveTuilesAutour *****************
  5006 ;; Defined at:
  5007 ;;		line 420 in file "main.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;  x               1    wreg     unsigned char 
  5010 ;;  y               1    6[BANK0 ] unsigned char 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;  x               1   13[BANK0 ] unsigned char 
  5013 ;;  j               2   14[BANK0 ] int 
  5014 ;;  i               2   16[BANK0 ] int 
  5015 ;;  mine            2   11[BANK0 ] int 
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  1    wreg      void 
  5018 ;; Registers used:
  5019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5025 ;;      Params:         0       1       0       0       0       0       0
  5026 ;;      Locals:         0       7       0       0       0       0       0
  5027 ;;      Temps:          0       4       0       0       0       0       0
  5028 ;;      Totals:         0      12       0       0       0       0       0
  5029 ;;Total ram usage:       12 bytes
  5030 ;; Hardware stack levels used:    1
  5031 ;; Hardware stack levels required when called:    4
  5032 ;; This function calls:
  5033 ;;		___wmul
  5034 ;;		_lcd_ecritChar
  5035 ;;		_lcd_gotoXY
  5036 ;; This function is called by:
  5037 ;;		_demine
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           	psect	text19
  5042  00114E                     __ptext19:
  5043                           	opt callstack 0
  5044  00114E                     _enleveTuilesAutour:
  5045                           	opt callstack 25
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;incstack = 0
  5049                           ;enleveTuilesAutour@x stored from wreg
  5050  00114E  0100               	movlb	0	; force () banked
  5051  001150  6FC1               	movwf	enleveTuilesAutour@x& (0+255),b
  5052  001152                     
  5053                           ;main.c: 422: int i=0;
  5054  001152  0E00               	movlw	0
  5055  001154  0100               	movlb	0	; force () banked
  5056  001156  6FC5               	movwf	(enleveTuilesAutour@i+1)& (0+255),b
  5057  001158  0E00               	movlw	0
  5058  00115A  6FC4               	movwf	enleveTuilesAutour@i& (0+255),b
  5059                           
  5060                           ;main.c: 423: int mine=0;
  5061  00115C  0E00               	movlw	0
  5062  00115E  0100               	movlb	0	; force () banked
  5063  001160  6FC0               	movwf	(enleveTuilesAutour@mine+1)& (0+255),b
  5064  001162  0E00               	movlw	0
  5065  001164  6FBF               	movwf	enleveTuilesAutour@mine& (0+255),b
  5066  001166                     
  5067                           ; BSR set to: 0
  5068                           ;main.c: 425: m_tabVue[y][x]=32;
  5069  001166  0100               	movlb	0	; force () banked
  5070  001168  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5071  00116A  0D15               	mullw	21
  5072  00116C  0E00               	movlw	low _m_tabVue
  5073  00116E  0100               	movlb	0	; force () banked
  5074  001170  6FBB               	movwf	??_enleveTuilesAutour& (0+255),b
  5075  001172  0E01               	movlw	high _m_tabVue
  5076  001174  6FBC               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  5077  001176  50F3               	movf	243,w,c
  5078  001178  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5079  00117A  50F4               	movf	244,w,c
  5080  00117C  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5081  00117E  0100               	movlb	0	; force () banked
  5082  001180  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5083  001182  0100               	movlb	0	; force () banked
  5084  001184  25BB               	addwf	??_enleveTuilesAutour& (0+255),w,b
  5085  001186  6ED9               	movwf	fsr2l,c
  5086  001188  0100               	movlb	0	; force () banked
  5087  00118A  0E00               	movlw	0
  5088  00118C  0100               	movlb	0	; force () banked
  5089  00118E  21BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  5090  001190  6EDA               	movwf	fsr2h,c
  5091  001192  0E20               	movlw	32
  5092  001194  6EDF               	movwf	indf2,c
  5093  001196                     
  5094                           ; BSR set to: 0
  5095                           ;main.c: 426: for ( i=-1;i<=1;i++)
  5096  001196  0100               	movlb	0	; force () banked
  5097  001198  69C4               	setf	enleveTuilesAutour@i& (0+255),b
  5098  00119A  69C5               	setf	(enleveTuilesAutour@i+1)& (0+255),b
  5099  00119C                     
  5100                           ; BSR set to: 0
  5101  00119C  0100               	movlb	0	; force () banked
  5102  00119E  BFC5               	btfsc	(enleveTuilesAutour@i+1)& (0+255),7,b
  5103  0011A0  EFDB  F008         	goto	u1941
  5104  0011A4  51C5               	movf	(enleveTuilesAutour@i+1)& (0+255),w,b
  5105  0011A6  E109               	bnz	u1940
  5106  0011A8  0E02               	movlw	2
  5107  0011AA  5DC4               	subwf	enleveTuilesAutour@i& (0+255),w,b
  5108  0011AC  A0D8               	btfss	status,0,c
  5109  0011AE  EFDB  F008         	goto	u1941
  5110  0011B2  EFDD  F008         	goto	u1940
  5111  0011B6                     u1941:
  5112  0011B6  EFDF  F008         	goto	l2289
  5113  0011BA                     u1940:
  5114  0011BA  EF1F  F00A         	goto	l194
  5115  0011BE                     l2289:
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;main.c: 427: {;main.c: 428: if((y==0)&&(i==-1))
  5119  0011BE  0100               	movlb	0	; force () banked
  5120  0011C0  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5121  0011C2  A4D8               	btfss	status,2,c
  5122  0011C4  EFE6  F008         	goto	u1951
  5123  0011C8  EFE8  F008         	goto	u1950
  5124  0011CC                     u1951:
  5125  0011CC  EFF8  F008         	goto	l2295
  5126  0011D0                     u1950:
  5127  0011D0                     
  5128                           ; BSR set to: 0
  5129  0011D0  0100               	movlb	0	; force () banked
  5130  0011D2  29C4               	incf	enleveTuilesAutour@i& (0+255),w,b
  5131  0011D4  E106               	bnz	u1961
  5132  0011D6  29C5               	incf	(enleveTuilesAutour@i+1)& (0+255),w,b
  5133  0011D8  A4D8               	btfss	status,2,c
  5134  0011DA  EFF1  F008         	goto	u1961
  5135  0011DE  EFF3  F008         	goto	u1960
  5136  0011E2                     u1961:
  5137  0011E2  EFF8  F008         	goto	l2295
  5138  0011E6                     u1960:
  5139  0011E6                     
  5140                           ; BSR set to: 0
  5141                           ;main.c: 429: {;main.c: 430: i=0;
  5142  0011E6  0E00               	movlw	0
  5143  0011E8  0100               	movlb	0	; force () banked
  5144  0011EA  6FC5               	movwf	(enleveTuilesAutour@i+1)& (0+255),b
  5145  0011EC  0E00               	movlw	0
  5146  0011EE  6FC4               	movwf	enleveTuilesAutour@i& (0+255),b
  5147  0011F0                     l2295:
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;main.c: 431: };main.c: 432: for(int j=-1;j<=1;j++)
  5151  0011F0  0100               	movlb	0	; force () banked
  5152  0011F2  69C2               	setf	enleveTuilesAutour@j& (0+255),b
  5153  0011F4  69C3               	setf	(enleveTuilesAutour@j+1)& (0+255),b
  5154  0011F6                     
  5155                           ; BSR set to: 0
  5156  0011F6  0100               	movlb	0	; force () banked
  5157  0011F8  BFC3               	btfsc	(enleveTuilesAutour@j+1)& (0+255),7,b
  5158  0011FA  EF08  F009         	goto	u1971
  5159  0011FE  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5160  001200  E109               	bnz	u1970
  5161  001202  0E02               	movlw	2
  5162  001204  5DC2               	subwf	enleveTuilesAutour@j& (0+255),w,b
  5163  001206  A0D8               	btfss	status,0,c
  5164  001208  EF08  F009         	goto	u1971
  5165  00120C  EF0A  F009         	goto	u1970
  5166  001210                     u1971:
  5167  001210  EF0C  F009         	goto	l2301
  5168  001214                     u1970:
  5169  001214  EFF4  F009         	goto	l2323
  5170  001218                     l2301:
  5171                           
  5172                           ; BSR set to: 0
  5173                           ;main.c: 433: {;main.c: 434: if((x==0)&&(j==-1))
  5174  001218  0100               	movlb	0	; force () banked
  5175  00121A  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5176  00121C  A4D8               	btfss	status,2,c
  5177  00121E  EF13  F009         	goto	u1981
  5178  001222  EF15  F009         	goto	u1980
  5179  001226                     u1981:
  5180  001226  EF25  F009         	goto	l2307
  5181  00122A                     u1980:
  5182  00122A                     
  5183                           ; BSR set to: 0
  5184  00122A  0100               	movlb	0	; force () banked
  5185  00122C  29C2               	incf	enleveTuilesAutour@j& (0+255),w,b
  5186  00122E  E106               	bnz	u1991
  5187  001230  29C3               	incf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5188  001232  A4D8               	btfss	status,2,c
  5189  001234  EF1E  F009         	goto	u1991
  5190  001238  EF20  F009         	goto	u1990
  5191  00123C                     u1991:
  5192  00123C  EF25  F009         	goto	l2307
  5193  001240                     u1990:
  5194  001240                     
  5195                           ; BSR set to: 0
  5196                           ;main.c: 435: {;main.c: 436: j=0;
  5197  001240  0E00               	movlw	0
  5198  001242  0100               	movlb	0	; force () banked
  5199  001244  6FC3               	movwf	(enleveTuilesAutour@j+1)& (0+255),b
  5200  001246  0E00               	movlw	0
  5201  001248  6FC2               	movwf	enleveTuilesAutour@j& (0+255),b
  5202  00124A                     l2307:
  5203                           
  5204                           ; BSR set to: 0
  5205                           ;main.c: 437: };main.c: 438: m_tabVue[y+i][x+j]= m_tabMines[y+i][x+j];
  5206  00124A  C0C4  F0B4         	movff	enleveTuilesAutour@i,___wmul@multiplier
  5207  00124E  C0C5  F0B5         	movff	enleveTuilesAutour@i+1,___wmul@multiplier+1
  5208  001252  0E00               	movlw	0
  5209  001254  0100               	movlb	0	; force () banked
  5210  001256  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5211  001258  0E15               	movlw	21
  5212  00125A  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  5213  00125C  ECC5  F012         	call	___wmul	;wreg free
  5214  001260  0100               	movlb	0	; force () banked
  5215  001262  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5216  001264  0D15               	mullw	21
  5217  001266  0E60               	movlw	low _m_tabMines
  5218  001268  0100               	movlb	0	; force () banked
  5219  00126A  6FBB               	movwf	??_enleveTuilesAutour& (0+255),b
  5220  00126C  0E00               	movlw	high _m_tabMines
  5221  00126E  6FBC               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  5222  001270  50F3               	movf	243,w,c
  5223  001272  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5224  001274  50F4               	movf	244,w,c
  5225  001276  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5226  001278  0100               	movlb	0	; force () banked
  5227  00127A  51B4               	movf	?___wmul& (0+255),w,b
  5228  00127C  0100               	movlb	0	; force () banked
  5229  00127E  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5230  001280  0100               	movlb	0	; force () banked
  5231  001282  51B5               	movf	(?___wmul+1)& (0+255),w,b
  5232  001284  0100               	movlb	0	; force () banked
  5233  001286  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5234  001288  0100               	movlb	0	; force () banked
  5235  00128A  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5236  00128C  0100               	movlb	0	; force () banked
  5237  00128E  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5238  001290  0E00               	movlw	0
  5239  001292  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5240  001294  0100               	movlb	0	; force () banked
  5241  001296  51C2               	movf	enleveTuilesAutour@j& (0+255),w,b
  5242  001298  0100               	movlb	0	; force () banked
  5243  00129A  25BB               	addwf	??_enleveTuilesAutour& (0+255),w,b
  5244  00129C  6ED9               	movwf	fsr2l,c
  5245  00129E  0100               	movlb	0	; force () banked
  5246  0012A0  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5247  0012A2  0100               	movlb	0	; force () banked
  5248  0012A4  21BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  5249  0012A6  6EDA               	movwf	fsr2h,c
  5250  0012A8  C0C4  F0B4         	movff	enleveTuilesAutour@i,___wmul@multiplier
  5251  0012AC  C0C5  F0B5         	movff	enleveTuilesAutour@i+1,___wmul@multiplier+1
  5252  0012B0  0E00               	movlw	0
  5253  0012B2  0100               	movlb	0	; force () banked
  5254  0012B4  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5255  0012B6  0E15               	movlw	21
  5256  0012B8  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  5257  0012BA  ECC5  F012         	call	___wmul	;wreg free
  5258  0012BE  0100               	movlb	0	; force () banked
  5259  0012C0  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5260  0012C2  0D15               	mullw	21
  5261  0012C4  0E00               	movlw	low _m_tabVue
  5262  0012C6  0100               	movlb	0	; force () banked
  5263  0012C8  6FBD               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  5264  0012CA  0E01               	movlw	high _m_tabVue
  5265  0012CC  6FBE               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  5266  0012CE  50F3               	movf	243,w,c
  5267  0012D0  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  5268  0012D2  50F4               	movf	244,w,c
  5269  0012D4  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  5270  0012D6  0100               	movlb	0	; force () banked
  5271  0012D8  51B4               	movf	?___wmul& (0+255),w,b
  5272  0012DA  0100               	movlb	0	; force () banked
  5273  0012DC  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  5274  0012DE  0100               	movlb	0	; force () banked
  5275  0012E0  51B5               	movf	(?___wmul+1)& (0+255),w,b
  5276  0012E2  0100               	movlb	0	; force () banked
  5277  0012E4  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  5278  0012E6  0100               	movlb	0	; force () banked
  5279  0012E8  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5280  0012EA  0100               	movlb	0	; force () banked
  5281  0012EC  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  5282  0012EE  0E00               	movlw	0
  5283  0012F0  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  5284  0012F2  0100               	movlb	0	; force () banked
  5285  0012F4  51C2               	movf	enleveTuilesAutour@j& (0+255),w,b
  5286  0012F6  0100               	movlb	0	; force () banked
  5287  0012F8  25BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  5288  0012FA  6EE1               	movwf	fsr1l,c
  5289  0012FC  0100               	movlb	0	; force () banked
  5290  0012FE  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5291  001300  0100               	movlb	0	; force () banked
  5292  001302  21BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  5293  001304  6EE2               	movwf	fsr1h,c
  5294  001306  CFDF FFE7          	movff	indf2,indf1
  5295  00130A                     
  5296                           ; BSR set to: 0
  5297                           ;main.c: 439: lcd_gotoXY(x+1+j,y+i+1);
  5298  00130A  0100               	movlb	0	; force () banked
  5299  00130C  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5300  00130E  0100               	movlb	0	; force () banked
  5301  001310  25C4               	addwf	enleveTuilesAutour@i& (0+255),w,b
  5302  001312  0100               	movlb	0	; force () banked
  5303  001314  6FBB               	movwf	??_enleveTuilesAutour& (0+255),b
  5304  001316  29BB               	incf	??_enleveTuilesAutour& (0+255),w,b
  5305  001318  0100               	movlb	0	; force () banked
  5306  00131A  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  5307  00131C  0100               	movlb	0	; force () banked
  5308  00131E  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5309  001320  0100               	movlb	0	; force () banked
  5310  001322  25C2               	addwf	enleveTuilesAutour@j& (0+255),w,b
  5311  001324  0100               	movlb	0	; force () banked
  5312  001326  6FBC               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  5313  001328  29BC               	incf	(??_enleveTuilesAutour+1)& (0+255),w,b
  5314  00132A  ECE2  F010         	call	_lcd_gotoXY
  5315  00132E                     
  5316                           ;main.c: 440: lcd_ecritChar(m_tabVue[y+i][x+j]);
  5317  00132E  C0C4  F0B4         	movff	enleveTuilesAutour@i,___wmul@multiplier
  5318  001332  C0C5  F0B5         	movff	enleveTuilesAutour@i+1,___wmul@multiplier+1
  5319  001336  0E00               	movlw	0
  5320  001338  0100               	movlb	0	; force () banked
  5321  00133A  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5322  00133C  0E15               	movlw	21
  5323  00133E  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  5324  001340  ECC5  F012         	call	___wmul	;wreg free
  5325  001344  0100               	movlb	0	; force () banked
  5326  001346  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5327  001348  0D15               	mullw	21
  5328  00134A  0E00               	movlw	low _m_tabVue
  5329  00134C  0100               	movlb	0	; force () banked
  5330  00134E  6FBB               	movwf	??_enleveTuilesAutour& (0+255),b
  5331  001350  0E01               	movlw	high _m_tabVue
  5332  001352  6FBC               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  5333  001354  50F3               	movf	243,w,c
  5334  001356  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5335  001358  50F4               	movf	244,w,c
  5336  00135A  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5337  00135C  0100               	movlb	0	; force () banked
  5338  00135E  51B4               	movf	?___wmul& (0+255),w,b
  5339  001360  0100               	movlb	0	; force () banked
  5340  001362  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5341  001364  0100               	movlb	0	; force () banked
  5342  001366  51B5               	movf	(?___wmul+1)& (0+255),w,b
  5343  001368  0100               	movlb	0	; force () banked
  5344  00136A  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5345  00136C  0100               	movlb	0	; force () banked
  5346  00136E  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5347  001370  0100               	movlb	0	; force () banked
  5348  001372  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5349  001374  0E00               	movlw	0
  5350  001376  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5351  001378  0100               	movlb	0	; force () banked
  5352  00137A  51C2               	movf	enleveTuilesAutour@j& (0+255),w,b
  5353  00137C  0100               	movlb	0	; force () banked
  5354  00137E  25BB               	addwf	??_enleveTuilesAutour& (0+255),w,b
  5355  001380  6ED9               	movwf	fsr2l,c
  5356  001382  0100               	movlb	0	; force () banked
  5357  001384  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5358  001386  0100               	movlb	0	; force () banked
  5359  001388  21BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  5360  00138A  6EDA               	movwf	fsr2h,c
  5361  00138C  50DF               	movf	indf2,w,c
  5362  00138E  EC16  F012         	call	_lcd_ecritChar
  5363  001392                     
  5364                           ;main.c: 441: if((x==19)&&(j==0))
  5365  001392  0E13               	movlw	19
  5366  001394  0100               	movlb	0	; force () banked
  5367  001396  19C1               	xorwf	enleveTuilesAutour@x& (0+255),w,b
  5368  001398  A4D8               	btfss	status,2,c
  5369  00139A  EFD1  F009         	goto	u2001
  5370  00139E  EFD3  F009         	goto	u2000
  5371  0013A2                     u2001:
  5372  0013A2  EFE2  F009         	goto	l2319
  5373  0013A6                     u2000:
  5374  0013A6                     
  5375                           ; BSR set to: 0
  5376  0013A6  0100               	movlb	0	; force () banked
  5377  0013A8  51C2               	movf	enleveTuilesAutour@j& (0+255),w,b
  5378  0013AA  11C3               	iorwf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5379  0013AC  A4D8               	btfss	status,2,c
  5380  0013AE  EFDB  F009         	goto	u2011
  5381  0013B2  EFDD  F009         	goto	u2010
  5382  0013B6                     u2011:
  5383  0013B6  EFE2  F009         	goto	l2319
  5384  0013BA                     u2010:
  5385  0013BA                     
  5386                           ; BSR set to: 0
  5387                           ;main.c: 442: {;main.c: 443: j=1;
  5388  0013BA  0E00               	movlw	0
  5389  0013BC  0100               	movlb	0	; force () banked
  5390  0013BE  6FC3               	movwf	(enleveTuilesAutour@j+1)& (0+255),b
  5391  0013C0  0E01               	movlw	1
  5392  0013C2  6FC2               	movwf	enleveTuilesAutour@j& (0+255),b
  5393  0013C4                     l2319:
  5394                           
  5395                           ; BSR set to: 0
  5396  0013C4  0100               	movlb	0	; force () banked
  5397  0013C6  4BC2               	infsnz	enleveTuilesAutour@j& (0+255),f,b
  5398  0013C8  2BC3               	incf	(enleveTuilesAutour@j+1)& (0+255),f,b
  5399  0013CA                     
  5400                           ; BSR set to: 0
  5401  0013CA  0100               	movlb	0	; force () banked
  5402  0013CC  BFC3               	btfsc	(enleveTuilesAutour@j+1)& (0+255),7,b
  5403  0013CE  EFF2  F009         	goto	u2021
  5404  0013D2  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5405  0013D4  E109               	bnz	u2020
  5406  0013D6  0E02               	movlw	2
  5407  0013D8  5DC2               	subwf	enleveTuilesAutour@j& (0+255),w,b
  5408  0013DA  A0D8               	btfss	status,0,c
  5409  0013DC  EFF2  F009         	goto	u2021
  5410  0013E0  EFF4  F009         	goto	u2020
  5411  0013E4                     u2021:
  5412  0013E4  EF0C  F009         	goto	l2301
  5413  0013E8                     u2020:
  5414  0013E8                     l2323:
  5415                           
  5416                           ; BSR set to: 0
  5417                           ;main.c: 444: };main.c: 445: };main.c: 446: if((y==3)&&(i==0))
  5418  0013E8  0E03               	movlw	3
  5419  0013EA  0100               	movlb	0	; force () banked
  5420  0013EC  19BA               	xorwf	enleveTuilesAutour@y& (0+255),w,b
  5421  0013EE  A4D8               	btfss	status,2,c
  5422  0013F0  EFFC  F009         	goto	u2031
  5423  0013F4  EFFE  F009         	goto	u2030
  5424  0013F8                     u2031:
  5425  0013F8  EF0D  F00A         	goto	l2329
  5426  0013FC                     u2030:
  5427  0013FC                     
  5428                           ; BSR set to: 0
  5429  0013FC  0100               	movlb	0	; force () banked
  5430  0013FE  51C4               	movf	enleveTuilesAutour@i& (0+255),w,b
  5431  001400  11C5               	iorwf	(enleveTuilesAutour@i+1)& (0+255),w,b
  5432  001402  A4D8               	btfss	status,2,c
  5433  001404  EF06  F00A         	goto	u2041
  5434  001408  EF08  F00A         	goto	u2040
  5435  00140C                     u2041:
  5436  00140C  EF0D  F00A         	goto	l2329
  5437  001410                     u2040:
  5438  001410                     
  5439                           ; BSR set to: 0
  5440                           ;main.c: 447: {;main.c: 448: i=1;
  5441  001410  0E00               	movlw	0
  5442  001412  0100               	movlb	0	; force () banked
  5443  001414  6FC5               	movwf	(enleveTuilesAutour@i+1)& (0+255),b
  5444  001416  0E01               	movlw	1
  5445  001418  6FC4               	movwf	enleveTuilesAutour@i& (0+255),b
  5446  00141A                     l2329:
  5447                           
  5448                           ; BSR set to: 0
  5449  00141A  0100               	movlb	0	; force () banked
  5450  00141C  4BC4               	infsnz	enleveTuilesAutour@i& (0+255),f,b
  5451  00141E  2BC5               	incf	(enleveTuilesAutour@i+1)& (0+255),f,b
  5452  001420                     
  5453                           ; BSR set to: 0
  5454  001420  0100               	movlb	0	; force () banked
  5455  001422  BFC5               	btfsc	(enleveTuilesAutour@i+1)& (0+255),7,b
  5456  001424  EF1D  F00A         	goto	u2051
  5457  001428  51C5               	movf	(enleveTuilesAutour@i+1)& (0+255),w,b
  5458  00142A  E109               	bnz	u2050
  5459  00142C  0E02               	movlw	2
  5460  00142E  5DC4               	subwf	enleveTuilesAutour@i& (0+255),w,b
  5461  001430  A0D8               	btfss	status,0,c
  5462  001432  EF1D  F00A         	goto	u2051
  5463  001436  EF1F  F00A         	goto	u2050
  5464  00143A                     u2051:
  5465  00143A  EFDF  F008         	goto	l2289
  5466  00143E                     u2050:
  5467  00143E                     l194:
  5468                           
  5469                           ; BSR set to: 0
  5470  00143E  0012               	return		;funcret
  5471  001440                     __end_of_enleveTuilesAutour:
  5472                           	opt callstack 0
  5473                           
  5474 ;; *************** function _afficheTabVue *****************
  5475 ;; Defined at:
  5476 ;;		line 491 in file "main.c"
  5477 ;; Parameters:    Size  Location     Type
  5478 ;;		None
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;  i               2   17[BANK0 ] int 
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  1    wreg      void 
  5483 ;; Registers used:
  5484 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5490 ;;      Params:         0       0       0       0       0       0       0
  5491 ;;      Locals:         0       2       0       0       0       0       0
  5492 ;;      Temps:          0       2       0       0       0       0       0
  5493 ;;      Totals:         0       4       0       0       0       0       0
  5494 ;;Total ram usage:        4 bytes
  5495 ;; Hardware stack levels used:    1
  5496 ;; Hardware stack levels required when called:    5
  5497 ;; This function calls:
  5498 ;;		___wmul
  5499 ;;		_lcd_gotoXY
  5500 ;;		_lcd_putMessage
  5501 ;; This function is called by:
  5502 ;;		_main
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           	psect	text20
  5507  002122                     __ptext20:
  5508                           	opt callstack 0
  5509  002122                     _afficheTabVue:
  5510                           	opt callstack 25
  5511  002122                     
  5512                           ;main.c: 493: for(int i=0;i<4;i++)
  5513  002122  0E00               	movlw	0
  5514  002124  0100               	movlb	0	; force () banked
  5515  002126  6FC6               	movwf	(afficheTabVue@i+1)& (0+255),b
  5516  002128  0E00               	movlw	0
  5517  00212A  6FC5               	movwf	afficheTabVue@i& (0+255),b
  5518  00212C                     
  5519                           ; BSR set to: 0
  5520  00212C  0100               	movlb	0	; force () banked
  5521  00212E  BFC6               	btfsc	(afficheTabVue@i+1)& (0+255),7,b
  5522  002130  EFA3  F010         	goto	u2351
  5523  002134  51C6               	movf	(afficheTabVue@i+1)& (0+255),w,b
  5524  002136  E109               	bnz	u2350
  5525  002138  0E04               	movlw	4
  5526  00213A  5DC5               	subwf	afficheTabVue@i& (0+255),w,b
  5527  00213C  A0D8               	btfss	status,0,c
  5528  00213E  EFA3  F010         	goto	u2351
  5529  002142  EFA5  F010         	goto	u2350
  5530  002146                     u2351:
  5531  002146  EFA7  F010         	goto	l2533
  5532  00214A                     u2350:
  5533  00214A  EFE1  F010         	goto	l208
  5534  00214E                     l2533:
  5535                           
  5536                           ; BSR set to: 0
  5537                           ;main.c: 494: {;main.c: 495: lcd_gotoXY( 1, i+1);
  5538  00214E  0100               	movlb	0	; force () banked
  5539  002150  29C5               	incf	afficheTabVue@i& (0+255),w,b
  5540  002152  0100               	movlb	0	; force () banked
  5541  002154  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  5542  002156  0E01               	movlw	1
  5543  002158  ECE2  F010         	call	_lcd_gotoXY
  5544  00215C                     
  5545                           ;main.c: 496: lcd_putMessage(m_tabVue[i]);
  5546  00215C  C0C5  F0B4         	movff	afficheTabVue@i,___wmul@multiplier
  5547  002160  C0C6  F0B5         	movff	afficheTabVue@i+1,___wmul@multiplier+1
  5548  002164  0E00               	movlw	0
  5549  002166  0100               	movlb	0	; force () banked
  5550  002168  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5551  00216A  0E15               	movlw	21
  5552  00216C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  5553  00216E  ECC5  F012         	call	___wmul	;wreg free
  5554  002172  0E00               	movlw	low _m_tabVue
  5555  002174  0100               	movlb	0	; force () banked
  5556  002176  25B4               	addwf	?___wmul& (0+255),w,b
  5557  002178  0100               	movlb	0	; force () banked
  5558  00217A  6FC3               	movwf	??_afficheTabVue& (0+255),b
  5559  00217C  0E01               	movlw	high _m_tabVue
  5560  00217E  0100               	movlb	0	; force () banked
  5561  002180  21B5               	addwfc	(?___wmul+1)& (0+255),w,b
  5562  002182  0100               	movlb	0	; force () banked
  5563  002184  6FC4               	movwf	(??_afficheTabVue+1)& (0+255),b
  5564  002186  C0C3  F0BA         	movff	??_afficheTabVue,lcd_putMessage@chaine
  5565  00218A  C0C4  F0BB         	movff	??_afficheTabVue+1,lcd_putMessage@chaine+1
  5566  00218E  0100               	movlb	0	; force () banked
  5567  002190  51BA               	movf	lcd_putMessage@chaine& (0+255),w,b
  5568  002192  11BB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  5569  002194  A4D8               	btfss	status,2,c
  5570  002196  0E20               	movlw	32
  5571  002198  6FBC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  5572  00219A  EC8D  F00F         	call	_lcd_putMessage	;wreg free
  5573  00219E  0100               	movlb	0	; force () banked
  5574  0021A0  4BC5               	infsnz	afficheTabVue@i& (0+255),f,b
  5575  0021A2  2BC6               	incf	(afficheTabVue@i+1)& (0+255),f,b
  5576  0021A4                     
  5577                           ; BSR set to: 0
  5578  0021A4  0100               	movlb	0	; force () banked
  5579  0021A6  BFC6               	btfsc	(afficheTabVue@i+1)& (0+255),7,b
  5580  0021A8  EFDF  F010         	goto	u2361
  5581  0021AC  51C6               	movf	(afficheTabVue@i+1)& (0+255),w,b
  5582  0021AE  E109               	bnz	u2360
  5583  0021B0  0E04               	movlw	4
  5584  0021B2  5DC5               	subwf	afficheTabVue@i& (0+255),w,b
  5585  0021B4  A0D8               	btfss	status,0,c
  5586  0021B6  EFDF  F010         	goto	u2361
  5587  0021BA  EFE1  F010         	goto	u2360
  5588  0021BE                     u2361:
  5589  0021BE  EFA7  F010         	goto	l2533
  5590  0021C2                     u2360:
  5591  0021C2                     l208:
  5592                           
  5593                           ; BSR set to: 0
  5594  0021C2  0012               	return		;funcret
  5595  0021C4                     __end_of_afficheTabVue:
  5596                           	opt callstack 0
  5597                           
  5598 ;; *************** function _lcd_putMessage *****************
  5599 ;; Defined at:
  5600 ;;		line 387 in file "Lcd4Lignes.c"
  5601 ;; Parameters:    Size  Location     Type
  5602 ;;  chaine          3    6[BANK0 ] PTR const unsigned char 
  5603 ;;		 -> m_tabVue(84), STR_1(24), 
  5604 ;; Auto vars:     Size  Location     Type
  5605 ;;  j               1   14[BANK0 ] unsigned char 
  5606 ;; Return value:  Size  Location     Type
  5607 ;;                  1    wreg      void 
  5608 ;; Registers used:
  5609 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5610 ;; Tracked objects:
  5611 ;;		On entry : 0/0
  5612 ;;		On exit  : 0/0
  5613 ;;		Unchanged: 0/0
  5614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5615 ;;      Params:         0       3       0       0       0       0       0
  5616 ;;      Locals:         0       1       0       0       0       0       0
  5617 ;;      Temps:          0       5       0       0       0       0       0
  5618 ;;      Totals:         0       9       0       0       0       0       0
  5619 ;;Total ram usage:        9 bytes
  5620 ;; Hardware stack levels used:    1
  5621 ;; Hardware stack levels required when called:    4
  5622 ;; This function calls:
  5623 ;;		_lcd_ecritChar
  5624 ;; This function is called by:
  5625 ;;		_main
  5626 ;;		_afficheTabVue
  5627 ;; This function uses a non-reentrant model
  5628 ;;
  5629                           
  5630                           	psect	text21
  5631  001F1A                     __ptext21:
  5632                           	opt callstack 0
  5633  001F1A                     _lcd_putMessage:
  5634                           	opt callstack 26
  5635  001F1A                     
  5636                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  5637  001F1A  0E00               	movlw	0
  5638  001F1C  0100               	movlb	0	; force () banked
  5639  001F1E  6FC2               	movwf	lcd_putMessage@j& (0+255),b
  5640  001F20  EFBA  F00F         	goto	l2089
  5641  001F24                     l2085:
  5642                           
  5643                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  5644  001F24  0100               	movlb	0	; force () banked
  5645  001F26  51C2               	movf	lcd_putMessage@j& (0+255),w,b
  5646  001F28  0100               	movlb	0	; force () banked
  5647  001F2A  6FBD               	movwf	??_lcd_putMessage& (0+255),b
  5648  001F2C  6BBE               	clrf	(??_lcd_putMessage+1)& (0+255),b
  5649  001F2E  51BD               	movf	??_lcd_putMessage& (0+255),w,b
  5650  001F30  0100               	movlb	0	; force () banked
  5651  001F32  25BA               	addwf	lcd_putMessage@chaine& (0+255),w,b
  5652  001F34  0100               	movlb	0	; force () banked
  5653  001F36  6FBF               	movwf	(??_lcd_putMessage+2)& (0+255),b
  5654  001F38  51BE               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  5655  001F3A  0100               	movlb	0	; force () banked
  5656  001F3C  21BB               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  5657  001F3E  0100               	movlb	0	; force () banked
  5658  001F40  6FC0               	movwf	(??_lcd_putMessage+3)& (0+255),b
  5659  001F42  0E00               	movlw	0
  5660  001F44  0100               	movlb	0	; force () banked
  5661  001F46  21BC               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  5662  001F48  0100               	movlb	0	; force () banked
  5663  001F4A  6FC1               	movwf	(??_lcd_putMessage+4)& (0+255),b
  5664  001F4C  C0BF  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  5665  001F50  C0C0  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  5666  001F54  C0C1  FFF8         	movff	??_lcd_putMessage+4,tblptru
  5667  001F58  BAF8               	btfsc	tblptru,5,c
  5668  001F5A  D003               	bra	u1387
  5669  001F5C  0008               	tblrd		*
  5670  001F5E  50F5               	movf	tablat,w,c
  5671  001F60  D005               	bra	u1380
  5672  001F62                     u1387:
  5673  001F62  CFF6 FFE9          	movff	tblptrl,fsr0l
  5674  001F66  CFF7 FFEA          	movff	tblptrh,fsr0h
  5675  001F6A  50EF               	movf	indf0,w,c
  5676  001F6C                     u1380:
  5677  001F6C  EC16  F012         	call	_lcd_ecritChar
  5678  001F70  0100               	movlb	0	; force () banked
  5679  001F72  2BC2               	incf	lcd_putMessage@j& (0+255),f,b
  5680  001F74                     l2089:
  5681                           
  5682                           ; BSR set to: 0
  5683  001F74  0100               	movlb	0	; force () banked
  5684  001F76  51C2               	movf	lcd_putMessage@j& (0+255),w,b
  5685  001F78  0100               	movlb	0	; force () banked
  5686  001F7A  6FBD               	movwf	??_lcd_putMessage& (0+255),b
  5687  001F7C  6BBE               	clrf	(??_lcd_putMessage+1)& (0+255),b
  5688  001F7E  51BD               	movf	??_lcd_putMessage& (0+255),w,b
  5689  001F80  0100               	movlb	0	; force () banked
  5690  001F82  25BA               	addwf	lcd_putMessage@chaine& (0+255),w,b
  5691  001F84  0100               	movlb	0	; force () banked
  5692  001F86  6FBF               	movwf	(??_lcd_putMessage+2)& (0+255),b
  5693  001F88  51BE               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  5694  001F8A  0100               	movlb	0	; force () banked
  5695  001F8C  21BB               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  5696  001F8E  0100               	movlb	0	; force () banked
  5697  001F90  6FC0               	movwf	(??_lcd_putMessage+3)& (0+255),b
  5698  001F92  0E00               	movlw	0
  5699  001F94  0100               	movlb	0	; force () banked
  5700  001F96  21BC               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  5701  001F98  0100               	movlb	0	; force () banked
  5702  001F9A  6FC1               	movwf	(??_lcd_putMessage+4)& (0+255),b
  5703  001F9C  C0BF  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  5704  001FA0  C0C0  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  5705  001FA4  C0C1  FFF8         	movff	??_lcd_putMessage+4,tblptru
  5706  001FA8  BAF8               	btfsc	tblptru,5,c
  5707  001FAA  D003               	bra	u1397
  5708  001FAC  0008               	tblrd		*
  5709  001FAE  50F5               	movf	tablat,w,c
  5710  001FB0  D005               	bra	u1390
  5711  001FB2                     u1397:
  5712  001FB2  CFF6 FFE9          	movff	tblptrl,fsr0l
  5713  001FB6  CFF7 FFEA          	movff	tblptrh,fsr0h
  5714  001FBA  50EF               	movf	indf0,w,c
  5715  001FBC                     u1390:
  5716  001FBC  0900               	iorlw	0
  5717  001FBE  A4D8               	btfss	status,2,c
  5718  001FC0  EFE4  F00F         	goto	u1401
  5719  001FC4  EFE6  F00F         	goto	u1400
  5720  001FC8                     u1401:
  5721  001FC8  EF92  F00F         	goto	l2085
  5722  001FCC                     u1400:
  5723  001FCC  0012               	return		;funcret
  5724  001FCE                     __end_of_lcd_putMessage:
  5725                           	opt callstack 0
  5726                           
  5727 ;; *************** function _lcd_ecritChar *****************
  5728 ;; Defined at:
  5729 ;;		line 359 in file "Lcd4Lignes.c"
  5730 ;; Parameters:    Size  Location     Type
  5731 ;;  car             1    wreg     unsigned char 
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;  car             1    3[BANK0 ] unsigned char 
  5734 ;;  posRam          1    4[BANK0 ] unsigned char 
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  1    wreg      void 
  5737 ;; Registers used:
  5738 ;;		wreg, status,2, status,0, cstack
  5739 ;; Tracked objects:
  5740 ;;		On entry : 0/0
  5741 ;;		On exit  : 0/0
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5744 ;;      Params:         0       0       0       0       0       0       0
  5745 ;;      Locals:         0       2       0       0       0       0       0
  5746 ;;      Temps:          0       0       0       0       0       0       0
  5747 ;;      Totals:         0       2       0       0       0       0       0
  5748 ;;Total ram usage:        2 bytes
  5749 ;; Hardware stack levels used:    1
  5750 ;; Hardware stack levels required when called:    3
  5751 ;; This function calls:
  5752 ;;		_lcd_wrCom
  5753 ;;		_lcd_wrData
  5754 ;; This function is called by:
  5755 ;;		_demine
  5756 ;;		_enleveTuilesAutour
  5757 ;;		_lcd_putMessage
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           	psect	text22
  5762  00242C                     __ptext22:
  5763                           	opt callstack 0
  5764  00242C                     _lcd_ecritChar:
  5765                           	opt callstack 26
  5766                           
  5767                           ;incstack = 0
  5768                           ;lcd_ecritChar@car stored from wreg
  5769  00242C  0100               	movlb	0	; force () banked
  5770  00242E  6FB7               	movwf	lcd_ecritChar@car& (0+255),b
  5771  002430                     
  5772                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  5773  002430  0100               	movlb	0	; force () banked
  5774  002432  51B7               	movf	lcd_ecritChar@car& (0+255),w,b
  5775  002434  EC81  F012         	call	_lcd_wrData
  5776  002438  0100               	movlb	0	; force () banked
  5777  00243A  6FB8               	movwf	lcd_ecritChar@posRam& (0+255),b
  5778                           
  5779                           ;Lcd4Lignes.c: 364: switch(posRam)
  5780  00243C  EF2F  F012         	goto	l2065
  5781  002440                     l2057:
  5782                           
  5783                           ; BSR set to: 0
  5784                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  5785  002440  0EC0               	movlw	192
  5786  002442  EC51  F011         	call	_lcd_wrCom
  5787                           
  5788                           ;Lcd4Lignes.c: 368: break;
  5789  002446  EF3F  F012         	goto	l329
  5790  00244A                     l2059:
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  5794  00244A  0E94               	movlw	148
  5795  00244C  EC51  F011         	call	_lcd_wrCom
  5796                           
  5797                           ;Lcd4Lignes.c: 371: break;
  5798  002450  EF3F  F012         	goto	l329
  5799  002454                     l2061:
  5800                           
  5801                           ; BSR set to: 0
  5802                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  5803  002454  0ED4               	movlw	212
  5804  002456  EC51  F011         	call	_lcd_wrCom
  5805                           
  5806                           ;Lcd4Lignes.c: 374: break;
  5807  00245A  EF3F  F012         	goto	l329
  5808  00245E                     l2065:
  5809                           
  5810                           ; BSR set to: 0
  5811  00245E  0100               	movlb	0	; force () banked
  5812  002460  51B8               	movf	lcd_ecritChar@posRam& (0+255),w,b
  5813                           
  5814                           ; Switch size 1, requested type "simple"
  5815                           ; Number of cases is 3, Range of values is 148 to 212
  5816                           ; switch strategies available:
  5817                           ; Name         Instructions Cycles
  5818                           ; simple_byte           10     6 (average)
  5819                           ;	Chosen strategy is simple_byte
  5820  002462  0A94               	xorlw	148	; case 148
  5821  002464  B4D8               	btfsc	status,2,c
  5822  002466  EF20  F012         	goto	l2057
  5823  00246A  0A54               	xorlw	84	; case 192
  5824  00246C  B4D8               	btfsc	status,2,c
  5825  00246E  EF2A  F012         	goto	l2061
  5826  002472  0A14               	xorlw	20	; case 212
  5827  002474  B4D8               	btfsc	status,2,c
  5828  002476  EF25  F012         	goto	l2059
  5829  00247A  EF3F  F012         	goto	l329
  5830  00247E                     l329:
  5831  00247E  0012               	return		;funcret
  5832  002480                     __end_of_lcd_ecritChar:
  5833                           	opt callstack 0
  5834                           
  5835 ;; *************** function _lcd_wrData *****************
  5836 ;; Defined at:
  5837 ;;		line 188 in file "Lcd4Lignes.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;  caractere       1    wreg     unsigned char 
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;  caractere       1    2[BANK0 ] unsigned char 
  5842 ;; Return value:  Size  Location     Type
  5843 ;;                  1    wreg      unsigned char 
  5844 ;; Registers used:
  5845 ;;		wreg, status,2, status,0, cstack
  5846 ;; Tracked objects:
  5847 ;;		On entry : 0/0
  5848 ;;		On exit  : 0/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5851 ;;      Params:         0       0       0       0       0       0       0
  5852 ;;      Locals:         0       1       0       0       0       0       0
  5853 ;;      Temps:          0       0       0       0       0       0       0
  5854 ;;      Totals:         0       1       0       0       0       0       0
  5855 ;;Total ram usage:        1 bytes
  5856 ;; Hardware stack levels used:    1
  5857 ;; Hardware stack levels required when called:    2
  5858 ;; This function calls:
  5859 ;;		_lcd_busy
  5860 ;;		_lcd_ecrireDonnees
  5861 ;;		_lcd_strobeEnableBit
  5862 ;; This function is called by:
  5863 ;;		_lcd_ecritChar
  5864 ;;		_lcd_initCGRam
  5865 ;;		_lcd_effaceChar
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           	psect	text23
  5870  002502                     __ptext23:
  5871                           	opt callstack 0
  5872  002502                     _lcd_wrData:
  5873                           	opt callstack 26
  5874                           
  5875                           ;incstack = 0
  5876                           ;lcd_wrData@caractere stored from wreg
  5877  002502  0100               	movlb	0	; force () banked
  5878  002504  6FB6               	movwf	lcd_wrData@caractere& (0+255),b
  5879  002506                     
  5880                           ;Lcd4Lignes.c: 190: lcd_busy();
  5881  002506  EC40  F012         	call	_lcd_busy	;wreg free
  5882  00250A                     
  5883                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  5884  00250A  0E00               	movlw	0
  5885  00250C  6E95               	movwf	149,c	;volatile
  5886  00250E                     
  5887                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  5888  00250E  8080               	bsf	128,0,c	;volatile
  5889  002510                     
  5890                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  5891  002510  9280               	bcf	128,1,c	;volatile
  5892  002512                     
  5893                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  5894  002512  0100               	movlb	0	; force () banked
  5895  002514  39B6               	swapf	lcd_wrData@caractere& (0+255),w,b
  5896  002516  0B0F               	andlw	15
  5897  002518  ECFB  F012         	call	_lcd_ecrireDonnees
  5898  00251C                     
  5899                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  5900  00251C  EC14  F013         	call	_lcd_strobeEnableBit	;wreg free
  5901  002520                     
  5902                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  5903  002520  0100               	movlb	0	; force () banked
  5904  002522  51B6               	movf	lcd_wrData@caractere& (0+255),w,b
  5905  002524  ECFB  F012         	call	_lcd_ecrireDonnees
  5906  002528                     
  5907                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  5908  002528  EC14  F013         	call	_lcd_strobeEnableBit	;wreg free
  5909  00252C                     
  5910                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  5911  00252C  0E0F               	movlw	15
  5912  00252E  6E95               	movwf	149,c	;volatile
  5913  002530                     
  5914                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  5915                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  5916  002530  EC40  F012         	call	_lcd_busy	;wreg free
  5917  002534  0012               	return		;funcret
  5918  002536                     __end_of_lcd_wrData:
  5919                           	opt callstack 0
  5920                           
  5921 ;; *************** function _lcd_gotoXY *****************
  5922 ;; Defined at:
  5923 ;;		line 314 in file "Lcd4Lignes.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;  x               1    wreg     unsigned char 
  5926 ;;  y               1    3[BANK0 ] unsigned char 
  5927 ;; Auto vars:     Size  Location     Type
  5928 ;;  x               1    4[BANK0 ] unsigned char 
  5929 ;; Return value:  Size  Location     Type
  5930 ;;                  1    wreg      void 
  5931 ;; Registers used:
  5932 ;;		wreg, status,2, status,0, cstack
  5933 ;; Tracked objects:
  5934 ;;		On entry : 0/0
  5935 ;;		On exit  : 0/0
  5936 ;;		Unchanged: 0/0
  5937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5938 ;;      Params:         0       1       0       0       0       0       0
  5939 ;;      Locals:         0       1       0       0       0       0       0
  5940 ;;      Temps:          0       0       0       0       0       0       0
  5941 ;;      Totals:         0       2       0       0       0       0       0
  5942 ;;Total ram usage:        2 bytes
  5943 ;; Hardware stack levels used:    1
  5944 ;; Hardware stack levels required when called:    3
  5945 ;; This function calls:
  5946 ;;		_lcd_wrCom
  5947 ;; This function is called by:
  5948 ;;		_deplace
  5949 ;;		_enleveTuilesAutour
  5950 ;;		_afficheTabVue
  5951 ;;		_lcd_effaceLigne
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           
  5955                           	psect	text24
  5956  0021C4                     __ptext24:
  5957                           	opt callstack 0
  5958  0021C4                     _lcd_gotoXY:
  5959                           	opt callstack 26
  5960                           
  5961                           ;incstack = 0
  5962                           ;lcd_gotoXY@x stored from wreg
  5963  0021C4  0100               	movlb	0	; force () banked
  5964  0021C6  6FB8               	movwf	lcd_gotoXY@x& (0+255),b
  5965  0021C8                     
  5966                           ;Lcd4Lignes.c: 316: switch(y)
  5967  0021C8  EF06  F011         	goto	l2053
  5968  0021CC                     l2043:
  5969                           
  5970                           ; BSR set to: 0
  5971                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  5972  0021CC  0100               	movlb	0	; force () banked
  5973  0021CE  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  5974  0021D0  0F7F               	addlw	127
  5975  0021D2  0980               	iorlw	128
  5976  0021D4  EC51  F011         	call	_lcd_wrCom
  5977                           
  5978                           ;Lcd4Lignes.c: 320: break;
  5979  0021D8  EF1A  F011         	goto	l318
  5980  0021DC                     l2045:
  5981                           
  5982                           ; BSR set to: 0
  5983                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  5984  0021DC  0100               	movlb	0	; force () banked
  5985  0021DE  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  5986  0021E0  0FBF               	addlw	191
  5987  0021E2  0980               	iorlw	128
  5988  0021E4  EC51  F011         	call	_lcd_wrCom
  5989                           
  5990                           ;Lcd4Lignes.c: 323: break;
  5991  0021E8  EF1A  F011         	goto	l318
  5992  0021EC                     l2047:
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  5996  0021EC  0100               	movlb	0	; force () banked
  5997  0021EE  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  5998  0021F0  0F93               	addlw	147
  5999  0021F2  0980               	iorlw	128
  6000  0021F4  EC51  F011         	call	_lcd_wrCom
  6001                           
  6002                           ;Lcd4Lignes.c: 326: break;
  6003  0021F8  EF1A  F011         	goto	l318
  6004  0021FC                     l2049:
  6005                           
  6006                           ; BSR set to: 0
  6007                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  6008  0021FC  0100               	movlb	0	; force () banked
  6009  0021FE  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  6010  002200  0FD3               	addlw	211
  6011  002202  0980               	iorlw	128
  6012  002204  EC51  F011         	call	_lcd_wrCom
  6013                           
  6014                           ;Lcd4Lignes.c: 329: break;
  6015  002208  EF1A  F011         	goto	l318
  6016  00220C                     l2053:
  6017  00220C  0100               	movlb	0	; force () banked
  6018  00220E  51B7               	movf	lcd_gotoXY@y& (0+255),w,b
  6019                           
  6020                           ; Switch size 1, requested type "simple"
  6021                           ; Number of cases is 4, Range of values is 1 to 4
  6022                           ; switch strategies available:
  6023                           ; Name         Instructions Cycles
  6024                           ; simple_byte           13     7 (average)
  6025                           ;	Chosen strategy is simple_byte
  6026  002210  0A01               	xorlw	1	; case 1
  6027  002212  B4D8               	btfsc	status,2,c
  6028  002214  EFE6  F010         	goto	l2043
  6029  002218  0A03               	xorlw	3	; case 2
  6030  00221A  B4D8               	btfsc	status,2,c
  6031  00221C  EFEE  F010         	goto	l2045
  6032  002220  0A01               	xorlw	1	; case 3
  6033  002222  B4D8               	btfsc	status,2,c
  6034  002224  EFF6  F010         	goto	l2047
  6035  002228  0A07               	xorlw	7	; case 4
  6036  00222A  B4D8               	btfsc	status,2,c
  6037  00222C  EFFE  F010         	goto	l2049
  6038  002230  EF1A  F011         	goto	l318
  6039  002234                     l318:
  6040  002234  0012               	return		;funcret
  6041  002236                     __end_of_lcd_gotoXY:
  6042                           	opt callstack 0
  6043                           
  6044 ;; *************** function _lcd_wrCom *****************
  6045 ;; Defined at:
  6046 ;;		line 156 in file "Lcd4Lignes.c"
  6047 ;; Parameters:    Size  Location     Type
  6048 ;;  commande        1    wreg     unsigned char 
  6049 ;; Auto vars:     Size  Location     Type
  6050 ;;  commande        1    2[BANK0 ] unsigned char 
  6051 ;; Return value:  Size  Location     Type
  6052 ;;                  1    wreg      unsigned char 
  6053 ;; Registers used:
  6054 ;;		wreg, status,2, status,0, cstack
  6055 ;; Tracked objects:
  6056 ;;		On entry : 0/0
  6057 ;;		On exit  : 0/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6060 ;;      Params:         0       0       0       0       0       0       0
  6061 ;;      Locals:         0       1       0       0       0       0       0
  6062 ;;      Temps:          0       0       0       0       0       0       0
  6063 ;;      Totals:         0       1       0       0       0       0       0
  6064 ;;Total ram usage:        1 bytes
  6065 ;; Hardware stack levels used:    1
  6066 ;; Hardware stack levels required when called:    2
  6067 ;; This function calls:
  6068 ;;		_lcd_busy
  6069 ;;		_lcd_ecrireDonnees
  6070 ;;		_lcd_strobeEnableBit
  6071 ;; This function is called by:
  6072 ;;		_lcd_init
  6073 ;;		_lcd_effaceAffichage
  6074 ;;		_lcd_curseurHome
  6075 ;;		_lcd_gotoXY
  6076 ;;		_lcd_ecritChar
  6077 ;;		_lcd_initCGRam
  6078 ;;		_lcd_cacheCurseur
  6079 ;;		_lcd_montreCurseur
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082                           
  6083                           	psect	text25
  6084  0022A2                     __ptext25:
  6085                           	opt callstack 0
  6086  0022A2                     _lcd_wrCom:
  6087                           	opt callstack 26
  6088                           
  6089                           ;incstack = 0
  6090                           ;lcd_wrCom@commande stored from wreg
  6091  0022A2  0100               	movlb	0	; force () banked
  6092  0022A4  6FB6               	movwf	lcd_wrCom@commande& (0+255),b
  6093  0022A6                     
  6094                           ;Lcd4Lignes.c: 158: lcd_busy();
  6095  0022A6  EC40  F012         	call	_lcd_busy	;wreg free
  6096  0022AA                     
  6097                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  6098  0022AA  0E00               	movlw	0
  6099  0022AC  6E95               	movwf	149,c	;volatile
  6100  0022AE                     
  6101                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  6102  0022AE  9080               	bcf	128,0,c	;volatile
  6103  0022B0                     
  6104                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  6105  0022B0  9280               	bcf	128,1,c	;volatile
  6106  0022B2                     
  6107                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  6108  0022B2  0100               	movlb	0	; force () banked
  6109  0022B4  39B6               	swapf	lcd_wrCom@commande& (0+255),w,b
  6110  0022B6  0B0F               	andlw	15
  6111  0022B8  ECFB  F012         	call	_lcd_ecrireDonnees
  6112  0022BC                     
  6113                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  6114  0022BC  EC14  F013         	call	_lcd_strobeEnableBit	;wreg free
  6115  0022C0                     
  6116                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  6117  0022C0  0100               	movlb	0	; force () banked
  6118  0022C2  51B6               	movf	lcd_wrCom@commande& (0+255),w,b
  6119  0022C4  ECFB  F012         	call	_lcd_ecrireDonnees
  6120  0022C8                     
  6121                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  6122  0022C8  EC14  F013         	call	_lcd_strobeEnableBit	;wreg free
  6123  0022CC                     
  6124                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  6125  0022CC  0E03               	movlw	3
  6126  0022CE                     u2657:
  6127  0022CE  2EE8               	decfsz	wreg,f,c
  6128  0022D0  D7FE               	bra	u2657
  6129  0022D2  F000               	nop	
  6130  0022D4                     
  6131                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  6132  0022D4  0100               	movlb	0	; force () banked
  6133  0022D6  05B6               	decf	lcd_wrCom@commande& (0+255),w,b
  6134  0022D8  B4D8               	btfsc	status,2,c
  6135  0022DA  EF71  F011         	goto	u1341
  6136  0022DE  EF73  F011         	goto	u1340
  6137  0022E2                     u1341:
  6138  0022E2  EF7D  F011         	goto	l2001
  6139  0022E6                     u1340:
  6140  0022E6                     
  6141                           ; BSR set to: 0
  6142  0022E6  0E02               	movlw	2
  6143  0022E8  0100               	movlb	0	; force () banked
  6144  0022EA  19B6               	xorwf	lcd_wrCom@commande& (0+255),w,b
  6145  0022EC  A4D8               	btfss	status,2,c
  6146  0022EE  EF7B  F011         	goto	u1351
  6147  0022F2  EF7D  F011         	goto	u1350
  6148  0022F6                     u1351:
  6149  0022F6  EF82  F011         	goto	l2003
  6150  0022FA                     u1350:
  6151  0022FA                     l2001:
  6152                           
  6153                           ; BSR set to: 0
  6154                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  6155  0022FA  0EA6               	movlw	166
  6156  0022FC                     u2667:
  6157  0022FC  2EE8               	decfsz	wreg,f,c
  6158  0022FE  D7FE               	bra	u2667
  6159  002300  F000 F000          	nop2	
  6160  002304                     l2003:
  6161                           
  6162                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  6163  002304  0E0F               	movlw	15
  6164  002306  6E95               	movwf	149,c	;volatile
  6165  002308                     
  6166                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  6167  002308  EC40  F012         	call	_lcd_busy	;wreg free
  6168  00230C  0012               	return		;funcret
  6169  00230E                     __end_of_lcd_wrCom:
  6170                           	opt callstack 0
  6171                           
  6172 ;; *************** function _lcd_strobeEnableBit *****************
  6173 ;; Defined at:
  6174 ;;		line 431 in file "Lcd4Lignes.c"
  6175 ;; Parameters:    Size  Location     Type
  6176 ;;		None
  6177 ;; Auto vars:     Size  Location     Type
  6178 ;;		None
  6179 ;; Return value:  Size  Location     Type
  6180 ;;                  1    wreg      void 
  6181 ;; Registers used:
  6182 ;;		None
  6183 ;; Tracked objects:
  6184 ;;		On entry : 0/0
  6185 ;;		On exit  : 0/0
  6186 ;;		Unchanged: 0/0
  6187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6188 ;;      Params:         0       0       0       0       0       0       0
  6189 ;;      Locals:         0       0       0       0       0       0       0
  6190 ;;      Temps:          0       0       0       0       0       0       0
  6191 ;;      Totals:         0       0       0       0       0       0       0
  6192 ;;Total ram usage:        0 bytes
  6193 ;; Hardware stack levels used:    1
  6194 ;; This function calls:
  6195 ;;		Nothing
  6196 ;; This function is called by:
  6197 ;;		_lcd_wrCom
  6198 ;;		_lcd_wrData
  6199 ;;		_lcd_resetSequence
  6200 ;; This function uses a non-reentrant model
  6201 ;;
  6202                           
  6203                           	psect	text26
  6204  002628                     __ptext26:
  6205                           	opt callstack 0
  6206  002628                     _lcd_strobeEnableBit:
  6207                           	opt callstack 27
  6208  002628                     
  6209                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  6210  002628  8480               	bsf	128,2,c	;volatile
  6211                           
  6212                           ;Lcd4Lignes.c: 434: __nop();
  6213  00262A  F000               	nop	
  6214                           
  6215                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  6216  00262C  9480               	bcf	128,2,c	;volatile
  6217  00262E  0012               	return		;funcret
  6218  002630                     __end_of_lcd_strobeEnableBit:
  6219                           	opt callstack 0
  6220                           
  6221 ;; *************** function _lcd_ecrireDonnees *****************
  6222 ;; Defined at:
  6223 ;;		line 107 in file "Lcd4Lignes.c"
  6224 ;; Parameters:    Size  Location     Type
  6225 ;;  donnee          1    wreg     unsigned char 
  6226 ;; Auto vars:     Size  Location     Type
  6227 ;;  donnee          1    1[BANK0 ] unsigned char 
  6228 ;; Return value:  Size  Location     Type
  6229 ;;                  1    wreg      void 
  6230 ;; Registers used:
  6231 ;;		wreg, status,2, status,0
  6232 ;; Tracked objects:
  6233 ;;		On entry : 0/0
  6234 ;;		On exit  : 0/0
  6235 ;;		Unchanged: 0/0
  6236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6237 ;;      Params:         0       0       0       0       0       0       0
  6238 ;;      Locals:         0       1       0       0       0       0       0
  6239 ;;      Temps:          0       1       0       0       0       0       0
  6240 ;;      Totals:         0       2       0       0       0       0       0
  6241 ;;Total ram usage:        2 bytes
  6242 ;; Hardware stack levels used:    1
  6243 ;; This function calls:
  6244 ;;		Nothing
  6245 ;; This function is called by:
  6246 ;;		_lcd_wrCom
  6247 ;;		_lcd_wrData
  6248 ;;		_lcd_resetSequence
  6249 ;; This function uses a non-reentrant model
  6250 ;;
  6251                           
  6252                           	psect	text27
  6253  0025F6                     __ptext27:
  6254                           	opt callstack 0
  6255  0025F6                     _lcd_ecrireDonnees:
  6256                           	opt callstack 27
  6257                           
  6258                           ;incstack = 0
  6259                           ;lcd_ecrireDonnees@donnee stored from wreg
  6260  0025F6  0100               	movlb	0	; force () banked
  6261  0025F8  6FB5               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  6262  0025FA                     
  6263                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  6264  0025FA  CF83 F0B4          	movff	3971,??_lcd_ecrireDonnees	;volatile
  6265  0025FE  0EF0               	movlw	240
  6266  002600  0100               	movlb	0	; force () banked
  6267  002602  17B4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  6268  002604  0100               	movlb	0	; force () banked
  6269  002606  51B5               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  6270  002608  0B0F               	andlw	15
  6271  00260A  0100               	movlb	0	; force () banked
  6272  00260C  11B4               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  6273  00260E  6E83               	movwf	131,c	;volatile
  6274  002610                     
  6275                           ; BSR set to: 0
  6276  002610  0012               	return		;funcret
  6277  002612                     __end_of_lcd_ecrireDonnees:
  6278                           	opt callstack 0
  6279                           
  6280 ;; *************** function _lcd_busy *****************
  6281 ;; Defined at:
  6282 ;;		line 124 in file "Lcd4Lignes.c"
  6283 ;; Parameters:    Size  Location     Type
  6284 ;;		None
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;  adresse         1    1[BANK0 ] unsigned char 
  6287 ;; Return value:  Size  Location     Type
  6288 ;;                  1    wreg      unsigned char 
  6289 ;; Registers used:
  6290 ;;		wreg, status,2, status,0, cstack
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/0
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6296 ;;      Params:         0       0       0       0       0       0       0
  6297 ;;      Locals:         0       1       0       0       0       0       0
  6298 ;;      Temps:          0       1       0       0       0       0       0
  6299 ;;      Totals:         0       2       0       0       0       0       0
  6300 ;;Total ram usage:        2 bytes
  6301 ;; Hardware stack levels used:    1
  6302 ;; Hardware stack levels required when called:    1
  6303 ;; This function calls:
  6304 ;;		_lcd_lireDonnees
  6305 ;; This function is called by:
  6306 ;;		_lcd_wrCom
  6307 ;;		_lcd_wrData
  6308 ;; This function uses a non-reentrant model
  6309 ;;
  6310                           
  6311                           	psect	text28
  6312  002480                     __ptext28:
  6313                           	opt callstack 0
  6314  002480                     _lcd_busy:
  6315                           	opt callstack 26
  6316  002480                     
  6317                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  6318  002480  9080               	bcf	128,0,c	;volatile
  6319                           
  6320                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  6321  002482  8280               	bsf	128,1,c	;volatile
  6322  002484                     l280:
  6323                           
  6324                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  6325  002484  8480               	bsf	128,2,c	;volatile
  6326                           
  6327                           ;Lcd4Lignes.c: 134: __nop();
  6328  002486  F000               	nop	
  6329  002488                     
  6330                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  6331  002488  EC18  F013         	call	_lcd_lireDonnees	;wreg free
  6332  00248C  0100               	movlb	0	; force () banked
  6333  00248E  6FB4               	movwf	??_lcd_busy& (0+255),b
  6334  002490  39B4               	swapf	??_lcd_busy& (0+255),w,b
  6335  002492  0BF0               	andlw	240
  6336  002494  0100               	movlb	0	; force () banked
  6337  002496  6FB5               	movwf	lcd_busy@adresse& (0+255),b
  6338  002498                     
  6339                           ; BSR set to: 0
  6340                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  6341  002498  9480               	bcf	128,2,c	;volatile
  6342  00249A                     
  6343                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  6344  00249A  8480               	bsf	128,2,c	;volatile
  6345  00249C                     
  6346                           ;Lcd4Lignes.c: 139: __nop();
  6347  00249C  F000               	nop	
  6348                           
  6349                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  6350  00249E  EC18  F013         	call	_lcd_lireDonnees	;wreg free
  6351  0024A2  0100               	movlb	0	; force () banked
  6352  0024A4  13B5               	iorwf	lcd_busy@adresse& (0+255),f,b
  6353  0024A6                     
  6354                           ; BSR set to: 0
  6355                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  6356  0024A6  9480               	bcf	128,2,c	;volatile
  6357  0024A8                     
  6358                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  6359  0024A8  0100               	movlb	0	; force () banked
  6360  0024AA  BFB5               	btfsc	lcd_busy@adresse& (0+255),7,b
  6361  0024AC  EF5A  F012         	goto	u1331
  6362  0024B0  EF5C  F012         	goto	u1330
  6363  0024B4                     u1331:
  6364  0024B4  EF42  F012         	goto	l280
  6365  0024B8                     u1330:
  6366  0024B8                     
  6367                           ; BSR set to: 0
  6368                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  6369  0024B8  9280               	bcf	128,1,c	;volatile
  6370  0024BA                     
  6371                           ; BSR set to: 0
  6372                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  6373  0024BA  0100               	movlb	0	; force () banked
  6374  0024BC  51B5               	movf	lcd_busy@adresse& (0+255),w,b
  6375  0024BE  0B7F               	andlw	127
  6376  0024C0                     
  6377                           ; BSR set to: 0
  6378  0024C0  0012               	return		;funcret
  6379  0024C2                     __end_of_lcd_busy:
  6380                           	opt callstack 0
  6381                           
  6382 ;; *************** function _lcd_lireDonnees *****************
  6383 ;; Defined at:
  6384 ;;		line 93 in file "Lcd4Lignes.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;		None
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;		None
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  1    wreg      unsigned char 
  6391 ;; Registers used:
  6392 ;;		wreg, status,2, status,0
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6398 ;;      Params:         0       0       0       0       0       0       0
  6399 ;;      Locals:         0       0       0       0       0       0       0
  6400 ;;      Temps:          0       0       0       0       0       0       0
  6401 ;;      Totals:         0       0       0       0       0       0       0
  6402 ;;Total ram usage:        0 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; This function calls:
  6405 ;;		Nothing
  6406 ;; This function is called by:
  6407 ;;		_lcd_busy
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411                           	psect	text29
  6412  002630                     __ptext29:
  6413                           	opt callstack 0
  6414  002630                     _lcd_lireDonnees:
  6415                           	opt callstack 26
  6416  002630                     
  6417                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  6418  002630  5083               	movf	131,w,c	;volatile
  6419  002632  0B0F               	andlw	15
  6420  002634  0012               	return		;funcret
  6421  002636                     __end_of_lcd_lireDonnees:
  6422                           	opt callstack 0
  6423                           
  6424 ;; *************** function ___wmul *****************
  6425 ;; Defined at:
  6426 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  6427 ;; Parameters:    Size  Location     Type
  6428 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6429 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;  product         2    4[BANK0 ] unsigned int 
  6432 ;; Return value:  Size  Location     Type
  6433 ;;                  2    0[BANK0 ] unsigned int 
  6434 ;; Registers used:
  6435 ;;		wreg, status,2, status,0, prodl, prodh
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6441 ;;      Params:         0       4       0       0       0       0       0
  6442 ;;      Locals:         0       2       0       0       0       0       0
  6443 ;;      Temps:          0       0       0       0       0       0       0
  6444 ;;      Totals:         0       6       0       0       0       0       0
  6445 ;;Total ram usage:        6 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; This function calls:
  6448 ;;		Nothing
  6449 ;; This function is called by:
  6450 ;;		_initTabVue
  6451 ;;		_rempliMines
  6452 ;;		_metToucheCombien
  6453 ;;		_calculToucheCombien
  6454 ;;		_enleveTuilesAutour
  6455 ;;		_gagne
  6456 ;;		_afficheTabVue
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           	psect	text30
  6461  00258A                     __ptext30:
  6462                           	opt callstack 0
  6463  00258A                     ___wmul:
  6464                           	opt callstack 29
  6465  00258A  0100               	movlb	0	; () banked
  6466  00258C  51B4               	movf	___wmul@multiplier& (0+255),w,b
  6467  00258E  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  6468  002590  CFF3 F0B8          	movff	prodl,___wmul@product
  6469  002594  CFF4 F0B9          	movff	prodh,___wmul@product+1
  6470  002598  51B4               	movf	___wmul@multiplier& (0+255),w,b
  6471  00259A  03B7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6472  00259C  50F3               	movf	243,w,c
  6473  00259E  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  6474  0025A0  51B5               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6475  0025A2  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  6476  0025A4  50F3               	movf	243,w,c
  6477  0025A6  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  6478  0025A8                     
  6479                           ; BSR set to: 0
  6480  0025A8  C0B8  F0B4         	movff	___wmul@product,?___wmul
  6481  0025AC  C0B9  F0B5         	movff	___wmul@product+1,?___wmul+1
  6482  0025B0                     
  6483                           ; BSR set to: 0
  6484  0025B0  0012               	return		;funcret
  6485  0025B2                     __end_of___wmul:
  6486                           	opt callstack 0
  6487                           
  6488                           	psect	param0
  6489  0000                     tosu	equ	0xFFF
  6490                           tosh	equ	0xFFE
  6491                           tosl	equ	0xFFD
  6492                           stkptr	equ	0xFFC
  6493                           pclatu	equ	0xFFB
  6494                           pclath	equ	0xFFA
  6495                           pcl	equ	0xFF9
  6496                           tblptru	equ	0xFF8
  6497                           tblptrh	equ	0xFF7
  6498                           tblptrl	equ	0xFF6
  6499                           tablat	equ	0xFF5
  6500                           prodh	equ	0xFF4
  6501                           prodl	equ	0xFF3
  6502                           indf0	equ	0xFEF
  6503                           postinc0	equ	0xFEE
  6504                           postdec0	equ	0xFED
  6505                           preinc0	equ	0xFEC
  6506                           plusw0	equ	0xFEB
  6507                           fsr0h	equ	0xFEA
  6508                           fsr0l	equ	0xFE9
  6509                           wreg	equ	0xFE8
  6510                           indf1	equ	0xFE7
  6511                           postinc1	equ	0xFE6
  6512                           postdec1	equ	0xFE5
  6513                           preinc1	equ	0xFE4
  6514                           plusw1	equ	0xFE3
  6515                           fsr1h	equ	0xFE2
  6516                           fsr1l	equ	0xFE1
  6517                           bsr	equ	0xFE0
  6518                           indf2	equ	0xFDF
  6519                           postinc2	equ	0xFDE
  6520                           postdec2	equ	0xFDD
  6521                           preinc2	equ	0xFDC
  6522                           plusw2	equ	0xFDB
  6523                           fsr2h	equ	0xFDA
  6524                           fsr2l	equ	0xFD9
  6525                           status	equ	0xFD8


Data Sizes:
    Strings     24
    Constant    0
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     41     129
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(3) Largest target is 84
		 -> m_tabVue(BANK1[84]), STR_1(CODE[24]), 

    gagne@pMines	PTR int  size(2) Largest target is 2
		 -> main@NBMines(BANK0[2]), 

    deplace@y	PTR unsigned char  size(2) Largest target is 1
		 -> main@y(BANK0[1]), 

    deplace@x	PTR unsigned char  size(2) Largest target is 1
		 -> main@x(BANK0[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_rempliMines
    _rempliMines->___awmod
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _calculToucheCombien->___wmul
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _initTabVue->___wmul
    _gagne->___wmul
    _lcd_effaceAffichage->_lcd_wrCom
    _deplace->_lcd_gotoXY
    _demine->_enleveTuilesAutour
    _enleveTuilesAutour->___wmul
    _afficheTabVue->_lcd_putMessage
    _lcd_putMessage->___wmul
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   38575
                                             36 BANK0      5     5      0
                      _afficheTabVue
                             _demine
                            _deplace
                              _gagne
                         _initTabVue
                         _init_serie
                     _initialisation
                    _lcd_curseurHome
                           _lcd_init
                     _lcd_putMessage
                   _metToucheCombien
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                         16    14      2    5231
                                             20 BANK0     16    14      2
                            ___awmod
                             ___wmul
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     9     9      0   10172
                                             21 BANK0      9     9      0
                             ___wmul
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 15    11      4    5871
                                              6 BANK0     15    11      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_serie                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           6     6      0    4189
                                              6 BANK0      6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _gagne                                               12    10      2    4447
                                              6 BANK0     12    10      2
                             ___wmul
                _lcd_effaceAffichage
 ---------------------------------------------------------------------------------
 (2) _lcd_effaceAffichage                                  0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _deplace                                              5     1      4    1209
                                              5 BANK0      5     1      4
                          _getAnalog
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      15
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _demine                                               7     6      1    6437
                                             18 BANK0      7     6      1
                 _enleveTuilesAutour
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _enleveTuilesAutour                                  12    11      1    5668
                                              6 BANK0     12    11      1
                             ___wmul
                      _lcd_ecritChar
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (1) _afficheTabVue                                        4     4      0    5254
                                             15 BANK0      4     4      0
                             ___wmul
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       9     6      3     555
                                              6 BANK0      9     6      3
                             ___wmul (ARG)
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoXY                                           2     1      1     646
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    3963
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheTabVue
     ___wmul
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _demine
     _enleveTuilesAutour
       ___wmul
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_gotoXY
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _deplace
     _getAnalog
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _gagne
     ___wmul
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _initTabVue
     ___wmul
   _init_serie
   _initialisation
   _lcd_curseurHome
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_putMessage
     ___wmul (ARG)
     _lcd_ecritChar (ARG)
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _metToucheCombien
     ___wmul
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     ___wmul
     _rand
       ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      94       7       57.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     29      81       5       80.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     115      15        0.0%
DATA                 0      0     115       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec 16 21:20:13 2019

 __end_of_calculToucheCombien 114E                            l82 25D6                            l74 1EDA  
                          l85 2550                            l88 2560                            l97 1CA4  
                          u90 255E                            u91 255A          ??_enleveTuilesAutour 00BB  
         ___wmul@multiplicand 00B6                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  __size_of_lcd_strobeEnableBit 0008  
                         l201 1D7C                           l122 06D4                           l203 1E1E  
                         l131 0902                           l300 261E                           l140 0B5A  
                         l108 181A                           l141 0BAE                           l150 0DF6  
                         l126 078E                           l118 1638                           l231 25F4  
                         l303 2626                           l208 21C2                           l136 0A56  
                         l145 0C68                           l162 1120                           l154 0EE6  
                         l163 114C                           l318 2234                           l158 108C  
                         l351 262E                           l335 1FCC                           l183 19A4  
                         l159 1068                           l280 2484                           l176 1B2A  
                         l281 24B8                           l329 247E                           l354 25B0  
                         l274 2634                           l282 24C0                           l194 143E  
                         l291 2534                           l348 2120                           l277 2610  
                         l365 2290                           l294 2376                           l366 22A0  
                         l288 230C                           l297 2588                           l598 207E  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                  __CFG_BORV$18 000000  
                ___awmod@sign 00C7                   lcd_gotoXY@x 00B8                           wreg 000FE8  
                 lcd_gotoXY@y 00B7  __size_of_lcd_effaceAffichage 000E                  __CFG_LVP$OFF 000000  
                        l1021 242A                          l2001 22FA                          l2003 2304  
                        l2011 2506                          l2005 2308                          l2021 2512  
                        l2013 250A                          l2101 0638                          l2007 2308  
                        l2031 252C                          l2023 251C                          l2015 250E  
                        l2111 06B2                          l2103 0656                          l2041 21C8  
                        l2033 252C                          l2025 2520                          l2017 250E  
                        l2201 0C6E                          l2121 0788                          l2105 0672  
                        l2043 21CC                          l2035 2530                          l2027 2520  
                        l2019 2510                          l2211 0CDA                          l2203 0C8C  
                        l2131 07EA                          l2123 0794                          l2115 06DA  
                        l2107 068E                          l2045 21DC                          l2053 220C  
                        l2029 2528                          l2061 2454                          l2301 1218  
                        l2221 0D6C                          l2213 0D40                          l2205 0C92  
                        l2133 07FE                          l2125 07B2                          l2109 06AC  
                        l2047 21EC                          l2055 2430                          l2311 132E  
                        l2303 122A                          l2039 2620                          l2231 0E44  
                        l2223 0DF0                          l2215 0D46                          l2207 0CB0  
                        l2151 093A                          l2143 088E                          l2135 085C  
                        l2127 07B8                          l2119 06FC                          l2049 21FC  
                        l2057 2440                          l2065 245E                          l2321 13CA  
                        l2313 1392                          l2305 1240                          l2241 0EEC  
                        l2233 0E4A                          l2225 0DFC                          l2217 0D4C  
                        l2209 0CC6                          l2153 0950                          l2145 08FC  
                        l2137 0862                          l2129 07D6                          l2401 1FEA  
                        l2081 2270                          l2073 2236                          l2067 258A  
                        l2059 244A                          l2083 1F1A                          l2331 1420  
                        l2315 13A6                          l2307 124A                          l2323 13E8  
                        l2251 0FA8                          l2243 0F08                          l2227 0E18  
                        l2171 0A8C                          l2163 09E2                          l2155 09B6  
                        l2147 0908                          l2139 086C                          l2411 201E  
                        l2403 1FEE                          l2075 2248                          l2091 23D6  
                        l2069 25A8                          l2085 1F24                          l2325 13FC  
                        l2317 13BA                          l2309 130A                          l1293 253A  
                        l2333 2612                          l2341 2328                          l2261 1062  
                        l2253 0FC4                          l2245 0F6E                          l2237 0E6A  
                        l2229 0E2E                          l2181 0AEE                          l2173 0AAA  
                        l2165 0A50                          l2157 09BC                          l2149 0926  
                        l2501 148A                          l2421 2058                          l2413 2026  
                        l2405 1FFC                          l2077 2256                          l2093 240C  
                        l2087 1F70                          l2327 1410                          l2319 13C4  
                        l1295 254E                          l2351 2342                          l2343 232A  
                        l2335 230E                          l2431 2562                          l2271 111A  
                        l2263 106E                          l2255 0FCA                          l2239 0EE0  
                        l2247 0F74                          l2183 0B54                          l2175 0AC6  
                        l2167 0A5C                          l2159 09C2                          l2511 152C  
                        l2503 1494                          l2415 2034                          l2423 205E  
                        l2407 2004                          l2079 2266                          l2095 241E  
                        l2089 1F74                          l2329 141A                          l2281 1166  
                        l1297 254E                          l2441 1B6C                          l2361 2360  
                        l2353 2346                          l2345 2330                          l2337 2312  
                        l2433 2584                          l2273 112A                          l2265 1092  
                        l2249 0F8A                          l2193 0BB4                          l2185 0B64  
                        l2177 0ACC                          l2169 0A78                          l2521 15F6  
                        l2513 1540                          l2425 206E                          l2417 204A  
                        l2409 2016                          l2291 11D0                          l2283 1196  
                        l1299 255E                          l2611 1D76                          l2603 1CF6  
                        l2451 1BFE                          l2443 1B76                          l2435 1B2C  
                        l1651 25CC                          l1643 25B2                          l2371 2086  
                        l2363 2366                          l2355 234E                          l2347 2334  
                        l2339 2326                          l2259 0FEC                          l2275 1148  
                        l2187 0B82                          l2099 061A                          l2515 1588  
                        l2523 1614                          l2507 14B6                          l2427 2076  
                        l2419 2052                          l2533 214E                          l2293 11E6  
                        l2285 119C                          l2541 19A6                          l2621 1DE6  
                        l2613 1D82                          l2605 1D00                          l2461 1C86  
                        l2453 1C14                          l2437 1B4A                          l1661 25E8  
                        l1653 25D8                          l1645 25BA                          l2373 208C  
                        l2365 236A                          l2357 2354                          l2349 233C  
                        l2269 10B4                          l2197 0BD6                          l2189 0B8C  
                        l2525 161A                          l2517 15A4                          l2509 150C  
                        l2535 215C                          l2527 2122                          l2295 11F0  
                        l2279 1152                          l2551 1A36                          l2543 19C0  
                        l2623 1DEA                          l2615 1DA0                          l2455 1C5C  
                        l2447 1B98                          l1663 25EA                          l1655 25DC  
                        l1647 25C8                          l2391 210A                          l2383 20BE  
                        l2367 2372                          l2359 2358                          l2199 0C62  
                        l2519 15F0                          l2471 1696                          l2463 163A  
                        l2537 219E                          l2529 212C                          l2297 11F6  
                        l2289 11BE                          l2561 1AB6                          l2553 1A4E  
                        l2545 19F2                          l2625 1E14                          l2617 1DA6  
                        l2609 1D22                          l2457 1C62                          l2449 1BB6  
                        l1665 25EC                          l1657 25E4                          l1649 25CA  
                        l2385 20F0                          l2393 211C                          l2377 20A2  
                        l2369 2080                          l2481 1724                          l2465 166A  
                        l2641 1E28                          l2539 21A4                          l2571 1820  
                        l2563 1AD0                          l2555 1A5A                          l2547 1A02  
                        l2627 1E1A                          l2619 1DC4                          l2459 1C80  
                        l1667 25EE                          l1659 25E6                          l2387 20F4  
                        l2379 20A8                          l2395 1FCE                          l2491 17EA  
                        l2483 172A                          l2475 16B8                          l2651 1E44  
                        l2643 1E2C                          l2581 18B8                          l2573 182C  
                        l2565 1AEA                          l2557 1A74                          l2549 1A1C  
                        l2389 2106                          l2397 1FD4                          l2485 174C  
                        l2477 1700                          l2493 17F0                          l2469 168C  
                        l2661 1E76                          l2653 1E4A                          l2645 1E30  
                        l1951 2480                          l2591 196E                          l2583 18F6  
                        l2575 1832                          l2567 1B02                          l2559 1AA6  
                        l2495 1440                          l2399 1FE2                          l2487 177C  
                        l2479 1706                          l2671 1EE8                          l2663 1E8E  
                        l2655 1E62                          l2647 1E34                          l2639 1E20  
                        l1945 2630                          l1961 249C                          l1953 2488  
                        l2585 18FC                          l2593 19A0                          l2577 1870  
                        l2569 1B0E                          l2497 1468                          l2489 17BA  
                        l2673 1EFC                          l2665 1E9C                          l2657 1E6E  
                        l2649 1E3E                          l1963 24A6                          l1955 2498  
                        l2587 190C                          l2579 187A                          l2667 1EB8  
                        l2675 1F00                          l2659 1E72                          l1965 24A8  
                        l1957 249A                          l1949 25FA                          l1973 2628  
                        l1981 22AE                          l2589 1912                          l2597 1CA6  
                        l2669 1ED6                          l1967 24A8                          l1959 249A  
                        l1991 22C0                          l1983 22B0                          l1975 22A6  
                        l2599 1CD4                          l1969 24BA                          l1993 22C8  
                        l1985 22B2                          l1977 22AA                          l1995 22CC  
                        l1987 22BC                          l1979 22AE                          l1997 22D4  
                        l1989 22C0                          l1999 22E6                          STR_1 0601  
                        u2000 13A6                          u2001 13A2                          u2010 13BA  
                        u2011 13B6                          u2020 13E8                          u2100 1FE2  
                        u2021 13E4                          u2101 1FDE                          u2030 13FC  
                        u2110 1FFC                          u2031 13F8                          u2111 1FF8  
                        u1400 1FCC                          u2040 1410                          u2200 1C80  
                        u2120 2016                          u1401 1FC8                          u2041 140C  
                        u2201 1C7C                          u2121 2012                          u1330 24B8  
                        u2050 143E                          u2210 1CA4                          u1410 0656  
                        u2130 2034                          u1331 24B4                          u2051 143A  
                        u2211 1CA0                          u1411 0652                          u2131 2030  
                        u1340 22E6                          u2060 209E                          u1500 07EA  
                        u1420 0672                          u2300 150C                          u2140 204A  
                        u2220 1688                          u1341 22E2                          u2061 209A  
                        u1501 07E6                          u1421 066E                          u2301 1508  
                        u2141 2046                          u2221 1684                          u1350 22FA  
                        u2070 20BA                          u1510 07FE                          u1430 068E  
                        u2310 1540                          u2150 206E                          u2230 16B4  
                        u1351 22F6                          u2071 20B6                          u1511 07FA  
                        u1431 068A                          u2311 153C                          u2151 206A  
                        u2231 16B0                          u2400 1A4E                          u2160 1B68  
                        u2080 2106                          u1600 0A50                          u1520 085C  
                        u1440 06AC                          u2320 15A4                          u1360 2256  
                        u2240 1724                          u2401 1A4A                          u2161 1B64  
                        u2081 2102                          u1601 0A4C                          u1521 0858  
                        u1441 06A8                          u2321 15A0                          u1361 2252  
                        u2241 1720                          u2410 1A74                          u2170 1B94  
                        u2090 211C                          u1610 0A78                          u1530 088A  
                        u1450 06D0                          u2330 1614                          u1370 2290  
                        u2250 1748                          u2411 1A70                          u2171 1B90  
                        u2091 2118                          u1611 0A74                          u1531 0886  
                        u1451 06CC                          u2331 1610                          u1371 228C  
                        u2251 1744                          u1380 1F6C                          u2420 1AA6  
                        u2500 1D76                          u2180 1BB6                          u1700 0C62  
                        u1620 0A8C                          u1540 08FC                          u1460 06F8  
                        u2340 1638                          u2260 17BA                          u2421 1AA2  
                        u2501 1D72                          u2181 1BB2                          u1701 0C5E  
                        u1621 0A88                          u1541 08F8                          u1461 06F4  
                        u2341 1634                          u2261 17B6                          u1390 1FBC  
                        u2350 214A                          u2430 1AD0                          u2510 1DA0  
                        u2190 1C14                          u1710 0C8C                          u1630 0AAA  
                        u1550 0926                          u1470 0788                          u2270 181A  
                        u2351 2146                          u2431 1ACC                          u2511 1D9C  
                        u2191 1C10                          u1711 0C88                          u1631 0AA6  
                        u1551 0922                          u1471 0784                          u2271 1816  
                        u2360 21C2                          u2440 1B02                          u2520 1DC4  
                        u1800 0E44                          u1720 0CB0                          u1640 0AC6  
                        u1560 093A                          u1480 07B2                          u2280 1486  
                        u2361 21BE                          u2441 1AFE                          u2521 1DC0  
                        u1801 0E40                          u1721 0CAC                          u1641 0AC2  
                        u1561 0936                          u1481 07AE                          u2281 1482  
                        u2450 1870                          u2370 19C0                          u2530 1DE6  
                        u1810 0E66                          u1730 0CC6                          u1650 0AEA  
                        u1570 0950                          u1490 07D6                          u2290 14B2  
                        u1387 1F62                          u2451 186C                          u2371 19BC  
                        u2531 1DE2                          u1811 0E62                          u1731 0CC2  
                        u1651 0AE6                          u1571 094C                          u1491 07D2  
                        u2291 14AE                          u2460 18B8                          u2380 19F2  
                        u1900 108C                          u1820 0EE0                          u1740 0CDA  
                        u1660 0B54                          u1580 09B6                          u1397 1FB2  
                        u2461 18B4                          u2381 19EE                          u1901 1088  
                        u1821 0EDC                          u1741 0CD6                          u1661 0B50  
                        u1581 09B2                          u2470 18F6                          u2390 1A1C  
                        u1910 10B0                          u1830 0F08                          u1750 0D40  
                        u1670 0B82                          u1590 09DE                          u2550 1E9C  
                        u2471 18F2                          u2391 1A18                          u2607 231A  
                        u1911 10AC                          u1831 0F04                          u1751 0D3C  
                        u1671 0B7E                          u1591 09DA                          u2551 1E98  
                        u2480 1CF2                          u1920 111A                          u1840 0F6E  
                        u1760 0D68                          u1680 0BAA                          u2560 1EB8  
                        u2481 1CEE                          u2617 2336                          u1921 1116  
                        u1841 0F6A                          u1761 0D64                          u1681 0BA6  
                        u2561 1EB4                          u2490 1D1E                          u1930 1148  
                        u1850 0F8A                          u1770 0DF0                          u1690 0BD2  
                        u2570 1ED6                          u2491 1D1A                          u2627 2348  
                        u1931 1144                          u1851 0F86                          u1771 0DEC  
                        u1691 0BCE                          u2571 1ED2                          u1940 11BA  
                        u1860 0FA8                          u1780 0E18                          u2580 1EE8  
                        u1941 11B6                          u2637 235A                          u1861 0FA4  
                        u1781 0E14                          u2581 1EE4                          u1950 11D0  
                        u1870 0FC4                          u1790 0E2E                          u1951 11CC  
                        u2647 236C                          u1871 0FC0                          u1791 0E2A  
                        u1960 11E6                          u1880 0FE8                          u2657 22CE  
                        u1961 11E2                          u1881 0FE4                          u1970 1214  
                        u1890 1062                          u2667 22FC                          u1971 1210  
                        u1891 105E                          u1980 122A                          u1981 1226  
                        u2597 1F08                          u1990 1240                          u1991 123C  
                        _RCIF 007CF5              ??_initialisation 00B4                          _main 1E20  
                        _rand 23D6                          fsr0h 000FEA                          indf0 000FEF  
                        fsr2h 000FDA                          fsr0l 000FE9                          indf1 000FE7  
                        indf2 000FDF                          fsr1l 000FE1                          fsr2l 000FD9  
                        prodh 000FF4                          prodl 000FF3                          start 0000  
             ?_lcd_putMessage 00BA                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000               ??_lcd_ecritChar 00B7                         ?_main 00B4  
                       ?_rand 00C0               __end_of___awmod 2080                         _ANSEL 000F7E  
                       _RCREG 000FAE                         _SPBRG 000FAF                         _PORTD 000F83  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISD 000F95  
                       _TXREG 000FAD                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000               __end_of_deplace 1B2C  
         ___lmul@multiplicand 00B8                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000               ??_lcd_initCGRam 00B7  
                       _gagne 1CA6                         _randx 00DD                         main@x 00DB  
                       main@y 00DC                         tablat 000FF5                         status 000FD8  
              __CFG_HFOFST$ON 000000                __CFG_PBADEN$ON 000000              _metToucheCombien 1440  
             __initialization 2378                  __end_of_main 1F1A                  __end_of_rand 242C  
      enleveTuilesAutour@mine 00BF           enleveTuilesAutour@i 00C4           enleveTuilesAutour@j 00C2  
         enleveTuilesAutour@x 00C1           enleveTuilesAutour@y 00BA          lcd_putMessage@chaine 00BA  
  calculToucheCombien@colonne 00BC    calculToucheCombien@nb_mine 00C3                        ??_main 00D8  
                      ??_rand 00C2                 __activetblptr 000003                        ?_gagne 00BA  
                      _ADCON1 000FC1                        _ADRESH 000FC4                        _ANSELH 000F7F  
                 initTabVue@i 00BC                   initTabVue@j 00BE                __CFG_WDTEN$OFF 000000  
                ?_rempliMines 00C8                        _SPBRGH 000FB0                __CFG_XINST$OFF 000000  
              lcd_initCGRam@i 00B9                lcd_initCGRam@j 00BA                getAnalog@canal 00B5  
            __end_of_lcd_busy 24C2              __end_of_lcd_init 258A                        ___lmul 2236  
                      ___wmul 258A                __CFG_STVREN$ON 000000                     ??___awmod 00C6  
                      _demine 181C                        gagne@i 00C2                        gagne@j 00C4  
                      clear_0 23BE                        clear_1 23CA               ___awmod@divisor 00C4  
                   ??_deplace 00BD               ___awmod@counter 00C6                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
      __size_of_afficheTabVue 00A2             _lcd_resetSequence 230E                    __accesstop 0060  
     __end_of__initialization 23D0           _lcd_strobeEnableBit 2628            ?_lcd_resetSequence 00B4  
               ___rparam_used 000000           _lcd_effaceAffichage 2612                  __pidataBANK0 2636  
                __pidataBANK1 24C2           ??_lcd_resetSequence 00B6                 __end_of_gagne 1E20  
        ?_lcd_strobeEnableBit 00B4            __size_of_getAnalog 002C          ?_lcd_effaceAffichage 00B4  
          __size_of_lcd_wrCom 006C                       ??_gagne 00BC     __end_of_lcd_resetSequence 2378  
    __size_of_lcd_lireDonnees 0006             _lcd_ecrireDonnees 25F6                    __pbssBANK0 0060  
                  __pbssBANK1 0100              ??_lcd_putMessage 00BD            ?_lcd_ecrireDonnees 00B4  
    __size_of_lcd_curseurHome 0008           ??_lcd_ecrireDonnees 00B4                       ?___lmul 00B4  
                     ?___wmul 00B4                       ?_demine 00C6                 _afficheTabVue 2122  
              ___lmul@product 00BC   __size_of_enleveTuilesAutour 02F2         ??_lcd_strobeEnableBit 00B4  
__size_of_calculToucheCombien 0B34      __end_of_metToucheCombien 163A                    _lcd_gotoXY 21C4  
       ??_lcd_effaceAffichage 00B7                    _lcd_wrData 2502     __end_of_lcd_ecrireDonnees 2612  
                   ?_lcd_busy 00B4                     ?_lcd_init 00B4       lcd_ecrireDonnees@donnee 00B5  
                  _m_tabMines 0060             __end_of_getAnalog 2562          __size_of_rempliMines 01E2  
                     __Hparam 0000                       __Lparam 0000                    _initTabVue 1B2C  
           __end_of_lcd_wrCom 230E                ?_afficheTabVue 00B4               __size_of___lmul 006C  
                     ___awmod 1FCE               __size_of___wmul 0028               __size_of_demine 018A  
                __psmallconst 0600                       __pcinit 2378                    _init_serie 25D8  
                   _ANSELbits 000F7E                       __ramtop 0600                       _deplace 19A6  
                     __ptext0 1E20                       __ptext1 163A                       __ptext2 23D6  
                     __ptext3 2236                       __ptext4 1FCE                       __ptext5 1440  
                     __ptext6 061A                       __ptext7 2562                       __ptext8 230E  
                     __ptext9 2080         __end_of_lcd_ecritChar 2480               lcd_busy@adresse 00B5  
                  gagne@gagne 00C1              ___awmod@dividend 00C2                 gagne@nb_Tuile 00BF  
                     demine@x 00CC                       demine@y 00C6              lcd_ecritChar@car 00B7  
                  ??_lcd_busy 00B4                    ??_lcd_init 00BB    __size_of_lcd_resetSequence 006A  
        end_of_initialization 23D0         __end_of_lcd_initCGRam 2122                    demine@mine 00CB  
           ??_lcd_lireDonnees 00B4                     _RCSTAbits 000FAB                       postdec1 000FE5  
                     postdec2 000FDD                       postinc0 000FEE                       postinc2 000FDE  
     __size_of_initialisation 0026             ??_lcd_curseurHome 00B7           lcd_ecritChar@posRam 00B8  
                   _PORTAbits 000F80                     _PORTBbits 000F81                   ?_lcd_gotoXY 00B7  
                   _TRISCbits 000F94                   ?_lcd_wrData 00B4    __size_of_lcd_ecrireDonnees 001C  
                   _TXSTAbits 000FAC               ??_afficheTabVue 00C3                   ?_initTabVue 00B4  
              __end_of___lmul 22A2                __end_of___wmul 25B2                   _BAUDCONbits 000FB8  
                 ?_init_serie 00B4                __end_of_demine 19A6           start_initialization 2378  
         _calculToucheCombien 061A           __size_of_lcd_gotoXY 0072                      ??___lmul 00BC  
                    ??___wmul 00B8                 rempliMines@nb 00C8           __size_of_lcd_wrData 0034  
                    ??_demine 00C7                   __pdataBANK0 00DD                   __pdataBANK1 0154  
            __CFG_LPT1OSC$OFF 000000          ?_calculToucheCombien 00BA                 __pcstackBANK0 00B4  
           ?_metToucheCombien 00B4           __size_of_initTabVue 017A            ??_metToucheCombien 00C9  
           __size_of_lcd_busy 0042             __size_of_lcd_init 0028           __size_of_init_serie 001E  
           __CFG_CCP2MX$PORTC 000000                     _getAnalog 2536   __end_of_lcd_strobeEnableBit 2630  
              _initialisation 25B2    __end_of_enleveTuilesAutour 1440                      ?___awmod 00C2  
                    ?_deplace 00B9   __end_of_lcd_effaceAffichage 2620                     _lcd_wrCom 22A2  
       ??_calculToucheCombien 00BE                   __smallconst 0600             rempliMines@nbMine 00D3  
              __size_of_gagne 017A               _lcd_lireDonnees 2630           lcd_wrData@caractere 00B6  
               ??_rempliMines 00CA          metToucheCombien@mine 00CC               _lcd_curseurHome 2620  
              ___wmul@product 00B8        __end_of_initialisation 25D8                    ?_getAnalog 00B4  
            __CFG_WDTPS$32768 000000       __size_of_lcd_putMessage 00B4                    ?_lcd_wrCom 00B4  
                  _ADCON0bits 000FC2                    _ADCON2bits 000FC0             ___wmul@multiplier 00B4  
                ??_lcd_gotoXY 00B8                  ??_lcd_wrData 00B6             lcd_wrCom@commande 00B6  
           ___lmul@multiplier 00B4                     copy_data0 238C                     copy_data1 23AC  
                    __Hparam0 0000        __size_of_lcd_ecritChar 0054                      __Lparam0 0000  
             ?_initialisation 00B4           __end_of_rempliMines 181C                  ??_initTabVue 00BA  
          __CFG_BOREN$SBORDIS 000000                  rempliMines@i 00CD                  rempliMines@j 00CF  
                rempliMines@x 00D1                  rempliMines@y 00D2            __end_of_lcd_gotoXY 2236  
          __end_of_lcd_wrData 2536              __size_of___awmod 00B2                  ??_init_serie 00B4  
      __size_of_lcd_initCGRam 00A2               lcd_putMessage@j 00C2              __size_of_deplace 0186  
     __end_of_lcd_lireDonnees 2636                      _matCGRAM 0154       __end_of_lcd_curseurHome 2628  
                    __ptext10 2620                      __ptext11 25B2                      __ptext20 2122  
                    __ptext12 25D8                      __ptext21 1F1A                      __ptext13 1B2C  
                    __ptext30 258A                      __ptext22 242C                      __ptext14 1CA6  
                    __ptext23 2502                      __ptext15 2612                      __ptext24 21C4  
                    __ptext16 19A6                      __ptext25 22A2                      __ptext17 2536  
                    __ptext26 2628                      __ptext18 181C                      __ptext27 25F6  
                    __ptext19 114E                      __ptext28 2480                      __ptext29 2630  
           metToucheCombien@i 00CE             metToucheCombien@j 00D0                      _lcd_busy 2480  
                    _lcd_init 2562            __end_of_initTabVue 1CA6              rempliMines@i_384 00D4  
            rempliMines@j_385 00D6      calculToucheCombien@ligne 00BA                      _m_tabVue 0100  
               __size_of_main 00FA                 __size_of_rand 0056                   gagne@pMines 00BA  
          __end_of_init_serie 25F6                      deplace@x 00B9                      deplace@y 00BB  
                 ??_getAnalog 00B4         __end_of_afficheTabVue 21C4                   ??_lcd_wrCom 00B6  
               _lcd_ecritChar 242C                afficheTabVue@i 00C5                 _lcd_initCGRam 2080  
                 _rempliMines 163A          calculToucheCombien@i 00C7          calculToucheCombien@j 00C5  
   __size_of_metToucheCombien 01FA                _lcd_putMessage 1F1A                ?_lcd_ecritChar 00B4  
            ?_lcd_lireDonnees 00B4            _enleveTuilesAutour 114E              ?_lcd_curseurHome 00B4  
              ?_lcd_initCGRam 00B4           ?_enleveTuilesAutour 00BA             __CFG_FOSC$INTIO67 000000  
                 main@NBMines 00D9        __end_of_lcd_putMessage 1FCE  
