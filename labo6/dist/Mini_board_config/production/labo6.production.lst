

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Dec 07 18:41:00 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2,minocg
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1,minocg
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2,minocg
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1,minocg
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    47  0000                     
    48                           ; Version 2.10
    49                           ; Generated 31/07/2019 GMT
    50                           ; 
    51                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F45K20 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataBANK0
    84  0023FE                     __pidataBANK0:
    85                           	opt callstack 0
    86                           
    87                           ;initializer for _randx
    88  0023FE  0001               	dw	1
    89  002400  0000               	dw	0
    90                           
    91                           	psect	idataBANK1
    92  00229E                     __pidataBANK1:
    93                           	opt callstack 0
    94                           
    95                           ;initializer for _matCGRAM
    96  00229E  08                 	db	8
    97  00229F  04                 	db	4
    98  0022A0  04                 	db	4
    99  0022A1  0A                 	db	10
   100  0022A2  11                 	db	17
   101  0022A3  1F                 	db	31
   102  0022A4  11                 	db	17
   103  0022A5  00                 	db	0
   104  0022A6  1F                 	db	31
   105  0022A7  1F                 	db	31
   106  0022A8  1F                 	db	31
   107  0022A9  1F                 	db	31
   108  0022AA  1F                 	db	31
   109  0022AB  1F                 	db	31
   110  0022AC  1F                 	db	31
   111  0022AD  1F                 	db	31
   112  0022AE  00                 	db	0
   113  0022AF  00                 	db	0
   114  0022B0  04                 	db	4
   115  0022B1  0E                 	db	14
   116  0022B2  0E                 	db	14
   117  0022B3  0E                 	db	14
   118  0022B4  04                 	db	4
   119  0022B5  00                 	db	0
   120  0022B6  08                 	db	8
   121  0022B7  04                 	db	4
   122  0022B8  0E                 	db	14
   123  0022B9  11                 	db	17
   124  0022BA  1F                 	db	31
   125  0022BB  10                 	db	16
   126  0022BC  0E                 	db	14
   127  0022BD  00                 	db	0
   128  0022BE  08                 	db	8
   129  0022BF  04                 	db	4
   130  0022C0  1F                 	db	31
   131  0022C1  10                 	db	16
   132  0022C2  1E                 	db	30
   133  0022C3  10                 	db	16
   134  0022C4  1F                 	db	31
   135  0022C5  00                 	db	0
   136  0022C6  04                 	db	4
   137  0022C7  0A                 	db	10
   138  0022C8  0E                 	db	14
   139  0022C9  11                 	db	17
   140  0022CA  1F                 	db	31
   141  0022CB  10                 	db	16
   142  0022CC  0E                 	db	14
   143  0022CD  00                 	db	0
   144  0022CE  08                 	db	8
   145  0022CF  04                 	db	4
   146  0022D0  0E                 	db	14
   147  0022D1  01                 	db	1
   148  0022D2  0F                 	db	15
   149  0022D3  11                 	db	17
   150  0022D4  0F                 	db	15
   151  0022D5  00                 	db	0
   152  0022D6  04                 	db	4
   153  0022D7  0A                 	db	10
   154  0022D8  0E                 	db	14
   155  0022D9  01                 	db	1
   156  0022DA  0F                 	db	15
   157  0022DB  11                 	db	17
   158  0022DC  0F                 	db	15
   159  0022DD  00                 	db	0
   160  0000                     _PORTAbits	set	3968
   161  0000                     _PORTD	set	3971
   162  0000                     _RCREG	set	4014
   163  0000                     _TXREG	set	4013
   164  0000                     _RCSTAbits	set	4011
   165  0000                     _TXSTAbits	set	4012
   166  0000                     _BAUDCONbits	set	4024
   167  0000                     _SPBRG	set	4015
   168  0000                     _SPBRGH	set	4016
   169  0000                     _TRISCbits	set	3988
   170  0000                     _ADRESH	set	4036
   171  0000                     _ADCON2bits	set	4032
   172  0000                     _ADCON1	set	4033
   173  0000                     _ADCON0bits	set	4034
   174  0000                     _ANSELbits	set	3966
   175  0000                     _TRISA	set	3986
   176  0000                     _ANSEL	set	3966
   177  0000                     _TRISD	set	3989
   178  0000                     _PORTBbits	set	3969
   179  0000                     _RCIF	set	31989
   180                           
   181                           	psect	smallconst
   182  000600                     __psmallconst:
   183                           	opt callstack 0
   184  000600  00                 	db	0
   185  000601                     STR_1:
   186                           
   187                           ; BSR set to: 0
   188  000601  4C                 	db	76	;'L'
   189  000602  41                 	db	65	;'A'
   190  000603  42                 	db	66	;'B'
   191  000604  36                 	db	54	;'6'
   192  000605  20                 	db	32
   193  000606  59                 	db	89	;'Y'
   194  000607  6F                 	db	111	;'o'
   195  000608  75                 	db	117	;'u'
   196  000609  6C                 	db	108	;'l'
   197  00060A  69                 	db	105	;'i'
   198  00060B  61                 	db	97	;'a'
   199  00060C  6E                 	db	110	;'n'
   200  00060D  20                 	db	32
   201  00060E  48                 	db	72	;'H'
   202  00060F  6F                 	db	111	;'o'
   203  000610  75                 	db	117	;'u'
   204  000611  65                 	db	101	;'e'
   205  000612  68                 	db	104	;'h'
   206  000613  6F                 	db	111	;'o'
   207  000614  75                 	db	117	;'u'
   208  000615  6E                 	db	110	;'n'
   209  000616  6F                 	db	111	;'o'
   210  000617  75                 	db	117	;'u'
   211  000618  00                 	db	0
   212                           
   213                           ; #config settings
   214  000619  00                 	db	0	; dummy byte at the end
   215  0000                     
   216                           	psect	cinit
   217  00210C                     __pcinit:
   218                           	opt callstack 0
   219  00210C                     start_initialization:
   220                           	opt callstack 0
   221  00210C                     __initialization:
   222                           	opt callstack 0
   223                           
   224                           ; Initialize objects allocated to BANK1 (64 bytes)
   225                           ; load TBLPTR registers with __pidataBANK1
   226  00210C  0E9E               	movlw	low __pidataBANK1
   227  00210E  6EF6               	movwf	tblptrl,c
   228  002110  0E22               	movlw	high __pidataBANK1
   229  002112  6EF7               	movwf	tblptrh,c
   230  002114  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   231  002116  6EF8               	movwf	tblptru,c
   232  002118  EE01  F054         	lfsr	0,__pdataBANK1
   233  00211C  EE10 F040          	lfsr	1,64
   234  002120                     copy_data0:
   235  002120  0009               	tblrd		*+
   236  002122  CFF5 FFEE          	movff	tablat,postinc0
   237  002126  50E5               	movf	postdec1,w,c
   238  002128  50E1               	movf	fsr1l,w,c
   239  00212A  E1FA               	bnz	copy_data0
   240                           
   241                           ; Initialize objects allocated to BANK0 (4 bytes)
   242                           ; load TBLPTR registers with __pidataBANK0
   243  00212C  0EFE               	movlw	low __pidataBANK0
   244  00212E  6EF6               	movwf	tblptrl,c
   245  002130  0E23               	movlw	high __pidataBANK0
   246  002132  6EF7               	movwf	tblptrh,c
   247  002134  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   248  002136  6EF8               	movwf	tblptru,c
   249  002138  EE00  F0E4         	lfsr	0,__pdataBANK0
   250  00213C  EE10 F004          	lfsr	1,4
   251  002140                     copy_data1:
   252  002140  0009               	tblrd		*+
   253  002142  CFF5 FFEE          	movff	tablat,postinc0
   254  002146  50E5               	movf	postdec1,w,c
   255  002148  50E1               	movf	fsr1l,w,c
   256  00214A  E1FA               	bnz	copy_data1
   257                           
   258                           ; Clear objects allocated to BANK1 (84 bytes)
   259  00214C  EE01  F000         	lfsr	0,__pbssBANK1
   260  002150  0E54               	movlw	84
   261  002152                     clear_0:
   262  002152  6AEE               	clrf	postinc0,c
   263  002154  06E8               	decf	wreg,f,c
   264  002156  E1FD               	bnz	clear_0
   265                           
   266                           ; Clear objects allocated to BANK0 (84 bytes)
   267  002158  EE00  F060         	lfsr	0,__pbssBANK0
   268  00215C  0E54               	movlw	84
   269  00215E                     clear_1:
   270  00215E  6AEE               	clrf	postinc0,c
   271  002160  06E8               	decf	wreg,f,c
   272  002162  E1FD               	bnz	clear_1
   273  002164                     end_of_initialization:
   274                           	opt callstack 0
   275  002164                     __end_of__initialization:
   276                           	opt callstack 0
   277  002164  0100               	movlb	0
   278  002166  EF8B  F00D         	goto	_main	;jump to C main() function
   279                           
   280                           	psect	bssBANK0
   281  000060                     __pbssBANK0:
   282                           	opt callstack 0
   283  000060                     _m_tabMines:
   284                           	opt callstack 0
   285  000060                     	ds	84
   286                           
   287                           	psect	dataBANK0
   288  0000E4                     __pdataBANK0:
   289                           	opt callstack 0
   290  0000E4                     _randx:
   291                           	opt callstack 0
   292  0000E4                     	ds	4
   293                           
   294                           	psect	bssBANK1
   295  000100                     __pbssBANK1:
   296                           	opt callstack 0
   297  000100                     _m_tabVue:
   298                           	opt callstack 0
   299  000100                     	ds	84
   300                           
   301                           	psect	dataBANK1
   302  000154                     __pdataBANK1:
   303                           	opt callstack 0
   304  000154                     _matCGRAM:
   305                           	opt callstack 0
   306  000154                     	ds	64
   307                           
   308                           	psect	cstackBANK0
   309  0000B4                     __pcstackBANK0:
   310                           	opt callstack 0
   311  0000B4                     ??_getAnalog:
   312  0000B4                     ??_lcd_ecrireDonnees:
   313  0000B4                     ??_lcd_busy:
   314  0000B4                     ?___wmul:
   315                           	opt callstack 0
   316  0000B4                     ?___lmul:
   317                           	opt callstack 0
   318  0000B4                     gagne@pMines:
   319                           	opt callstack 0
   320  0000B4                     ___wmul@multiplier:
   321                           	opt callstack 0
   322  0000B4                     ___lmul@multiplier:
   323                           	opt callstack 0
   324                           
   325                           ; 4 bytes @ 0x0
   326  0000B4                     	ds	1
   327  0000B5                     getAnalog@canal:
   328                           	opt callstack 0
   329  0000B5                     lcd_ecrireDonnees@donnee:
   330                           	opt callstack 0
   331  0000B5                     lcd_busy@adresse:
   332                           	opt callstack 0
   333                           
   334                           ; 1 bytes @ 0x1
   335  0000B5                     	ds	1
   336  0000B6                     ??_lcd_resetSequence:
   337  0000B6                     lcd_wrCom@commande:
   338                           	opt callstack 0
   339  0000B6                     lcd_wrData@caractere:
   340                           	opt callstack 0
   341  0000B6                     ___wmul@multiplicand:
   342                           	opt callstack 0
   343                           
   344                           ; 2 bytes @ 0x2
   345  0000B6                     	ds	1
   346  0000B7                     ??_lcd_initCGRam:
   347  0000B7                     lcd_gotoXY@y:
   348                           	opt callstack 0
   349  0000B7                     lcd_ecritChar@car:
   350                           	opt callstack 0
   351                           
   352                           ; 1 bytes @ 0x3
   353  0000B7                     	ds	1
   354  0000B8                     lcd_gotoXY@x:
   355                           	opt callstack 0
   356  0000B8                     lcd_ecritChar@posRam:
   357                           	opt callstack 0
   358  0000B8                     ___wmul@product:
   359                           	opt callstack 0
   360  0000B8                     ___lmul@multiplicand:
   361                           	opt callstack 0
   362                           
   363                           ; 4 bytes @ 0x4
   364  0000B8                     	ds	1
   365  0000B9                     lcd_initCGRam@i:
   366                           	opt callstack 0
   367  0000B9                     deplace@x:
   368                           	opt callstack 0
   369                           
   370                           ; 2 bytes @ 0x5
   371  0000B9                     	ds	1
   372  0000BA                     ??_initTabVue:
   373  0000BA                     ?_strcpy:
   374                           	opt callstack 0
   375  0000BA                     lcd_initCGRam@j:
   376                           	opt callstack 0
   377  0000BA                     calculToucheCombien@ligne:
   378                           	opt callstack 0
   379  0000BA                     strcpy@to:
   380                           	opt callstack 0
   381  0000BA                     lcd_putMessage@chaine:
   382                           	opt callstack 0
   383                           
   384                           ; 3 bytes @ 0x6
   385  0000BA                     	ds	1
   386  0000BB                     deplace@y:
   387                           	opt callstack 0
   388                           
   389                           ; 2 bytes @ 0x7
   390  0000BB                     	ds	1
   391  0000BC                     initTabVue@i:
   392                           	opt callstack 0
   393  0000BC                     calculToucheCombien@colonne:
   394                           	opt callstack 0
   395  0000BC                     strcpy@from:
   396                           	opt callstack 0
   397  0000BC                     ___lmul@product:
   398                           	opt callstack 0
   399                           
   400                           ; 4 bytes @ 0x8
   401  0000BC                     	ds	1
   402  0000BD                     ??_lcd_putMessage:
   403  0000BD                     ??_deplace:
   404                           
   405                           ; 1 bytes @ 0x9
   406  0000BD                     	ds	1
   407  0000BE                     ??_calculToucheCombien:
   408  0000BE                     initTabVue@j:
   409                           	opt callstack 0
   410  0000BE                     strcpy@cp:
   411                           	opt callstack 0
   412                           
   413                           ; 2 bytes @ 0xA
   414  0000BE                     	ds	2
   415  0000C0                     ?_rand:
   416                           	opt callstack 0
   417                           
   418                           ; 2 bytes @ 0xC
   419  0000C0                     	ds	2
   420  0000C2                     ?___awmod:
   421                           	opt callstack 0
   422  0000C2                     lcd_putMessage@j:
   423                           	opt callstack 0
   424  0000C2                     ___awmod@dividend:
   425                           	opt callstack 0
   426                           
   427                           ; 2 bytes @ 0xE
   428  0000C2                     	ds	1
   429  0000C3                     ??_afficheTabVue:
   430  0000C3                     calculToucheCombien@nb_mine:
   431                           	opt callstack 0
   432                           
   433                           ; 2 bytes @ 0xF
   434  0000C3                     	ds	1
   435  0000C4                     ___awmod@divisor:
   436                           	opt callstack 0
   437                           
   438                           ; 2 bytes @ 0x10
   439  0000C4                     	ds	1
   440  0000C5                     calculToucheCombien@j:
   441                           	opt callstack 0
   442  0000C5                     afficheTabVue@i:
   443                           	opt callstack 0
   444                           
   445                           ; 2 bytes @ 0x11
   446  0000C5                     	ds	1
   447  0000C6                     ___awmod@counter:
   448                           	opt callstack 0
   449                           
   450                           ; 1 bytes @ 0x12
   451  0000C6                     	ds	1
   452  0000C7                     ___awmod@sign:
   453                           	opt callstack 0
   454  0000C7                     calculToucheCombien@i:
   455                           	opt callstack 0
   456                           
   457                           ; 2 bytes @ 0x13
   458  0000C7                     	ds	1
   459  0000C8                     rempliMines@nb:
   460                           	opt callstack 0
   461                           
   462                           ; 2 bytes @ 0x14
   463  0000C8                     	ds	1
   464  0000C9                     ??_metToucheCombien:
   465  0000C9                     enleveTuilesAutour@y:
   466                           	opt callstack 0
   467                           
   468                           ; 1 bytes @ 0x15
   469  0000C9                     	ds	1
   470  0000CA                     ??_rempliMines:
   471  0000CA                     ??_enleveTuilesAutour:
   472                           
   473                           ; 1 bytes @ 0x16
   474  0000CA                     	ds	2
   475  0000CC                     metToucheCombien@mine:
   476                           	opt callstack 0
   477                           
   478                           ; 2 bytes @ 0x18
   479  0000CC                     	ds	1
   480  0000CD                     rempliMines@i:
   481                           	opt callstack 0
   482                           
   483                           ; 2 bytes @ 0x19
   484  0000CD                     	ds	1
   485  0000CE                     metToucheCombien@i:
   486                           	opt callstack 0
   487                           
   488                           ; 2 bytes @ 0x1A
   489  0000CE                     	ds	1
   490  0000CF                     rempliMines@j:
   491                           	opt callstack 0
   492                           
   493                           ; 2 bytes @ 0x1B
   494  0000CF                     	ds	1
   495  0000D0                     metToucheCombien@j:
   496                           	opt callstack 0
   497                           
   498                           ; 2 bytes @ 0x1C
   499  0000D0                     	ds	1
   500  0000D1                     rempliMines@x:
   501                           	opt callstack 0
   502                           
   503                           ; 1 bytes @ 0x1D
   504  0000D1                     	ds	1
   505  0000D2                     rempliMines@y:
   506                           	opt callstack 0
   507  0000D2                     enleveTuilesAutour@mine:
   508                           	opt callstack 0
   509                           
   510                           ; 2 bytes @ 0x1E
   511  0000D2                     	ds	1
   512  0000D3                     rempliMines@nbMine:
   513                           	opt callstack 0
   514                           
   515                           ; 1 bytes @ 0x1F
   516  0000D3                     	ds	1
   517  0000D4                     rempliMines@i_380:
   518                           	opt callstack 0
   519  0000D4                     enleveTuilesAutour@i:
   520                           	opt callstack 0
   521                           
   522                           ; 2 bytes @ 0x20
   523  0000D4                     	ds	2
   524  0000D6                     rempliMines@j_381:
   525                           	opt callstack 0
   526  0000D6                     enleveTuilesAutour@j:
   527                           	opt callstack 0
   528                           
   529                           ; 2 bytes @ 0x22
   530  0000D6                     	ds	2
   531  0000D8                     enleveTuilesAutour@x:
   532                           	opt callstack 0
   533                           
   534                           ; 1 bytes @ 0x24
   535  0000D8                     	ds	1
   536  0000D9                     demine@y:
   537                           	opt callstack 0
   538                           
   539                           ; 1 bytes @ 0x25
   540  0000D9                     	ds	1
   541  0000DA                     ??_demine:
   542                           
   543                           ; 1 bytes @ 0x26
   544  0000DA                     	ds	3
   545  0000DD                     demine@mine:
   546                           	opt callstack 0
   547                           
   548                           ; 1 bytes @ 0x29
   549  0000DD                     	ds	1
   550  0000DE                     demine@x:
   551                           	opt callstack 0
   552                           
   553                           ; 1 bytes @ 0x2A
   554  0000DE                     	ds	1
   555  0000DF                     ??_main:
   556                           
   557                           ; 1 bytes @ 0x2B
   558  0000DF                     	ds	1
   559  0000E0                     main@NBMines:
   560                           	opt callstack 0
   561                           
   562                           ; 2 bytes @ 0x2C
   563  0000E0                     	ds	2
   564  0000E2                     main@x:
   565                           	opt callstack 0
   566                           
   567                           ; 1 bytes @ 0x2E
   568  0000E2                     	ds	1
   569  0000E3                     main@y:
   570                           	opt callstack 0
   571                           
   572                           ; 1 bytes @ 0x2F
   573  0000E3                     	ds	1
   574                           
   575 ;;
   576 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   577 ;;
   578 ;; *************** function _main *****************
   579 ;; Defined at:
   580 ;;		line 52 in file "main.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;  NBMines         2   44[BANK0 ] int 
   585 ;;  y               1   47[BANK0 ] unsigned char 
   586 ;;  x               1   46[BANK0 ] unsigned char 
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   596 ;;      Params:         0       0       0       0       0       0       0
   597 ;;      Locals:         0       4       0       0       0       0       0
   598 ;;      Temps:          0       1       0       0       0       0       0
   599 ;;      Totals:         0       5       0       0       0       0       0
   600 ;;Total ram usage:        5 bytes
   601 ;; Hardware stack levels required when called:    6
   602 ;; This function calls:
   603 ;;		_afficheTabVue
   604 ;;		_demine
   605 ;;		_deplace
   606 ;;		_gagne
   607 ;;		_initTabVue
   608 ;;		_init_serie
   609 ;;		_initialisation
   610 ;;		_lcd_curseurHome
   611 ;;		_lcd_init
   612 ;;		_lcd_putMessage
   613 ;;		_metToucheCombien
   614 ;;		_rempliMines
   615 ;; This function is called by:
   616 ;;		Startup code after reset
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           	psect	text0
   621  001B16                     __ptext0:
   622                           	opt callstack 0
   623  001B16                     _main:
   624                           	opt callstack 25
   625  001B16                     
   626                           ;main.c: 54: initialisation();
   627  001B16  ECC7  F011         	call	_initialisation	;wreg free
   628                           
   629                           ;main.c: 55: init_serie();
   630  001B1A  ECD7  F011         	call	_init_serie	;wreg free
   631  001B1E                     
   632                           ;main.c: 56: lcd_init();
   633  001B1E  EC9F  F011         	call	_lcd_init	;wreg free
   634  001B22                     
   635                           ;main.c: 57: initTabVue();
   636  001B22  ECCE  F00C         	call	_initTabVue	;wreg free
   637  001B26                     
   638                           ;main.c: 58: lcd_curseurHome();
   639  001B26  ECF4  F011         	call	_lcd_curseurHome	;wreg free
   640  001B2A                     
   641                           ;main.c: 60: int NBMines=12;
   642  001B2A  0E00               	movlw	0
   643  001B2C  0100               	movlb	0	; force () banked
   644  001B2E  6FE1               	movwf	(main@NBMines+1)& (0+255),b
   645  001B30  0E0C               	movlw	12
   646  001B32  6FE0               	movwf	main@NBMines& (0+255),b
   647  001B34                     
   648                           ; BSR set to: 0
   649                           ;main.c: 61: char x =1;
   650  001B34  0E01               	movlw	1
   651  001B36  0100               	movlb	0	; force () banked
   652  001B38  6FE2               	movwf	main@x& (0+255),b
   653  001B3A                     
   654                           ; BSR set to: 0
   655                           ;main.c: 62: char y = 1;
   656  001B3A  0E01               	movlw	1
   657  001B3C  0100               	movlb	0	; force () banked
   658  001B3E  6FE3               	movwf	main@y& (0+255),b
   659  001B40                     
   660                           ; BSR set to: 0
   661                           ;main.c: 63: lcd_putMessage("LAB6 Youlian Houehounou");
   662  001B40  0E01               	movlw	low STR_1
   663  001B42  0100               	movlb	0	; force () banked
   664  001B44  6FBA               	movwf	lcd_putMessage@chaine& (0+255),b
   665  001B46  0E06               	movlw	high STR_1
   666  001B48  6FBB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   667  001B4A  51BA               	movf	lcd_putMessage@chaine& (0+255),w,b
   668  001B4C  11BB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   669  001B4E  A4D8               	btfss	status,2,c
   670  001B50  0E00               	movlw	low (__mediumconst shr (0+16))
   671  001B52  6FBC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   672  001B54  EC01  F00E         	call	_lcd_putMessage	;wreg free
   673  001B58                     
   674                           ;main.c: 64: rempliMines(NBMines);
   675  001B58  C0E0  F0C8         	movff	main@NBMines,rempliMines@nb
   676  001B5C  C0E1  F0C9         	movff	main@NBMines+1,rempliMines@nb+1
   677  001B60  EC0C  F00B         	call	_rempliMines	;wreg free
   678  001B64                     
   679                           ;main.c: 65: metToucheCombien();
   680  001B64  EC0F  F00A         	call	_metToucheCombien	;wreg free
   681  001B68                     
   682                           ;main.c: 66: afficheTabVue();
   683  001B68  ECB4  F00E         	call	_afficheTabVue	;wreg free
   684  001B6C                     l2544:
   685                           
   686                           ;main.c: 69: {;main.c: 70: deplace(&x,&y);
   687  001B6C  0EE2               	movlw	low main@x
   688  001B6E  0100               	movlb	0	; force () banked
   689  001B70  6FB9               	movwf	deplace@x& (0+255),b
   690  001B72  0E00               	movlw	high main@x
   691  001B74  6FBA               	movwf	(deplace@x+1)& (0+255),b
   692  001B76  0EE3               	movlw	low main@y
   693  001B78  0100               	movlb	0	; force () banked
   694  001B7A  6FBB               	movwf	deplace@y& (0+255),b
   695  001B7C  0E00               	movlw	high main@y
   696  001B7E  6FBC               	movwf	(deplace@y+1)& (0+255),b
   697  001B80  ECFD  F00B         	call	_deplace	;wreg free
   698  001B84                     
   699                           ;main.c: 71: if (PORTBbits.RB1==1)
   700  001B84  A281               	btfss	129,1,c	;volatile
   701  001B86  EFC7  F00D         	goto	u2331
   702  001B8A  EFC9  F00D         	goto	u2330
   703  001B8E                     u2331:
   704  001B8E  EFF4  F00D         	goto	l2558
   705  001B92                     u2330:
   706  001B92                     
   707                           ;main.c: 72: {;main.c: 73: if((demine(x,y)==0)||(gagne(NBMines)==0))
   708  001B92  C0E3  F0D9         	movff	main@y,demine@y
   709  001B96  0100               	movlb	0	; force () banked
   710  001B98  51E2               	movf	main@x& (0+255),w,b
   711  001B9A  EC09  F00F         	call	_demine
   712  001B9E  0900               	iorlw	0
   713  001BA0  B4D8               	btfsc	status,2,c
   714  001BA2  EFD5  F00D         	goto	u2341
   715  001BA6  EFD7  F00D         	goto	u2340
   716  001BAA                     u2341:
   717  001BAA  EFE5  F00D         	goto	l2552
   718  001BAE                     u2340:
   719  001BAE  C0E0  F0B4         	movff	main@NBMines,gagne@pMines
   720  001BB2  C0E1  F0B5         	movff	main@NBMines+1,gagne@pMines+1
   721  001BB6  EC01  F012         	call	_gagne	;wreg free
   722  001BBA  0900               	iorlw	0
   723  001BBC  A4D8               	btfss	status,2,c
   724  001BBE  EFE3  F00D         	goto	u2351
   725  001BC2  EFE5  F00D         	goto	u2350
   726  001BC6                     u2351:
   727  001BC6  EFE7  F00D         	goto	l68
   728  001BCA                     u2350:
   729  001BCA                     l2552:
   730                           
   731                           ;main.c: 74: {;main.c: 75: afficheTabVue();
   732  001BCA  ECB4  F00E         	call	_afficheTabVue	;wreg free
   733  001BCE                     l68:
   734  001BCE  B281               	btfsc	129,1,c	;volatile
   735  001BD0  EFEC  F00D         	goto	u2361
   736  001BD4  EFEE  F00D         	goto	u2360
   737  001BD8                     u2361:
   738  001BD8  EFE7  F00D         	goto	l68
   739  001BDC                     u2360:
   740  001BDC                     
   741                           ;main.c: 78: initTabVue();
   742  001BDC  ECCE  F00C         	call	_initTabVue	;wreg free
   743                           
   744                           ;main.c: 79: metToucheCombien();
   745  001BE0  EC0F  F00A         	call	_metToucheCombien	;wreg free
   746  001BE4                     
   747                           ;main.c: 80: afficheTabVue();
   748  001BE4  ECB4  F00E         	call	_afficheTabVue	;wreg free
   749  001BE8                     l2558:
   750                           
   751                           ;main.c: 81: };main.c: 82: _delay((unsigned long)((100)*(1000000/4000.0)));
   752  001BE8  0E21               	movlw	33
   753  001BEA  0100               	movlb	0	; force () banked
   754  001BEC  6FDF               	movwf	??_main& (0+255),b
   755  001BEE  0E76               	movlw	118
   756  001BF0                     u2377:
   757  001BF0  2EE8               	decfsz	wreg,f,c
   758  001BF2  D7FE               	bra	u2377
   759  001BF4  2FDF               	decfsz	??_main& (0+255),f,b
   760  001BF6  D7FC               	bra	u2377
   761  001BF8  F000               	nop	
   762  001BFA  EFB6  F00D         	goto	l2544
   763  001BFE  EF00  F000         	goto	start
   764  001C02                     __end_of_main:
   765                           	opt callstack 0
   766                           
   767 ;; *************** function _rempliMines *****************
   768 ;; Defined at:
   769 ;;		line 166 in file "main.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;  nb              2   20[BANK0 ] int 
   772 ;; Auto vars:     Size  Location     Type
   773 ;;  j               2   34[BANK0 ] int 
   774 ;;  i               2   32[BANK0 ] int 
   775 ;;  j               2   27[BANK0 ] int 
   776 ;;  i               2   25[BANK0 ] int 
   777 ;;  nbMine          1   31[BANK0 ] unsigned char 
   778 ;;  y               1   30[BANK0 ] unsigned char 
   779 ;;  x               1   29[BANK0 ] unsigned char 
   780 ;; Return value:  Size  Location     Type
   781 ;;                  1    wreg      void 
   782 ;; Registers used:
   783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   784 ;; Tracked objects:
   785 ;;		On entry : 0/0
   786 ;;		On exit  : 0/0
   787 ;;		Unchanged: 0/0
   788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   789 ;;      Params:         0       2       0       0       0       0       0
   790 ;;      Locals:         0      11       0       0       0       0       0
   791 ;;      Temps:          0       3       0       0       0       0       0
   792 ;;      Totals:         0      16       0       0       0       0       0
   793 ;;Total ram usage:       16 bytes
   794 ;; Hardware stack levels used:    1
   795 ;; Hardware stack levels required when called:    2
   796 ;; This function calls:
   797 ;;		___awmod
   798 ;;		___wmul
   799 ;;		_rand
   800 ;; This function is called by:
   801 ;;		_main
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           	psect	text1
   806  001618                     __ptext1:
   807                           	opt callstack 0
   808  001618                     _rempliMines:
   809                           	opt callstack 28
   810  001618                     
   811                           ;main.c: 168: int i=0;
   812  001618  0E00               	movlw	0
   813  00161A  0100               	movlb	0	; force () banked
   814  00161C  6FCE               	movwf	(rempliMines@i+1)& (0+255),b
   815  00161E  0E00               	movlw	0
   816  001620  6FCD               	movwf	rempliMines@i& (0+255),b
   817                           
   818                           ;main.c: 169: int j=0;
   819  001622  0E00               	movlw	0
   820  001624  0100               	movlb	0	; force () banked
   821  001626  6FD0               	movwf	(rempliMines@j+1)& (0+255),b
   822  001628  0E00               	movlw	0
   823  00162A  6FCF               	movwf	rempliMines@j& (0+255),b
   824                           
   825                           ;main.c: 170: char x =0;
   826  00162C  0E00               	movlw	0
   827  00162E  0100               	movlb	0	; force () banked
   828  001630  6FD1               	movwf	rempliMines@x& (0+255),b
   829                           
   830                           ;main.c: 171: char y =0;
   831  001632  0E00               	movlw	0
   832  001634  0100               	movlb	0	; force () banked
   833  001636  6FD2               	movwf	rempliMines@y& (0+255),b
   834                           
   835                           ;main.c: 172: char nbMine =0;
   836  001638  0E00               	movlw	0
   837  00163A  0100               	movlb	0	; force () banked
   838  00163C  6FD3               	movwf	rempliMines@nbMine& (0+255),b
   839                           
   840                           ;main.c: 174: for (int i=0;i<4;i++)
   841  00163E  0E00               	movlw	0
   842  001640  0100               	movlb	0	; force () banked
   843  001642  6FD5               	movwf	(rempliMines@i_380+1)& (0+255),b
   844  001644  0E00               	movlw	0
   845  001646  6FD4               	movwf	rempliMines@i_380& (0+255),b
   846  001648                     
   847                           ; BSR set to: 0
   848  001648  0100               	movlb	0	; force () banked
   849  00164A  BFD5               	btfsc	(rempliMines@i_380+1)& (0+255),7,b
   850  00164C  EF31  F00B         	goto	u2071
   851  001650  51D5               	movf	(rempliMines@i_380+1)& (0+255),w,b
   852  001652  E109               	bnz	u2070
   853  001654  0E04               	movlw	4
   854  001656  5DD4               	subwf	rempliMines@i_380& (0+255),w,b
   855  001658  A0D8               	btfss	status,0,c
   856  00165A  EF31  F00B         	goto	u2071
   857  00165E  EF33  F00B         	goto	u2070
   858  001662                     u2071:
   859  001662  EF35  F00B         	goto	l2394
   860  001666                     u2070:
   861  001666  EFE7  F00B         	goto	l2418
   862  00166A                     l2394:
   863                           
   864                           ; BSR set to: 0
   865                           ;main.c: 175: {;main.c: 176: for (int j=0;j<20;j++)
   866  00166A  0E00               	movlw	0
   867  00166C  0100               	movlb	0	; force () banked
   868  00166E  6FD7               	movwf	(rempliMines@j_381+1)& (0+255),b
   869  001670  0E00               	movlw	0
   870  001672  6FD6               	movwf	rempliMines@j_381& (0+255),b
   871  001674                     
   872                           ; BSR set to: 0
   873  001674  0100               	movlb	0	; force () banked
   874  001676  BFD7               	btfsc	(rempliMines@j_381+1)& (0+255),7,b
   875  001678  EF47  F00B         	goto	u2081
   876  00167C  51D7               	movf	(rempliMines@j_381+1)& (0+255),w,b
   877  00167E  E109               	bnz	u2080
   878  001680  0E14               	movlw	20
   879  001682  5DD6               	subwf	rempliMines@j_381& (0+255),w,b
   880  001684  A0D8               	btfss	status,0,c
   881  001686  EF47  F00B         	goto	u2081
   882  00168A  EF49  F00B         	goto	u2080
   883  00168E                     u2081:
   884  00168E  EF4B  F00B         	goto	l2400
   885  001692                     u2080:
   886  001692  EF81  F00B         	goto	l2406
   887  001696                     l2400:
   888                           
   889                           ; BSR set to: 0
   890                           ;main.c: 177: {;main.c: 178: m_tabMines[i][j]=32;
   891  001696  C0D4  F0B4         	movff	rempliMines@i_380,___wmul@multiplier
   892  00169A  C0D5  F0B5         	movff	rempliMines@i_380+1,___wmul@multiplier+1
   893  00169E  0E00               	movlw	0
   894  0016A0  0100               	movlb	0	; force () banked
   895  0016A2  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
   896  0016A4  0E15               	movlw	21
   897  0016A6  6FB6               	movwf	___wmul@multiplicand& (0+255),b
   898  0016A8  ECB3  F011         	call	___wmul	;wreg free
   899  0016AC  0E60               	movlw	low _m_tabMines
   900  0016AE  0100               	movlb	0	; force () banked
   901  0016B0  6FCA               	movwf	??_rempliMines& (0+255),b
   902  0016B2  0E00               	movlw	high _m_tabMines
   903  0016B4  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   904  0016B6  0100               	movlb	0	; force () banked
   905  0016B8  51B4               	movf	?___wmul& (0+255),w,b
   906  0016BA  0100               	movlb	0	; force () banked
   907  0016BC  27CA               	addwf	??_rempliMines& (0+255),f,b
   908  0016BE  0100               	movlb	0	; force () banked
   909  0016C0  51B5               	movf	(?___wmul+1)& (0+255),w,b
   910  0016C2  0100               	movlb	0	; force () banked
   911  0016C4  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   912  0016C6  0100               	movlb	0	; force () banked
   913  0016C8  51D6               	movf	rempliMines@j_381& (0+255),w,b
   914  0016CA  0100               	movlb	0	; force () banked
   915  0016CC  25CA               	addwf	??_rempliMines& (0+255),w,b
   916  0016CE  6ED9               	movwf	fsr2l,c
   917  0016D0  0100               	movlb	0	; force () banked
   918  0016D2  51D7               	movf	(rempliMines@j_381+1)& (0+255),w,b
   919  0016D4  0100               	movlb	0	; force () banked
   920  0016D6  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   921  0016D8  6EDA               	movwf	fsr2h,c
   922  0016DA  0E20               	movlw	32
   923  0016DC  6EDF               	movwf	indf2,c
   924  0016DE                     
   925                           ; BSR set to: 0
   926  0016DE  0100               	movlb	0	; force () banked
   927  0016E0  4BD6               	infsnz	rempliMines@j_381& (0+255),f,b
   928  0016E2  2BD7               	incf	(rempliMines@j_381+1)& (0+255),f,b
   929  0016E4                     
   930                           ; BSR set to: 0
   931  0016E4  0100               	movlb	0	; force () banked
   932  0016E6  BFD7               	btfsc	(rempliMines@j_381+1)& (0+255),7,b
   933  0016E8  EF7F  F00B         	goto	u2091
   934  0016EC  51D7               	movf	(rempliMines@j_381+1)& (0+255),w,b
   935  0016EE  E109               	bnz	u2090
   936  0016F0  0E14               	movlw	20
   937  0016F2  5DD6               	subwf	rempliMines@j_381& (0+255),w,b
   938  0016F4  A0D8               	btfss	status,0,c
   939  0016F6  EF7F  F00B         	goto	u2091
   940  0016FA  EF81  F00B         	goto	u2090
   941  0016FE                     u2091:
   942  0016FE  EF4B  F00B         	goto	l2400
   943  001702                     u2090:
   944  001702                     l2406:
   945                           
   946                           ; BSR set to: 0
   947  001702  0100               	movlb	0	; force () banked
   948  001704  4BD4               	infsnz	rempliMines@i_380& (0+255),f,b
   949  001706  2BD5               	incf	(rempliMines@i_380+1)& (0+255),f,b
   950  001708                     
   951                           ; BSR set to: 0
   952  001708  0100               	movlb	0	; force () banked
   953  00170A  BFD5               	btfsc	(rempliMines@i_380+1)& (0+255),7,b
   954  00170C  EF91  F00B         	goto	u2101
   955  001710  51D5               	movf	(rempliMines@i_380+1)& (0+255),w,b
   956  001712  E109               	bnz	u2100
   957  001714  0E04               	movlw	4
   958  001716  5DD4               	subwf	rempliMines@i_380& (0+255),w,b
   959  001718  A0D8               	btfss	status,0,c
   960  00171A  EF91  F00B         	goto	u2101
   961  00171E  EF93  F00B         	goto	u2100
   962  001722                     u2101:
   963  001722  EF35  F00B         	goto	l2394
   964  001726                     u2100:
   965  001726  EFE7  F00B         	goto	l2418
   966  00172A                     l2410:
   967                           
   968                           ; BSR set to: 0
   969                           ;main.c: 183: {;main.c: 184: x = rand()%20;
   970  00172A  ECB5  F010         	call	_rand	;wreg free
   971  00172E  C0C0  F0C2         	movff	?_rand,___awmod@dividend
   972  001732  C0C1  F0C3         	movff	?_rand+1,___awmod@dividend+1
   973  001736  0E00               	movlw	0
   974  001738  0100               	movlb	0	; force () banked
   975  00173A  6FC5               	movwf	(___awmod@divisor+1)& (0+255),b
   976  00173C  0E14               	movlw	20
   977  00173E  6FC4               	movwf	___awmod@divisor& (0+255),b
   978  001740  EC5B  F00E         	call	___awmod	;wreg free
   979  001744  0100               	movlb	0	; force () banked
   980  001746  51C2               	movf	?___awmod& (0+255),w,b
   981  001748  0100               	movlb	0	; force () banked
   982  00174A  6FD1               	movwf	rempliMines@x& (0+255),b
   983                           
   984                           ;main.c: 185: y = rand()%4;
   985  00174C  ECB5  F010         	call	_rand	;wreg free
   986  001750  0100               	movlb	0	; force () banked
   987  001752  51C0               	movf	?_rand& (0+255),w,b
   988  001754  0B03               	andlw	3
   989  001756  0100               	movlb	0	; force () banked
   990  001758  6FD2               	movwf	rempliMines@y& (0+255),b
   991  00175A                     
   992                           ; BSR set to: 0
   993                           ;main.c: 186: if (m_tabMines[y][x]==32)
   994  00175A  0100               	movlb	0	; force () banked
   995  00175C  51D2               	movf	rempliMines@y& (0+255),w,b
   996  00175E  0D15               	mullw	21
   997  001760  0E60               	movlw	low _m_tabMines
   998  001762  0100               	movlb	0	; force () banked
   999  001764  6FCA               	movwf	??_rempliMines& (0+255),b
  1000  001766  0E00               	movlw	high _m_tabMines
  1001  001768  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
  1002  00176A  50F3               	movf	243,w,c
  1003  00176C  27CA               	addwf	??_rempliMines& (0+255),f,b
  1004  00176E  50F4               	movf	244,w,c
  1005  001770  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
  1006  001772  0100               	movlb	0	; force () banked
  1007  001774  51D1               	movf	rempliMines@x& (0+255),w,b
  1008  001776  0100               	movlb	0	; force () banked
  1009  001778  25CA               	addwf	??_rempliMines& (0+255),w,b
  1010  00177A  6ED9               	movwf	fsr2l,c
  1011  00177C  0100               	movlb	0	; force () banked
  1012  00177E  0E00               	movlw	0
  1013  001780  0100               	movlb	0	; force () banked
  1014  001782  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
  1015  001784  6EDA               	movwf	fsr2h,c
  1016  001786  0E20               	movlw	32
  1017  001788  18DE               	xorwf	postinc2,w,c
  1018  00178A  A4D8               	btfss	status,2,c
  1019  00178C  EFCA  F00B         	goto	u2111
  1020  001790  EFCC  F00B         	goto	u2110
  1021  001794                     u2111:
  1022  001794  EFE7  F00B         	goto	l2418
  1023  001798                     u2110:
  1024  001798                     
  1025                           ; BSR set to: 0
  1026                           ;main.c: 187: {;main.c: 188: m_tabMines[y][x] = 2;
  1027  001798  0100               	movlb	0	; force () banked
  1028  00179A  51D2               	movf	rempliMines@y& (0+255),w,b
  1029  00179C  0D15               	mullw	21
  1030  00179E  0E60               	movlw	low _m_tabMines
  1031  0017A0  0100               	movlb	0	; force () banked
  1032  0017A2  6FCA               	movwf	??_rempliMines& (0+255),b
  1033  0017A4  0E00               	movlw	high _m_tabMines
  1034  0017A6  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
  1035  0017A8  50F3               	movf	243,w,c
  1036  0017AA  27CA               	addwf	??_rempliMines& (0+255),f,b
  1037  0017AC  50F4               	movf	244,w,c
  1038  0017AE  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
  1039  0017B0  0100               	movlb	0	; force () banked
  1040  0017B2  51D1               	movf	rempliMines@x& (0+255),w,b
  1041  0017B4  0100               	movlb	0	; force () banked
  1042  0017B6  25CA               	addwf	??_rempliMines& (0+255),w,b
  1043  0017B8  6ED9               	movwf	fsr2l,c
  1044  0017BA  0100               	movlb	0	; force () banked
  1045  0017BC  0E00               	movlw	0
  1046  0017BE  0100               	movlb	0	; force () banked
  1047  0017C0  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
  1048  0017C2  6EDA               	movwf	fsr2h,c
  1049  0017C4  0E02               	movlw	2
  1050  0017C6  6EDF               	movwf	indf2,c
  1051  0017C8                     
  1052                           ; BSR set to: 0
  1053                           ;main.c: 189: nbMine = nbMine + 1;
  1054  0017C8  0100               	movlb	0	; force () banked
  1055  0017CA  29D3               	incf	rempliMines@nbMine& (0+255),w,b
  1056  0017CC  6FD3               	movwf	rempliMines@nbMine& (0+255),b
  1057  0017CE                     l2418:
  1058                           
  1059                           ; BSR set to: 0
  1060  0017CE  0100               	movlb	0	; force () banked
  1061  0017D0  51D3               	movf	rempliMines@nbMine& (0+255),w,b
  1062  0017D2  0100               	movlb	0	; force () banked
  1063  0017D4  6FCA               	movwf	??_rempliMines& (0+255),b
  1064  0017D6  6BCB               	clrf	(??_rempliMines+1)& (0+255),b
  1065  0017D8  0100               	movlb	0	; force () banked
  1066  0017DA  51C8               	movf	rempliMines@nb& (0+255),w,b
  1067  0017DC  0100               	movlb	0	; force () banked
  1068  0017DE  19CA               	xorwf	??_rempliMines& (0+255),w,b
  1069  0017E0  E109               	bnz	u2121
  1070  0017E2  0100               	movlb	0	; force () banked
  1071  0017E4  51C9               	movf	(rempliMines@nb+1)& (0+255),w,b
  1072  0017E6  0100               	movlb	0	; force () banked
  1073  0017E8  19CB               	xorwf	(??_rempliMines+1)& (0+255),w,b
  1074  0017EA  A4D8               	btfss	status,2,c
  1075  0017EC  EFFA  F00B         	goto	u2121
  1076  0017F0  EFFC  F00B         	goto	u2120
  1077  0017F4                     u2121:
  1078  0017F4  EF95  F00B         	goto	l2410
  1079  0017F8                     u2120:
  1080  0017F8                     
  1081                           ; BSR set to: 0
  1082  0017F8  0012               	return		;funcret
  1083  0017FA                     __end_of_rempliMines:
  1084                           	opt callstack 0
  1085                           
  1086 ;; *************** function _rand *****************
  1087 ;; Defined at:
  1088 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;		None
  1091 ;; Auto vars:     Size  Location     Type
  1092 ;;		None
  1093 ;; Return value:  Size  Location     Type
  1094 ;;                  2   12[BANK0 ] int 
  1095 ;; Registers used:
  1096 ;;		wreg, status,2, status,0, cstack
  1097 ;; Tracked objects:
  1098 ;;		On entry : 0/0
  1099 ;;		On exit  : 0/0
  1100 ;;		Unchanged: 0/0
  1101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1102 ;;      Params:         0       2       0       0       0       0       0
  1103 ;;      Locals:         0       0       0       0       0       0       0
  1104 ;;      Temps:          0       0       0       0       0       0       0
  1105 ;;      Totals:         0       2       0       0       0       0       0
  1106 ;;Total ram usage:        2 bytes
  1107 ;; Hardware stack levels used:    1
  1108 ;; Hardware stack levels required when called:    1
  1109 ;; This function calls:
  1110 ;;		___lmul
  1111 ;; This function is called by:
  1112 ;;		_rempliMines
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           
  1116                           	psect	text2
  1117  00216A                     __ptext2:
  1118                           	opt callstack 0
  1119  00216A                     _rand:
  1120                           	opt callstack 28
  1121  00216A  C0E4  F0B4         	movff	_randx,___lmul@multiplier
  1122  00216E  C0E5  F0B5         	movff	_randx+1,___lmul@multiplier+1
  1123  002172  C0E6  F0B6         	movff	_randx+2,___lmul@multiplier+2
  1124  002176  C0E7  F0B7         	movff	_randx+3,___lmul@multiplier+3
  1125  00217A  0E6D               	movlw	109
  1126  00217C  0100               	movlb	0	; () banked
  1127  00217E  6FB8               	movwf	___lmul@multiplicand& (0+255),b
  1128  002180  0E4E               	movlw	78
  1129  002182  6FB9               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1130  002184  0EC6               	movlw	198
  1131  002186  6FBA               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1132  002188  0E41               	movlw	65
  1133  00218A  6FBB               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1134  00218C  ECE5  F00F         	call	___lmul	;wreg free
  1135  002190  C0B4  F0E4         	movff	?___lmul,_randx
  1136  002194  C0B5  F0E5         	movff	?___lmul+1,_randx+1
  1137  002198  C0B6  F0E6         	movff	?___lmul+2,_randx+2
  1138  00219C  C0B7  F0E7         	movff	?___lmul+3,_randx+3
  1139  0021A0  0E39               	movlw	57
  1140  0021A2  0100               	movlb	0	; () banked
  1141  0021A4  27E4               	addwf	_randx& (0+255),f,b
  1142  0021A6  0E30               	movlw	48
  1143  0021A8  23E5               	addwfc	(_randx+1)& (0+255),f,b
  1144  0021AA  0E00               	movlw	0
  1145  0021AC  23E6               	addwfc	(_randx+2)& (0+255),f,b
  1146  0021AE  0E00               	movlw	0
  1147  0021B0  23E7               	addwfc	(_randx+3)& (0+255),f,b
  1148  0021B2                     
  1149                           ; BSR set to: 0
  1150  0021B2  0EFF               	movlw	255
  1151  0021B4  15E6               	andwf	(_randx+2)& (0+255),w,b
  1152  0021B6  6FC0               	movwf	?_rand& (0+255),b
  1153  0021B8  0E7F               	movlw	127
  1154  0021BA  15E7               	andwf	(_randx+3)& (0+255),w,b
  1155  0021BC  6FC1               	movwf	(?_rand+1)& (0+255),b
  1156  0021BE                     
  1157                           ; BSR set to: 0
  1158  0021BE  0012               	return		;funcret
  1159  0021C0                     __end_of_rand:
  1160                           	opt callstack 0
  1161                           
  1162 ;; *************** function ___lmul *****************
  1163 ;; Defined at:
  1164 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1167 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;  product         4    8[BANK0 ] unsigned long 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  4    0[BANK0 ] unsigned long 
  1172 ;; Registers used:
  1173 ;;		wreg, status,2, status,0
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1179 ;;      Params:         0       8       0       0       0       0       0
  1180 ;;      Locals:         0       4       0       0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0       0       0
  1182 ;;      Totals:         0      12       0       0       0       0       0
  1183 ;;Total ram usage:       12 bytes
  1184 ;; Hardware stack levels used:    1
  1185 ;; This function calls:
  1186 ;;		Nothing
  1187 ;; This function is called by:
  1188 ;;		_rand
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           	psect	text3
  1193  001FCA                     __ptext3:
  1194                           	opt callstack 0
  1195  001FCA                     ___lmul:
  1196                           	opt callstack 28
  1197  001FCA  0E00               	movlw	0
  1198  001FCC  0100               	movlb	0	; () banked
  1199  001FCE  6FBC               	movwf	___lmul@product& (0+255),b
  1200  001FD0  0E00               	movlw	0
  1201  001FD2  6FBD               	movwf	(___lmul@product+1)& (0+255),b
  1202  001FD4  0E00               	movlw	0
  1203  001FD6  6FBE               	movwf	(___lmul@product+2)& (0+255),b
  1204  001FD8  0E00               	movlw	0
  1205  001FDA  6FBF               	movwf	(___lmul@product+3)& (0+255),b
  1206  001FDC                     l2188:
  1207                           
  1208                           ; BSR set to: 0
  1209  001FDC  A1B4               	btfss	___lmul@multiplier& (0+255),0,b
  1210  001FDE  EFF3  F00F         	goto	u1791
  1211  001FE2  EFF5  F00F         	goto	u1790
  1212  001FE6                     u1791:
  1213  001FE6  EFFD  F00F         	goto	l2192
  1214  001FEA                     u1790:
  1215  001FEA                     
  1216                           ; BSR set to: 0
  1217  001FEA  51B8               	movf	___lmul@multiplicand& (0+255),w,b
  1218  001FEC  27BC               	addwf	___lmul@product& (0+255),f,b
  1219  001FEE  51B9               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1220  001FF0  23BD               	addwfc	(___lmul@product+1)& (0+255),f,b
  1221  001FF2  51BA               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1222  001FF4  23BE               	addwfc	(___lmul@product+2)& (0+255),f,b
  1223  001FF6  51BB               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1224  001FF8  23BF               	addwfc	(___lmul@product+3)& (0+255),f,b
  1225  001FFA                     l2192:
  1226                           
  1227                           ; BSR set to: 0
  1228  001FFA  90D8               	bcf	status,0,c
  1229  001FFC  37B8               	rlcf	___lmul@multiplicand& (0+255),f,b
  1230  001FFE  37B9               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1231  002000  37BA               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1232  002002  37BB               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1233  002004                     
  1234                           ; BSR set to: 0
  1235  002004  90D8               	bcf	status,0,c
  1236  002006  33B7               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1237  002008  33B6               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1238  00200A  33B5               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1239  00200C  33B4               	rrcf	___lmul@multiplier& (0+255),f,b
  1240  00200E  51B4               	movf	___lmul@multiplier& (0+255),w,b
  1241  002010  11B5               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1242  002012  11B6               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1243  002014  11B7               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1244  002016  A4D8               	btfss	status,2,c
  1245  002018  EF10  F010         	goto	u1801
  1246  00201C  EF12  F010         	goto	u1800
  1247  002020                     u1801:
  1248  002020  EFEE  F00F         	goto	l2188
  1249  002024                     u1800:
  1250  002024                     
  1251                           ; BSR set to: 0
  1252  002024  C0BC  F0B4         	movff	___lmul@product,?___lmul
  1253  002028  C0BD  F0B5         	movff	___lmul@product+1,?___lmul+1
  1254  00202C  C0BE  F0B6         	movff	___lmul@product+2,?___lmul+2
  1255  002030  C0BF  F0B7         	movff	___lmul@product+3,?___lmul+3
  1256  002034                     
  1257                           ; BSR set to: 0
  1258  002034  0012               	return		;funcret
  1259  002036                     __end_of___lmul:
  1260                           	opt callstack 0
  1261                           
  1262 ;; *************** function ___awmod *****************
  1263 ;; Defined at:
  1264 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;  dividend        2   14[BANK0 ] int 
  1267 ;;  divisor         2   16[BANK0 ] int 
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;  sign            1   19[BANK0 ] unsigned char 
  1270 ;;  counter         1   18[BANK0 ] unsigned char 
  1271 ;; Return value:  Size  Location     Type
  1272 ;;                  2   14[BANK0 ] int 
  1273 ;; Registers used:
  1274 ;;		wreg, status,2, status,0
  1275 ;; Tracked objects:
  1276 ;;		On entry : 0/0
  1277 ;;		On exit  : 0/0
  1278 ;;		Unchanged: 0/0
  1279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1280 ;;      Params:         0       4       0       0       0       0       0
  1281 ;;      Locals:         0       2       0       0       0       0       0
  1282 ;;      Temps:          0       0       0       0       0       0       0
  1283 ;;      Totals:         0       6       0       0       0       0       0
  1284 ;;Total ram usage:        6 bytes
  1285 ;; Hardware stack levels used:    1
  1286 ;; This function calls:
  1287 ;;		Nothing
  1288 ;; This function is called by:
  1289 ;;		_rempliMines
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293                           	psect	text4
  1294  001CB6                     __ptext4:
  1295                           	opt callstack 0
  1296  001CB6                     ___awmod:
  1297                           	opt callstack 29
  1298  001CB6  0E00               	movlw	0
  1299  001CB8  0100               	movlb	0	; () banked
  1300  001CBA  6FC7               	movwf	___awmod@sign& (0+255),b
  1301  001CBC                     
  1302                           ; BSR set to: 0
  1303  001CBC  BFC3               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1304  001CBE  EF65  F00E         	goto	u1950
  1305  001CC2  EF63  F00E         	goto	u1951
  1306  001CC6                     u1951:
  1307  001CC6  EF6B  F00E         	goto	l2328
  1308  001CCA                     u1950:
  1309  001CCA                     
  1310                           ; BSR set to: 0
  1311  001CCA  6DC2               	negf	___awmod@dividend& (0+255),b
  1312  001CCC  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1313  001CCE  B0D8               	btfsc	status,0,c
  1314  001CD0  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1315  001CD2                     
  1316                           ; BSR set to: 0
  1317  001CD2  0E01               	movlw	1
  1318  001CD4  6FC7               	movwf	___awmod@sign& (0+255),b
  1319  001CD6                     l2328:
  1320                           
  1321                           ; BSR set to: 0
  1322  001CD6  BFC5               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1323  001CD8  EF72  F00E         	goto	u1960
  1324  001CDC  EF70  F00E         	goto	u1961
  1325  001CE0                     u1961:
  1326  001CE0  EF76  F00E         	goto	l2332
  1327  001CE4                     u1960:
  1328  001CE4                     
  1329                           ; BSR set to: 0
  1330  001CE4  6DC4               	negf	___awmod@divisor& (0+255),b
  1331  001CE6  1FC5               	comf	(___awmod@divisor+1)& (0+255),f,b
  1332  001CE8  B0D8               	btfsc	status,0,c
  1333  001CEA  2BC5               	incf	(___awmod@divisor+1)& (0+255),f,b
  1334  001CEC                     l2332:
  1335                           
  1336                           ; BSR set to: 0
  1337  001CEC  51C4               	movf	___awmod@divisor& (0+255),w,b
  1338  001CEE  11C5               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1339  001CF0  B4D8               	btfsc	status,2,c
  1340  001CF2  EF7D  F00E         	goto	u1971
  1341  001CF6  EF7F  F00E         	goto	u1970
  1342  001CFA                     u1971:
  1343  001CFA  EFA3  F00E         	goto	l2348
  1344  001CFE                     u1970:
  1345  001CFE                     
  1346                           ; BSR set to: 0
  1347  001CFE  0E01               	movlw	1
  1348  001D00  6FC6               	movwf	___awmod@counter& (0+255),b
  1349  001D02  EF87  F00E         	goto	l2338
  1350  001D06                     l2336:
  1351                           
  1352                           ; BSR set to: 0
  1353  001D06  90D8               	bcf	status,0,c
  1354  001D08  37C4               	rlcf	___awmod@divisor& (0+255),f,b
  1355  001D0A  37C5               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1356  001D0C  2BC6               	incf	___awmod@counter& (0+255),f,b
  1357  001D0E                     l2338:
  1358                           
  1359                           ; BSR set to: 0
  1360  001D0E  AFC5               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1361  001D10  EF8C  F00E         	goto	u1981
  1362  001D14  EF8E  F00E         	goto	u1980
  1363  001D18                     u1981:
  1364  001D18  EF83  F00E         	goto	l2336
  1365  001D1C                     u1980:
  1366  001D1C                     l2340:
  1367                           
  1368                           ; BSR set to: 0
  1369  001D1C  51C4               	movf	___awmod@divisor& (0+255),w,b
  1370  001D1E  5DC2               	subwf	___awmod@dividend& (0+255),w,b
  1371  001D20  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1372  001D22  59C3               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1373  001D24  A0D8               	btfss	status,0,c
  1374  001D26  EF97  F00E         	goto	u1991
  1375  001D2A  EF99  F00E         	goto	u1990
  1376  001D2E                     u1991:
  1377  001D2E  EF9D  F00E         	goto	l2344
  1378  001D32                     u1990:
  1379  001D32                     
  1380                           ; BSR set to: 0
  1381  001D32  51C4               	movf	___awmod@divisor& (0+255),w,b
  1382  001D34  5FC2               	subwf	___awmod@dividend& (0+255),f,b
  1383  001D36  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1384  001D38  5BC3               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1385  001D3A                     l2344:
  1386                           
  1387                           ; BSR set to: 0
  1388  001D3A  90D8               	bcf	status,0,c
  1389  001D3C  33C5               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1390  001D3E  33C4               	rrcf	___awmod@divisor& (0+255),f,b
  1391  001D40                     
  1392                           ; BSR set to: 0
  1393  001D40  2FC6               	decfsz	___awmod@counter& (0+255),f,b
  1394  001D42  EF8E  F00E         	goto	l2340
  1395  001D46                     l2348:
  1396                           
  1397                           ; BSR set to: 0
  1398  001D46  51C7               	movf	___awmod@sign& (0+255),w,b
  1399  001D48  B4D8               	btfsc	status,2,c
  1400  001D4A  EFA9  F00E         	goto	u2001
  1401  001D4E  EFAB  F00E         	goto	u2000
  1402  001D52                     u2001:
  1403  001D52  EFAF  F00E         	goto	l2352
  1404  001D56                     u2000:
  1405  001D56                     
  1406                           ; BSR set to: 0
  1407  001D56  6DC2               	negf	___awmod@dividend& (0+255),b
  1408  001D58  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1409  001D5A  B0D8               	btfsc	status,0,c
  1410  001D5C  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1411  001D5E                     l2352:
  1412                           
  1413                           ; BSR set to: 0
  1414  001D5E  C0C2  F0C2         	movff	___awmod@dividend,?___awmod
  1415  001D62  C0C3  F0C3         	movff	___awmod@dividend+1,?___awmod+1
  1416  001D66                     
  1417                           ; BSR set to: 0
  1418  001D66  0012               	return		;funcret
  1419  001D68                     __end_of___awmod:
  1420                           	opt callstack 0
  1421                           
  1422 ;; *************** function _metToucheCombien *****************
  1423 ;; Defined at:
  1424 ;;		line 203 in file "main.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  j               2   28[BANK0 ] int 
  1429 ;;  i               2   26[BANK0 ] int 
  1430 ;;  mine            2   24[BANK0 ] int 
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1440 ;;      Params:         0       0       0       0       0       0       0
  1441 ;;      Locals:         0       6       0       0       0       0       0
  1442 ;;      Temps:          0       3       0       0       0       0       0
  1443 ;;      Totals:         0       9       0       0       0       0       0
  1444 ;;Total ram usage:        9 bytes
  1445 ;; Hardware stack levels used:    1
  1446 ;; Hardware stack levels required when called:    2
  1447 ;; This function calls:
  1448 ;;		___wmul
  1449 ;;		_calculToucheCombien
  1450 ;; This function is called by:
  1451 ;;		_main
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           	psect	text5
  1456  00141E                     __ptext5:
  1457                           	opt callstack 0
  1458  00141E                     _metToucheCombien:
  1459                           	opt callstack 28
  1460  00141E                     
  1461                           ;main.c: 205: int i=0;
  1462  00141E  0E00               	movlw	0
  1463  001420  0100               	movlb	0	; force () banked
  1464  001422  6FCF               	movwf	(metToucheCombien@i+1)& (0+255),b
  1465  001424  0E00               	movlw	0
  1466  001426  6FCE               	movwf	metToucheCombien@i& (0+255),b
  1467                           
  1468                           ;main.c: 206: int j=0;
  1469  001428  0E00               	movlw	0
  1470  00142A  0100               	movlb	0	; force () banked
  1471  00142C  6FD1               	movwf	(metToucheCombien@j+1)& (0+255),b
  1472  00142E  0E00               	movlw	0
  1473  001430  6FD0               	movwf	metToucheCombien@j& (0+255),b
  1474                           
  1475                           ;main.c: 207: int mine=0;
  1476  001432  0E00               	movlw	0
  1477  001434  0100               	movlb	0	; force () banked
  1478  001436  6FCD               	movwf	(metToucheCombien@mine+1)& (0+255),b
  1479  001438  0E00               	movlw	0
  1480  00143A  6FCC               	movwf	metToucheCombien@mine& (0+255),b
  1481                           
  1482                           ;main.c: 209: for ( i=0;i<4;i++)
  1483  00143C  0E00               	movlw	0
  1484  00143E  0100               	movlb	0	; force () banked
  1485  001440  6FCF               	movwf	(metToucheCombien@i+1)& (0+255),b
  1486  001442  0E00               	movlw	0
  1487  001444  6FCE               	movwf	metToucheCombien@i& (0+255),b
  1488  001446                     
  1489                           ; BSR set to: 0
  1490  001446  0100               	movlb	0	; force () banked
  1491  001448  BFCF               	btfsc	(metToucheCombien@i+1)& (0+255),7,b
  1492  00144A  EF30  F00A         	goto	u2131
  1493  00144E  51CF               	movf	(metToucheCombien@i+1)& (0+255),w,b
  1494  001450  E109               	bnz	u2130
  1495  001452  0E04               	movlw	4
  1496  001454  5DCE               	subwf	metToucheCombien@i& (0+255),w,b
  1497  001456  A0D8               	btfss	status,0,c
  1498  001458  EF30  F00A         	goto	u2131
  1499  00145C  EF32  F00A         	goto	u2130
  1500  001460                     u2131:
  1501  001460  EF34  F00A         	goto	l2426
  1502  001464                     u2130:
  1503  001464  EF0B  F00B         	goto	l112
  1504  001468                     l2426:
  1505                           
  1506                           ; BSR set to: 0
  1507                           ;main.c: 210: {;main.c: 211: for (j=0;j<20;j++)
  1508  001468  0E00               	movlw	0
  1509  00146A  0100               	movlb	0	; force () banked
  1510  00146C  6FD1               	movwf	(metToucheCombien@j+1)& (0+255),b
  1511  00146E  0E00               	movlw	0
  1512  001470  6FD0               	movwf	metToucheCombien@j& (0+255),b
  1513  001472                     
  1514                           ; BSR set to: 0
  1515  001472  0100               	movlb	0	; force () banked
  1516  001474  BFD1               	btfsc	(metToucheCombien@j+1)& (0+255),7,b
  1517  001476  EF46  F00A         	goto	u2141
  1518  00147A  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1519  00147C  E109               	bnz	u2140
  1520  00147E  0E14               	movlw	20
  1521  001480  5DD0               	subwf	metToucheCombien@j& (0+255),w,b
  1522  001482  A0D8               	btfss	status,0,c
  1523  001484  EF46  F00A         	goto	u2141
  1524  001488  EF48  F00A         	goto	u2140
  1525  00148C                     u2141:
  1526  00148C  EF4A  F00A         	goto	l2432
  1527  001490                     u2140:
  1528  001490  EFF9  F00A         	goto	l2448
  1529  001494                     l2432:
  1530                           
  1531                           ; BSR set to: 0
  1532                           ;main.c: 212: {;main.c: 213: if(m_tabMines[i][j]!= 2)
  1533  001494  C0CE  F0B4         	movff	metToucheCombien@i,___wmul@multiplier
  1534  001498  C0CF  F0B5         	movff	metToucheCombien@i+1,___wmul@multiplier+1
  1535  00149C  0E00               	movlw	0
  1536  00149E  0100               	movlb	0	; force () banked
  1537  0014A0  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1538  0014A2  0E15               	movlw	21
  1539  0014A4  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1540  0014A6  ECB3  F011         	call	___wmul	;wreg free
  1541  0014AA  0E60               	movlw	low _m_tabMines
  1542  0014AC  0100               	movlb	0	; force () banked
  1543  0014AE  6FC9               	movwf	??_metToucheCombien& (0+255),b
  1544  0014B0  0E00               	movlw	high _m_tabMines
  1545  0014B2  6FCA               	movwf	(??_metToucheCombien+1)& (0+255),b
  1546  0014B4  0100               	movlb	0	; force () banked
  1547  0014B6  51B4               	movf	?___wmul& (0+255),w,b
  1548  0014B8  0100               	movlb	0	; force () banked
  1549  0014BA  27C9               	addwf	??_metToucheCombien& (0+255),f,b
  1550  0014BC  0100               	movlb	0	; force () banked
  1551  0014BE  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1552  0014C0  0100               	movlb	0	; force () banked
  1553  0014C2  23CA               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1554  0014C4  0100               	movlb	0	; force () banked
  1555  0014C6  51D0               	movf	metToucheCombien@j& (0+255),w,b
  1556  0014C8  0100               	movlb	0	; force () banked
  1557  0014CA  25C9               	addwf	??_metToucheCombien& (0+255),w,b
  1558  0014CC  6ED9               	movwf	fsr2l,c
  1559  0014CE  0100               	movlb	0	; force () banked
  1560  0014D0  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1561  0014D2  0100               	movlb	0	; force () banked
  1562  0014D4  21CA               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1563  0014D6  6EDA               	movwf	fsr2h,c
  1564  0014D8  0E02               	movlw	2
  1565  0014DA  18DE               	xorwf	postinc2,w,c
  1566  0014DC  B4D8               	btfsc	status,2,c
  1567  0014DE  EF73  F00A         	goto	u2151
  1568  0014E2  EF75  F00A         	goto	u2150
  1569  0014E6                     u2151:
  1570  0014E6  EFE7  F00A         	goto	l2444
  1571  0014EA                     u2150:
  1572  0014EA                     
  1573                           ; BSR set to: 0
  1574                           ;main.c: 214: {;main.c: 215: mine = calculToucheCombien(i,j);
  1575  0014EA  C0CE  F0BA         	movff	metToucheCombien@i,calculToucheCombien@ligne
  1576  0014EE  C0CF  F0BB         	movff	metToucheCombien@i+1,calculToucheCombien@ligne+1
  1577  0014F2  C0D0  F0BC         	movff	metToucheCombien@j,calculToucheCombien@colonne
  1578  0014F6  C0D1  F0BD         	movff	metToucheCombien@j+1,calculToucheCombien@colonne+1
  1579  0014FA  EC0D  F003         	call	_calculToucheCombien	;wreg free
  1580  0014FE  0100               	movlb	0	; force () banked
  1581  001500  6FC9               	movwf	??_metToucheCombien& (0+255),b
  1582  001502  51C9               	movf	??_metToucheCombien& (0+255),w,b
  1583  001504  0100               	movlb	0	; force () banked
  1584  001506  6FCC               	movwf	metToucheCombien@mine& (0+255),b
  1585  001508  6BCD               	clrf	(metToucheCombien@mine+1)& (0+255),b
  1586  00150A                     
  1587                           ; BSR set to: 0
  1588                           ;main.c: 216: if (mine==0)
  1589  00150A  0100               	movlb	0	; force () banked
  1590  00150C  51CC               	movf	metToucheCombien@mine& (0+255),w,b
  1591  00150E  11CD               	iorwf	(metToucheCombien@mine+1)& (0+255),w,b
  1592  001510  A4D8               	btfss	status,2,c
  1593  001512  EF8D  F00A         	goto	u2161
  1594  001516  EF8F  F00A         	goto	u2160
  1595  00151A                     u2161:
  1596  00151A  EFB3  F00A         	goto	l2440
  1597  00151E                     u2160:
  1598  00151E                     
  1599                           ; BSR set to: 0
  1600                           ;main.c: 217: {;main.c: 218: m_tabMines[i][j]=32;
  1601  00151E  C0CE  F0B4         	movff	metToucheCombien@i,___wmul@multiplier
  1602  001522  C0CF  F0B5         	movff	metToucheCombien@i+1,___wmul@multiplier+1
  1603  001526  0E00               	movlw	0
  1604  001528  0100               	movlb	0	; force () banked
  1605  00152A  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1606  00152C  0E15               	movlw	21
  1607  00152E  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1608  001530  ECB3  F011         	call	___wmul	;wreg free
  1609  001534  0E60               	movlw	low _m_tabMines
  1610  001536  0100               	movlb	0	; force () banked
  1611  001538  6FC9               	movwf	??_metToucheCombien& (0+255),b
  1612  00153A  0E00               	movlw	high _m_tabMines
  1613  00153C  6FCA               	movwf	(??_metToucheCombien+1)& (0+255),b
  1614  00153E  0100               	movlb	0	; force () banked
  1615  001540  51B4               	movf	?___wmul& (0+255),w,b
  1616  001542  0100               	movlb	0	; force () banked
  1617  001544  27C9               	addwf	??_metToucheCombien& (0+255),f,b
  1618  001546  0100               	movlb	0	; force () banked
  1619  001548  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1620  00154A  0100               	movlb	0	; force () banked
  1621  00154C  23CA               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1622  00154E  0100               	movlb	0	; force () banked
  1623  001550  51D0               	movf	metToucheCombien@j& (0+255),w,b
  1624  001552  0100               	movlb	0	; force () banked
  1625  001554  25C9               	addwf	??_metToucheCombien& (0+255),w,b
  1626  001556  6ED9               	movwf	fsr2l,c
  1627  001558  0100               	movlb	0	; force () banked
  1628  00155A  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1629  00155C  0100               	movlb	0	; force () banked
  1630  00155E  21CA               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1631  001560  6EDA               	movwf	fsr2h,c
  1632  001562  0E20               	movlw	32
  1633  001564  6EDF               	movwf	indf2,c
  1634  001566                     l2440:
  1635                           
  1636                           ; BSR set to: 0
  1637                           ;main.c: 219: };main.c: 220: if (mine>0)
  1638  001566  0100               	movlb	0	; force () banked
  1639  001568  BFCD               	btfsc	(metToucheCombien@mine+1)& (0+255),7,b
  1640  00156A  EFBF  F00A         	goto	u2171
  1641  00156E  51CD               	movf	(metToucheCombien@mine+1)& (0+255),w,b
  1642  001570  E108               	bnz	u2170
  1643  001572  05CC               	decf	metToucheCombien@mine& (0+255),w,b
  1644  001574  A0D8               	btfss	status,0,c
  1645  001576  EFBF  F00A         	goto	u2171
  1646  00157A  EFC1  F00A         	goto	u2170
  1647  00157E                     u2171:
  1648  00157E  EFE7  F00A         	goto	l2444
  1649  001582                     u2170:
  1650  001582                     
  1651                           ; BSR set to: 0
  1652                           ;main.c: 221: {;main.c: 222: m_tabMines[i][j]= (mine+48);
  1653  001582  C0CE  F0B4         	movff	metToucheCombien@i,___wmul@multiplier
  1654  001586  C0CF  F0B5         	movff	metToucheCombien@i+1,___wmul@multiplier+1
  1655  00158A  0E00               	movlw	0
  1656  00158C  0100               	movlb	0	; force () banked
  1657  00158E  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1658  001590  0E15               	movlw	21
  1659  001592  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1660  001594  ECB3  F011         	call	___wmul	;wreg free
  1661  001598  0E60               	movlw	low _m_tabMines
  1662  00159A  0100               	movlb	0	; force () banked
  1663  00159C  6FC9               	movwf	??_metToucheCombien& (0+255),b
  1664  00159E  0E00               	movlw	high _m_tabMines
  1665  0015A0  6FCA               	movwf	(??_metToucheCombien+1)& (0+255),b
  1666  0015A2  0100               	movlb	0	; force () banked
  1667  0015A4  51B4               	movf	?___wmul& (0+255),w,b
  1668  0015A6  0100               	movlb	0	; force () banked
  1669  0015A8  27C9               	addwf	??_metToucheCombien& (0+255),f,b
  1670  0015AA  0100               	movlb	0	; force () banked
  1671  0015AC  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1672  0015AE  0100               	movlb	0	; force () banked
  1673  0015B0  23CA               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1674  0015B2  0100               	movlb	0	; force () banked
  1675  0015B4  51D0               	movf	metToucheCombien@j& (0+255),w,b
  1676  0015B6  0100               	movlb	0	; force () banked
  1677  0015B8  25C9               	addwf	??_metToucheCombien& (0+255),w,b
  1678  0015BA  6ED9               	movwf	fsr2l,c
  1679  0015BC  0100               	movlb	0	; force () banked
  1680  0015BE  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1681  0015C0  0100               	movlb	0	; force () banked
  1682  0015C2  21CA               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1683  0015C4  6EDA               	movwf	fsr2h,c
  1684  0015C6  0100               	movlb	0	; force () banked
  1685  0015C8  51CC               	movf	metToucheCombien@mine& (0+255),w,b
  1686  0015CA  0F30               	addlw	48
  1687  0015CC  6EDF               	movwf	indf2,c
  1688  0015CE                     l2444:
  1689                           
  1690                           ; BSR set to: 0
  1691  0015CE  0100               	movlb	0	; force () banked
  1692  0015D0  4BD0               	infsnz	metToucheCombien@j& (0+255),f,b
  1693  0015D2  2BD1               	incf	(metToucheCombien@j+1)& (0+255),f,b
  1694  0015D4                     
  1695                           ; BSR set to: 0
  1696  0015D4  0100               	movlb	0	; force () banked
  1697  0015D6  BFD1               	btfsc	(metToucheCombien@j+1)& (0+255),7,b
  1698  0015D8  EFF7  F00A         	goto	u2181
  1699  0015DC  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1700  0015DE  E109               	bnz	u2180
  1701  0015E0  0E14               	movlw	20
  1702  0015E2  5DD0               	subwf	metToucheCombien@j& (0+255),w,b
  1703  0015E4  A0D8               	btfss	status,0,c
  1704  0015E6  EFF7  F00A         	goto	u2181
  1705  0015EA  EFF9  F00A         	goto	u2180
  1706  0015EE                     u2181:
  1707  0015EE  EF4A  F00A         	goto	l2432
  1708  0015F2                     u2180:
  1709  0015F2                     l2448:
  1710                           
  1711                           ; BSR set to: 0
  1712  0015F2  0100               	movlb	0	; force () banked
  1713  0015F4  4BCE               	infsnz	metToucheCombien@i& (0+255),f,b
  1714  0015F6  2BCF               	incf	(metToucheCombien@i+1)& (0+255),f,b
  1715  0015F8                     
  1716                           ; BSR set to: 0
  1717  0015F8  0100               	movlb	0	; force () banked
  1718  0015FA  BFCF               	btfsc	(metToucheCombien@i+1)& (0+255),7,b
  1719  0015FC  EF09  F00B         	goto	u2191
  1720  001600  51CF               	movf	(metToucheCombien@i+1)& (0+255),w,b
  1721  001602  E109               	bnz	u2190
  1722  001604  0E04               	movlw	4
  1723  001606  5DCE               	subwf	metToucheCombien@i& (0+255),w,b
  1724  001608  A0D8               	btfss	status,0,c
  1725  00160A  EF09  F00B         	goto	u2191
  1726  00160E  EF0B  F00B         	goto	u2190
  1727  001612                     u2191:
  1728  001612  EF34  F00A         	goto	l2426
  1729  001616                     u2190:
  1730  001616                     l112:
  1731                           
  1732                           ; BSR set to: 0
  1733  001616  0012               	return		;funcret
  1734  001618                     __end_of_metToucheCombien:
  1735                           	opt callstack 0
  1736                           
  1737 ;; *************** function _lcd_init *****************
  1738 ;; Defined at:
  1739 ;;		line 258 in file "Lcd4Lignes.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;		None
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;		None
  1744 ;; Return value:  Size  Location     Type
  1745 ;;                  1    wreg      void 
  1746 ;; Registers used:
  1747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1753 ;;      Params:         0       0       0       0       0       0       0
  1754 ;;      Locals:         0       0       0       0       0       0       0
  1755 ;;      Temps:          0       0       0       0       0       0       0
  1756 ;;      Totals:         0       0       0       0       0       0       0
  1757 ;;Total ram usage:        0 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; Hardware stack levels required when called:    5
  1760 ;; This function calls:
  1761 ;;		_lcd_initCGRam
  1762 ;;		_lcd_resetSequence
  1763 ;;		_lcd_wrCom
  1764 ;; This function is called by:
  1765 ;;		_main
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769                           	psect	text6
  1770  00233E                     __ptext6:
  1771                           	opt callstack 0
  1772  00233E                     _lcd_init:
  1773                           	opt callstack 25
  1774  00233E                     
  1775                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  1776  00233E  EC51  F010         	call	_lcd_resetSequence	;wreg free
  1777                           
  1778                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  1779  002342  0E28               	movlw	40
  1780  002344  EC1B  F010         	call	_lcd_wrCom
  1781                           
  1782                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  1783  002348  0E0F               	movlw	15
  1784  00234A  EC1B  F010         	call	_lcd_wrCom
  1785                           
  1786                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  1787  00234E  0E01               	movlw	1
  1788  002350  EC1B  F010         	call	_lcd_wrCom
  1789                           
  1790                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  1791  002354  0E06               	movlw	6
  1792  002356  EC1B  F010         	call	_lcd_wrCom
  1793                           
  1794                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  1795  00235A  0E80               	movlw	128
  1796  00235C  EC1B  F010         	call	_lcd_wrCom
  1797  002360                     
  1798                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  1799  002360  EC5B  F00F         	call	_lcd_initCGRam	;wreg free
  1800  002364  0012               	return		;funcret
  1801  002366                     __end_of_lcd_init:
  1802                           	opt callstack 0
  1803                           
  1804 ;; *************** function _lcd_resetSequence *****************
  1805 ;; Defined at:
  1806 ;;		line 221 in file "Lcd4Lignes.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;		None
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;		None
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      void 
  1813 ;; Registers used:
  1814 ;;		wreg, status,2, status,0, cstack
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1820 ;;      Params:         0       0       0       0       0       0       0
  1821 ;;      Locals:         0       0       0       0       0       0       0
  1822 ;;      Temps:          0       1       0       0       0       0       0
  1823 ;;      Totals:         0       1       0       0       0       0       0
  1824 ;;Total ram usage:        1 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; Hardware stack levels required when called:    1
  1827 ;; This function calls:
  1828 ;;		_lcd_ecrireDonnees
  1829 ;;		_lcd_strobeEnableBit
  1830 ;; This function is called by:
  1831 ;;		_lcd_init
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           	psect	text7
  1836  0020A2                     __ptext7:
  1837                           	opt callstack 0
  1838  0020A2                     _lcd_resetSequence:
  1839                           	opt callstack 28
  1840  0020A2                     
  1841                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  1842  0020A2  0E00               	movlw	0
  1843  0020A4  6E95               	movwf	149,c	;volatile
  1844  0020A6                     
  1845                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  1846  0020A6  0E0D               	movlw	13
  1847  0020A8  0100               	movlb	0	; force () banked
  1848  0020AA  6FB6               	movwf	??_lcd_resetSequence& (0+255),b
  1849  0020AC  0EFB               	movlw	251
  1850  0020AE                     u2387:
  1851  0020AE  2EE8               	decfsz	wreg,f,c
  1852  0020B0  D7FE               	bra	u2387
  1853  0020B2  2FB6               	decfsz	??_lcd_resetSequence& (0+255),f,b
  1854  0020B4  D7FC               	bra	u2387
  1855  0020B6  F000 F000          	nop2	
  1856  0020BA                     
  1857                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  1858  0020BA  9080               	bcf	128,0,c	;volatile
  1859  0020BC                     
  1860                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  1861  0020BC  9280               	bcf	128,1,c	;volatile
  1862  0020BE                     
  1863                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  1864  0020BE  0E03               	movlw	3
  1865  0020C0  ECE6  F011         	call	_lcd_ecrireDonnees
  1866  0020C4                     
  1867                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  1868  0020C4  ECF8  F011         	call	_lcd_strobeEnableBit	;wreg free
  1869  0020C8                     
  1870                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1871  0020C8  0E03               	movlw	3
  1872  0020CA                     u2397:
  1873  0020CA  2EE8               	decfsz	wreg,f,c
  1874  0020CC  D7FE               	bra	u2397
  1875  0020CE  F000               	nop	
  1876  0020D0                     
  1877                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  1878  0020D0  0E03               	movlw	3
  1879  0020D2  ECE6  F011         	call	_lcd_ecrireDonnees
  1880  0020D6                     
  1881                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  1882  0020D6  ECF8  F011         	call	_lcd_strobeEnableBit	;wreg free
  1883  0020DA                     
  1884                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1885  0020DA  0E03               	movlw	3
  1886  0020DC                     u2407:
  1887  0020DC  2EE8               	decfsz	wreg,f,c
  1888  0020DE  D7FE               	bra	u2407
  1889  0020E0  F000               	nop	
  1890  0020E2                     
  1891                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  1892  0020E2  0E03               	movlw	3
  1893  0020E4  ECE6  F011         	call	_lcd_ecrireDonnees
  1894  0020E8                     
  1895                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  1896  0020E8  ECF8  F011         	call	_lcd_strobeEnableBit	;wreg free
  1897  0020EC                     
  1898                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1899  0020EC  0E03               	movlw	3
  1900  0020EE                     u2417:
  1901  0020EE  2EE8               	decfsz	wreg,f,c
  1902  0020F0  D7FE               	bra	u2417
  1903  0020F2  F000               	nop	
  1904  0020F4                     
  1905                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  1906  0020F4  0E02               	movlw	2
  1907  0020F6  ECE6  F011         	call	_lcd_ecrireDonnees
  1908  0020FA                     
  1909                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  1910  0020FA  ECF8  F011         	call	_lcd_strobeEnableBit	;wreg free
  1911  0020FE                     
  1912                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  1913  0020FE  0E03               	movlw	3
  1914  002100                     u2427:
  1915  002100  2EE8               	decfsz	wreg,f,c
  1916  002102  D7FE               	bra	u2427
  1917  002104  F000               	nop	
  1918  002106                     
  1919                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  1920  002106  0E0F               	movlw	15
  1921  002108  6E95               	movwf	149,c	;volatile
  1922  00210A  0012               	return		;funcret
  1923  00210C                     __end_of_lcd_resetSequence:
  1924                           	opt callstack 0
  1925                           
  1926 ;; *************** function _lcd_initCGRam *****************
  1927 ;; Defined at:
  1928 ;;		line 417 in file "Lcd4Lignes.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;		None
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;  j               1    6[BANK0 ] unsigned char 
  1933 ;;  i               1    5[BANK0 ] unsigned char 
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1943 ;;      Params:         0       0       0       0       0       0       0
  1944 ;;      Locals:         0       2       0       0       0       0       0
  1945 ;;      Temps:          0       2       0       0       0       0       0
  1946 ;;      Totals:         0       4       0       0       0       0       0
  1947 ;;Total ram usage:        4 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; Hardware stack levels required when called:    4
  1950 ;; This function calls:
  1951 ;;		_lcd_curseurHome
  1952 ;;		_lcd_wrCom
  1953 ;;		_lcd_wrData
  1954 ;; This function is called by:
  1955 ;;		_lcd_init
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           	psect	text8
  1960  001EB6                     __ptext8:
  1961                           	opt callstack 0
  1962  001EB6                     _lcd_initCGRam:
  1963                           	opt callstack 25
  1964  001EB6                     
  1965                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  1966  001EB6  0E40               	movlw	64
  1967  001EB8  EC1B  F010         	call	_lcd_wrCom
  1968  001EBC                     
  1969                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  1970  001EBC  0E00               	movlw	0
  1971  001EBE  0100               	movlb	0	; force () banked
  1972  001EC0  6FB9               	movwf	lcd_initCGRam@i& (0+255),b
  1973  001EC2                     
  1974                           ; BSR set to: 0
  1975  001EC2  0E07               	movlw	7
  1976  001EC4  0100               	movlb	0	; force () banked
  1977  001EC6  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  1978  001EC8  EF68  F00F         	goto	u1911
  1979  001ECC  EF6A  F00F         	goto	u1910
  1980  001ED0                     u1911:
  1981  001ED0  EF6C  F00F         	goto	l2302
  1982  001ED4                     u1910:
  1983  001ED4  EFA9  F00F         	goto	l2318
  1984  001ED8                     l2302:
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  1988  001ED8  0E00               	movlw	0
  1989  001EDA  0100               	movlb	0	; force () banked
  1990  001EDC  6FBA               	movwf	lcd_initCGRam@j& (0+255),b
  1991  001EDE                     
  1992                           ; BSR set to: 0
  1993  001EDE  0E07               	movlw	7
  1994  001EE0  0100               	movlb	0	; force () banked
  1995  001EE2  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  1996  001EE4  EF76  F00F         	goto	u1921
  1997  001EE8  EF78  F00F         	goto	u1920
  1998  001EEC                     u1921:
  1999  001EEC  EF7A  F00F         	goto	l2308
  2000  001EF0                     u1920:
  2001  001EF0  EF9E  F00F         	goto	l2314
  2002  001EF4                     l2308:
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  2006  001EF4  0100               	movlb	0	; force () banked
  2007  001EF6  51B9               	movf	lcd_initCGRam@i& (0+255),w,b
  2008  001EF8  0D08               	mullw	8
  2009  001EFA  0E54               	movlw	low _matCGRAM
  2010  001EFC  0100               	movlb	0	; force () banked
  2011  001EFE  6FB7               	movwf	??_lcd_initCGRam& (0+255),b
  2012  001F00  0E01               	movlw	high _matCGRAM
  2013  001F02  6FB8               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  2014  001F04  50F3               	movf	243,w,c
  2015  001F06  27B7               	addwf	??_lcd_initCGRam& (0+255),f,b
  2016  001F08  50F4               	movf	244,w,c
  2017  001F0A  23B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  2018  001F0C  0100               	movlb	0	; force () banked
  2019  001F0E  51BA               	movf	lcd_initCGRam@j& (0+255),w,b
  2020  001F10  0100               	movlb	0	; force () banked
  2021  001F12  25B7               	addwf	??_lcd_initCGRam& (0+255),w,b
  2022  001F14  6ED9               	movwf	fsr2l,c
  2023  001F16  0100               	movlb	0	; force () banked
  2024  001F18  0E00               	movlw	0
  2025  001F1A  0100               	movlb	0	; force () banked
  2026  001F1C  21B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  2027  001F1E  6EDA               	movwf	fsr2h,c
  2028  001F20  50DF               	movf	indf2,w,c
  2029  001F22  EC6F  F011         	call	_lcd_wrData
  2030  001F26  0100               	movlb	0	; force () banked
  2031  001F28  2BBA               	incf	lcd_initCGRam@j& (0+255),f,b
  2032  001F2A                     
  2033                           ; BSR set to: 0
  2034  001F2A  0E07               	movlw	7
  2035  001F2C  0100               	movlb	0	; force () banked
  2036  001F2E  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  2037  001F30  EF9C  F00F         	goto	u1931
  2038  001F34  EF9E  F00F         	goto	u1930
  2039  001F38                     u1931:
  2040  001F38  EF7A  F00F         	goto	l2308
  2041  001F3C                     u1930:
  2042  001F3C                     l2314:
  2043                           
  2044                           ; BSR set to: 0
  2045  001F3C  0100               	movlb	0	; force () banked
  2046  001F3E  2BB9               	incf	lcd_initCGRam@i& (0+255),f,b
  2047  001F40                     
  2048                           ; BSR set to: 0
  2049  001F40  0E07               	movlw	7
  2050  001F42  0100               	movlb	0	; force () banked
  2051  001F44  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  2052  001F46  EFA7  F00F         	goto	u1941
  2053  001F4A  EFA9  F00F         	goto	u1940
  2054  001F4E                     u1941:
  2055  001F4E  EF6C  F00F         	goto	l2302
  2056  001F52                     u1940:
  2057  001F52                     l2318:
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  2061  001F52  ECF4  F011         	call	_lcd_curseurHome	;wreg free
  2062  001F56  0012               	return		;funcret
  2063  001F58                     __end_of_lcd_initCGRam:
  2064                           	opt callstack 0
  2065                           
  2066 ;; *************** function _lcd_curseurHome *****************
  2067 ;; Defined at:
  2068 ;;		line 288 in file "Lcd4Lignes.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;		None
  2071 ;; Auto vars:     Size  Location     Type
  2072 ;;		None
  2073 ;; Return value:  Size  Location     Type
  2074 ;;                  1    wreg      void 
  2075 ;; Registers used:
  2076 ;;		wreg, status,2, status,0, cstack
  2077 ;; Tracked objects:
  2078 ;;		On entry : 0/0
  2079 ;;		On exit  : 0/0
  2080 ;;		Unchanged: 0/0
  2081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2082 ;;      Params:         0       0       0       0       0       0       0
  2083 ;;      Locals:         0       0       0       0       0       0       0
  2084 ;;      Temps:          0       0       0       0       0       0       0
  2085 ;;      Totals:         0       0       0       0       0       0       0
  2086 ;;Total ram usage:        0 bytes
  2087 ;; Hardware stack levels used:    1
  2088 ;; Hardware stack levels required when called:    3
  2089 ;; This function calls:
  2090 ;;		_lcd_wrCom
  2091 ;; This function is called by:
  2092 ;;		_main
  2093 ;;		_lcd_initCGRam
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           	psect	text9
  2098  0023E8                     __ptext9:
  2099                           	opt callstack 0
  2100  0023E8                     _lcd_curseurHome:
  2101                           	opt callstack 25
  2102  0023E8                     
  2103                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  2104  0023E8  0E02               	movlw	2
  2105  0023EA  EC1B  F010         	call	_lcd_wrCom
  2106  0023EE  0012               	return		;funcret
  2107  0023F0                     __end_of_lcd_curseurHome:
  2108                           	opt callstack 0
  2109                           
  2110 ;; *************** function _initialisation *****************
  2111 ;; Defined at:
  2112 ;;		line 96 in file "main.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;		None
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;		None
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		wreg, status,2
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2126 ;;      Params:         0       0       0       0       0       0       0
  2127 ;;      Locals:         0       0       0       0       0       0       0
  2128 ;;      Temps:          0       0       0       0       0       0       0
  2129 ;;      Totals:         0       0       0       0       0       0       0
  2130 ;;Total ram usage:        0 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; This function calls:
  2133 ;;		Nothing
  2134 ;; This function is called by:
  2135 ;;		_main
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           	psect	text10
  2140  00238E                     __ptext10:
  2141                           	opt callstack 0
  2142  00238E                     _initialisation:
  2143                           	opt callstack 30
  2144  00238E                     
  2145                           ;main.c: 98: TRISD = 0;
  2146  00238E  0E00               	movlw	0
  2147  002390  6E95               	movwf	149,c	;volatile
  2148                           
  2149                           ;main.c: 103: ANSEL = 0;
  2150  002392  0E00               	movlw	0
  2151  002394  6E7E               	movwf	126,c	;volatile
  2152                           
  2153                           ;main.c: 104: TRISA = 0;
  2154  002396  0E00               	movlw	0
  2155  002398  6E92               	movwf	146,c	;volatile
  2156  00239A                     
  2157                           ;main.c: 106: ANSELbits.ANS7 = 1;
  2158  00239A  8E7E               	bsf	126,7,c	;volatile
  2159  00239C                     
  2160                           ;main.c: 108: ADCON0bits.ADON = 1;
  2161  00239C  80C2               	bsf	194,0,c	;volatile
  2162                           
  2163                           ;main.c: 109: ADCON1 = 0;
  2164  00239E  0E00               	movlw	0
  2165  0023A0  6EC1               	movwf	193,c	;volatile
  2166  0023A2                     
  2167                           ;main.c: 111: ADCON2bits.ADFM = 0;
  2168  0023A2  9EC0               	bcf	192,7,c	;volatile
  2169                           
  2170                           ;main.c: 112: ADCON2bits.ACQT = 0;
  2171  0023A4  0EC7               	movlw	-57
  2172  0023A6  16C0               	andwf	192,f,c	;volatile
  2173                           
  2174                           ;main.c: 113: ADCON2bits.ADCS = 0;
  2175  0023A8  0EF8               	movlw	-8
  2176  0023AA  16C0               	andwf	192,f,c	;volatile
  2177  0023AC  0012               	return		;funcret
  2178  0023AE                     __end_of_initialisation:
  2179                           	opt callstack 0
  2180                           
  2181 ;; *************** function _init_serie *****************
  2182 ;; Defined at:
  2183 ;;		line 29 in file "serie.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		wreg, status,2
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2197 ;;      Params:         0       0       0       0       0       0       0
  2198 ;;      Locals:         0       0       0       0       0       0       0
  2199 ;;      Temps:          0       0       0       0       0       0       0
  2200 ;;      Totals:         0       0       0       0       0       0       0
  2201 ;;Total ram usage:        0 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; This function calls:
  2204 ;;		Nothing
  2205 ;; This function is called by:
  2206 ;;		_main
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text11
  2211  0023AE                     __ptext11:
  2212                           	opt callstack 0
  2213  0023AE                     _init_serie:
  2214                           	opt callstack 30
  2215  0023AE                     
  2216                           ;serie.c: 32: TRISCbits.TRISC7=1;
  2217  0023AE  8E94               	bsf	148,7,c	;volatile
  2218                           
  2219                           ;serie.c: 33: TRISCbits.TRISC6=1;
  2220  0023B0  8C94               	bsf	148,6,c	;volatile
  2221  0023B2                     
  2222                           ;serie.c: 37: SPBRGH=0x00;
  2223  0023B2  0E00               	movlw	0
  2224  0023B4  6EB0               	movwf	176,c	;volatile
  2225                           
  2226                           ;serie.c: 38: SPBRG=25;
  2227  0023B6  0E19               	movlw	25
  2228  0023B8  6EAF               	movwf	175,c	;volatile
  2229  0023BA                     
  2230                           ;serie.c: 39: BAUDCONbits.BRG16=1;
  2231  0023BA  86B8               	bsf	184,3,c	;volatile
  2232  0023BC                     
  2233                           ;serie.c: 40: TXSTAbits.BRGH=1;
  2234  0023BC  84AC               	bsf	172,2,c	;volatile
  2235  0023BE                     
  2236                           ;serie.c: 43: TXSTAbits.SYNC=0;
  2237  0023BE  98AC               	bcf	172,4,c	;volatile
  2238  0023C0                     
  2239                           ;serie.c: 44: TXSTAbits.TXEN=1;
  2240  0023C0  8AAC               	bsf	172,5,c	;volatile
  2241  0023C2                     
  2242                           ;serie.c: 45: RCSTAbits.CREN = 1;
  2243  0023C2  88AB               	bsf	171,4,c	;volatile
  2244  0023C4                     
  2245                           ;serie.c: 46: RCSTAbits.SPEN=1;
  2246  0023C4  8EAB               	bsf	171,7,c	;volatile
  2247                           
  2248                           ;serie.c: 47: ANSEL = 0;
  2249  0023C6  0E00               	movlw	0
  2250  0023C8  6E7E               	movwf	126,c	;volatile
  2251  0023CA  0012               	return		;funcret
  2252  0023CC                     __end_of_init_serie:
  2253                           	opt callstack 0
  2254                           
  2255 ;; *************** function _initTabVue *****************
  2256 ;; Defined at:
  2257 ;;		line 137 in file "main.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;		None
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  j               2   10[BANK0 ] int 
  2262 ;;  i               2    8[BANK0 ] int 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2272 ;;      Params:         0       0       0       0       0       0       0
  2273 ;;      Locals:         0       4       0       0       0       0       0
  2274 ;;      Temps:          0       2       0       0       0       0       0
  2275 ;;      Totals:         0       6       0       0       0       0       0
  2276 ;;Total ram usage:        6 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:    1
  2279 ;; This function calls:
  2280 ;;		___wmul
  2281 ;; This function is called by:
  2282 ;;		_main
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text12
  2287  00199C                     __ptext12:
  2288                           	opt callstack 0
  2289  00199C                     _initTabVue:
  2290                           	opt callstack 29
  2291  00199C                     
  2292                           ;main.c: 139: int i=0;
  2293  00199C  0E00               	movlw	0
  2294  00199E  0100               	movlb	0	; force () banked
  2295  0019A0  6FBD               	movwf	(initTabVue@i+1)& (0+255),b
  2296  0019A2  0E00               	movlw	0
  2297  0019A4  6FBC               	movwf	initTabVue@i& (0+255),b
  2298                           
  2299                           ;main.c: 140: int j=0;
  2300  0019A6  0E00               	movlw	0
  2301  0019A8  0100               	movlb	0	; force () banked
  2302  0019AA  6FBF               	movwf	(initTabVue@j+1)& (0+255),b
  2303  0019AC  0E00               	movlw	0
  2304  0019AE  6FBE               	movwf	initTabVue@j& (0+255),b
  2305                           
  2306                           ;main.c: 141: for ( i=0;i<4;i++)
  2307  0019B0  0E00               	movlw	0
  2308  0019B2  0100               	movlb	0	; force () banked
  2309  0019B4  6FBD               	movwf	(initTabVue@i+1)& (0+255),b
  2310  0019B6  0E00               	movlw	0
  2311  0019B8  6FBC               	movwf	initTabVue@i& (0+255),b
  2312  0019BA                     
  2313                           ; BSR set to: 0
  2314  0019BA  0100               	movlb	0	; force () banked
  2315  0019BC  BFBD               	btfsc	(initTabVue@i+1)& (0+255),7,b
  2316  0019BE  EFEA  F00C         	goto	u2011
  2317  0019C2  51BD               	movf	(initTabVue@i+1)& (0+255),w,b
  2318  0019C4  E109               	bnz	u2010
  2319  0019C6  0E04               	movlw	4
  2320  0019C8  5DBC               	subwf	initTabVue@i& (0+255),w,b
  2321  0019CA  A0D8               	btfss	status,0,c
  2322  0019CC  EFEA  F00C         	goto	u2011
  2323  0019D0  EFEC  F00C         	goto	u2010
  2324  0019D4                     u2011:
  2325  0019D4  EFEE  F00C         	goto	l2366
  2326  0019D8                     u2010:
  2327  0019D8  EF8A  F00D         	goto	l91
  2328  0019DC                     l2366:
  2329                           
  2330                           ; BSR set to: 0
  2331                           ;main.c: 142: {;main.c: 143: for (j=0;j<(20+1);j++)
  2332  0019DC  0E00               	movlw	0
  2333  0019DE  0100               	movlb	0	; force () banked
  2334  0019E0  6FBF               	movwf	(initTabVue@j+1)& (0+255),b
  2335  0019E2  0E00               	movlw	0
  2336  0019E4  6FBE               	movwf	initTabVue@j& (0+255),b
  2337  0019E6                     
  2338                           ; BSR set to: 0
  2339  0019E6  0100               	movlb	0	; force () banked
  2340  0019E8  BFBF               	btfsc	(initTabVue@j+1)& (0+255),7,b
  2341  0019EA  EF00  F00D         	goto	u2021
  2342  0019EE  51BF               	movf	(initTabVue@j+1)& (0+255),w,b
  2343  0019F0  E109               	bnz	u2020
  2344  0019F2  0E15               	movlw	21
  2345  0019F4  5DBE               	subwf	initTabVue@j& (0+255),w,b
  2346  0019F6  A0D8               	btfss	status,0,c
  2347  0019F8  EF00  F00D         	goto	u2021
  2348  0019FC  EF02  F00D         	goto	u2020
  2349  001A00                     u2021:
  2350  001A00  EF04  F00D         	goto	l2372
  2351  001A04                     u2020:
  2352  001A04  EF78  F00D         	goto	l2384
  2353  001A08                     l2372:
  2354                           
  2355                           ; BSR set to: 0
  2356                           ;main.c: 144: {;main.c: 145: if(i<20)
  2357  001A08  0100               	movlb	0	; force () banked
  2358  001A0A  BFBD               	btfsc	(initTabVue@i+1)& (0+255),7,b
  2359  001A0C  EF13  F00D         	goto	u2030
  2360  001A10  51BD               	movf	(initTabVue@i+1)& (0+255),w,b
  2361  001A12  E107               	bnz	u2031
  2362  001A14  0E14               	movlw	20
  2363  001A16  5DBC               	subwf	initTabVue@i& (0+255),w,b
  2364  001A18  B0D8               	btfsc	status,0,c
  2365  001A1A  EF11  F00D         	goto	u2031
  2366  001A1E  EF13  F00D         	goto	u2030
  2367  001A22                     u2031:
  2368  001A22  EF37  F00D         	goto	l2376
  2369  001A26                     u2030:
  2370  001A26                     
  2371                           ; BSR set to: 0
  2372                           ;main.c: 146: {;main.c: 147: m_tabVue[i][j]= 1;
  2373  001A26  C0BC  F0B4         	movff	initTabVue@i,___wmul@multiplier
  2374  001A2A  C0BD  F0B5         	movff	initTabVue@i+1,___wmul@multiplier+1
  2375  001A2E  0E00               	movlw	0
  2376  001A30  0100               	movlb	0	; force () banked
  2377  001A32  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2378  001A34  0E15               	movlw	21
  2379  001A36  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2380  001A38  ECB3  F011         	call	___wmul	;wreg free
  2381  001A3C  0E00               	movlw	low _m_tabVue
  2382  001A3E  0100               	movlb	0	; force () banked
  2383  001A40  6FBA               	movwf	??_initTabVue& (0+255),b
  2384  001A42  0E01               	movlw	high _m_tabVue
  2385  001A44  6FBB               	movwf	(??_initTabVue+1)& (0+255),b
  2386  001A46  0100               	movlb	0	; force () banked
  2387  001A48  51B4               	movf	?___wmul& (0+255),w,b
  2388  001A4A  0100               	movlb	0	; force () banked
  2389  001A4C  27BA               	addwf	??_initTabVue& (0+255),f,b
  2390  001A4E  0100               	movlb	0	; force () banked
  2391  001A50  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2392  001A52  0100               	movlb	0	; force () banked
  2393  001A54  23BB               	addwfc	(??_initTabVue+1)& (0+255),f,b
  2394  001A56  0100               	movlb	0	; force () banked
  2395  001A58  51BE               	movf	initTabVue@j& (0+255),w,b
  2396  001A5A  0100               	movlb	0	; force () banked
  2397  001A5C  25BA               	addwf	??_initTabVue& (0+255),w,b
  2398  001A5E  6ED9               	movwf	fsr2l,c
  2399  001A60  0100               	movlb	0	; force () banked
  2400  001A62  51BF               	movf	(initTabVue@j+1)& (0+255),w,b
  2401  001A64  0100               	movlb	0	; force () banked
  2402  001A66  21BB               	addwfc	(??_initTabVue+1)& (0+255),w,b
  2403  001A68  6EDA               	movwf	fsr2h,c
  2404  001A6A  0E01               	movlw	1
  2405  001A6C  6EDF               	movwf	indf2,c
  2406  001A6E                     l2376:
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;main.c: 148: };main.c: 150: if (j==20)
  2410  001A6E  0E14               	movlw	20
  2411  001A70  0100               	movlb	0	; force () banked
  2412  001A72  19BE               	xorwf	initTabVue@j& (0+255),w,b
  2413  001A74  11BF               	iorwf	(initTabVue@j+1)& (0+255),w,b
  2414  001A76  A4D8               	btfss	status,2,c
  2415  001A78  EF40  F00D         	goto	u2041
  2416  001A7C  EF42  F00D         	goto	u2040
  2417  001A80                     u2041:
  2418  001A80  EF66  F00D         	goto	l2380
  2419  001A84                     u2040:
  2420  001A84                     
  2421                           ; BSR set to: 0
  2422                           ;main.c: 151: {;main.c: 152: m_tabVue[i][j]= '\0';
  2423  001A84  C0BC  F0B4         	movff	initTabVue@i,___wmul@multiplier
  2424  001A88  C0BD  F0B5         	movff	initTabVue@i+1,___wmul@multiplier+1
  2425  001A8C  0E00               	movlw	0
  2426  001A8E  0100               	movlb	0	; force () banked
  2427  001A90  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2428  001A92  0E15               	movlw	21
  2429  001A94  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2430  001A96  ECB3  F011         	call	___wmul	;wreg free
  2431  001A9A  0E00               	movlw	low _m_tabVue
  2432  001A9C  0100               	movlb	0	; force () banked
  2433  001A9E  6FBA               	movwf	??_initTabVue& (0+255),b
  2434  001AA0  0E01               	movlw	high _m_tabVue
  2435  001AA2  6FBB               	movwf	(??_initTabVue+1)& (0+255),b
  2436  001AA4  0100               	movlb	0	; force () banked
  2437  001AA6  51B4               	movf	?___wmul& (0+255),w,b
  2438  001AA8  0100               	movlb	0	; force () banked
  2439  001AAA  27BA               	addwf	??_initTabVue& (0+255),f,b
  2440  001AAC  0100               	movlb	0	; force () banked
  2441  001AAE  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2442  001AB0  0100               	movlb	0	; force () banked
  2443  001AB2  23BB               	addwfc	(??_initTabVue+1)& (0+255),f,b
  2444  001AB4  0100               	movlb	0	; force () banked
  2445  001AB6  51BE               	movf	initTabVue@j& (0+255),w,b
  2446  001AB8  0100               	movlb	0	; force () banked
  2447  001ABA  25BA               	addwf	??_initTabVue& (0+255),w,b
  2448  001ABC  6ED9               	movwf	fsr2l,c
  2449  001ABE  0100               	movlb	0	; force () banked
  2450  001AC0  51BF               	movf	(initTabVue@j+1)& (0+255),w,b
  2451  001AC2  0100               	movlb	0	; force () banked
  2452  001AC4  21BB               	addwfc	(??_initTabVue+1)& (0+255),w,b
  2453  001AC6  6EDA               	movwf	fsr2h,c
  2454  001AC8  0E00               	movlw	0
  2455  001ACA  6EDF               	movwf	indf2,c
  2456  001ACC                     l2380:
  2457                           
  2458                           ; BSR set to: 0
  2459  001ACC  0100               	movlb	0	; force () banked
  2460  001ACE  4BBE               	infsnz	initTabVue@j& (0+255),f,b
  2461  001AD0  2BBF               	incf	(initTabVue@j+1)& (0+255),f,b
  2462  001AD2                     
  2463                           ; BSR set to: 0
  2464  001AD2  0100               	movlb	0	; force () banked
  2465  001AD4  BFBF               	btfsc	(initTabVue@j+1)& (0+255),7,b
  2466  001AD6  EF76  F00D         	goto	u2051
  2467  001ADA  51BF               	movf	(initTabVue@j+1)& (0+255),w,b
  2468  001ADC  E109               	bnz	u2050
  2469  001ADE  0E15               	movlw	21
  2470  001AE0  5DBE               	subwf	initTabVue@j& (0+255),w,b
  2471  001AE2  A0D8               	btfss	status,0,c
  2472  001AE4  EF76  F00D         	goto	u2051
  2473  001AE8  EF78  F00D         	goto	u2050
  2474  001AEC                     u2051:
  2475  001AEC  EF04  F00D         	goto	l2372
  2476  001AF0                     u2050:
  2477  001AF0                     l2384:
  2478                           
  2479                           ; BSR set to: 0
  2480  001AF0  0100               	movlb	0	; force () banked
  2481  001AF2  4BBC               	infsnz	initTabVue@i& (0+255),f,b
  2482  001AF4  2BBD               	incf	(initTabVue@i+1)& (0+255),f,b
  2483  001AF6                     
  2484                           ; BSR set to: 0
  2485  001AF6  0100               	movlb	0	; force () banked
  2486  001AF8  BFBD               	btfsc	(initTabVue@i+1)& (0+255),7,b
  2487  001AFA  EF88  F00D         	goto	u2061
  2488  001AFE  51BD               	movf	(initTabVue@i+1)& (0+255),w,b
  2489  001B00  E109               	bnz	u2060
  2490  001B02  0E04               	movlw	4
  2491  001B04  5DBC               	subwf	initTabVue@i& (0+255),w,b
  2492  001B06  A0D8               	btfss	status,0,c
  2493  001B08  EF88  F00D         	goto	u2061
  2494  001B0C  EF8A  F00D         	goto	u2060
  2495  001B10                     u2061:
  2496  001B10  EFEE  F00C         	goto	l2366
  2497  001B14                     u2060:
  2498  001B14                     l91:
  2499                           
  2500                           ; BSR set to: 0
  2501  001B14  0012               	return		;funcret
  2502  001B16                     __end_of_initTabVue:
  2503                           	opt callstack 0
  2504                           
  2505 ;; *************** function _gagne *****************
  2506 ;; Defined at:
  2507 ;;		line 486 in file "main.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  pMines          2    0[BANK0 ] PTR int 
  2510 ;;		 -> RAM(1535), 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;		None
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      unsigned char 
  2515 ;; Registers used:
  2516 ;;		None
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2522 ;;      Params:         0       2       0       0       0       0       0
  2523 ;;      Locals:         0       0       0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0
  2525 ;;      Totals:         0       2       0       0       0       0       0
  2526 ;;Total ram usage:        2 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; This function calls:
  2529 ;;		Nothing
  2530 ;; This function is called by:
  2531 ;;		_main
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text13
  2536  002402                     __ptext13:
  2537                           	opt callstack 0
  2538  002402                     _gagne:
  2539                           	opt callstack 30
  2540  002402  0012               	return		;funcret
  2541  002404                     __end_of_gagne:
  2542                           	opt callstack 0
  2543                           
  2544 ;; *************** function _deplace *****************
  2545 ;; Defined at:
  2546 ;;		line 357 in file "main.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  x               2    5[BANK0 ] PTR unsigned char 
  2549 ;;		 -> main@x(1), 
  2550 ;;  y               2    7[BANK0 ] PTR unsigned char 
  2551 ;;		 -> main@y(1), 
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;		None
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2563 ;;      Params:         0       4       0       0       0       0       0
  2564 ;;      Locals:         0       0       0       0       0       0       0
  2565 ;;      Temps:          0       1       0       0       0       0       0
  2566 ;;      Totals:         0       5       0       0       0       0       0
  2567 ;;Total ram usage:        5 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; Hardware stack levels required when called:    4
  2570 ;; This function calls:
  2571 ;;		_getAnalog
  2572 ;;		_lcd_gotoXY
  2573 ;; This function is called by:
  2574 ;;		_main
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578                           	psect	text14
  2579  0017FA                     __ptext14:
  2580                           	opt callstack 0
  2581  0017FA                     _deplace:
  2582                           	opt callstack 26
  2583  0017FA                     
  2584                           ;main.c: 359: lcd_gotoXY( *x,*y);
  2585  0017FA  C0BB  FFD9         	movff	deplace@y,fsr2l
  2586  0017FE  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2587  001802  50DF               	movf	indf2,w,c
  2588  001804  0100               	movlb	0	; force () banked
  2589  001806  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  2590  001808  C0B9  FFD9         	movff	deplace@x,fsr2l
  2591  00180C  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2592  001810  50DF               	movf	indf2,w,c
  2593  001812  ECAC  F00F         	call	_lcd_gotoXY
  2594  001816                     
  2595                           ;main.c: 360: if(getAnalog(7)<110)
  2596  001816  0E07               	movlw	7
  2597  001818  EC89  F011         	call	_getAnalog
  2598  00181C  0100               	movlb	0	; force () banked
  2599  00181E  6FBD               	movwf	??_deplace& (0+255),b
  2600  001820  0E6E               	movlw	110
  2601  001822  61BD               	cpfslt	??_deplace& (0+255),b
  2602  001824  EF16  F00C         	goto	u2221
  2603  001828  EF18  F00C         	goto	u2220
  2604  00182C                     u2221:
  2605  00182C  EF39  F00C         	goto	l2474
  2606  001830                     u2220:
  2607  001830                     
  2608                           ; BSR set to: 0
  2609                           ;main.c: 361: {;main.c: 362: (*x)= (*x) +1;
  2610  001830  C0B9  FFD9         	movff	deplace@x,fsr2l
  2611  001834  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2612  001838  50DF               	movf	indf2,w,c
  2613  00183A  0100               	movlb	0	; force () banked
  2614  00183C  6FBD               	movwf	??_deplace& (0+255),b
  2615  00183E  29BD               	incf	??_deplace& (0+255),w,b
  2616  001840  C0B9  FFD9         	movff	deplace@x,fsr2l
  2617  001844  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2618  001848  6EDF               	movwf	indf2,c
  2619                           
  2620                           ;main.c: 363: if (*x > 20)
  2621  00184A  C0B9  FFD9         	movff	deplace@x,fsr2l
  2622  00184E  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2623  001852  0E14               	movlw	20
  2624  001854  64DF               	cpfsgt	indf2,c
  2625  001856  EF2F  F00C         	goto	u2231
  2626  00185A  EF31  F00C         	goto	u2230
  2627  00185E                     u2231:
  2628  00185E  EF65  F00C         	goto	l2482
  2629  001862                     u2230:
  2630  001862                     
  2631                           ; BSR set to: 0
  2632                           ;main.c: 364: {;main.c: 365: *x=1;
  2633  001862  C0B9  FFD9         	movff	deplace@x,fsr2l
  2634  001866  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2635  00186A  0E01               	movlw	1
  2636  00186C  6EDF               	movwf	indf2,c
  2637  00186E  EF65  F00C         	goto	l2482
  2638  001872                     l2474:
  2639                           
  2640                           ; BSR set to: 0
  2641                           ;main.c: 368: else if(getAnalog(7)>200)
  2642  001872  0E07               	movlw	7
  2643  001874  EC89  F011         	call	_getAnalog
  2644  001878  0100               	movlb	0	; force () banked
  2645  00187A  6FBD               	movwf	??_deplace& (0+255),b
  2646  00187C  0EC8               	movlw	200
  2647  00187E  65BD               	cpfsgt	??_deplace& (0+255),b
  2648  001880  EF44  F00C         	goto	u2241
  2649  001884  EF46  F00C         	goto	u2240
  2650  001888                     u2241:
  2651  001888  EF65  F00C         	goto	l2482
  2652  00188C                     u2240:
  2653  00188C                     
  2654                           ; BSR set to: 0
  2655                           ;main.c: 369: {;main.c: 370: (*x)=(*x)-1;
  2656  00188C  C0B9  FFD9         	movff	deplace@x,fsr2l
  2657  001890  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2658  001894  50DF               	movf	indf2,w,c
  2659  001896  0100               	movlb	0	; force () banked
  2660  001898  6FBD               	movwf	??_deplace& (0+255),b
  2661  00189A  05BD               	decf	??_deplace& (0+255),w,b
  2662  00189C  C0B9  FFD9         	movff	deplace@x,fsr2l
  2663  0018A0  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2664  0018A4  6EDF               	movwf	indf2,c
  2665  0018A6                     
  2666                           ; BSR set to: 0
  2667                           ;main.c: 371: if((*x)<1)
  2668  0018A6  C0B9  FFD9         	movff	deplace@x,fsr2l
  2669  0018AA  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2670  0018AE  50DF               	movf	indf2,w,c
  2671  0018B0  A4D8               	btfss	status,2,c
  2672  0018B2  EF5D  F00C         	goto	u2251
  2673  0018B6  EF5F  F00C         	goto	u2250
  2674  0018BA                     u2251:
  2675  0018BA  EF65  F00C         	goto	l2482
  2676  0018BE                     u2250:
  2677  0018BE                     
  2678                           ; BSR set to: 0
  2679                           ;main.c: 372: {;main.c: 373: (*x)=20;
  2680  0018BE  C0B9  FFD9         	movff	deplace@x,fsr2l
  2681  0018C2  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2682  0018C6  0E14               	movlw	20
  2683  0018C8  6EDF               	movwf	indf2,c
  2684  0018CA                     l2482:
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;main.c: 374: };main.c: 375: };main.c: 376: if(getAnalog(6)<110)
  2688  0018CA  0E06               	movlw	6
  2689  0018CC  EC89  F011         	call	_getAnalog
  2690  0018D0  0100               	movlb	0	; force () banked
  2691  0018D2  6FBD               	movwf	??_deplace& (0+255),b
  2692  0018D4  0E6E               	movlw	110
  2693  0018D6  61BD               	cpfslt	??_deplace& (0+255),b
  2694  0018D8  EF70  F00C         	goto	u2261
  2695  0018DC  EF72  F00C         	goto	u2260
  2696  0018E0                     u2261:
  2697  0018E0  EF93  F00C         	goto	l2490
  2698  0018E4                     u2260:
  2699  0018E4                     
  2700                           ; BSR set to: 0
  2701                           ;main.c: 377: {;main.c: 378: (*y)= (*y) -1;
  2702  0018E4  C0BB  FFD9         	movff	deplace@y,fsr2l
  2703  0018E8  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2704  0018EC  50DF               	movf	indf2,w,c
  2705  0018EE  0100               	movlb	0	; force () banked
  2706  0018F0  6FBD               	movwf	??_deplace& (0+255),b
  2707  0018F2  05BD               	decf	??_deplace& (0+255),w,b
  2708  0018F4  C0BB  FFD9         	movff	deplace@y,fsr2l
  2709  0018F8  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2710  0018FC  6EDF               	movwf	indf2,c
  2711  0018FE                     
  2712                           ; BSR set to: 0
  2713                           ;main.c: 379: if (*y < 1)
  2714  0018FE  C0BB  FFD9         	movff	deplace@y,fsr2l
  2715  001902  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2716  001906  50DF               	movf	indf2,w,c
  2717  001908  A4D8               	btfss	status,2,c
  2718  00190A  EF89  F00C         	goto	u2271
  2719  00190E  EF8B  F00C         	goto	u2270
  2720  001912                     u2271:
  2721  001912  EFBF  F00C         	goto	l2496
  2722  001916                     u2270:
  2723  001916                     
  2724                           ; BSR set to: 0
  2725                           ;main.c: 380: {;main.c: 381: *y=4;
  2726  001916  C0BB  FFD9         	movff	deplace@y,fsr2l
  2727  00191A  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2728  00191E  0E04               	movlw	4
  2729  001920  6EDF               	movwf	indf2,c
  2730  001922  EFBF  F00C         	goto	l2496
  2731  001926                     l2490:
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;main.c: 384: else if(getAnalog(7)>200)
  2735  001926  0E07               	movlw	7
  2736  001928  EC89  F011         	call	_getAnalog
  2737  00192C  0100               	movlb	0	; force () banked
  2738  00192E  6FBD               	movwf	??_deplace& (0+255),b
  2739  001930  0EC8               	movlw	200
  2740  001932  65BD               	cpfsgt	??_deplace& (0+255),b
  2741  001934  EF9E  F00C         	goto	u2281
  2742  001938  EFA0  F00C         	goto	u2280
  2743  00193C                     u2281:
  2744  00193C  EFBF  F00C         	goto	l2496
  2745  001940                     u2280:
  2746  001940                     
  2747                           ; BSR set to: 0
  2748                           ;main.c: 385: {;main.c: 386: (*y)=(*y)+1;
  2749  001940  C0BB  FFD9         	movff	deplace@y,fsr2l
  2750  001944  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2751  001948  50DF               	movf	indf2,w,c
  2752  00194A  0100               	movlb	0	; force () banked
  2753  00194C  6FBD               	movwf	??_deplace& (0+255),b
  2754  00194E  29BD               	incf	??_deplace& (0+255),w,b
  2755  001950  C0BB  FFD9         	movff	deplace@y,fsr2l
  2756  001954  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2757  001958  6EDF               	movwf	indf2,c
  2758                           
  2759                           ;main.c: 387: if (*y > 4)
  2760  00195A  C0BB  FFD9         	movff	deplace@y,fsr2l
  2761  00195E  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2762  001962  0E04               	movlw	4
  2763  001964  64DF               	cpfsgt	indf2,c
  2764  001966  EFB7  F00C         	goto	u2291
  2765  00196A  EFB9  F00C         	goto	u2290
  2766  00196E                     u2291:
  2767  00196E  EFBF  F00C         	goto	l2496
  2768  001972                     u2290:
  2769  001972                     
  2770                           ; BSR set to: 0
  2771                           ;main.c: 388: {;main.c: 389: *y=1;
  2772  001972  C0BB  FFD9         	movff	deplace@y,fsr2l
  2773  001976  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2774  00197A  0E01               	movlw	1
  2775  00197C  6EDF               	movwf	indf2,c
  2776  00197E                     l2496:
  2777                           
  2778                           ; BSR set to: 0
  2779                           ;main.c: 390: };main.c: 391: };main.c: 392: lcd_gotoXY(*x ,*y);
  2780  00197E  C0BB  FFD9         	movff	deplace@y,fsr2l
  2781  001982  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  2782  001986  50DF               	movf	indf2,w,c
  2783  001988  0100               	movlb	0	; force () banked
  2784  00198A  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  2785  00198C  C0B9  FFD9         	movff	deplace@x,fsr2l
  2786  001990  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  2787  001994  50DF               	movf	indf2,w,c
  2788  001996  ECAC  F00F         	call	_lcd_gotoXY
  2789  00199A  0012               	return		;funcret
  2790  00199C                     __end_of_deplace:
  2791                           	opt callstack 0
  2792                           
  2793 ;; *************** function _getAnalog *****************
  2794 ;; Defined at:
  2795 ;;		line 120 in file "main.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  canal           1    wreg     unsigned char 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  canal           1    1[BANK0 ] unsigned char 
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      unsigned char 
  2802 ;; Registers used:
  2803 ;;		wreg, status,2, status,0
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2809 ;;      Params:         0       0       0       0       0       0       0
  2810 ;;      Locals:         0       1       0       0       0       0       0
  2811 ;;      Temps:          0       1       0       0       0       0       0
  2812 ;;      Totals:         0       2       0       0       0       0       0
  2813 ;;Total ram usage:        2 bytes
  2814 ;; Hardware stack levels used:    1
  2815 ;; This function calls:
  2816 ;;		Nothing
  2817 ;; This function is called by:
  2818 ;;		_deplace
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text15
  2823  002312                     __ptext15:
  2824                           	opt callstack 0
  2825  002312                     _getAnalog:
  2826                           	opt callstack 29
  2827                           
  2828                           ;incstack = 0
  2829                           ;getAnalog@canal stored from wreg
  2830  002312  0100               	movlb	0	; force () banked
  2831  002314  6FB5               	movwf	getAnalog@canal& (0+255),b
  2832  002316                     
  2833                           ;main.c: 122: ADCON0bits.CHS = canal;
  2834  002316  C0B5  F0B4         	movff	getAnalog@canal,??_getAnalog
  2835  00231A  0100               	movlb	0	; force () banked
  2836  00231C  47B4               	rlncf	??_getAnalog& (0+255),f,b
  2837  00231E  47B4               	rlncf	??_getAnalog& (0+255),f,b
  2838  002320  50C2               	movf	194,w,c	;volatile
  2839  002322  19B4               	xorwf	??_getAnalog& (0+255),w,b
  2840  002324  0BC3               	andlw	-61
  2841  002326  19B4               	xorwf	??_getAnalog& (0+255),w,b
  2842  002328  6EC2               	movwf	194,c	;volatile
  2843  00232A                     
  2844                           ;main.c: 124: ADCON0bits.GO_DONE = 1;
  2845  00232A  82C2               	bsf	194,1,c	;volatile
  2846  00232C                     l79:
  2847  00232C  B2C2               	btfsc	194,1,c	;volatile
  2848  00232E  EF9B  F011         	goto	u631
  2849  002332  EF9D  F011         	goto	u630
  2850  002336                     u631:
  2851  002336  EF96  F011         	goto	l79
  2852  00233A                     u630:
  2853  00233A                     
  2854                           ;main.c: 127: return ADRESH;
  2855  00233A  50C4               	movf	196,w,c	;volatile
  2856  00233C  0012               	return		;funcret
  2857  00233E                     __end_of_getAnalog:
  2858                           	opt callstack 0
  2859                           
  2860 ;; *************** function _demine *****************
  2861 ;; Defined at:
  2862 ;;		line 403 in file "main.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  x               1    wreg     unsigned char 
  2865 ;;  y               1   37[BANK0 ] unsigned char 
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;  x               1   42[BANK0 ] unsigned char 
  2868 ;;  mine            1   41[BANK0 ] unsigned char 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      unsigned char 
  2871 ;; Registers used:
  2872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2878 ;;      Params:         0       1       0       0       0       0       0
  2879 ;;      Locals:         0       2       0       0       0       0       0
  2880 ;;      Temps:          0       3       0       0       0       0       0
  2881 ;;      Totals:         0       6       0       0       0       0       0
  2882 ;;Total ram usage:        6 bytes
  2883 ;; Hardware stack levels used:    1
  2884 ;; Hardware stack levels required when called:    3
  2885 ;; This function calls:
  2886 ;;		_enleveTuilesAutour
  2887 ;; This function is called by:
  2888 ;;		_main
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           	psect	text16
  2893  001E12                     __ptext16:
  2894                           	opt callstack 0
  2895  001E12                     _demine:
  2896                           	opt callstack 27
  2897                           
  2898                           ;incstack = 0
  2899                           ;demine@x stored from wreg
  2900  001E12  0100               	movlb	0	; force () banked
  2901  001E14  6FDE               	movwf	demine@x& (0+255),b
  2902  001E16                     
  2903                           ;main.c: 405: bool mine= 1;
  2904  001E16  0E01               	movlw	1
  2905  001E18  0100               	movlb	0	; force () banked
  2906  001E1A  6FDD               	movwf	demine@mine& (0+255),b
  2907  001E1C                     
  2908                           ; BSR set to: 0
  2909                           ;main.c: 407: if (m_tabMines[y][x]== 2)
  2910  001E1C  0100               	movlb	0	; force () banked
  2911  001E1E  51D9               	movf	demine@y& (0+255),w,b
  2912  001E20  0D15               	mullw	21
  2913  001E22  0E60               	movlw	low _m_tabMines
  2914  001E24  0100               	movlb	0	; force () banked
  2915  001E26  6FDA               	movwf	??_demine& (0+255),b
  2916  001E28  0E00               	movlw	high _m_tabMines
  2917  001E2A  6FDB               	movwf	(??_demine+1)& (0+255),b
  2918  001E2C  50F3               	movf	243,w,c
  2919  001E2E  27DA               	addwf	??_demine& (0+255),f,b
  2920  001E30  50F4               	movf	244,w,c
  2921  001E32  23DB               	addwfc	(??_demine+1)& (0+255),f,b
  2922  001E34  0100               	movlb	0	; force () banked
  2923  001E36  51DE               	movf	demine@x& (0+255),w,b
  2924  001E38  0100               	movlb	0	; force () banked
  2925  001E3A  25DA               	addwf	??_demine& (0+255),w,b
  2926  001E3C  6ED9               	movwf	fsr2l,c
  2927  001E3E  0100               	movlb	0	; force () banked
  2928  001E40  0E00               	movlw	0
  2929  001E42  0100               	movlb	0	; force () banked
  2930  001E44  21DB               	addwfc	(??_demine+1)& (0+255),w,b
  2931  001E46  6EDA               	movwf	fsr2h,c
  2932  001E48  0E02               	movlw	2
  2933  001E4A  18DE               	xorwf	postinc2,w,c
  2934  001E4C  A4D8               	btfss	status,2,c
  2935  001E4E  EF2B  F00F         	goto	u2301
  2936  001E52  EF2D  F00F         	goto	u2300
  2937  001E56                     u2301:
  2938  001E56  EF30  F00F         	goto	l2504
  2939  001E5A                     u2300:
  2940  001E5A                     
  2941                           ; BSR set to: 0
  2942                           ;main.c: 408: {;main.c: 409: mine=0;
  2943  001E5A  0E00               	movlw	0
  2944  001E5C  0100               	movlb	0	; force () banked
  2945  001E5E  6FDD               	movwf	demine@mine& (0+255),b
  2946  001E60                     l2504:
  2947                           
  2948                           ; BSR set to: 0
  2949                           ;main.c: 410: };main.c: 411: if (m_tabMines[y][x]!= 2)
  2950  001E60  0100               	movlb	0	; force () banked
  2951  001E62  51D9               	movf	demine@y& (0+255),w,b
  2952  001E64  0D15               	mullw	21
  2953  001E66  0E60               	movlw	low _m_tabMines
  2954  001E68  0100               	movlb	0	; force () banked
  2955  001E6A  6FDA               	movwf	??_demine& (0+255),b
  2956  001E6C  0E00               	movlw	high _m_tabMines
  2957  001E6E  6FDB               	movwf	(??_demine+1)& (0+255),b
  2958  001E70  50F3               	movf	243,w,c
  2959  001E72  27DA               	addwf	??_demine& (0+255),f,b
  2960  001E74  50F4               	movf	244,w,c
  2961  001E76  23DB               	addwfc	(??_demine+1)& (0+255),f,b
  2962  001E78  0100               	movlb	0	; force () banked
  2963  001E7A  51DE               	movf	demine@x& (0+255),w,b
  2964  001E7C  0100               	movlb	0	; force () banked
  2965  001E7E  25DA               	addwf	??_demine& (0+255),w,b
  2966  001E80  6ED9               	movwf	fsr2l,c
  2967  001E82  0100               	movlb	0	; force () banked
  2968  001E84  0E00               	movlw	0
  2969  001E86  0100               	movlb	0	; force () banked
  2970  001E88  21DB               	addwfc	(??_demine+1)& (0+255),w,b
  2971  001E8A  6EDA               	movwf	fsr2h,c
  2972  001E8C  0E02               	movlw	2
  2973  001E8E  18DE               	xorwf	postinc2,w,c
  2974  001E90  B4D8               	btfsc	status,2,c
  2975  001E92  EF4D  F00F         	goto	u2311
  2976  001E96  EF4F  F00F         	goto	u2310
  2977  001E9A                     u2311:
  2978  001E9A  EF58  F00F         	goto	l2510
  2979  001E9E                     u2310:
  2980  001E9E                     
  2981                           ; BSR set to: 0
  2982                           ;main.c: 412: {;main.c: 413: mine=1;
  2983  001E9E  0E01               	movlw	1
  2984  001EA0  0100               	movlb	0	; force () banked
  2985  001EA2  6FDD               	movwf	demine@mine& (0+255),b
  2986  001EA4                     
  2987                           ; BSR set to: 0
  2988                           ;main.c: 414: enleveTuilesAutour(x,y);
  2989  001EA4  C0D9  F0C9         	movff	demine@y,enleveTuilesAutour@y
  2990  001EA8  0100               	movlb	0	; force () banked
  2991  001EAA  51DE               	movf	demine@x& (0+255),w,b
  2992  001EAC  ECA7  F008         	call	_enleveTuilesAutour
  2993  001EB0                     l2510:
  2994                           
  2995                           ;main.c: 415: };main.c: 416: return mine;
  2996  001EB0  0100               	movlb	0	; force () banked
  2997  001EB2  51DD               	movf	demine@mine& (0+255),w,b
  2998  001EB4                     
  2999                           ; BSR set to: 0
  3000  001EB4  0012               	return		;funcret
  3001  001EB6                     __end_of_demine:
  3002                           	opt callstack 0
  3003                           
  3004 ;; *************** function _enleveTuilesAutour *****************
  3005 ;; Defined at:
  3006 ;;		line 425 in file "main.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;  x               1    wreg     unsigned char 
  3009 ;;  y               1   21[BANK0 ] unsigned char 
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;  x               1   36[BANK0 ] unsigned char 
  3012 ;;  j               2   34[BANK0 ] int 
  3013 ;;  i               2   32[BANK0 ] int 
  3014 ;;  mine            2   30[BANK0 ] int 
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      void 
  3017 ;; Registers used:
  3018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3024 ;;      Params:         0       1       0       0       0       0       0
  3025 ;;      Locals:         0       7       0       0       0       0       0
  3026 ;;      Temps:          0       8       0       0       0       0       0
  3027 ;;      Totals:         0      16       0       0       0       0       0
  3028 ;;Total ram usage:       16 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; Hardware stack levels required when called:    2
  3031 ;; This function calls:
  3032 ;;		___wmul
  3033 ;;		_calculToucheCombien
  3034 ;;		_strcpy
  3035 ;; This function is called by:
  3036 ;;		_demine
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text17
  3041  00114E                     __ptext17:
  3042                           	opt callstack 0
  3043  00114E                     _enleveTuilesAutour:
  3044                           	opt callstack 27
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;incstack = 0
  3048                           ;enleveTuilesAutour@x stored from wreg
  3049  00114E  0100               	movlb	0	; force () banked
  3050  001150  6FD8               	movwf	enleveTuilesAutour@x& (0+255),b
  3051  001152                     
  3052                           ;main.c: 427: int i=0;
  3053  001152  0E00               	movlw	0
  3054  001154  0100               	movlb	0	; force () banked
  3055  001156  6FD5               	movwf	(enleveTuilesAutour@i+1)& (0+255),b
  3056  001158  0E00               	movlw	0
  3057  00115A  6FD4               	movwf	enleveTuilesAutour@i& (0+255),b
  3058                           
  3059                           ;main.c: 428: int j=0;
  3060  00115C  0E00               	movlw	0
  3061  00115E  0100               	movlb	0	; force () banked
  3062  001160  6FD7               	movwf	(enleveTuilesAutour@j+1)& (0+255),b
  3063  001162  0E00               	movlw	0
  3064  001164  6FD6               	movwf	enleveTuilesAutour@j& (0+255),b
  3065                           
  3066                           ;main.c: 429: int mine=0;
  3067  001166  0E00               	movlw	0
  3068  001168  0100               	movlb	0	; force () banked
  3069  00116A  6FD3               	movwf	(enleveTuilesAutour@mine+1)& (0+255),b
  3070  00116C  0E00               	movlw	0
  3071  00116E  6FD2               	movwf	enleveTuilesAutour@mine& (0+255),b
  3072  001170                     
  3073                           ; BSR set to: 0
  3074                           ;main.c: 430: mine = calculToucheCombien(y,x);
  3075  001170  C0C9  F0BA         	movff	enleveTuilesAutour@y,calculToucheCombien@ligne
  3076  001174  0100               	movlb	0	; force () banked
  3077  001176  6BBB               	clrf	(calculToucheCombien@ligne+1)& (0+255),b
  3078  001178  C0D8  F0BC         	movff	enleveTuilesAutour@x,calculToucheCombien@colonne
  3079  00117C  0100               	movlb	0	; force () banked
  3080  00117E  6BBD               	clrf	(calculToucheCombien@colonne+1)& (0+255),b
  3081  001180  EC0D  F003         	call	_calculToucheCombien	;wreg free
  3082  001184  0100               	movlb	0	; force () banked
  3083  001186  6FCA               	movwf	??_enleveTuilesAutour& (0+255),b
  3084  001188  51CA               	movf	??_enleveTuilesAutour& (0+255),w,b
  3085  00118A  0100               	movlb	0	; force () banked
  3086  00118C  6FD2               	movwf	enleveTuilesAutour@mine& (0+255),b
  3087  00118E  6BD3               	clrf	(enleveTuilesAutour@mine+1)& (0+255),b
  3088  001190                     
  3089                           ; BSR set to: 0
  3090                           ;main.c: 431: if (mine==0)
  3091  001190  0100               	movlb	0	; force () banked
  3092  001192  51D2               	movf	enleveTuilesAutour@mine& (0+255),w,b
  3093  001194  11D3               	iorwf	(enleveTuilesAutour@mine+1)& (0+255),w,b
  3094  001196  A4D8               	btfss	status,2,c
  3095  001198  EFD0  F008         	goto	u1841
  3096  00119C  EFD2  F008         	goto	u1840
  3097  0011A0                     u1841:
  3098  0011A0  EFEA  F008         	goto	l2234
  3099  0011A4                     u1840:
  3100  0011A4                     
  3101                           ; BSR set to: 0
  3102                           ;main.c: 432: {;main.c: 433: m_tabVue[y][x]=32;
  3103  0011A4  0100               	movlb	0	; force () banked
  3104  0011A6  51C9               	movf	enleveTuilesAutour@y& (0+255),w,b
  3105  0011A8  0D15               	mullw	21
  3106  0011AA  0E00               	movlw	low _m_tabVue
  3107  0011AC  0100               	movlb	0	; force () banked
  3108  0011AE  6FCA               	movwf	??_enleveTuilesAutour& (0+255),b
  3109  0011B0  0E01               	movlw	high _m_tabVue
  3110  0011B2  6FCB               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3111  0011B4  50F3               	movf	243,w,c
  3112  0011B6  27CA               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3113  0011B8  50F4               	movf	244,w,c
  3114  0011BA  23CB               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3115  0011BC  0100               	movlb	0	; force () banked
  3116  0011BE  51D8               	movf	enleveTuilesAutour@x& (0+255),w,b
  3117  0011C0  0100               	movlb	0	; force () banked
  3118  0011C2  25CA               	addwf	??_enleveTuilesAutour& (0+255),w,b
  3119  0011C4  6ED9               	movwf	fsr2l,c
  3120  0011C6  0100               	movlb	0	; force () banked
  3121  0011C8  0E00               	movlw	0
  3122  0011CA  0100               	movlb	0	; force () banked
  3123  0011CC  21CB               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  3124  0011CE  6EDA               	movwf	fsr2h,c
  3125  0011D0  0E20               	movlw	32
  3126  0011D2  6EDF               	movwf	indf2,c
  3127  0011D4                     l2234:
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;main.c: 434: };main.c: 435: if (mine>0)
  3131  0011D4  0100               	movlb	0	; force () banked
  3132  0011D6  BFD3               	btfsc	(enleveTuilesAutour@mine+1)& (0+255),7,b
  3133  0011D8  EFF6  F008         	goto	u1851
  3134  0011DC  51D3               	movf	(enleveTuilesAutour@mine+1)& (0+255),w,b
  3135  0011DE  E108               	bnz	u1850
  3136  0011E0  05D2               	decf	enleveTuilesAutour@mine& (0+255),w,b
  3137  0011E2  A0D8               	btfss	status,0,c
  3138  0011E4  EFF6  F008         	goto	u1851
  3139  0011E8  EFF8  F008         	goto	u1850
  3140  0011EC                     u1851:
  3141  0011EC  EF0E  F00A         	goto	l185
  3142  0011F0                     u1850:
  3143  0011F0                     
  3144                           ; BSR set to: 0
  3145                           ;main.c: 436: {;main.c: 437: m_tabVue[y][x]= (mine+48);
  3146  0011F0  0100               	movlb	0	; force () banked
  3147  0011F2  51C9               	movf	enleveTuilesAutour@y& (0+255),w,b
  3148  0011F4  0D15               	mullw	21
  3149  0011F6  0E00               	movlw	low _m_tabVue
  3150  0011F8  0100               	movlb	0	; force () banked
  3151  0011FA  6FCA               	movwf	??_enleveTuilesAutour& (0+255),b
  3152  0011FC  0E01               	movlw	high _m_tabVue
  3153  0011FE  6FCB               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3154  001200  50F3               	movf	243,w,c
  3155  001202  27CA               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3156  001204  50F4               	movf	244,w,c
  3157  001206  23CB               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3158  001208  0100               	movlb	0	; force () banked
  3159  00120A  51D8               	movf	enleveTuilesAutour@x& (0+255),w,b
  3160  00120C  0100               	movlb	0	; force () banked
  3161  00120E  25CA               	addwf	??_enleveTuilesAutour& (0+255),w,b
  3162  001210  6ED9               	movwf	fsr2l,c
  3163  001212  0100               	movlb	0	; force () banked
  3164  001214  0E00               	movlw	0
  3165  001216  0100               	movlb	0	; force () banked
  3166  001218  21CB               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  3167  00121A  6EDA               	movwf	fsr2h,c
  3168  00121C  0100               	movlb	0	; force () banked
  3169  00121E  51D2               	movf	enleveTuilesAutour@mine& (0+255),w,b
  3170  001220  0F30               	addlw	48
  3171  001222  6EDF               	movwf	indf2,c
  3172  001224                     
  3173                           ; BSR set to: 0
  3174                           ;main.c: 438: for ( i=-1;i<=1;i++)
  3175  001224  0100               	movlb	0	; force () banked
  3176  001226  69D4               	setf	enleveTuilesAutour@i& (0+255),b
  3177  001228  69D5               	setf	(enleveTuilesAutour@i+1)& (0+255),b
  3178  00122A                     
  3179                           ; BSR set to: 0
  3180  00122A  0100               	movlb	0	; force () banked
  3181  00122C  BFD5               	btfsc	(enleveTuilesAutour@i+1)& (0+255),7,b
  3182  00122E  EF22  F009         	goto	u1861
  3183  001232  51D5               	movf	(enleveTuilesAutour@i+1)& (0+255),w,b
  3184  001234  E109               	bnz	u1860
  3185  001236  0E02               	movlw	2
  3186  001238  5DD4               	subwf	enleveTuilesAutour@i& (0+255),w,b
  3187  00123A  A0D8               	btfss	status,0,c
  3188  00123C  EF22  F009         	goto	u1861
  3189  001240  EF24  F009         	goto	u1860
  3190  001244                     u1861:
  3191  001244  EF26  F009         	goto	l180
  3192  001248                     u1860:
  3193  001248  EF0E  F00A         	goto	l185
  3194  00124C                     l180:
  3195                           
  3196                           ; BSR set to: 0
  3197                           ;main.c: 439: {;main.c: 440: for (j=-1;j<=1;j++)
  3198  00124C  0100               	movlb	0	; force () banked
  3199  00124E  69D6               	setf	enleveTuilesAutour@j& (0+255),b
  3200  001250  69D7               	setf	(enleveTuilesAutour@j+1)& (0+255),b
  3201  001252                     
  3202                           ; BSR set to: 0
  3203  001252  0100               	movlb	0	; force () banked
  3204  001254  BFD7               	btfsc	(enleveTuilesAutour@j+1)& (0+255),7,b
  3205  001256  EF36  F009         	goto	u1871
  3206  00125A  51D7               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  3207  00125C  E109               	bnz	u1870
  3208  00125E  0E02               	movlw	2
  3209  001260  5DD6               	subwf	enleveTuilesAutour@j& (0+255),w,b
  3210  001262  A0D8               	btfss	status,0,c
  3211  001264  EF36  F009         	goto	u1871
  3212  001268  EF38  F009         	goto	u1870
  3213  00126C                     u1871:
  3214  00126C  EF3A  F009         	goto	l2248
  3215  001270                     u1870:
  3216  001270  EFFC  F009         	goto	l2256
  3217  001274                     l2248:
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;main.c: 441: {;main.c: 442: if (m_tabMines[y+i][x+j]!=mine)
  3221  001274  C0D4  F0B4         	movff	enleveTuilesAutour@i,___wmul@multiplier
  3222  001278  C0D5  F0B5         	movff	enleveTuilesAutour@i+1,___wmul@multiplier+1
  3223  00127C  0E00               	movlw	0
  3224  00127E  0100               	movlb	0	; force () banked
  3225  001280  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3226  001282  0E15               	movlw	21
  3227  001284  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3228  001286  ECB3  F011         	call	___wmul	;wreg free
  3229  00128A  0100               	movlb	0	; force () banked
  3230  00128C  51C9               	movf	enleveTuilesAutour@y& (0+255),w,b
  3231  00128E  0D15               	mullw	21
  3232  001290  0E60               	movlw	low _m_tabMines
  3233  001292  0100               	movlb	0	; force () banked
  3234  001294  6FCA               	movwf	??_enleveTuilesAutour& (0+255),b
  3235  001296  0E00               	movlw	high _m_tabMines
  3236  001298  6FCB               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3237  00129A  50F3               	movf	243,w,c
  3238  00129C  27CA               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3239  00129E  50F4               	movf	244,w,c
  3240  0012A0  23CB               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3241  0012A2  0100               	movlb	0	; force () banked
  3242  0012A4  51B4               	movf	?___wmul& (0+255),w,b
  3243  0012A6  0100               	movlb	0	; force () banked
  3244  0012A8  27CA               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3245  0012AA  0100               	movlb	0	; force () banked
  3246  0012AC  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3247  0012AE  0100               	movlb	0	; force () banked
  3248  0012B0  23CB               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3249  0012B2  0100               	movlb	0	; force () banked
  3250  0012B4  51D8               	movf	enleveTuilesAutour@x& (0+255),w,b
  3251  0012B6  0100               	movlb	0	; force () banked
  3252  0012B8  27CA               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3253  0012BA  0E00               	movlw	0
  3254  0012BC  23CB               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3255  0012BE  0100               	movlb	0	; force () banked
  3256  0012C0  51D6               	movf	enleveTuilesAutour@j& (0+255),w,b
  3257  0012C2  0100               	movlb	0	; force () banked
  3258  0012C4  25CA               	addwf	??_enleveTuilesAutour& (0+255),w,b
  3259  0012C6  6ED9               	movwf	fsr2l,c
  3260  0012C8  0100               	movlb	0	; force () banked
  3261  0012CA  51D7               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  3262  0012CC  0100               	movlb	0	; force () banked
  3263  0012CE  21CB               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  3264  0012D0  6EDA               	movwf	fsr2h,c
  3265  0012D2  50DF               	movf	indf2,w,c
  3266  0012D4  6FCC               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  3267  0012D6  6BCD               	clrf	(??_enleveTuilesAutour+3)& (0+255),b
  3268  0012D8  0100               	movlb	0	; force () banked
  3269  0012DA  51D2               	movf	enleveTuilesAutour@mine& (0+255),w,b
  3270  0012DC  0100               	movlb	0	; force () banked
  3271  0012DE  19CC               	xorwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  3272  0012E0  E10B               	bnz	u1880
  3273  0012E2  0100               	movlb	0	; force () banked
  3274  0012E4  51D3               	movf	(enleveTuilesAutour@mine+1)& (0+255),w,b
  3275  0012E6  0100               	movlb	0	; force () banked
  3276  0012E8  19CD               	xorwf	(??_enleveTuilesAutour+3)& (0+255),w,b
  3277  0012EA  B4D8               	btfsc	status,2,c
  3278  0012EC  EF7A  F009         	goto	u1881
  3279  0012F0  EF7C  F009         	goto	u1880
  3280  0012F4                     u1881:
  3281  0012F4  EFEA  F009         	goto	l2252
  3282  0012F8                     u1880:
  3283  0012F8                     
  3284                           ; BSR set to: 0
  3285                           ;main.c: 443: {;main.c: 444: strcpy (m_tabVue[y+i][x+j],m_tabMines[y+i][x+j]);
  3286  0012F8  C0D4  F0B4         	movff	enleveTuilesAutour@i,___wmul@multiplier
  3287  0012FC  C0D5  F0B5         	movff	enleveTuilesAutour@i+1,___wmul@multiplier+1
  3288  001300  0E00               	movlw	0
  3289  001302  0100               	movlb	0	; force () banked
  3290  001304  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3291  001306  0E15               	movlw	21
  3292  001308  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3293  00130A  ECB3  F011         	call	___wmul	;wreg free
  3294  00130E  0100               	movlb	0	; force () banked
  3295  001310  51C9               	movf	enleveTuilesAutour@y& (0+255),w,b
  3296  001312  0D15               	mullw	21
  3297  001314  0E00               	movlw	low _m_tabVue
  3298  001316  0100               	movlb	0	; force () banked
  3299  001318  6FCA               	movwf	??_enleveTuilesAutour& (0+255),b
  3300  00131A  0E01               	movlw	high _m_tabVue
  3301  00131C  6FCB               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  3302  00131E  50F3               	movf	243,w,c
  3303  001320  27CA               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3304  001322  50F4               	movf	244,w,c
  3305  001324  23CB               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3306  001326  0100               	movlb	0	; force () banked
  3307  001328  51B4               	movf	?___wmul& (0+255),w,b
  3308  00132A  0100               	movlb	0	; force () banked
  3309  00132C  27CA               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3310  00132E  0100               	movlb	0	; force () banked
  3311  001330  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3312  001332  0100               	movlb	0	; force () banked
  3313  001334  23CB               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3314  001336  0100               	movlb	0	; force () banked
  3315  001338  51D8               	movf	enleveTuilesAutour@x& (0+255),w,b
  3316  00133A  0100               	movlb	0	; force () banked
  3317  00133C  27CA               	addwf	??_enleveTuilesAutour& (0+255),f,b
  3318  00133E  0E00               	movlw	0
  3319  001340  23CB               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  3320  001342  0100               	movlb	0	; force () banked
  3321  001344  51D6               	movf	enleveTuilesAutour@j& (0+255),w,b
  3322  001346  0100               	movlb	0	; force () banked
  3323  001348  25CA               	addwf	??_enleveTuilesAutour& (0+255),w,b
  3324  00134A  6ED9               	movwf	fsr2l,c
  3325  00134C  0100               	movlb	0	; force () banked
  3326  00134E  51D7               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  3327  001350  0100               	movlb	0	; force () banked
  3328  001352  21CB               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  3329  001354  6EDA               	movwf	fsr2h,c
  3330  001356  50DF               	movf	indf2,w,c
  3331  001358  6FCC               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  3332  00135A  6BCD               	clrf	(??_enleveTuilesAutour+3)& (0+255),b
  3333  00135C  C0CC  F0BA         	movff	??_enleveTuilesAutour+2,strcpy@to
  3334  001360  C0CD  F0BB         	movff	??_enleveTuilesAutour+3,strcpy@to+1
  3335  001364  C0D4  F0B4         	movff	enleveTuilesAutour@i,___wmul@multiplier
  3336  001368  C0D5  F0B5         	movff	enleveTuilesAutour@i+1,___wmul@multiplier+1
  3337  00136C  0E00               	movlw	0
  3338  00136E  0100               	movlb	0	; force () banked
  3339  001370  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3340  001372  0E15               	movlw	21
  3341  001374  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3342  001376  ECB3  F011         	call	___wmul	;wreg free
  3343  00137A  0100               	movlb	0	; force () banked
  3344  00137C  51C9               	movf	enleveTuilesAutour@y& (0+255),w,b
  3345  00137E  0D15               	mullw	21
  3346  001380  0E60               	movlw	low _m_tabMines
  3347  001382  0100               	movlb	0	; force () banked
  3348  001384  6FCE               	movwf	(??_enleveTuilesAutour+4)& (0+255),b
  3349  001386  0E00               	movlw	high _m_tabMines
  3350  001388  6FCF               	movwf	(??_enleveTuilesAutour+5)& (0+255),b
  3351  00138A  50F3               	movf	243,w,c
  3352  00138C  27CE               	addwf	(??_enleveTuilesAutour+4)& (0+255),f,b
  3353  00138E  50F4               	movf	244,w,c
  3354  001390  23CF               	addwfc	(??_enleveTuilesAutour+5)& (0+255),f,b
  3355  001392  0100               	movlb	0	; force () banked
  3356  001394  51B4               	movf	?___wmul& (0+255),w,b
  3357  001396  0100               	movlb	0	; force () banked
  3358  001398  27CE               	addwf	(??_enleveTuilesAutour+4)& (0+255),f,b
  3359  00139A  0100               	movlb	0	; force () banked
  3360  00139C  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3361  00139E  0100               	movlb	0	; force () banked
  3362  0013A0  23CF               	addwfc	(??_enleveTuilesAutour+5)& (0+255),f,b
  3363  0013A2  0100               	movlb	0	; force () banked
  3364  0013A4  51D8               	movf	enleveTuilesAutour@x& (0+255),w,b
  3365  0013A6  0100               	movlb	0	; force () banked
  3366  0013A8  27CE               	addwf	(??_enleveTuilesAutour+4)& (0+255),f,b
  3367  0013AA  0E00               	movlw	0
  3368  0013AC  23CF               	addwfc	(??_enleveTuilesAutour+5)& (0+255),f,b
  3369  0013AE  0100               	movlb	0	; force () banked
  3370  0013B0  51D6               	movf	enleveTuilesAutour@j& (0+255),w,b
  3371  0013B2  0100               	movlb	0	; force () banked
  3372  0013B4  25CE               	addwf	(??_enleveTuilesAutour+4)& (0+255),w,b
  3373  0013B6  6ED9               	movwf	fsr2l,c
  3374  0013B8  0100               	movlb	0	; force () banked
  3375  0013BA  51D7               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  3376  0013BC  0100               	movlb	0	; force () banked
  3377  0013BE  21CF               	addwfc	(??_enleveTuilesAutour+5)& (0+255),w,b
  3378  0013C0  6EDA               	movwf	fsr2h,c
  3379  0013C2  50DF               	movf	indf2,w,c
  3380  0013C4  6FD0               	movwf	(??_enleveTuilesAutour+6)& (0+255),b
  3381  0013C6  6BD1               	clrf	(??_enleveTuilesAutour+7)& (0+255),b
  3382  0013C8  C0D0  F0BC         	movff	??_enleveTuilesAutour+6,strcpy@from
  3383  0013CC  C0D1  F0BD         	movff	??_enleveTuilesAutour+7,strcpy@from+1
  3384  0013D0  EC0A  F011         	call	_strcpy	;wreg free
  3385  0013D4                     l2252:
  3386  0013D4  0100               	movlb	0	; force () banked
  3387  0013D6  4BD6               	infsnz	enleveTuilesAutour@j& (0+255),f,b
  3388  0013D8  2BD7               	incf	(enleveTuilesAutour@j+1)& (0+255),f,b
  3389  0013DA                     
  3390                           ; BSR set to: 0
  3391  0013DA  0100               	movlb	0	; force () banked
  3392  0013DC  BFD7               	btfsc	(enleveTuilesAutour@j+1)& (0+255),7,b
  3393  0013DE  EFFA  F009         	goto	u1891
  3394  0013E2  51D7               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  3395  0013E4  E109               	bnz	u1890
  3396  0013E6  0E02               	movlw	2
  3397  0013E8  5DD6               	subwf	enleveTuilesAutour@j& (0+255),w,b
  3398  0013EA  A0D8               	btfss	status,0,c
  3399  0013EC  EFFA  F009         	goto	u1891
  3400  0013F0  EFFC  F009         	goto	u1890
  3401  0013F4                     u1891:
  3402  0013F4  EF3A  F009         	goto	l2248
  3403  0013F8                     u1890:
  3404  0013F8                     l2256:
  3405                           
  3406                           ; BSR set to: 0
  3407  0013F8  0100               	movlb	0	; force () banked
  3408  0013FA  4BD4               	infsnz	enleveTuilesAutour@i& (0+255),f,b
  3409  0013FC  2BD5               	incf	(enleveTuilesAutour@i+1)& (0+255),f,b
  3410  0013FE                     
  3411                           ; BSR set to: 0
  3412  0013FE  0100               	movlb	0	; force () banked
  3413  001400  BFD5               	btfsc	(enleveTuilesAutour@i+1)& (0+255),7,b
  3414  001402  EF0C  F00A         	goto	u1901
  3415  001406  51D5               	movf	(enleveTuilesAutour@i+1)& (0+255),w,b
  3416  001408  E109               	bnz	u1900
  3417  00140A  0E02               	movlw	2
  3418  00140C  5DD4               	subwf	enleveTuilesAutour@i& (0+255),w,b
  3419  00140E  A0D8               	btfss	status,0,c
  3420  001410  EF0C  F00A         	goto	u1901
  3421  001414  EF0E  F00A         	goto	u1900
  3422  001418                     u1901:
  3423  001418  EF26  F009         	goto	l180
  3424  00141C                     u1900:
  3425  00141C                     l185:
  3426                           
  3427                           ; BSR set to: 0
  3428  00141C  0012               	return		;funcret
  3429  00141E                     __end_of_enleveTuilesAutour:
  3430                           	opt callstack 0
  3431                           
  3432 ;; *************** function _strcpy *****************
  3433 ;; Defined at:
  3434 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\strcpy.c"
  3435 ;; Parameters:    Size  Location     Type
  3436 ;;  to              2    6[BANK0 ] PTR unsigned char 
  3437 ;;		 -> RAM(1535), 
  3438 ;;  from            2    8[BANK0 ] PTR const unsigned char 
  3439 ;;		 -> ROM(32767), 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  cp              2   10[BANK0 ] PTR unsigned char 
  3442 ;;		 -> RAM(1535), 
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  2    6[BANK0 ] PTR unsigned char 
  3445 ;; Registers used:
  3446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3452 ;;      Params:         0       4       0       0       0       0       0
  3453 ;;      Locals:         0       2       0       0       0       0       0
  3454 ;;      Temps:          0       0       0       0       0       0       0
  3455 ;;      Totals:         0       6       0       0       0       0       0
  3456 ;;Total ram usage:        6 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_enleveTuilesAutour
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           	psect	text18
  3466  002214                     __ptext18:
  3467                           	opt callstack 0
  3468  002214                     _strcpy:
  3469                           	opt callstack 28
  3470  002214  C0BA  F0BE         	movff	strcpy@to,strcpy@cp
  3471  002218  C0BB  F0BF         	movff	strcpy@to+1,strcpy@cp+1
  3472  00221C  EF15  F011         	goto	l2168
  3473  002220                     l2166:
  3474  002220  0100               	movlb	0	; () banked
  3475  002222  4BBE               	infsnz	strcpy@cp& (0+255),f,b
  3476  002224  2BBF               	incf	(strcpy@cp+1)& (0+255),f,b
  3477  002226  4BBC               	infsnz	strcpy@from& (0+255),f,b
  3478  002228  2BBD               	incf	(strcpy@from+1)& (0+255),f,b
  3479  00222A                     l2168:
  3480  00222A  C0BC  FFF6         	movff	strcpy@from,tblptrl
  3481  00222E  C0BD  FFF7         	movff	strcpy@from+1,tblptrh
  3482  002232                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3483  002232  6AF8               	clrf	tblptru,c
  3484  002234                     	endif
  3485  002234                     	if	0	;tblptru may be non-zero
  3486  002234                     	endif
  3487  002234  C0BE  FFD9         	movff	strcpy@cp,fsr2l
  3488  002238  C0BF  FFDA         	movff	strcpy@cp+1,fsr2h
  3489  00223C  0008               	tblrd		*
  3490  00223E  CFF5 FFDF          	movff	tablat,indf2
  3491  002242  50DF               	movf	indf2,w,c
  3492  002244  A4D8               	btfss	status,2,c
  3493  002246  EF27  F011         	goto	u1781
  3494  00224A  EF29  F011         	goto	u1780
  3495  00224E                     u1781:
  3496  00224E  EF10  F011         	goto	l2166
  3497  002252                     u1780:
  3498  002252  C0BA  F0BA         	movff	strcpy@to,?_strcpy
  3499  002256  C0BB  F0BB         	movff	strcpy@to+1,?_strcpy+1
  3500  00225A  0012               	return		;funcret
  3501  00225C                     __end_of_strcpy:
  3502                           	opt callstack 0
  3503                           
  3504 ;; *************** function _calculToucheCombien *****************
  3505 ;; Defined at:
  3506 ;;		line 235 in file "main.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;  ligne           2    6[BANK0 ] int 
  3509 ;;  colonne         2    8[BANK0 ] int 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;  i               2   19[BANK0 ] int 
  3512 ;;  j               2   17[BANK0 ] int 
  3513 ;;  nb_mine         2   15[BANK0 ] int 
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  1    wreg      unsigned char 
  3516 ;; Registers used:
  3517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3523 ;;      Params:         0       4       0       0       0       0       0
  3524 ;;      Locals:         0       6       0       0       0       0       0
  3525 ;;      Temps:          0       5       0       0       0       0       0
  3526 ;;      Totals:         0      15       0       0       0       0       0
  3527 ;;Total ram usage:       15 bytes
  3528 ;; Hardware stack levels used:    1
  3529 ;; Hardware stack levels required when called:    1
  3530 ;; This function calls:
  3531 ;;		___wmul
  3532 ;; This function is called by:
  3533 ;;		_metToucheCombien
  3534 ;;		_enleveTuilesAutour
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           	psect	text19
  3539  00061A                     __ptext19:
  3540                           	opt callstack 0
  3541  00061A                     _calculToucheCombien:
  3542                           	opt callstack 28
  3543  00061A                     
  3544                           ;main.c: 237: int nb_mine =0;
  3545  00061A  0E00               	movlw	0
  3546  00061C  0100               	movlb	0	; force () banked
  3547  00061E  6FC4               	movwf	(calculToucheCombien@nb_mine+1)& (0+255),b
  3548  000620  0E00               	movlw	0
  3549  000622  6FC3               	movwf	calculToucheCombien@nb_mine& (0+255),b
  3550                           
  3551                           ;main.c: 238: int i=0;
  3552  000624  0E00               	movlw	0
  3553  000626  0100               	movlb	0	; force () banked
  3554  000628  6FC8               	movwf	(calculToucheCombien@i+1)& (0+255),b
  3555  00062A  0E00               	movlw	0
  3556  00062C  6FC7               	movwf	calculToucheCombien@i& (0+255),b
  3557                           
  3558                           ;main.c: 239: int j=0;
  3559  00062E  0E00               	movlw	0
  3560  000630  0100               	movlb	0	; force () banked
  3561  000632  6FC6               	movwf	(calculToucheCombien@j+1)& (0+255),b
  3562  000634  0E00               	movlw	0
  3563  000636  6FC5               	movwf	calculToucheCombien@j& (0+255),b
  3564  000638                     
  3565                           ; BSR set to: 0
  3566                           ;main.c: 240: if ((ligne<3)&&(ligne>0)&&(colonne>0)&&(colonne<20))
  3567  000638  0100               	movlb	0	; force () banked
  3568  00063A  BFBB               	btfsc	(calculToucheCombien@ligne+1)& (0+255),7,b
  3569  00063C  EF2B  F003         	goto	u1250
  3570  000640  51BB               	movf	(calculToucheCombien@ligne+1)& (0+255),w,b
  3571  000642  E107               	bnz	u1251
  3572  000644  0E03               	movlw	3
  3573  000646  5DBA               	subwf	calculToucheCombien@ligne& (0+255),w,b
  3574  000648  B0D8               	btfsc	status,0,c
  3575  00064A  EF29  F003         	goto	u1251
  3576  00064E  EF2B  F003         	goto	u1250
  3577  000652                     u1251:
  3578  000652  EFEB  F003         	goto	l2014
  3579  000656                     u1250:
  3580  000656                     
  3581                           ; BSR set to: 0
  3582  000656  0100               	movlb	0	; force () banked
  3583  000658  BFBB               	btfsc	(calculToucheCombien@ligne+1)& (0+255),7,b
  3584  00065A  EF37  F003         	goto	u1261
  3585  00065E  51BB               	movf	(calculToucheCombien@ligne+1)& (0+255),w,b
  3586  000660  E108               	bnz	u1260
  3587  000662  05BA               	decf	calculToucheCombien@ligne& (0+255),w,b
  3588  000664  A0D8               	btfss	status,0,c
  3589  000666  EF37  F003         	goto	u1261
  3590  00066A  EF39  F003         	goto	u1260
  3591  00066E                     u1261:
  3592  00066E  EFEB  F003         	goto	l2014
  3593  000672                     u1260:
  3594  000672                     
  3595                           ; BSR set to: 0
  3596  000672  0100               	movlb	0	; force () banked
  3597  000674  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  3598  000676  EF45  F003         	goto	u1271
  3599  00067A  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3600  00067C  E108               	bnz	u1270
  3601  00067E  05BC               	decf	calculToucheCombien@colonne& (0+255),w,b
  3602  000680  A0D8               	btfss	status,0,c
  3603  000682  EF45  F003         	goto	u1271
  3604  000686  EF47  F003         	goto	u1270
  3605  00068A                     u1271:
  3606  00068A  EFEB  F003         	goto	l2014
  3607  00068E                     u1270:
  3608  00068E                     
  3609                           ; BSR set to: 0
  3610  00068E  0100               	movlb	0	; force () banked
  3611  000690  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  3612  000692  EF56  F003         	goto	u1280
  3613  000696  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3614  000698  E107               	bnz	u1281
  3615  00069A  0E14               	movlw	20
  3616  00069C  5DBC               	subwf	calculToucheCombien@colonne& (0+255),w,b
  3617  00069E  B0D8               	btfsc	status,0,c
  3618  0006A0  EF54  F003         	goto	u1281
  3619  0006A4  EF56  F003         	goto	u1280
  3620  0006A8                     u1281:
  3621  0006A8  EFEB  F003         	goto	l2014
  3622  0006AC                     u1280:
  3623  0006AC                     
  3624                           ; BSR set to: 0
  3625                           ;main.c: 241: {;main.c: 242: for(i=-1;i<2;i++)
  3626  0006AC  0100               	movlb	0	; force () banked
  3627  0006AE  69C7               	setf	calculToucheCombien@i& (0+255),b
  3628  0006B0  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  3629  0006B2                     
  3630                           ; BSR set to: 0
  3631  0006B2  0100               	movlb	0	; force () banked
  3632  0006B4  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  3633  0006B6  EF66  F003         	goto	u1291
  3634  0006BA  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  3635  0006BC  E109               	bnz	u1290
  3636  0006BE  0E02               	movlw	2
  3637  0006C0  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  3638  0006C2  A0D8               	btfss	status,0,c
  3639  0006C4  EF66  F003         	goto	u1291
  3640  0006C8  EF68  F003         	goto	u1290
  3641  0006CC                     u1291:
  3642  0006CC  EF6A  F003         	goto	l116
  3643  0006D0                     u1290:
  3644  0006D0  EFEB  F003         	goto	l2014
  3645  0006D4                     l116:
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;main.c: 243: {;main.c: 244: for(j=-1;j<=1;j++)
  3649  0006D4  0100               	movlb	0	; force () banked
  3650  0006D6  69C5               	setf	calculToucheCombien@j& (0+255),b
  3651  0006D8  69C6               	setf	(calculToucheCombien@j+1)& (0+255),b
  3652  0006DA                     
  3653                           ; BSR set to: 0
  3654  0006DA  0100               	movlb	0	; force () banked
  3655  0006DC  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  3656  0006DE  EF7A  F003         	goto	u1301
  3657  0006E2  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  3658  0006E4  E109               	bnz	u1300
  3659  0006E6  0E02               	movlw	2
  3660  0006E8  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  3661  0006EA  A0D8               	btfss	status,0,c
  3662  0006EC  EF7A  F003         	goto	u1301
  3663  0006F0  EF7C  F003         	goto	u1300
  3664  0006F4                     u1301:
  3665  0006F4  EF7E  F003         	goto	l2004
  3666  0006F8                     u1300:
  3667  0006F8  EFD9  F003         	goto	l2010
  3668  0006FC                     l2004:
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;main.c: 245: {;main.c: 246: if (m_tabMines[ligne+(i)][colonne+(j)]== 2)
  3672  0006FC  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  3673  000700  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  3674  000704  0E00               	movlw	0
  3675  000706  0100               	movlb	0	; force () banked
  3676  000708  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3677  00070A  0E15               	movlw	21
  3678  00070C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3679  00070E  ECB3  F011         	call	___wmul	;wreg free
  3680  000712  0E60               	movlw	low _m_tabMines
  3681  000714  0100               	movlb	0	; force () banked
  3682  000716  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  3683  000718  0E00               	movlw	high _m_tabMines
  3684  00071A  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  3685  00071C  0100               	movlb	0	; force () banked
  3686  00071E  51B4               	movf	?___wmul& (0+255),w,b
  3687  000720  0100               	movlb	0	; force () banked
  3688  000722  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  3689  000724  0100               	movlb	0	; force () banked
  3690  000726  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3691  000728  0100               	movlb	0	; force () banked
  3692  00072A  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  3693  00072C  C0C7  F0B4         	movff	calculToucheCombien@i,___wmul@multiplier
  3694  000730  C0C8  F0B5         	movff	calculToucheCombien@i+1,___wmul@multiplier+1
  3695  000734  0E00               	movlw	0
  3696  000736  0100               	movlb	0	; force () banked
  3697  000738  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3698  00073A  0E15               	movlw	21
  3699  00073C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3700  00073E  ECB3  F011         	call	___wmul	;wreg free
  3701  000742  0100               	movlb	0	; force () banked
  3702  000744  51B4               	movf	?___wmul& (0+255),w,b
  3703  000746  0100               	movlb	0	; force () banked
  3704  000748  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  3705  00074A  0100               	movlb	0	; force () banked
  3706  00074C  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3707  00074E  0100               	movlb	0	; force () banked
  3708  000750  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  3709  000752  0100               	movlb	0	; force () banked
  3710  000754  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  3711  000756  0100               	movlb	0	; force () banked
  3712  000758  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  3713  00075A  0100               	movlb	0	; force () banked
  3714  00075C  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3715  00075E  0100               	movlb	0	; force () banked
  3716  000760  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  3717  000762  0100               	movlb	0	; force () banked
  3718  000764  51C5               	movf	calculToucheCombien@j& (0+255),w,b
  3719  000766  0100               	movlb	0	; force () banked
  3720  000768  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  3721  00076A  6ED9               	movwf	fsr2l,c
  3722  00076C  0100               	movlb	0	; force () banked
  3723  00076E  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  3724  000770  0100               	movlb	0	; force () banked
  3725  000772  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  3726  000774  6EDA               	movwf	fsr2h,c
  3727  000776  0E02               	movlw	2
  3728  000778  18DE               	xorwf	postinc2,w,c
  3729  00077A  A4D8               	btfss	status,2,c
  3730  00077C  EFC2  F003         	goto	u1311
  3731  000780  EFC4  F003         	goto	u1310
  3732  000784                     u1311:
  3733  000784  EFC7  F003         	goto	l120
  3734  000788                     u1310:
  3735  000788                     
  3736                           ; BSR set to: 0
  3737                           ;main.c: 247: {;main.c: 248: nb_mine++;
  3738  000788  0100               	movlb	0	; force () banked
  3739  00078A  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  3740  00078C  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  3741  00078E                     l120:
  3742                           
  3743                           ; BSR set to: 0
  3744  00078E  0100               	movlb	0	; force () banked
  3745  000790  4BC5               	infsnz	calculToucheCombien@j& (0+255),f,b
  3746  000792  2BC6               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  3747  000794                     
  3748                           ; BSR set to: 0
  3749  000794  0100               	movlb	0	; force () banked
  3750  000796  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  3751  000798  EFD7  F003         	goto	u1321
  3752  00079C  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  3753  00079E  E109               	bnz	u1320
  3754  0007A0  0E02               	movlw	2
  3755  0007A2  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  3756  0007A4  A0D8               	btfss	status,0,c
  3757  0007A6  EFD7  F003         	goto	u1321
  3758  0007AA  EFD9  F003         	goto	u1320
  3759  0007AE                     u1321:
  3760  0007AE  EF7E  F003         	goto	l2004
  3761  0007B2                     u1320:
  3762  0007B2                     l2010:
  3763                           
  3764                           ; BSR set to: 0
  3765  0007B2  0100               	movlb	0	; force () banked
  3766  0007B4  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  3767  0007B6  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  3768  0007B8                     
  3769                           ; BSR set to: 0
  3770  0007B8  0100               	movlb	0	; force () banked
  3771  0007BA  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  3772  0007BC  EFE9  F003         	goto	u1331
  3773  0007C0  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  3774  0007C2  E109               	bnz	u1330
  3775  0007C4  0E02               	movlw	2
  3776  0007C6  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  3777  0007C8  A0D8               	btfss	status,0,c
  3778  0007CA  EFE9  F003         	goto	u1331
  3779  0007CE  EFEB  F003         	goto	u1330
  3780  0007D2                     u1331:
  3781  0007D2  EF6A  F003         	goto	l116
  3782  0007D6                     u1330:
  3783  0007D6                     l2014:
  3784                           
  3785                           ; BSR set to: 0
  3786                           ;main.c: 249: };main.c: 250: };main.c: 251: };main.c: 252: };main.c: 253: if((ligne==0)&
      +                          &(colonne==0))
  3787  0007D6  0100               	movlb	0	; force () banked
  3788  0007D8  51BA               	movf	calculToucheCombien@ligne& (0+255),w,b
  3789  0007DA  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  3790  0007DC  A4D8               	btfss	status,2,c
  3791  0007DE  EFF3  F003         	goto	u1341
  3792  0007E2  EFF5  F003         	goto	u1340
  3793  0007E6                     u1341:
  3794  0007E6  EF93  F004         	goto	l2034
  3795  0007EA                     u1340:
  3796  0007EA                     
  3797                           ; BSR set to: 0
  3798  0007EA  0100               	movlb	0	; force () banked
  3799  0007EC  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  3800  0007EE  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3801  0007F0  A4D8               	btfss	status,2,c
  3802  0007F2  EFFD  F003         	goto	u1351
  3803  0007F6  EFFF  F003         	goto	u1350
  3804  0007FA                     u1351:
  3805  0007FA  EF93  F004         	goto	l2034
  3806  0007FE                     u1350:
  3807  0007FE                     
  3808                           ; BSR set to: 0
  3809                           ;main.c: 254: {;main.c: 255: if(m_tabMines[ligne][colonne+1]==2)
  3810  0007FE  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  3811  000802  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  3812  000806  0E00               	movlw	0
  3813  000808  0100               	movlb	0	; force () banked
  3814  00080A  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3815  00080C  0E15               	movlw	21
  3816  00080E  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3817  000810  ECB3  F011         	call	___wmul	;wreg free
  3818  000814  0E60               	movlw	low _m_tabMines
  3819  000816  0100               	movlb	0	; force () banked
  3820  000818  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  3821  00081A  0E00               	movlw	high _m_tabMines
  3822  00081C  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  3823  00081E  0E01               	movlw	1
  3824  000820  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  3825  000822  0E00               	movlw	0
  3826  000824  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  3827  000826  0100               	movlb	0	; force () banked
  3828  000828  51B4               	movf	?___wmul& (0+255),w,b
  3829  00082A  0100               	movlb	0	; force () banked
  3830  00082C  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  3831  00082E  0100               	movlb	0	; force () banked
  3832  000830  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3833  000832  0100               	movlb	0	; force () banked
  3834  000834  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  3835  000836  0100               	movlb	0	; force () banked
  3836  000838  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  3837  00083A  0100               	movlb	0	; force () banked
  3838  00083C  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  3839  00083E  6ED9               	movwf	fsr2l,c
  3840  000840  0100               	movlb	0	; force () banked
  3841  000842  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3842  000844  0100               	movlb	0	; force () banked
  3843  000846  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  3844  000848  6EDA               	movwf	fsr2h,c
  3845  00084A  0E02               	movlw	2
  3846  00084C  18DE               	xorwf	postinc2,w,c
  3847  00084E  A4D8               	btfss	status,2,c
  3848  000850  EF2C  F004         	goto	u1361
  3849  000854  EF2E  F004         	goto	u1360
  3850  000858                     u1361:
  3851  000858  EF31  F004         	goto	l2022
  3852  00085C                     u1360:
  3853  00085C                     
  3854                           ; BSR set to: 0
  3855                           ;main.c: 256: {;main.c: 257: nb_mine++;
  3856  00085C  0100               	movlb	0	; force () banked
  3857  00085E  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  3858  000860  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  3859  000862                     l2022:
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;main.c: 258: };main.c: 259: for(j=0;j<=1;j++)
  3863  000862  0E00               	movlw	0
  3864  000864  0100               	movlb	0	; force () banked
  3865  000866  6FC6               	movwf	(calculToucheCombien@j+1)& (0+255),b
  3866  000868  0E00               	movlw	0
  3867  00086A  6FC5               	movwf	calculToucheCombien@j& (0+255),b
  3868  00086C                     
  3869                           ; BSR set to: 0
  3870  00086C  0100               	movlb	0	; force () banked
  3871  00086E  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  3872  000870  EF43  F004         	goto	u1371
  3873  000874  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  3874  000876  E109               	bnz	u1370
  3875  000878  0E02               	movlw	2
  3876  00087A  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  3877  00087C  A0D8               	btfss	status,0,c
  3878  00087E  EF43  F004         	goto	u1371
  3879  000882  EF45  F004         	goto	u1370
  3880  000886                     u1371:
  3881  000886  EF47  F004         	goto	l2028
  3882  00088A                     u1370:
  3883  00088A  EF93  F004         	goto	l2034
  3884  00088E                     l2028:
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;main.c: 260: {;main.c: 261: if(m_tabMines[ligne+1][colonne+(j)]==2)
  3888  00088E  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  3889  000892  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  3890  000896  0E00               	movlw	0
  3891  000898  0100               	movlb	0	; force () banked
  3892  00089A  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3893  00089C  0E15               	movlw	21
  3894  00089E  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3895  0008A0  ECB3  F011         	call	___wmul	;wreg free
  3896  0008A4  0E60               	movlw	low _m_tabMines
  3897  0008A6  0100               	movlb	0	; force () banked
  3898  0008A8  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  3899  0008AA  0E00               	movlw	high _m_tabMines
  3900  0008AC  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  3901  0008AE  0E15               	movlw	21
  3902  0008B0  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  3903  0008B2  0E00               	movlw	0
  3904  0008B4  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  3905  0008B6  0100               	movlb	0	; force () banked
  3906  0008B8  51B4               	movf	?___wmul& (0+255),w,b
  3907  0008BA  0100               	movlb	0	; force () banked
  3908  0008BC  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  3909  0008BE  0100               	movlb	0	; force () banked
  3910  0008C0  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3911  0008C2  0100               	movlb	0	; force () banked
  3912  0008C4  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  3913  0008C6  0100               	movlb	0	; force () banked
  3914  0008C8  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  3915  0008CA  0100               	movlb	0	; force () banked
  3916  0008CC  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  3917  0008CE  0100               	movlb	0	; force () banked
  3918  0008D0  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3919  0008D2  0100               	movlb	0	; force () banked
  3920  0008D4  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  3921  0008D6  0100               	movlb	0	; force () banked
  3922  0008D8  51C5               	movf	calculToucheCombien@j& (0+255),w,b
  3923  0008DA  0100               	movlb	0	; force () banked
  3924  0008DC  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  3925  0008DE  6ED9               	movwf	fsr2l,c
  3926  0008E0  0100               	movlb	0	; force () banked
  3927  0008E2  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  3928  0008E4  0100               	movlb	0	; force () banked
  3929  0008E6  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  3930  0008E8  6EDA               	movwf	fsr2h,c
  3931  0008EA  0E02               	movlw	2
  3932  0008EC  18DE               	xorwf	postinc2,w,c
  3933  0008EE  A4D8               	btfss	status,2,c
  3934  0008F0  EF7C  F004         	goto	u1381
  3935  0008F4  EF7E  F004         	goto	u1380
  3936  0008F8                     u1381:
  3937  0008F8  EF81  F004         	goto	l125
  3938  0008FC                     u1380:
  3939  0008FC                     
  3940                           ; BSR set to: 0
  3941                           ;main.c: 262: {;main.c: 263: nb_mine++;
  3942  0008FC  0100               	movlb	0	; force () banked
  3943  0008FE  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  3944  000900  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  3945  000902                     l125:
  3946                           
  3947                           ; BSR set to: 0
  3948  000902  0100               	movlb	0	; force () banked
  3949  000904  4BC5               	infsnz	calculToucheCombien@j& (0+255),f,b
  3950  000906  2BC6               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  3951  000908                     
  3952                           ; BSR set to: 0
  3953  000908  0100               	movlb	0	; force () banked
  3954  00090A  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  3955  00090C  EF91  F004         	goto	u1391
  3956  000910  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  3957  000912  E109               	bnz	u1390
  3958  000914  0E02               	movlw	2
  3959  000916  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  3960  000918  A0D8               	btfss	status,0,c
  3961  00091A  EF91  F004         	goto	u1391
  3962  00091E  EF93  F004         	goto	u1390
  3963  000922                     u1391:
  3964  000922  EF47  F004         	goto	l2028
  3965  000926                     u1390:
  3966  000926                     l2034:
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;main.c: 264: };main.c: 265: };main.c: 266: };main.c: 267: if((ligne==0)&&(colonne<20)&&
      +                          (colonne>0))
  3970  000926  0100               	movlb	0	; force () banked
  3971  000928  51BA               	movf	calculToucheCombien@ligne& (0+255),w,b
  3972  00092A  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  3973  00092C  A4D8               	btfss	status,2,c
  3974  00092E  EF9B  F004         	goto	u1401
  3975  000932  EF9D  F004         	goto	u1400
  3976  000936                     u1401:
  3977  000936  EFAF  F005         	goto	l2072
  3978  00093A                     u1400:
  3979  00093A                     
  3980                           ; BSR set to: 0
  3981  00093A  0100               	movlb	0	; force () banked
  3982  00093C  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  3983  00093E  EFAC  F004         	goto	u1410
  3984  000942  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3985  000944  E107               	bnz	u1411
  3986  000946  0E14               	movlw	20
  3987  000948  5DBC               	subwf	calculToucheCombien@colonne& (0+255),w,b
  3988  00094A  B0D8               	btfsc	status,0,c
  3989  00094C  EFAA  F004         	goto	u1411
  3990  000950  EFAC  F004         	goto	u1410
  3991  000954                     u1411:
  3992  000954  EFAF  F005         	goto	l2072
  3993  000958                     u1410:
  3994  000958                     
  3995                           ; BSR set to: 0
  3996  000958  0100               	movlb	0	; force () banked
  3997  00095A  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  3998  00095C  EFB8  F004         	goto	u1421
  3999  000960  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  4000  000962  E108               	bnz	u1420
  4001  000964  05BC               	decf	calculToucheCombien@colonne& (0+255),w,b
  4002  000966  A0D8               	btfss	status,0,c
  4003  000968  EFB8  F004         	goto	u1421
  4004  00096C  EFBA  F004         	goto	u1420
  4005  000970                     u1421:
  4006  000970  EFAF  F005         	goto	l2072
  4007  000974                     u1420:
  4008  000974                     
  4009                           ; BSR set to: 0
  4010                           ;main.c: 268: {;main.c: 269: for(i=-1;i<=1;i++)
  4011  000974  0100               	movlb	0	; force () banked
  4012  000976  69C7               	setf	calculToucheCombien@i& (0+255),b
  4013  000978  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  4014  00097A                     
  4015                           ; BSR set to: 0
  4016  00097A  0100               	movlb	0	; force () banked
  4017  00097C  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  4018  00097E  EFCA  F004         	goto	u1431
  4019  000982  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  4020  000984  E109               	bnz	u1430
  4021  000986  0E02               	movlw	2
  4022  000988  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  4023  00098A  A0D8               	btfss	status,0,c
  4024  00098C  EFCA  F004         	goto	u1431
  4025  000990  EFCC  F004         	goto	u1430
  4026  000994                     u1431:
  4027  000994  EFCE  F004         	goto	l2046
  4028  000998                     u1430:
  4029  000998  EF18  F005         	goto	l2052
  4030  00099C                     l2046:
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;main.c: 270: {;main.c: 271: if(m_tabMines[ligne][colonne+(i)]==2)
  4034  00099C  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  4035  0009A0  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  4036  0009A4  0E00               	movlw	0
  4037  0009A6  0100               	movlb	0	; force () banked
  4038  0009A8  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4039  0009AA  0E15               	movlw	21
  4040  0009AC  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4041  0009AE  ECB3  F011         	call	___wmul	;wreg free
  4042  0009B2  0E60               	movlw	low _m_tabMines
  4043  0009B4  0100               	movlb	0	; force () banked
  4044  0009B6  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  4045  0009B8  0E00               	movlw	high _m_tabMines
  4046  0009BA  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  4047  0009BC  0100               	movlb	0	; force () banked
  4048  0009BE  51B4               	movf	?___wmul& (0+255),w,b
  4049  0009C0  0100               	movlb	0	; force () banked
  4050  0009C2  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  4051  0009C4  0100               	movlb	0	; force () banked
  4052  0009C6  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4053  0009C8  0100               	movlb	0	; force () banked
  4054  0009CA  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  4055  0009CC  0100               	movlb	0	; force () banked
  4056  0009CE  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  4057  0009D0  0100               	movlb	0	; force () banked
  4058  0009D2  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  4059  0009D4  0100               	movlb	0	; force () banked
  4060  0009D6  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  4061  0009D8  0100               	movlb	0	; force () banked
  4062  0009DA  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  4063  0009DC  0100               	movlb	0	; force () banked
  4064  0009DE  51C7               	movf	calculToucheCombien@i& (0+255),w,b
  4065  0009E0  0100               	movlb	0	; force () banked
  4066  0009E2  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  4067  0009E4  6ED9               	movwf	fsr2l,c
  4068  0009E6  0100               	movlb	0	; force () banked
  4069  0009E8  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  4070  0009EA  0100               	movlb	0	; force () banked
  4071  0009EC  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  4072  0009EE  6EDA               	movwf	fsr2h,c
  4073  0009F0  0E02               	movlw	2
  4074  0009F2  18DE               	xorwf	postinc2,w,c
  4075  0009F4  A4D8               	btfss	status,2,c
  4076  0009F6  EFFF  F004         	goto	u1441
  4077  0009FA  EF01  F005         	goto	u1440
  4078  0009FE                     u1441:
  4079  0009FE  EF04  F005         	goto	l129
  4080  000A02                     u1440:
  4081  000A02                     
  4082                           ; BSR set to: 0
  4083                           ;main.c: 272: {;main.c: 273: nb_mine ++;
  4084  000A02  0100               	movlb	0	; force () banked
  4085  000A04  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  4086  000A06  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  4087  000A08                     l129:
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;main.c: 274: };main.c: 275: i++;
  4091  000A08  0100               	movlb	0	; force () banked
  4092  000A0A  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  4093  000A0C  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  4094  000A0E  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  4095  000A10  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  4096  000A12                     
  4097                           ; BSR set to: 0
  4098  000A12  0100               	movlb	0	; force () banked
  4099  000A14  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  4100  000A16  EF16  F005         	goto	u1451
  4101  000A1A  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  4102  000A1C  E109               	bnz	u1450
  4103  000A1E  0E02               	movlw	2
  4104  000A20  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  4105  000A22  A0D8               	btfss	status,0,c
  4106  000A24  EF16  F005         	goto	u1451
  4107  000A28  EF18  F005         	goto	u1450
  4108  000A2C                     u1451:
  4109  000A2C  EFCE  F004         	goto	l2046
  4110  000A30                     u1450:
  4111  000A30                     l2052:
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;main.c: 276: };main.c: 277: for(i=1;i<=1;i++)
  4115  000A30  0E00               	movlw	0
  4116  000A32  0100               	movlb	0	; force () banked
  4117  000A34  6FC8               	movwf	(calculToucheCombien@i+1)& (0+255),b
  4118  000A36  0E01               	movlw	1
  4119  000A38  6FC7               	movwf	calculToucheCombien@i& (0+255),b
  4120  000A3A                     
  4121                           ; BSR set to: 0
  4122  000A3A  0100               	movlb	0	; force () banked
  4123  000A3C  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  4124  000A3E  EF2A  F005         	goto	u1461
  4125  000A42  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  4126  000A44  E109               	bnz	u1460
  4127  000A46  0E02               	movlw	2
  4128  000A48  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  4129  000A4A  A0D8               	btfss	status,0,c
  4130  000A4C  EF2A  F005         	goto	u1461
  4131  000A50  EF2C  F005         	goto	u1460
  4132  000A54                     u1461:
  4133  000A54  EF2E  F005         	goto	l130
  4134  000A58                     u1460:
  4135  000A58  EFAF  F005         	goto	l2072
  4136  000A5C                     l130:
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;main.c: 278: {;main.c: 279: for(j=-1;j<=1;j++)
  4140  000A5C  0100               	movlb	0	; force () banked
  4141  000A5E  69C5               	setf	calculToucheCombien@j& (0+255),b
  4142  000A60  69C6               	setf	(calculToucheCombien@j+1)& (0+255),b
  4143  000A62                     
  4144                           ; BSR set to: 0
  4145  000A62  0100               	movlb	0	; force () banked
  4146  000A64  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  4147  000A66  EF3E  F005         	goto	u1471
  4148  000A6A  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  4149  000A6C  E109               	bnz	u1470
  4150  000A6E  0E02               	movlw	2
  4151  000A70  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  4152  000A72  A0D8               	btfss	status,0,c
  4153  000A74  EF3E  F005         	goto	u1471
  4154  000A78  EF40  F005         	goto	u1470
  4155  000A7C                     u1471:
  4156  000A7C  EF42  F005         	goto	l2062
  4157  000A80                     u1470:
  4158  000A80  EF9D  F005         	goto	l2068
  4159  000A84                     l2062:
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;main.c: 280: {;main.c: 281: if(m_tabMines[ligne+(i)][colonne+(j)]==2)
  4163  000A84  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  4164  000A88  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  4165  000A8C  0E00               	movlw	0
  4166  000A8E  0100               	movlb	0	; force () banked
  4167  000A90  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4168  000A92  0E15               	movlw	21
  4169  000A94  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4170  000A96  ECB3  F011         	call	___wmul	;wreg free
  4171  000A9A  0E60               	movlw	low _m_tabMines
  4172  000A9C  0100               	movlb	0	; force () banked
  4173  000A9E  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  4174  000AA0  0E00               	movlw	high _m_tabMines
  4175  000AA2  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  4176  000AA4  0100               	movlb	0	; force () banked
  4177  000AA6  51B4               	movf	?___wmul& (0+255),w,b
  4178  000AA8  0100               	movlb	0	; force () banked
  4179  000AAA  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  4180  000AAC  0100               	movlb	0	; force () banked
  4181  000AAE  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4182  000AB0  0100               	movlb	0	; force () banked
  4183  000AB2  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  4184  000AB4  C0C7  F0B4         	movff	calculToucheCombien@i,___wmul@multiplier
  4185  000AB8  C0C8  F0B5         	movff	calculToucheCombien@i+1,___wmul@multiplier+1
  4186  000ABC  0E00               	movlw	0
  4187  000ABE  0100               	movlb	0	; force () banked
  4188  000AC0  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4189  000AC2  0E15               	movlw	21
  4190  000AC4  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4191  000AC6  ECB3  F011         	call	___wmul	;wreg free
  4192  000ACA  0100               	movlb	0	; force () banked
  4193  000ACC  51B4               	movf	?___wmul& (0+255),w,b
  4194  000ACE  0100               	movlb	0	; force () banked
  4195  000AD0  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  4196  000AD2  0100               	movlb	0	; force () banked
  4197  000AD4  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4198  000AD6  0100               	movlb	0	; force () banked
  4199  000AD8  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  4200  000ADA  0100               	movlb	0	; force () banked
  4201  000ADC  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  4202  000ADE  0100               	movlb	0	; force () banked
  4203  000AE0  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  4204  000AE2  0100               	movlb	0	; force () banked
  4205  000AE4  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  4206  000AE6  0100               	movlb	0	; force () banked
  4207  000AE8  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  4208  000AEA  0100               	movlb	0	; force () banked
  4209  000AEC  51C5               	movf	calculToucheCombien@j& (0+255),w,b
  4210  000AEE  0100               	movlb	0	; force () banked
  4211  000AF0  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  4212  000AF2  6ED9               	movwf	fsr2l,c
  4213  000AF4  0100               	movlb	0	; force () banked
  4214  000AF6  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  4215  000AF8  0100               	movlb	0	; force () banked
  4216  000AFA  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  4217  000AFC  6EDA               	movwf	fsr2h,c
  4218  000AFE  0E02               	movlw	2
  4219  000B00  18DE               	xorwf	postinc2,w,c
  4220  000B02  A4D8               	btfss	status,2,c
  4221  000B04  EF86  F005         	goto	u1481
  4222  000B08  EF88  F005         	goto	u1480
  4223  000B0C                     u1481:
  4224  000B0C  EF8B  F005         	goto	l134
  4225  000B10                     u1480:
  4226  000B10                     
  4227                           ; BSR set to: 0
  4228                           ;main.c: 282: {;main.c: 283: nb_mine ++;
  4229  000B10  0100               	movlb	0	; force () banked
  4230  000B12  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  4231  000B14  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  4232  000B16                     l134:
  4233                           
  4234                           ; BSR set to: 0
  4235  000B16  0100               	movlb	0	; force () banked
  4236  000B18  4BC5               	infsnz	calculToucheCombien@j& (0+255),f,b
  4237  000B1A  2BC6               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  4238  000B1C                     
  4239                           ; BSR set to: 0
  4240  000B1C  0100               	movlb	0	; force () banked
  4241  000B1E  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  4242  000B20  EF9B  F005         	goto	u1491
  4243  000B24  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  4244  000B26  E109               	bnz	u1490
  4245  000B28  0E02               	movlw	2
  4246  000B2A  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  4247  000B2C  A0D8               	btfss	status,0,c
  4248  000B2E  EF9B  F005         	goto	u1491
  4249  000B32  EF9D  F005         	goto	u1490
  4250  000B36                     u1491:
  4251  000B36  EF42  F005         	goto	l2062
  4252  000B3A                     u1490:
  4253  000B3A                     l2068:
  4254                           
  4255                           ; BSR set to: 0
  4256  000B3A  0100               	movlb	0	; force () banked
  4257  000B3C  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  4258  000B3E  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  4259  000B40                     
  4260                           ; BSR set to: 0
  4261  000B40  0100               	movlb	0	; force () banked
  4262  000B42  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  4263  000B44  EFAD  F005         	goto	u1501
  4264  000B48  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  4265  000B4A  E109               	bnz	u1500
  4266  000B4C  0E02               	movlw	2
  4267  000B4E  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  4268  000B50  A0D8               	btfss	status,0,c
  4269  000B52  EFAD  F005         	goto	u1501
  4270  000B56  EFAF  F005         	goto	u1500
  4271  000B5A                     u1501:
  4272  000B5A  EF2E  F005         	goto	l130
  4273  000B5E                     u1500:
  4274  000B5E                     l2072:
  4275                           
  4276                           ; BSR set to: 0
  4277                           ;main.c: 284: };main.c: 285: };main.c: 286: };main.c: 287: };main.c: 288: if((ligne==0)&
      +                          &(colonne==20))
  4278  000B5E  0100               	movlb	0	; force () banked
  4279  000B60  51BA               	movf	calculToucheCombien@ligne& (0+255),w,b
  4280  000B62  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  4281  000B64  A4D8               	btfss	status,2,c
  4282  000B66  EFB7  F005         	goto	u1511
  4283  000B6A  EFB9  F005         	goto	u1510
  4284  000B6E                     u1511:
  4285  000B6E  EF58  F006         	goto	l2092
  4286  000B72                     u1510:
  4287  000B72                     
  4288                           ; BSR set to: 0
  4289  000B72  0E14               	movlw	20
  4290  000B74  0100               	movlb	0	; force () banked
  4291  000B76  19BC               	xorwf	calculToucheCombien@colonne& (0+255),w,b
  4292  000B78  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  4293  000B7A  A4D8               	btfss	status,2,c
  4294  000B7C  EFC2  F005         	goto	u1521
  4295  000B80  EFC4  F005         	goto	u1520
  4296  000B84                     u1521:
  4297  000B84  EF58  F006         	goto	l2092
  4298  000B88                     u1520:
  4299  000B88                     
  4300                           ; BSR set to: 0
  4301                           ;main.c: 289: {;main.c: 290: if(m_tabMines[ligne][colonne-1]==2)
  4302  000B88  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  4303  000B8C  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  4304  000B90  0E00               	movlw	0
  4305  000B92  0100               	movlb	0	; force () banked
  4306  000B94  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4307  000B96  0E15               	movlw	21
  4308  000B98  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4309  000B9A  ECB3  F011         	call	___wmul	;wreg free
  4310  000B9E  0EFF               	movlw	255
  4311  000BA0  0100               	movlb	0	; force () banked
  4312  000BA2  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  4313  000BA4  0EFF               	movlw	255
  4314  000BA6  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  4315  000BA8  0E60               	movlw	low _m_tabMines
  4316  000BAA  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  4317  000BAC  0E00               	movlw	high _m_tabMines
  4318  000BAE  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  4319  000BB0  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  4320  000BB2  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  4321  000BB4  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  4322  000BB6  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  4323  000BB8  0100               	movlb	0	; force () banked
  4324  000BBA  51B4               	movf	?___wmul& (0+255),w,b
  4325  000BBC  0100               	movlb	0	; force () banked
  4326  000BBE  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  4327  000BC0  0100               	movlb	0	; force () banked
  4328  000BC2  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4329  000BC4  0100               	movlb	0	; force () banked
  4330  000BC6  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  4331  000BC8  0100               	movlb	0	; force () banked
  4332  000BCA  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  4333  000BCC  0100               	movlb	0	; force () banked
  4334  000BCE  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  4335  000BD0  6ED9               	movwf	fsr2l,c
  4336  000BD2  0100               	movlb	0	; force () banked
  4337  000BD4  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  4338  000BD6  0100               	movlb	0	; force () banked
  4339  000BD8  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  4340  000BDA  6EDA               	movwf	fsr2h,c
  4341  000BDC  0E02               	movlw	2
  4342  000BDE  18DE               	xorwf	postinc2,w,c
  4343  000BE0  A4D8               	btfss	status,2,c
  4344  000BE2  EFF5  F005         	goto	u1531
  4345  000BE6  EFF7  F005         	goto	u1530
  4346  000BEA                     u1531:
  4347  000BEA  EFFA  F005         	goto	l2080
  4348  000BEE                     u1530:
  4349  000BEE                     
  4350                           ; BSR set to: 0
  4351                           ;main.c: 291: {;main.c: 292: nb_mine++;
  4352  000BEE  0100               	movlb	0	; force () banked
  4353  000BF0  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  4354  000BF2  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  4355  000BF4                     l2080:
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;main.c: 293: };main.c: 294: for(i=-1;i<1;i++)
  4359  000BF4  0100               	movlb	0	; force () banked
  4360  000BF6  69C7               	setf	calculToucheCombien@i& (0+255),b
  4361  000BF8  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  4362  000BFA                     
  4363                           ; BSR set to: 0
  4364  000BFA  0100               	movlb	0	; force () banked
  4365  000BFC  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  4366  000BFE  EF09  F006         	goto	u1541
  4367  000C02  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  4368  000C04  E108               	bnz	u1540
  4369  000C06  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  4370  000C08  A0D8               	btfss	status,0,c
  4371  000C0A  EF09  F006         	goto	u1541
  4372  000C0E  EF0B  F006         	goto	u1540
  4373  000C12                     u1541:
  4374  000C12  EF0D  F006         	goto	l2086
  4375  000C16                     u1540:
  4376  000C16  EF58  F006         	goto	l2092
  4377  000C1A                     l2086:
  4378                           
  4379                           ; BSR set to: 0
  4380                           ;main.c: 295: {;main.c: 296: if(m_tabMines[ligne+1][colonne+i]==2)
  4381  000C1A  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  4382  000C1E  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  4383  000C22  0E00               	movlw	0
  4384  000C24  0100               	movlb	0	; force () banked
  4385  000C26  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4386  000C28  0E15               	movlw	21
  4387  000C2A  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4388  000C2C  ECB3  F011         	call	___wmul	;wreg free
  4389  000C30  0E60               	movlw	low _m_tabMines
  4390  000C32  0100               	movlb	0	; force () banked
  4391  000C34  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  4392  000C36  0E00               	movlw	high _m_tabMines
  4393  000C38  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  4394  000C3A  0E15               	movlw	21
  4395  000C3C  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  4396  000C3E  0E00               	movlw	0
  4397  000C40  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  4398  000C42  0100               	movlb	0	; force () banked
  4399  000C44  51B4               	movf	?___wmul& (0+255),w,b
  4400  000C46  0100               	movlb	0	; force () banked
  4401  000C48  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  4402  000C4A  0100               	movlb	0	; force () banked
  4403  000C4C  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4404  000C4E  0100               	movlb	0	; force () banked
  4405  000C50  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  4406  000C52  0100               	movlb	0	; force () banked
  4407  000C54  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  4408  000C56  0100               	movlb	0	; force () banked
  4409  000C58  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  4410  000C5A  0100               	movlb	0	; force () banked
  4411  000C5C  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  4412  000C5E  0100               	movlb	0	; force () banked
  4413  000C60  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  4414  000C62  0100               	movlb	0	; force () banked
  4415  000C64  51C7               	movf	calculToucheCombien@i& (0+255),w,b
  4416  000C66  0100               	movlb	0	; force () banked
  4417  000C68  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  4418  000C6A  6ED9               	movwf	fsr2l,c
  4419  000C6C  0100               	movlb	0	; force () banked
  4420  000C6E  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  4421  000C70  0100               	movlb	0	; force () banked
  4422  000C72  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  4423  000C74  6EDA               	movwf	fsr2h,c
  4424  000C76  0E02               	movlw	2
  4425  000C78  18DE               	xorwf	postinc2,w,c
  4426  000C7A  A4D8               	btfss	status,2,c
  4427  000C7C  EF42  F006         	goto	u1551
  4428  000C80  EF44  F006         	goto	u1550
  4429  000C84                     u1551:
  4430  000C84  EF47  F006         	goto	l139
  4431  000C88                     u1550:
  4432  000C88                     
  4433                           ; BSR set to: 0
  4434                           ;main.c: 297: {;main.c: 298: nb_mine++;
  4435  000C88  0100               	movlb	0	; force () banked
  4436  000C8A  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  4437  000C8C  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  4438  000C8E                     l139:
  4439                           
  4440                           ; BSR set to: 0
  4441  000C8E  0100               	movlb	0	; force () banked
  4442  000C90  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  4443  000C92  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  4444  000C94                     
  4445                           ; BSR set to: 0
  4446  000C94  0100               	movlb	0	; force () banked
  4447  000C96  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  4448  000C98  EF56  F006         	goto	u1561
  4449  000C9C  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  4450  000C9E  E108               	bnz	u1560
  4451  000CA0  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  4452  000CA2  A0D8               	btfss	status,0,c
  4453  000CA4  EF56  F006         	goto	u1561
  4454  000CA8  EF58  F006         	goto	u1560
  4455  000CAC                     u1561:
  4456  000CAC  EF0D  F006         	goto	l2086
  4457  000CB0                     u1560:
  4458  000CB0                     l2092:
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;main.c: 299: };main.c: 300: };main.c: 301: };main.c: 302: if((ligne==3)&&(colonne==0))
  4462  000CB0  0E03               	movlw	3
  4463  000CB2  0100               	movlb	0	; force () banked
  4464  000CB4  19BA               	xorwf	calculToucheCombien@ligne& (0+255),w,b
  4465  000CB6  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  4466  000CB8  A4D8               	btfss	status,2,c
  4467  000CBA  EF61  F006         	goto	u1571
  4468  000CBE  EF63  F006         	goto	u1570
  4469  000CC2                     u1571:
  4470  000CC2  EF0C  F007         	goto	l2112
  4471  000CC6                     u1570:
  4472  000CC6                     
  4473                           ; BSR set to: 0
  4474  000CC6  0100               	movlb	0	; force () banked
  4475  000CC8  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  4476  000CCA  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  4477  000CCC  A4D8               	btfss	status,2,c
  4478  000CCE  EF6B  F006         	goto	u1581
  4479  000CD2  EF6D  F006         	goto	u1580
  4480  000CD6                     u1581:
  4481  000CD6  EF0C  F007         	goto	l2112
  4482  000CDA                     u1580:
  4483  000CDA                     
  4484                           ; BSR set to: 0
  4485                           ;main.c: 303: {;main.c: 304: if(m_tabMines[ligne-1][colonne]==2)
  4486  000CDA  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  4487  000CDE  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  4488  000CE2  0E00               	movlw	0
  4489  000CE4  0100               	movlb	0	; force () banked
  4490  000CE6  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4491  000CE8  0E15               	movlw	21
  4492  000CEA  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4493  000CEC  ECB3  F011         	call	___wmul	;wreg free
  4494  000CF0  0EEB               	movlw	235
  4495  000CF2  0100               	movlb	0	; force () banked
  4496  000CF4  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  4497  000CF6  0EFF               	movlw	255
  4498  000CF8  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  4499  000CFA  0E60               	movlw	low _m_tabMines
  4500  000CFC  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  4501  000CFE  0E00               	movlw	high _m_tabMines
  4502  000D00  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  4503  000D02  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  4504  000D04  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  4505  000D06  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  4506  000D08  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  4507  000D0A  0100               	movlb	0	; force () banked
  4508  000D0C  51B4               	movf	?___wmul& (0+255),w,b
  4509  000D0E  0100               	movlb	0	; force () banked
  4510  000D10  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  4511  000D12  0100               	movlb	0	; force () banked
  4512  000D14  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4513  000D16  0100               	movlb	0	; force () banked
  4514  000D18  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  4515  000D1A  0100               	movlb	0	; force () banked
  4516  000D1C  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  4517  000D1E  0100               	movlb	0	; force () banked
  4518  000D20  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  4519  000D22  6ED9               	movwf	fsr2l,c
  4520  000D24  0100               	movlb	0	; force () banked
  4521  000D26  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  4522  000D28  0100               	movlb	0	; force () banked
  4523  000D2A  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  4524  000D2C  6EDA               	movwf	fsr2h,c
  4525  000D2E  0E02               	movlw	2
  4526  000D30  18DE               	xorwf	postinc2,w,c
  4527  000D32  A4D8               	btfss	status,2,c
  4528  000D34  EF9E  F006         	goto	u1591
  4529  000D38  EFA0  F006         	goto	u1590
  4530  000D3C                     u1591:
  4531  000D3C  EFA3  F006         	goto	l2100
  4532  000D40                     u1590:
  4533  000D40                     
  4534                           ; BSR set to: 0
  4535                           ;main.c: 305: {;main.c: 306: nb_mine++;
  4536  000D40  0100               	movlb	0	; force () banked
  4537  000D42  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  4538  000D44  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  4539  000D46                     l2100:
  4540                           
  4541                           ; BSR set to: 0
  4542                           ;main.c: 307: };main.c: 308: for(i=-1;i<=0;i++)
  4543  000D46  0100               	movlb	0	; force () banked
  4544  000D48  69C7               	setf	calculToucheCombien@i& (0+255),b
  4545  000D4A  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  4546  000D4C                     
  4547                           ; BSR set to: 0
  4548  000D4C  0100               	movlb	0	; force () banked
  4549  000D4E  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  4550  000D50  EFB2  F006         	goto	u1601
  4551  000D54  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  4552  000D56  E108               	bnz	u1600
  4553  000D58  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  4554  000D5A  A0D8               	btfss	status,0,c
  4555  000D5C  EFB2  F006         	goto	u1601
  4556  000D60  EFB4  F006         	goto	u1600
  4557  000D64                     u1601:
  4558  000D64  EFB6  F006         	goto	l2106
  4559  000D68                     u1600:
  4560  000D68  EF0C  F007         	goto	l2112
  4561  000D6C                     l2106:
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;main.c: 309: {;main.c: 310: if(m_tabMines[ligne+(i)][colonne+1]==2)
  4565  000D6C  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  4566  000D70  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  4567  000D74  0E00               	movlw	0
  4568  000D76  0100               	movlb	0	; force () banked
  4569  000D78  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4570  000D7A  0E15               	movlw	21
  4571  000D7C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4572  000D7E  ECB3  F011         	call	___wmul	;wreg free
  4573  000D82  0E60               	movlw	low _m_tabMines
  4574  000D84  0100               	movlb	0	; force () banked
  4575  000D86  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  4576  000D88  0E00               	movlw	high _m_tabMines
  4577  000D8A  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  4578  000D8C  0E01               	movlw	1
  4579  000D8E  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  4580  000D90  0E00               	movlw	0
  4581  000D92  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  4582  000D94  0100               	movlb	0	; force () banked
  4583  000D96  51B4               	movf	?___wmul& (0+255),w,b
  4584  000D98  0100               	movlb	0	; force () banked
  4585  000D9A  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  4586  000D9C  0100               	movlb	0	; force () banked
  4587  000D9E  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4588  000DA0  0100               	movlb	0	; force () banked
  4589  000DA2  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  4590  000DA4  C0C7  F0B4         	movff	calculToucheCombien@i,___wmul@multiplier
  4591  000DA8  C0C8  F0B5         	movff	calculToucheCombien@i+1,___wmul@multiplier+1
  4592  000DAC  0E00               	movlw	0
  4593  000DAE  0100               	movlb	0	; force () banked
  4594  000DB0  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4595  000DB2  0E15               	movlw	21
  4596  000DB4  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4597  000DB6  ECB3  F011         	call	___wmul	;wreg free
  4598  000DBA  0100               	movlb	0	; force () banked
  4599  000DBC  51B4               	movf	?___wmul& (0+255),w,b
  4600  000DBE  0100               	movlb	0	; force () banked
  4601  000DC0  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  4602  000DC2  0100               	movlb	0	; force () banked
  4603  000DC4  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4604  000DC6  0100               	movlb	0	; force () banked
  4605  000DC8  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  4606  000DCA  0100               	movlb	0	; force () banked
  4607  000DCC  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  4608  000DCE  0100               	movlb	0	; force () banked
  4609  000DD0  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  4610  000DD2  6ED9               	movwf	fsr2l,c
  4611  000DD4  0100               	movlb	0	; force () banked
  4612  000DD6  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  4613  000DD8  0100               	movlb	0	; force () banked
  4614  000DDA  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  4615  000DDC  6EDA               	movwf	fsr2h,c
  4616  000DDE  0E02               	movlw	2
  4617  000DE0  18DE               	xorwf	postinc2,w,c
  4618  000DE2  A4D8               	btfss	status,2,c
  4619  000DE4  EFF6  F006         	goto	u1611
  4620  000DE8  EFF8  F006         	goto	u1610
  4621  000DEC                     u1611:
  4622  000DEC  EFFB  F006         	goto	l144
  4623  000DF0                     u1610:
  4624  000DF0                     
  4625                           ; BSR set to: 0
  4626                           ;main.c: 311: {;main.c: 312: nb_mine++;
  4627  000DF0  0100               	movlb	0	; force () banked
  4628  000DF2  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  4629  000DF4  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  4630  000DF6                     l144:
  4631                           
  4632                           ; BSR set to: 0
  4633  000DF6  0100               	movlb	0	; force () banked
  4634  000DF8  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  4635  000DFA  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  4636  000DFC                     
  4637                           ; BSR set to: 0
  4638  000DFC  0100               	movlb	0	; force () banked
  4639  000DFE  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  4640  000E00  EF0A  F007         	goto	u1621
  4641  000E04  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  4642  000E06  E108               	bnz	u1620
  4643  000E08  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  4644  000E0A  A0D8               	btfss	status,0,c
  4645  000E0C  EF0A  F007         	goto	u1621
  4646  000E10  EF0C  F007         	goto	u1620
  4647  000E14                     u1621:
  4648  000E14  EFB6  F006         	goto	l2106
  4649  000E18                     u1620:
  4650  000E18                     l2112:
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;main.c: 313: };main.c: 314: };main.c: 315: };main.c: 316: if((ligne==3)&&(colonne<20)&&
      +                          (colonne>0))
  4654  000E18  0E03               	movlw	3
  4655  000E1A  0100               	movlb	0	; force () banked
  4656  000E1C  19BA               	xorwf	calculToucheCombien@ligne& (0+255),w,b
  4657  000E1E  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  4658  000E20  A4D8               	btfss	status,2,c
  4659  000E22  EF15  F007         	goto	u1631
  4660  000E26  EF17  F007         	goto	u1630
  4661  000E2A                     u1631:
  4662  000E2A  EFF6  F007         	goto	l2140
  4663  000E2E                     u1630:
  4664  000E2E                     
  4665                           ; BSR set to: 0
  4666  000E2E  0100               	movlb	0	; force () banked
  4667  000E30  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  4668  000E32  EF26  F007         	goto	u1640
  4669  000E36  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  4670  000E38  E107               	bnz	u1641
  4671  000E3A  0E14               	movlw	20
  4672  000E3C  5DBC               	subwf	calculToucheCombien@colonne& (0+255),w,b
  4673  000E3E  B0D8               	btfsc	status,0,c
  4674  000E40  EF24  F007         	goto	u1641
  4675  000E44  EF26  F007         	goto	u1640
  4676  000E48                     u1641:
  4677  000E48  EFF6  F007         	goto	l2140
  4678  000E4C                     u1640:
  4679  000E4C                     
  4680                           ; BSR set to: 0
  4681  000E4C  0100               	movlb	0	; force () banked
  4682  000E4E  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  4683  000E50  EF32  F007         	goto	u1651
  4684  000E54  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  4685  000E56  E108               	bnz	u1650
  4686  000E58  05BC               	decf	calculToucheCombien@colonne& (0+255),w,b
  4687  000E5A  A0D8               	btfss	status,0,c
  4688  000E5C  EF32  F007         	goto	u1651
  4689  000E60  EF34  F007         	goto	u1650
  4690  000E64                     u1651:
  4691  000E64  EFF6  F007         	goto	l2140
  4692  000E68                     u1650:
  4693  000E68                     
  4694                           ; BSR set to: 0
  4695                           ;main.c: 317: {;main.c: 318: for(j=-1;j<=1;j++)
  4696  000E68  0100               	movlb	0	; force () banked
  4697  000E6A  69C5               	setf	calculToucheCombien@j& (0+255),b
  4698  000E6C  69C6               	setf	(calculToucheCombien@j+1)& (0+255),b
  4699  000E6E                     
  4700                           ; BSR set to: 0
  4701  000E6E  0100               	movlb	0	; force () banked
  4702  000E70  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  4703  000E72  EF44  F007         	goto	u1661
  4704  000E76  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  4705  000E78  E109               	bnz	u1660
  4706  000E7A  0E02               	movlw	2
  4707  000E7C  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  4708  000E7E  A0D8               	btfss	status,0,c
  4709  000E80  EF44  F007         	goto	u1661
  4710  000E84  EF46  F007         	goto	u1660
  4711  000E88                     u1661:
  4712  000E88  EF48  F007         	goto	l2124
  4713  000E8C                     u1660:
  4714  000E8C  EF98  F007         	goto	l147
  4715  000E90                     l2124:
  4716                           
  4717                           ; BSR set to: 0
  4718                           ;main.c: 319: {;main.c: 320: if(m_tabMines[ligne-1][(colonne+j)]== 2)
  4719  000E90  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  4720  000E94  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  4721  000E98  0E00               	movlw	0
  4722  000E9A  0100               	movlb	0	; force () banked
  4723  000E9C  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4724  000E9E  0E15               	movlw	21
  4725  000EA0  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4726  000EA2  ECB3  F011         	call	___wmul	;wreg free
  4727  000EA6  0EEB               	movlw	235
  4728  000EA8  0100               	movlb	0	; force () banked
  4729  000EAA  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  4730  000EAC  0EFF               	movlw	255
  4731  000EAE  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  4732  000EB0  0E60               	movlw	low _m_tabMines
  4733  000EB2  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  4734  000EB4  0E00               	movlw	high _m_tabMines
  4735  000EB6  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  4736  000EB8  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  4737  000EBA  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  4738  000EBC  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  4739  000EBE  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  4740  000EC0  0100               	movlb	0	; force () banked
  4741  000EC2  51B4               	movf	?___wmul& (0+255),w,b
  4742  000EC4  0100               	movlb	0	; force () banked
  4743  000EC6  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  4744  000EC8  0100               	movlb	0	; force () banked
  4745  000ECA  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4746  000ECC  0100               	movlb	0	; force () banked
  4747  000ECE  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  4748  000ED0  0100               	movlb	0	; force () banked
  4749  000ED2  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  4750  000ED4  0100               	movlb	0	; force () banked
  4751  000ED6  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  4752  000ED8  0100               	movlb	0	; force () banked
  4753  000EDA  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  4754  000EDC  0100               	movlb	0	; force () banked
  4755  000EDE  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  4756  000EE0  0100               	movlb	0	; force () banked
  4757  000EE2  51C5               	movf	calculToucheCombien@j& (0+255),w,b
  4758  000EE4  0100               	movlb	0	; force () banked
  4759  000EE6  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  4760  000EE8  6ED9               	movwf	fsr2l,c
  4761  000EEA  0100               	movlb	0	; force () banked
  4762  000EEC  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  4763  000EEE  0100               	movlb	0	; force () banked
  4764  000EF0  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  4765  000EF2  6EDA               	movwf	fsr2h,c
  4766  000EF4  0E02               	movlw	2
  4767  000EF6  18DE               	xorwf	postinc2,w,c
  4768  000EF8  A4D8               	btfss	status,2,c
  4769  000EFA  EF81  F007         	goto	u1671
  4770  000EFE  EF83  F007         	goto	u1670
  4771  000F02                     u1671:
  4772  000F02  EF86  F007         	goto	l148
  4773  000F06                     u1670:
  4774  000F06                     
  4775                           ; BSR set to: 0
  4776                           ;main.c: 321: {;main.c: 322: nb_mine++;
  4777  000F06  0100               	movlb	0	; force () banked
  4778  000F08  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  4779  000F0A  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  4780  000F0C                     l148:
  4781                           
  4782                           ; BSR set to: 0
  4783  000F0C  0100               	movlb	0	; force () banked
  4784  000F0E  4BC5               	infsnz	calculToucheCombien@j& (0+255),f,b
  4785  000F10  2BC6               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  4786  000F12                     
  4787                           ; BSR set to: 0
  4788  000F12  0100               	movlb	0	; force () banked
  4789  000F14  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  4790  000F16  EF96  F007         	goto	u1681
  4791  000F1A  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  4792  000F1C  E109               	bnz	u1680
  4793  000F1E  0E02               	movlw	2
  4794  000F20  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  4795  000F22  A0D8               	btfss	status,0,c
  4796  000F24  EF96  F007         	goto	u1681
  4797  000F28  EF98  F007         	goto	u1680
  4798  000F2C                     u1681:
  4799  000F2C  EF48  F007         	goto	l2124
  4800  000F30                     u1680:
  4801  000F30                     l147:
  4802                           
  4803                           ; BSR set to: 0
  4804                           ;main.c: 323: };main.c: 324: };main.c: 325: for(i=-1;i<=1;i++)
  4805  000F30  0100               	movlb	0	; force () banked
  4806  000F32  69C7               	setf	calculToucheCombien@i& (0+255),b
  4807  000F34  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  4808  000F36                     
  4809                           ; BSR set to: 0
  4810  000F36  0100               	movlb	0	; force () banked
  4811  000F38  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  4812  000F3A  EFA8  F007         	goto	u1691
  4813  000F3E  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  4814  000F40  E109               	bnz	u1690
  4815  000F42  0E02               	movlw	2
  4816  000F44  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  4817  000F46  A0D8               	btfss	status,0,c
  4818  000F48  EFA8  F007         	goto	u1691
  4819  000F4C  EFAA  F007         	goto	u1690
  4820  000F50                     u1691:
  4821  000F50  EFAC  F007         	goto	l2134
  4822  000F54                     u1690:
  4823  000F54  EFF6  F007         	goto	l2140
  4824  000F58                     l2134:
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;main.c: 326: {;main.c: 327: if(m_tabMines[ligne][(colonne+i)]==2)
  4828  000F58  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  4829  000F5C  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  4830  000F60  0E00               	movlw	0
  4831  000F62  0100               	movlb	0	; force () banked
  4832  000F64  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4833  000F66  0E15               	movlw	21
  4834  000F68  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4835  000F6A  ECB3  F011         	call	___wmul	;wreg free
  4836  000F6E  0E60               	movlw	low _m_tabMines
  4837  000F70  0100               	movlb	0	; force () banked
  4838  000F72  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  4839  000F74  0E00               	movlw	high _m_tabMines
  4840  000F76  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  4841  000F78  0100               	movlb	0	; force () banked
  4842  000F7A  51B4               	movf	?___wmul& (0+255),w,b
  4843  000F7C  0100               	movlb	0	; force () banked
  4844  000F7E  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  4845  000F80  0100               	movlb	0	; force () banked
  4846  000F82  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4847  000F84  0100               	movlb	0	; force () banked
  4848  000F86  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  4849  000F88  0100               	movlb	0	; force () banked
  4850  000F8A  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  4851  000F8C  0100               	movlb	0	; force () banked
  4852  000F8E  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  4853  000F90  0100               	movlb	0	; force () banked
  4854  000F92  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  4855  000F94  0100               	movlb	0	; force () banked
  4856  000F96  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  4857  000F98  0100               	movlb	0	; force () banked
  4858  000F9A  51C7               	movf	calculToucheCombien@i& (0+255),w,b
  4859  000F9C  0100               	movlb	0	; force () banked
  4860  000F9E  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  4861  000FA0  6ED9               	movwf	fsr2l,c
  4862  000FA2  0100               	movlb	0	; force () banked
  4863  000FA4  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  4864  000FA6  0100               	movlb	0	; force () banked
  4865  000FA8  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  4866  000FAA  6EDA               	movwf	fsr2h,c
  4867  000FAC  0E02               	movlw	2
  4868  000FAE  18DE               	xorwf	postinc2,w,c
  4869  000FB0  A4D8               	btfss	status,2,c
  4870  000FB2  EFDD  F007         	goto	u1701
  4871  000FB6  EFDF  F007         	goto	u1700
  4872  000FBA                     u1701:
  4873  000FBA  EFE2  F007         	goto	l151
  4874  000FBE                     u1700:
  4875  000FBE                     
  4876                           ; BSR set to: 0
  4877                           ;main.c: 328: {;main.c: 329: nb_mine++;
  4878  000FBE  0100               	movlb	0	; force () banked
  4879  000FC0  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  4880  000FC2  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  4881  000FC4                     l151:
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;main.c: 330: };main.c: 331: i++;
  4885  000FC4  0100               	movlb	0	; force () banked
  4886  000FC6  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  4887  000FC8  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  4888  000FCA  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  4889  000FCC  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  4890  000FCE                     
  4891                           ; BSR set to: 0
  4892  000FCE  0100               	movlb	0	; force () banked
  4893  000FD0  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  4894  000FD2  EFF4  F007         	goto	u1711
  4895  000FD6  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  4896  000FD8  E109               	bnz	u1710
  4897  000FDA  0E02               	movlw	2
  4898  000FDC  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  4899  000FDE  A0D8               	btfss	status,0,c
  4900  000FE0  EFF4  F007         	goto	u1711
  4901  000FE4  EFF6  F007         	goto	u1710
  4902  000FE8                     u1711:
  4903  000FE8  EFAC  F007         	goto	l2134
  4904  000FEC                     u1710:
  4905  000FEC                     l2140:
  4906                           
  4907                           ; BSR set to: 0
  4908                           ;main.c: 332: };main.c: 333: };main.c: 334: if((ligne==3)&&(colonne==20))
  4909  000FEC  0E03               	movlw	3
  4910  000FEE  0100               	movlb	0	; force () banked
  4911  000FF0  19BA               	xorwf	calculToucheCombien@ligne& (0+255),w,b
  4912  000FF2  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  4913  000FF4  A4D8               	btfss	status,2,c
  4914  000FF6  EFFF  F007         	goto	u1721
  4915  000FFA  EF01  F008         	goto	u1720
  4916  000FFE                     u1721:
  4917  000FFE  EFA4  F008         	goto	l2160
  4918  001002                     u1720:
  4919  001002                     
  4920                           ; BSR set to: 0
  4921  001002  0E14               	movlw	20
  4922  001004  0100               	movlb	0	; force () banked
  4923  001006  19BC               	xorwf	calculToucheCombien@colonne& (0+255),w,b
  4924  001008  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  4925  00100A  A4D8               	btfss	status,2,c
  4926  00100C  EF0A  F008         	goto	u1731
  4927  001010  EF0C  F008         	goto	u1730
  4928  001014                     u1731:
  4929  001014  EFA4  F008         	goto	l2160
  4930  001018                     u1730:
  4931  001018                     
  4932                           ; BSR set to: 0
  4933                           ;main.c: 335: {;main.c: 336: for(i=-1;i<1;i++)
  4934  001018  0100               	movlb	0	; force () banked
  4935  00101A  69C7               	setf	calculToucheCombien@i& (0+255),b
  4936  00101C  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  4937  00101E                     
  4938                           ; BSR set to: 0
  4939  00101E  0100               	movlb	0	; force () banked
  4940  001020  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  4941  001022  EF1B  F008         	goto	u1741
  4942  001026  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  4943  001028  E108               	bnz	u1740
  4944  00102A  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  4945  00102C  A0D8               	btfss	status,0,c
  4946  00102E  EF1B  F008         	goto	u1741
  4947  001032  EF1D  F008         	goto	u1740
  4948  001036                     u1741:
  4949  001036  EF1F  F008         	goto	l2150
  4950  00103A                     u1740:
  4951  00103A  EF6E  F008         	goto	l2156
  4952  00103E                     l2150:
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;main.c: 337: {;main.c: 338: if(m_tabMines[ligne-1][colonne+i]== 2)
  4956  00103E  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  4957  001042  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  4958  001046  0E00               	movlw	0
  4959  001048  0100               	movlb	0	; force () banked
  4960  00104A  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4961  00104C  0E15               	movlw	21
  4962  00104E  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4963  001050  ECB3  F011         	call	___wmul	;wreg free
  4964  001054  0EEB               	movlw	235
  4965  001056  0100               	movlb	0	; force () banked
  4966  001058  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  4967  00105A  0EFF               	movlw	255
  4968  00105C  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  4969  00105E  0E60               	movlw	low _m_tabMines
  4970  001060  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  4971  001062  0E00               	movlw	high _m_tabMines
  4972  001064  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  4973  001066  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  4974  001068  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  4975  00106A  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  4976  00106C  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  4977  00106E  0100               	movlb	0	; force () banked
  4978  001070  51B4               	movf	?___wmul& (0+255),w,b
  4979  001072  0100               	movlb	0	; force () banked
  4980  001074  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  4981  001076  0100               	movlb	0	; force () banked
  4982  001078  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4983  00107A  0100               	movlb	0	; force () banked
  4984  00107C  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  4985  00107E  0100               	movlb	0	; force () banked
  4986  001080  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  4987  001082  0100               	movlb	0	; force () banked
  4988  001084  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  4989  001086  0100               	movlb	0	; force () banked
  4990  001088  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  4991  00108A  0100               	movlb	0	; force () banked
  4992  00108C  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  4993  00108E  0100               	movlb	0	; force () banked
  4994  001090  51C7               	movf	calculToucheCombien@i& (0+255),w,b
  4995  001092  0100               	movlb	0	; force () banked
  4996  001094  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  4997  001096  6ED9               	movwf	fsr2l,c
  4998  001098  0100               	movlb	0	; force () banked
  4999  00109A  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  5000  00109C  0100               	movlb	0	; force () banked
  5001  00109E  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  5002  0010A0  6EDA               	movwf	fsr2h,c
  5003  0010A2  0E02               	movlw	2
  5004  0010A4  18DE               	xorwf	postinc2,w,c
  5005  0010A6  A4D8               	btfss	status,2,c
  5006  0010A8  EF58  F008         	goto	u1751
  5007  0010AC  EF5A  F008         	goto	u1750
  5008  0010B0                     u1751:
  5009  0010B0  EF5D  F008         	goto	l155
  5010  0010B4                     u1750:
  5011  0010B4                     
  5012                           ; BSR set to: 0
  5013                           ;main.c: 339: {;main.c: 340: nb_mine++;
  5014  0010B4  0100               	movlb	0	; force () banked
  5015  0010B6  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  5016  0010B8  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  5017  0010BA                     l155:
  5018                           
  5019                           ; BSR set to: 0
  5020  0010BA  0100               	movlb	0	; force () banked
  5021  0010BC  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  5022  0010BE  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  5023  0010C0                     
  5024                           ; BSR set to: 0
  5025  0010C0  0100               	movlb	0	; force () banked
  5026  0010C2  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  5027  0010C4  EF6C  F008         	goto	u1761
  5028  0010C8  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  5029  0010CA  E108               	bnz	u1760
  5030  0010CC  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  5031  0010CE  A0D8               	btfss	status,0,c
  5032  0010D0  EF6C  F008         	goto	u1761
  5033  0010D4  EF6E  F008         	goto	u1760
  5034  0010D8                     u1761:
  5035  0010D8  EF1F  F008         	goto	l2150
  5036  0010DC                     u1760:
  5037  0010DC                     l2156:
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;main.c: 341: };main.c: 342: };main.c: 343: if(m_tabMines[ligne][colonne-1]==2)
  5041  0010DC  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  5042  0010E0  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  5043  0010E4  0E00               	movlw	0
  5044  0010E6  0100               	movlb	0	; force () banked
  5045  0010E8  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5046  0010EA  0E15               	movlw	21
  5047  0010EC  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  5048  0010EE  ECB3  F011         	call	___wmul	;wreg free
  5049  0010F2  0EFF               	movlw	255
  5050  0010F4  0100               	movlb	0	; force () banked
  5051  0010F6  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  5052  0010F8  0EFF               	movlw	255
  5053  0010FA  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  5054  0010FC  0E60               	movlw	low _m_tabMines
  5055  0010FE  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  5056  001100  0E00               	movlw	high _m_tabMines
  5057  001102  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  5058  001104  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  5059  001106  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  5060  001108  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  5061  00110A  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  5062  00110C  0100               	movlb	0	; force () banked
  5063  00110E  51B4               	movf	?___wmul& (0+255),w,b
  5064  001110  0100               	movlb	0	; force () banked
  5065  001112  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  5066  001114  0100               	movlb	0	; force () banked
  5067  001116  51B5               	movf	(?___wmul+1)& (0+255),w,b
  5068  001118  0100               	movlb	0	; force () banked
  5069  00111A  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  5070  00111C  0100               	movlb	0	; force () banked
  5071  00111E  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  5072  001120  0100               	movlb	0	; force () banked
  5073  001122  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  5074  001124  6ED9               	movwf	fsr2l,c
  5075  001126  0100               	movlb	0	; force () banked
  5076  001128  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  5077  00112A  0100               	movlb	0	; force () banked
  5078  00112C  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  5079  00112E  6EDA               	movwf	fsr2h,c
  5080  001130  0E02               	movlw	2
  5081  001132  18DE               	xorwf	postinc2,w,c
  5082  001134  A4D8               	btfss	status,2,c
  5083  001136  EF9F  F008         	goto	u1771
  5084  00113A  EFA1  F008         	goto	u1770
  5085  00113E                     u1771:
  5086  00113E  EFA4  F008         	goto	l2160
  5087  001142                     u1770:
  5088  001142                     
  5089                           ; BSR set to: 0
  5090                           ;main.c: 344: {;main.c: 345: nb_mine++;
  5091  001142  0100               	movlb	0	; force () banked
  5092  001144  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  5093  001146  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  5094  001148                     l2160:
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;main.c: 346: };main.c: 347: };main.c: 348: return nb_mine;
  5098  001148  0100               	movlb	0	; force () banked
  5099  00114A  51C3               	movf	calculToucheCombien@nb_mine& (0+255),w,b
  5100  00114C                     
  5101                           ; BSR set to: 0
  5102  00114C  0012               	return		;funcret
  5103  00114E                     __end_of_calculToucheCombien:
  5104                           	opt callstack 0
  5105                           
  5106 ;; *************** function _afficheTabVue *****************
  5107 ;; Defined at:
  5108 ;;		line 496 in file "main.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;		None
  5111 ;; Auto vars:     Size  Location     Type
  5112 ;;  i               2   17[BANK0 ] int 
  5113 ;; Return value:  Size  Location     Type
  5114 ;;                  1    wreg      void 
  5115 ;; Registers used:
  5116 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5117 ;; Tracked objects:
  5118 ;;		On entry : 0/0
  5119 ;;		On exit  : 0/0
  5120 ;;		Unchanged: 0/0
  5121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5122 ;;      Params:         0       0       0       0       0       0       0
  5123 ;;      Locals:         0       2       0       0       0       0       0
  5124 ;;      Temps:          0       2       0       0       0       0       0
  5125 ;;      Totals:         0       4       0       0       0       0       0
  5126 ;;Total ram usage:        4 bytes
  5127 ;; Hardware stack levels used:    1
  5128 ;; Hardware stack levels required when called:    5
  5129 ;; This function calls:
  5130 ;;		___wmul
  5131 ;;		_lcd_gotoXY
  5132 ;;		_lcd_putMessage
  5133 ;; This function is called by:
  5134 ;;		_main
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text20
  5139  001D68                     __ptext20:
  5140                           	opt callstack 0
  5141  001D68                     _afficheTabVue:
  5142                           	opt callstack 25
  5143  001D68                     
  5144                           ;main.c: 498: int i=0;
  5145  001D68  0E00               	movlw	0
  5146  001D6A  0100               	movlb	0	; force () banked
  5147  001D6C  6FC6               	movwf	(afficheTabVue@i+1)& (0+255),b
  5148  001D6E  0E00               	movlw	0
  5149  001D70  6FC5               	movwf	afficheTabVue@i& (0+255),b
  5150                           
  5151                           ;main.c: 499: for(i=0;i<4;i++)
  5152  001D72  0E00               	movlw	0
  5153  001D74  6FC6               	movwf	(afficheTabVue@i+1)& (0+255),b
  5154  001D76  0E00               	movlw	0
  5155  001D78  6FC5               	movwf	afficheTabVue@i& (0+255),b
  5156  001D7A                     
  5157                           ; BSR set to: 0
  5158  001D7A  0100               	movlb	0	; force () banked
  5159  001D7C  BFC6               	btfsc	(afficheTabVue@i+1)& (0+255),7,b
  5160  001D7E  EFCA  F00E         	goto	u2201
  5161  001D82  51C6               	movf	(afficheTabVue@i+1)& (0+255),w,b
  5162  001D84  E109               	bnz	u2200
  5163  001D86  0E04               	movlw	4
  5164  001D88  5DC5               	subwf	afficheTabVue@i& (0+255),w,b
  5165  001D8A  A0D8               	btfss	status,0,c
  5166  001D8C  EFCA  F00E         	goto	u2201
  5167  001D90  EFCC  F00E         	goto	u2200
  5168  001D94                     u2201:
  5169  001D94  EFCE  F00E         	goto	l2458
  5170  001D98                     u2200:
  5171  001D98  EF08  F00F         	goto	l193
  5172  001D9C                     l2458:
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;main.c: 500: {;main.c: 501: lcd_gotoXY( 1, i+1);
  5176  001D9C  0100               	movlb	0	; force () banked
  5177  001D9E  29C5               	incf	afficheTabVue@i& (0+255),w,b
  5178  001DA0  0100               	movlb	0	; force () banked
  5179  001DA2  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  5180  001DA4  0E01               	movlw	1
  5181  001DA6  ECAC  F00F         	call	_lcd_gotoXY
  5182  001DAA                     
  5183                           ;main.c: 502: lcd_putMessage(m_tabMines[i]);
  5184  001DAA  C0C5  F0B4         	movff	afficheTabVue@i,___wmul@multiplier
  5185  001DAE  C0C6  F0B5         	movff	afficheTabVue@i+1,___wmul@multiplier+1
  5186  001DB2  0E00               	movlw	0
  5187  001DB4  0100               	movlb	0	; force () banked
  5188  001DB6  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5189  001DB8  0E15               	movlw	21
  5190  001DBA  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  5191  001DBC  ECB3  F011         	call	___wmul	;wreg free
  5192  001DC0  0E60               	movlw	low _m_tabMines
  5193  001DC2  0100               	movlb	0	; force () banked
  5194  001DC4  25B4               	addwf	?___wmul& (0+255),w,b
  5195  001DC6  0100               	movlb	0	; force () banked
  5196  001DC8  6FC3               	movwf	??_afficheTabVue& (0+255),b
  5197  001DCA  0E00               	movlw	high _m_tabMines
  5198  001DCC  0100               	movlb	0	; force () banked
  5199  001DCE  21B5               	addwfc	(?___wmul+1)& (0+255),w,b
  5200  001DD0  0100               	movlb	0	; force () banked
  5201  001DD2  6FC4               	movwf	(??_afficheTabVue+1)& (0+255),b
  5202  001DD4  C0C3  F0BA         	movff	??_afficheTabVue,lcd_putMessage@chaine
  5203  001DD8  C0C4  F0BB         	movff	??_afficheTabVue+1,lcd_putMessage@chaine+1
  5204  001DDC  0100               	movlb	0	; force () banked
  5205  001DDE  51BA               	movf	lcd_putMessage@chaine& (0+255),w,b
  5206  001DE0  11BB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  5207  001DE2  A4D8               	btfss	status,2,c
  5208  001DE4  0E20               	movlw	32
  5209  001DE6  6FBC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  5210  001DE8  EC01  F00E         	call	_lcd_putMessage	;wreg free
  5211  001DEC  0100               	movlb	0	; force () banked
  5212  001DEE  4BC5               	infsnz	afficheTabVue@i& (0+255),f,b
  5213  001DF0  2BC6               	incf	(afficheTabVue@i+1)& (0+255),f,b
  5214  001DF2                     
  5215                           ; BSR set to: 0
  5216  001DF2  0100               	movlb	0	; force () banked
  5217  001DF4  BFC6               	btfsc	(afficheTabVue@i+1)& (0+255),7,b
  5218  001DF6  EF06  F00F         	goto	u2211
  5219  001DFA  51C6               	movf	(afficheTabVue@i+1)& (0+255),w,b
  5220  001DFC  E109               	bnz	u2210
  5221  001DFE  0E04               	movlw	4
  5222  001E00  5DC5               	subwf	afficheTabVue@i& (0+255),w,b
  5223  001E02  A0D8               	btfss	status,0,c
  5224  001E04  EF06  F00F         	goto	u2211
  5225  001E08  EF08  F00F         	goto	u2210
  5226  001E0C                     u2211:
  5227  001E0C  EFCE  F00E         	goto	l2458
  5228  001E10                     u2210:
  5229  001E10                     l193:
  5230                           
  5231                           ; BSR set to: 0
  5232  001E10  0012               	return		;funcret
  5233  001E12                     __end_of_afficheTabVue:
  5234                           	opt callstack 0
  5235                           
  5236 ;; *************** function _lcd_putMessage *****************
  5237 ;; Defined at:
  5238 ;;		line 387 in file "Lcd4Lignes.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;  chaine          3    6[BANK0 ] PTR const unsigned char 
  5241 ;;		 -> m_tabMines(84), STR_1(24), 
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;  j               1   14[BANK0 ] unsigned char 
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  1    wreg      void 
  5246 ;; Registers used:
  5247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/0
  5250 ;;		On exit  : 0/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5253 ;;      Params:         0       3       0       0       0       0       0
  5254 ;;      Locals:         0       1       0       0       0       0       0
  5255 ;;      Temps:          0       5       0       0       0       0       0
  5256 ;;      Totals:         0       9       0       0       0       0       0
  5257 ;;Total ram usage:        9 bytes
  5258 ;; Hardware stack levels used:    1
  5259 ;; Hardware stack levels required when called:    4
  5260 ;; This function calls:
  5261 ;;		_lcd_ecritChar
  5262 ;; This function is called by:
  5263 ;;		_main
  5264 ;;		_afficheTabVue
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268                           	psect	text21
  5269  001C02                     __ptext21:
  5270                           	opt callstack 0
  5271  001C02                     _lcd_putMessage:
  5272                           	opt callstack 26
  5273  001C02                     
  5274                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  5275  001C02  0E00               	movlw	0
  5276  001C04  0100               	movlb	0	; force () banked
  5277  001C06  6FC2               	movwf	lcd_putMessage@j& (0+255),b
  5278  001C08  EF2E  F00E         	goto	l2202
  5279  001C0C                     l2198:
  5280                           
  5281                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  5282  001C0C  0100               	movlb	0	; force () banked
  5283  001C0E  51C2               	movf	lcd_putMessage@j& (0+255),w,b
  5284  001C10  0100               	movlb	0	; force () banked
  5285  001C12  6FBD               	movwf	??_lcd_putMessage& (0+255),b
  5286  001C14  6BBE               	clrf	(??_lcd_putMessage+1)& (0+255),b
  5287  001C16  51BD               	movf	??_lcd_putMessage& (0+255),w,b
  5288  001C18  0100               	movlb	0	; force () banked
  5289  001C1A  25BA               	addwf	lcd_putMessage@chaine& (0+255),w,b
  5290  001C1C  0100               	movlb	0	; force () banked
  5291  001C1E  6FBF               	movwf	(??_lcd_putMessage+2)& (0+255),b
  5292  001C20  51BE               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  5293  001C22  0100               	movlb	0	; force () banked
  5294  001C24  21BB               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  5295  001C26  0100               	movlb	0	; force () banked
  5296  001C28  6FC0               	movwf	(??_lcd_putMessage+3)& (0+255),b
  5297  001C2A  0E00               	movlw	0
  5298  001C2C  0100               	movlb	0	; force () banked
  5299  001C2E  21BC               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  5300  001C30  0100               	movlb	0	; force () banked
  5301  001C32  6FC1               	movwf	(??_lcd_putMessage+4)& (0+255),b
  5302  001C34  C0BF  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  5303  001C38  C0C0  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  5304  001C3C  C0C1  FFF8         	movff	??_lcd_putMessage+4,tblptru
  5305  001C40  BAF8               	btfsc	tblptru,5,c
  5306  001C42  D003               	bra	u1817
  5307  001C44  0008               	tblrd		*
  5308  001C46  50F5               	movf	tablat,w,c
  5309  001C48  D005               	bra	u1810
  5310  001C4A                     u1817:
  5311  001C4A  CFF6 FFD9          	movff	tblptrl,fsr2l
  5312  001C4E  CFF7 FFDA          	movff	tblptrh,fsr2h
  5313  001C52  50DF               	movf	indf2,w,c
  5314  001C54                     u1810:
  5315  001C54  ECE0  F010         	call	_lcd_ecritChar
  5316  001C58  0100               	movlb	0	; force () banked
  5317  001C5A  2BC2               	incf	lcd_putMessage@j& (0+255),f,b
  5318  001C5C                     l2202:
  5319                           
  5320                           ; BSR set to: 0
  5321  001C5C  0100               	movlb	0	; force () banked
  5322  001C5E  51C2               	movf	lcd_putMessage@j& (0+255),w,b
  5323  001C60  0100               	movlb	0	; force () banked
  5324  001C62  6FBD               	movwf	??_lcd_putMessage& (0+255),b
  5325  001C64  6BBE               	clrf	(??_lcd_putMessage+1)& (0+255),b
  5326  001C66  51BD               	movf	??_lcd_putMessage& (0+255),w,b
  5327  001C68  0100               	movlb	0	; force () banked
  5328  001C6A  25BA               	addwf	lcd_putMessage@chaine& (0+255),w,b
  5329  001C6C  0100               	movlb	0	; force () banked
  5330  001C6E  6FBF               	movwf	(??_lcd_putMessage+2)& (0+255),b
  5331  001C70  51BE               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  5332  001C72  0100               	movlb	0	; force () banked
  5333  001C74  21BB               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  5334  001C76  0100               	movlb	0	; force () banked
  5335  001C78  6FC0               	movwf	(??_lcd_putMessage+3)& (0+255),b
  5336  001C7A  0E00               	movlw	0
  5337  001C7C  0100               	movlb	0	; force () banked
  5338  001C7E  21BC               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  5339  001C80  0100               	movlb	0	; force () banked
  5340  001C82  6FC1               	movwf	(??_lcd_putMessage+4)& (0+255),b
  5341  001C84  C0BF  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  5342  001C88  C0C0  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  5343  001C8C  C0C1  FFF8         	movff	??_lcd_putMessage+4,tblptru
  5344  001C90  BAF8               	btfsc	tblptru,5,c
  5345  001C92  D003               	bra	u1827
  5346  001C94  0008               	tblrd		*
  5347  001C96  50F5               	movf	tablat,w,c
  5348  001C98  D005               	bra	u1820
  5349  001C9A                     u1827:
  5350  001C9A  CFF6 FFD9          	movff	tblptrl,fsr2l
  5351  001C9E  CFF7 FFDA          	movff	tblptrh,fsr2h
  5352  001CA2  50DF               	movf	indf2,w,c
  5353  001CA4                     u1820:
  5354  001CA4  0900               	iorlw	0
  5355  001CA6  A4D8               	btfss	status,2,c
  5356  001CA8  EF58  F00E         	goto	u1831
  5357  001CAC  EF5A  F00E         	goto	u1830
  5358  001CB0                     u1831:
  5359  001CB0  EF06  F00E         	goto	l2198
  5360  001CB4                     u1830:
  5361  001CB4  0012               	return		;funcret
  5362  001CB6                     __end_of_lcd_putMessage:
  5363                           	opt callstack 0
  5364                           
  5365 ;; *************** function _lcd_ecritChar *****************
  5366 ;; Defined at:
  5367 ;;		line 359 in file "Lcd4Lignes.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;  car             1    wreg     unsigned char 
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  car             1    3[BANK0 ] unsigned char 
  5372 ;;  posRam          1    4[BANK0 ] unsigned char 
  5373 ;; Return value:  Size  Location     Type
  5374 ;;                  1    wreg      void 
  5375 ;; Registers used:
  5376 ;;		wreg, status,2, status,0, cstack
  5377 ;; Tracked objects:
  5378 ;;		On entry : 0/0
  5379 ;;		On exit  : 0/0
  5380 ;;		Unchanged: 0/0
  5381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5382 ;;      Params:         0       0       0       0       0       0       0
  5383 ;;      Locals:         0       2       0       0       0       0       0
  5384 ;;      Temps:          0       0       0       0       0       0       0
  5385 ;;      Totals:         0       2       0       0       0       0       0
  5386 ;;Total ram usage:        2 bytes
  5387 ;; Hardware stack levels used:    1
  5388 ;; Hardware stack levels required when called:    3
  5389 ;; This function calls:
  5390 ;;		_lcd_wrCom
  5391 ;;		_lcd_wrData
  5392 ;; This function is called by:
  5393 ;;		_lcd_putMessage
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           	psect	text22
  5398  0021C0                     __ptext22:
  5399                           	opt callstack 0
  5400  0021C0                     _lcd_ecritChar:
  5401                           	opt callstack 26
  5402                           
  5403                           ;incstack = 0
  5404                           ;lcd_ecritChar@car stored from wreg
  5405  0021C0  0100               	movlb	0	; force () banked
  5406  0021C2  6FB7               	movwf	lcd_ecritChar@car& (0+255),b
  5407  0021C4                     
  5408                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  5409  0021C4  0100               	movlb	0	; force () banked
  5410  0021C6  51B7               	movf	lcd_ecritChar@car& (0+255),w,b
  5411  0021C8  EC6F  F011         	call	_lcd_wrData
  5412  0021CC  0100               	movlb	0	; force () banked
  5413  0021CE  6FB8               	movwf	lcd_ecritChar@posRam& (0+255),b
  5414                           
  5415                           ;Lcd4Lignes.c: 364: switch(posRam)
  5416  0021D0  EFF9  F010         	goto	l2184
  5417  0021D4                     l2176:
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  5421  0021D4  0EC0               	movlw	192
  5422  0021D6  EC1B  F010         	call	_lcd_wrCom
  5423                           
  5424                           ;Lcd4Lignes.c: 368: break;
  5425  0021DA  EF09  F011         	goto	l314
  5426  0021DE                     l2178:
  5427                           
  5428                           ; BSR set to: 0
  5429                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  5430  0021DE  0E94               	movlw	148
  5431  0021E0  EC1B  F010         	call	_lcd_wrCom
  5432                           
  5433                           ;Lcd4Lignes.c: 371: break;
  5434  0021E4  EF09  F011         	goto	l314
  5435  0021E8                     l2180:
  5436                           
  5437                           ; BSR set to: 0
  5438                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  5439  0021E8  0ED4               	movlw	212
  5440  0021EA  EC1B  F010         	call	_lcd_wrCom
  5441                           
  5442                           ;Lcd4Lignes.c: 374: break;
  5443  0021EE  EF09  F011         	goto	l314
  5444  0021F2                     l2184:
  5445                           
  5446                           ; BSR set to: 0
  5447  0021F2  0100               	movlb	0	; force () banked
  5448  0021F4  51B8               	movf	lcd_ecritChar@posRam& (0+255),w,b
  5449                           
  5450                           ; Switch size 1, requested type "simple"
  5451                           ; Number of cases is 3, Range of values is 148 to 212
  5452                           ; switch strategies available:
  5453                           ; Name         Instructions Cycles
  5454                           ; simple_byte           10     6 (average)
  5455                           ;	Chosen strategy is simple_byte
  5456  0021F6  0A94               	xorlw	148	; case 148
  5457  0021F8  B4D8               	btfsc	status,2,c
  5458  0021FA  EFEA  F010         	goto	l2176
  5459  0021FE  0A54               	xorlw	84	; case 192
  5460  002200  B4D8               	btfsc	status,2,c
  5461  002202  EFF4  F010         	goto	l2180
  5462  002206  0A14               	xorlw	20	; case 212
  5463  002208  B4D8               	btfsc	status,2,c
  5464  00220A  EFEF  F010         	goto	l2178
  5465  00220E  EF09  F011         	goto	l314
  5466  002212                     l314:
  5467  002212  0012               	return		;funcret
  5468  002214                     __end_of_lcd_ecritChar:
  5469                           	opt callstack 0
  5470                           
  5471 ;; *************** function _lcd_wrData *****************
  5472 ;; Defined at:
  5473 ;;		line 188 in file "Lcd4Lignes.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;  caractere       1    wreg     unsigned char 
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;  caractere       1    2[BANK0 ] unsigned char 
  5478 ;; Return value:  Size  Location     Type
  5479 ;;                  1    wreg      unsigned char 
  5480 ;; Registers used:
  5481 ;;		wreg, status,2, status,0, cstack
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5487 ;;      Params:         0       0       0       0       0       0       0
  5488 ;;      Locals:         0       1       0       0       0       0       0
  5489 ;;      Temps:          0       0       0       0       0       0       0
  5490 ;;      Totals:         0       1       0       0       0       0       0
  5491 ;;Total ram usage:        1 bytes
  5492 ;; Hardware stack levels used:    1
  5493 ;; Hardware stack levels required when called:    2
  5494 ;; This function calls:
  5495 ;;		_lcd_busy
  5496 ;;		_lcd_ecrireDonnees
  5497 ;;		_lcd_strobeEnableBit
  5498 ;; This function is called by:
  5499 ;;		_lcd_ecritChar
  5500 ;;		_lcd_initCGRam
  5501 ;;		_lcd_effaceChar
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           	psect	text23
  5506  0022DE                     __ptext23:
  5507                           	opt callstack 0
  5508  0022DE                     _lcd_wrData:
  5509                           	opt callstack 26
  5510                           
  5511                           ;incstack = 0
  5512                           ;lcd_wrData@caractere stored from wreg
  5513  0022DE  0100               	movlb	0	; force () banked
  5514  0022E0  6FB6               	movwf	lcd_wrData@caractere& (0+255),b
  5515  0022E2                     
  5516                           ;Lcd4Lignes.c: 190: lcd_busy();
  5517  0022E2  EC2E  F011         	call	_lcd_busy	;wreg free
  5518  0022E6                     
  5519                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  5520  0022E6  0E00               	movlw	0
  5521  0022E8  6E95               	movwf	149,c	;volatile
  5522  0022EA                     
  5523                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  5524  0022EA  8080               	bsf	128,0,c	;volatile
  5525  0022EC                     
  5526                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  5527  0022EC  9280               	bcf	128,1,c	;volatile
  5528  0022EE                     
  5529                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  5530  0022EE  0100               	movlb	0	; force () banked
  5531  0022F0  39B6               	swapf	lcd_wrData@caractere& (0+255),w,b
  5532  0022F2  0B0F               	andlw	15
  5533  0022F4  ECE6  F011         	call	_lcd_ecrireDonnees
  5534  0022F8                     
  5535                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  5536  0022F8  ECF8  F011         	call	_lcd_strobeEnableBit	;wreg free
  5537  0022FC                     
  5538                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  5539  0022FC  0100               	movlb	0	; force () banked
  5540  0022FE  51B6               	movf	lcd_wrData@caractere& (0+255),w,b
  5541  002300  ECE6  F011         	call	_lcd_ecrireDonnees
  5542  002304                     
  5543                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  5544  002304  ECF8  F011         	call	_lcd_strobeEnableBit	;wreg free
  5545  002308                     
  5546                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  5547  002308  0E0F               	movlw	15
  5548  00230A  6E95               	movwf	149,c	;volatile
  5549  00230C                     
  5550                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  5551                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  5552  00230C  EC2E  F011         	call	_lcd_busy	;wreg free
  5553  002310  0012               	return		;funcret
  5554  002312                     __end_of_lcd_wrData:
  5555                           	opt callstack 0
  5556                           
  5557 ;; *************** function _lcd_gotoXY *****************
  5558 ;; Defined at:
  5559 ;;		line 314 in file "Lcd4Lignes.c"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;  x               1    wreg     unsigned char 
  5562 ;;  y               1    3[BANK0 ] unsigned char 
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;  x               1    4[BANK0 ] unsigned char 
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  1    wreg      void 
  5567 ;; Registers used:
  5568 ;;		wreg, status,2, status,0, cstack
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5574 ;;      Params:         0       1       0       0       0       0       0
  5575 ;;      Locals:         0       1       0       0       0       0       0
  5576 ;;      Temps:          0       0       0       0       0       0       0
  5577 ;;      Totals:         0       2       0       0       0       0       0
  5578 ;;Total ram usage:        2 bytes
  5579 ;; Hardware stack levels used:    1
  5580 ;; Hardware stack levels required when called:    3
  5581 ;; This function calls:
  5582 ;;		_lcd_wrCom
  5583 ;; This function is called by:
  5584 ;;		_deplace
  5585 ;;		_afficheTabVue
  5586 ;;		_lcd_effaceLigne
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           	psect	text24
  5591  001F58                     __ptext24:
  5592                           	opt callstack 0
  5593  001F58                     _lcd_gotoXY:
  5594                           	opt callstack 26
  5595                           
  5596                           ;incstack = 0
  5597                           ;lcd_gotoXY@x stored from wreg
  5598  001F58  0100               	movlb	0	; force () banked
  5599  001F5A  6FB8               	movwf	lcd_gotoXY@x& (0+255),b
  5600  001F5C                     
  5601                           ;Lcd4Lignes.c: 316: switch(y)
  5602  001F5C  EFD0  F00F         	goto	l2224
  5603  001F60                     l2214:
  5604                           
  5605                           ; BSR set to: 0
  5606                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  5607  001F60  0100               	movlb	0	; force () banked
  5608  001F62  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  5609  001F64  0F7F               	addlw	127
  5610  001F66  0980               	iorlw	128
  5611  001F68  EC1B  F010         	call	_lcd_wrCom
  5612                           
  5613                           ;Lcd4Lignes.c: 320: break;
  5614  001F6C  EFE4  F00F         	goto	l303
  5615  001F70                     l2216:
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  5619  001F70  0100               	movlb	0	; force () banked
  5620  001F72  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  5621  001F74  0FBF               	addlw	191
  5622  001F76  0980               	iorlw	128
  5623  001F78  EC1B  F010         	call	_lcd_wrCom
  5624                           
  5625                           ;Lcd4Lignes.c: 323: break;
  5626  001F7C  EFE4  F00F         	goto	l303
  5627  001F80                     l2218:
  5628                           
  5629                           ; BSR set to: 0
  5630                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  5631  001F80  0100               	movlb	0	; force () banked
  5632  001F82  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  5633  001F84  0F93               	addlw	147
  5634  001F86  0980               	iorlw	128
  5635  001F88  EC1B  F010         	call	_lcd_wrCom
  5636                           
  5637                           ;Lcd4Lignes.c: 326: break;
  5638  001F8C  EFE4  F00F         	goto	l303
  5639  001F90                     l2220:
  5640                           
  5641                           ; BSR set to: 0
  5642                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  5643  001F90  0100               	movlb	0	; force () banked
  5644  001F92  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  5645  001F94  0FD3               	addlw	211
  5646  001F96  0980               	iorlw	128
  5647  001F98  EC1B  F010         	call	_lcd_wrCom
  5648                           
  5649                           ;Lcd4Lignes.c: 329: break;
  5650  001F9C  EFE4  F00F         	goto	l303
  5651  001FA0                     l2224:
  5652  001FA0  0100               	movlb	0	; force () banked
  5653  001FA2  51B7               	movf	lcd_gotoXY@y& (0+255),w,b
  5654                           
  5655                           ; Switch size 1, requested type "simple"
  5656                           ; Number of cases is 4, Range of values is 1 to 4
  5657                           ; switch strategies available:
  5658                           ; Name         Instructions Cycles
  5659                           ; simple_byte           13     7 (average)
  5660                           ;	Chosen strategy is simple_byte
  5661  001FA4  0A01               	xorlw	1	; case 1
  5662  001FA6  B4D8               	btfsc	status,2,c
  5663  001FA8  EFB0  F00F         	goto	l2214
  5664  001FAC  0A03               	xorlw	3	; case 2
  5665  001FAE  B4D8               	btfsc	status,2,c
  5666  001FB0  EFB8  F00F         	goto	l2216
  5667  001FB4  0A01               	xorlw	1	; case 3
  5668  001FB6  B4D8               	btfsc	status,2,c
  5669  001FB8  EFC0  F00F         	goto	l2218
  5670  001FBC  0A07               	xorlw	7	; case 4
  5671  001FBE  B4D8               	btfsc	status,2,c
  5672  001FC0  EFC8  F00F         	goto	l2220
  5673  001FC4  EFE4  F00F         	goto	l303
  5674  001FC8                     l303:
  5675  001FC8  0012               	return		;funcret
  5676  001FCA                     __end_of_lcd_gotoXY:
  5677                           	opt callstack 0
  5678                           
  5679 ;; *************** function _lcd_wrCom *****************
  5680 ;; Defined at:
  5681 ;;		line 156 in file "Lcd4Lignes.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;  commande        1    wreg     unsigned char 
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;  commande        1    2[BANK0 ] unsigned char 
  5686 ;; Return value:  Size  Location     Type
  5687 ;;                  1    wreg      unsigned char 
  5688 ;; Registers used:
  5689 ;;		wreg, status,2, status,0, cstack
  5690 ;; Tracked objects:
  5691 ;;		On entry : 0/0
  5692 ;;		On exit  : 0/0
  5693 ;;		Unchanged: 0/0
  5694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5695 ;;      Params:         0       0       0       0       0       0       0
  5696 ;;      Locals:         0       1       0       0       0       0       0
  5697 ;;      Temps:          0       0       0       0       0       0       0
  5698 ;;      Totals:         0       1       0       0       0       0       0
  5699 ;;Total ram usage:        1 bytes
  5700 ;; Hardware stack levels used:    1
  5701 ;; Hardware stack levels required when called:    2
  5702 ;; This function calls:
  5703 ;;		_lcd_busy
  5704 ;;		_lcd_ecrireDonnees
  5705 ;;		_lcd_strobeEnableBit
  5706 ;; This function is called by:
  5707 ;;		_lcd_init
  5708 ;;		_lcd_curseurHome
  5709 ;;		_lcd_gotoXY
  5710 ;;		_lcd_ecritChar
  5711 ;;		_lcd_initCGRam
  5712 ;;		_lcd_effaceAffichage
  5713 ;;		_lcd_cacheCurseur
  5714 ;;		_lcd_montreCurseur
  5715 ;; This function uses a non-reentrant model
  5716 ;;
  5717                           
  5718                           	psect	text25
  5719  002036                     __ptext25:
  5720                           	opt callstack 0
  5721  002036                     _lcd_wrCom:
  5722                           	opt callstack 26
  5723                           
  5724                           ;incstack = 0
  5725                           ;lcd_wrCom@commande stored from wreg
  5726  002036  0100               	movlb	0	; force () banked
  5727  002038  6FB6               	movwf	lcd_wrCom@commande& (0+255),b
  5728  00203A                     
  5729                           ;Lcd4Lignes.c: 158: lcd_busy();
  5730  00203A  EC2E  F011         	call	_lcd_busy	;wreg free
  5731  00203E                     
  5732                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  5733  00203E  0E00               	movlw	0
  5734  002040  6E95               	movwf	149,c	;volatile
  5735  002042                     
  5736                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  5737  002042  9080               	bcf	128,0,c	;volatile
  5738  002044                     
  5739                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  5740  002044  9280               	bcf	128,1,c	;volatile
  5741  002046                     
  5742                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  5743  002046  0100               	movlb	0	; force () banked
  5744  002048  39B6               	swapf	lcd_wrCom@commande& (0+255),w,b
  5745  00204A  0B0F               	andlw	15
  5746  00204C  ECE6  F011         	call	_lcd_ecrireDonnees
  5747  002050                     
  5748                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  5749  002050  ECF8  F011         	call	_lcd_strobeEnableBit	;wreg free
  5750  002054                     
  5751                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  5752  002054  0100               	movlb	0	; force () banked
  5753  002056  51B6               	movf	lcd_wrCom@commande& (0+255),w,b
  5754  002058  ECE6  F011         	call	_lcd_ecrireDonnees
  5755  00205C                     
  5756                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  5757  00205C  ECF8  F011         	call	_lcd_strobeEnableBit	;wreg free
  5758  002060                     
  5759                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  5760  002060  0E03               	movlw	3
  5761  002062                     u2437:
  5762  002062  2EE8               	decfsz	wreg,f,c
  5763  002064  D7FE               	bra	u2437
  5764  002066  F000               	nop	
  5765  002068                     
  5766                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  5767  002068  0100               	movlb	0	; force () banked
  5768  00206A  05B6               	decf	lcd_wrCom@commande& (0+255),w,b
  5769  00206C  B4D8               	btfsc	status,2,c
  5770  00206E  EF3B  F010         	goto	u1231
  5771  002072  EF3D  F010         	goto	u1230
  5772  002076                     u1231:
  5773  002076  EF47  F010         	goto	l1938
  5774  00207A                     u1230:
  5775  00207A                     
  5776                           ; BSR set to: 0
  5777  00207A  0E02               	movlw	2
  5778  00207C  0100               	movlb	0	; force () banked
  5779  00207E  19B6               	xorwf	lcd_wrCom@commande& (0+255),w,b
  5780  002080  A4D8               	btfss	status,2,c
  5781  002082  EF45  F010         	goto	u1241
  5782  002086  EF47  F010         	goto	u1240
  5783  00208A                     u1241:
  5784  00208A  EF4C  F010         	goto	l1940
  5785  00208E                     u1240:
  5786  00208E                     l1938:
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  5790  00208E  0EA6               	movlw	166
  5791  002090                     u2447:
  5792  002090  2EE8               	decfsz	wreg,f,c
  5793  002092  D7FE               	bra	u2447
  5794  002094  F000 F000          	nop2	
  5795  002098                     l1940:
  5796                           
  5797                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  5798  002098  0E0F               	movlw	15
  5799  00209A  6E95               	movwf	149,c	;volatile
  5800  00209C                     
  5801                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  5802  00209C  EC2E  F011         	call	_lcd_busy	;wreg free
  5803  0020A0  0012               	return		;funcret
  5804  0020A2                     __end_of_lcd_wrCom:
  5805                           	opt callstack 0
  5806                           
  5807 ;; *************** function _lcd_strobeEnableBit *****************
  5808 ;; Defined at:
  5809 ;;		line 431 in file "Lcd4Lignes.c"
  5810 ;; Parameters:    Size  Location     Type
  5811 ;;		None
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;		None
  5814 ;; Return value:  Size  Location     Type
  5815 ;;                  1    wreg      void 
  5816 ;; Registers used:
  5817 ;;		None
  5818 ;; Tracked objects:
  5819 ;;		On entry : 0/0
  5820 ;;		On exit  : 0/0
  5821 ;;		Unchanged: 0/0
  5822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5823 ;;      Params:         0       0       0       0       0       0       0
  5824 ;;      Locals:         0       0       0       0       0       0       0
  5825 ;;      Temps:          0       0       0       0       0       0       0
  5826 ;;      Totals:         0       0       0       0       0       0       0
  5827 ;;Total ram usage:        0 bytes
  5828 ;; Hardware stack levels used:    1
  5829 ;; This function calls:
  5830 ;;		Nothing
  5831 ;; This function is called by:
  5832 ;;		_lcd_wrCom
  5833 ;;		_lcd_wrData
  5834 ;;		_lcd_resetSequence
  5835 ;; This function uses a non-reentrant model
  5836 ;;
  5837                           
  5838                           	psect	text26
  5839  0023F0                     __ptext26:
  5840                           	opt callstack 0
  5841  0023F0                     _lcd_strobeEnableBit:
  5842                           	opt callstack 27
  5843  0023F0                     
  5844                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  5845  0023F0  8480               	bsf	128,2,c	;volatile
  5846                           
  5847                           ;Lcd4Lignes.c: 434: __nop();
  5848  0023F2  F000               	nop	
  5849                           
  5850                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  5851  0023F4  9480               	bcf	128,2,c	;volatile
  5852  0023F6  0012               	return		;funcret
  5853  0023F8                     __end_of_lcd_strobeEnableBit:
  5854                           	opt callstack 0
  5855                           
  5856 ;; *************** function _lcd_ecrireDonnees *****************
  5857 ;; Defined at:
  5858 ;;		line 107 in file "Lcd4Lignes.c"
  5859 ;; Parameters:    Size  Location     Type
  5860 ;;  donnee          1    wreg     unsigned char 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;  donnee          1    1[BANK0 ] unsigned char 
  5863 ;; Return value:  Size  Location     Type
  5864 ;;                  1    wreg      void 
  5865 ;; Registers used:
  5866 ;;		wreg, status,2, status,0
  5867 ;; Tracked objects:
  5868 ;;		On entry : 0/0
  5869 ;;		On exit  : 0/0
  5870 ;;		Unchanged: 0/0
  5871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5872 ;;      Params:         0       0       0       0       0       0       0
  5873 ;;      Locals:         0       1       0       0       0       0       0
  5874 ;;      Temps:          0       1       0       0       0       0       0
  5875 ;;      Totals:         0       2       0       0       0       0       0
  5876 ;;Total ram usage:        2 bytes
  5877 ;; Hardware stack levels used:    1
  5878 ;; This function calls:
  5879 ;;		Nothing
  5880 ;; This function is called by:
  5881 ;;		_lcd_wrCom
  5882 ;;		_lcd_wrData
  5883 ;;		_lcd_resetSequence
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           	psect	text27
  5888  0023CC                     __ptext27:
  5889                           	opt callstack 0
  5890  0023CC                     _lcd_ecrireDonnees:
  5891                           	opt callstack 27
  5892                           
  5893                           ;incstack = 0
  5894                           ;lcd_ecrireDonnees@donnee stored from wreg
  5895  0023CC  0100               	movlb	0	; force () banked
  5896  0023CE  6FB5               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  5897  0023D0                     
  5898                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  5899  0023D0  CF83 F0B4          	movff	3971,??_lcd_ecrireDonnees	;volatile
  5900  0023D4  0EF0               	movlw	240
  5901  0023D6  0100               	movlb	0	; force () banked
  5902  0023D8  17B4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  5903  0023DA  0100               	movlb	0	; force () banked
  5904  0023DC  51B5               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  5905  0023DE  0B0F               	andlw	15
  5906  0023E0  0100               	movlb	0	; force () banked
  5907  0023E2  11B4               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  5908  0023E4  6E83               	movwf	131,c	;volatile
  5909  0023E6                     
  5910                           ; BSR set to: 0
  5911  0023E6  0012               	return		;funcret
  5912  0023E8                     __end_of_lcd_ecrireDonnees:
  5913                           	opt callstack 0
  5914                           
  5915 ;; *************** function _lcd_busy *****************
  5916 ;; Defined at:
  5917 ;;		line 124 in file "Lcd4Lignes.c"
  5918 ;; Parameters:    Size  Location     Type
  5919 ;;		None
  5920 ;; Auto vars:     Size  Location     Type
  5921 ;;  adresse         1    1[BANK0 ] unsigned char 
  5922 ;; Return value:  Size  Location     Type
  5923 ;;                  1    wreg      unsigned char 
  5924 ;; Registers used:
  5925 ;;		wreg, status,2, status,0, cstack
  5926 ;; Tracked objects:
  5927 ;;		On entry : 0/0
  5928 ;;		On exit  : 0/0
  5929 ;;		Unchanged: 0/0
  5930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5931 ;;      Params:         0       0       0       0       0       0       0
  5932 ;;      Locals:         0       1       0       0       0       0       0
  5933 ;;      Temps:          0       1       0       0       0       0       0
  5934 ;;      Totals:         0       2       0       0       0       0       0
  5935 ;;Total ram usage:        2 bytes
  5936 ;; Hardware stack levels used:    1
  5937 ;; Hardware stack levels required when called:    1
  5938 ;; This function calls:
  5939 ;;		_lcd_lireDonnees
  5940 ;; This function is called by:
  5941 ;;		_lcd_wrCom
  5942 ;;		_lcd_wrData
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           
  5946                           	psect	text28
  5947  00225C                     __ptext28:
  5948                           	opt callstack 0
  5949  00225C                     _lcd_busy:
  5950                           	opt callstack 26
  5951  00225C                     
  5952                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  5953  00225C  9080               	bcf	128,0,c	;volatile
  5954                           
  5955                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  5956  00225E  8280               	bsf	128,1,c	;volatile
  5957  002260                     l265:
  5958                           
  5959                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  5960  002260  8480               	bsf	128,2,c	;volatile
  5961                           
  5962                           ;Lcd4Lignes.c: 134: __nop();
  5963  002262  F000               	nop	
  5964  002264                     
  5965                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  5966  002264  ECFC  F011         	call	_lcd_lireDonnees	;wreg free
  5967  002268  0100               	movlb	0	; force () banked
  5968  00226A  6FB4               	movwf	??_lcd_busy& (0+255),b
  5969  00226C  39B4               	swapf	??_lcd_busy& (0+255),w,b
  5970  00226E  0BF0               	andlw	240
  5971  002270  0100               	movlb	0	; force () banked
  5972  002272  6FB5               	movwf	lcd_busy@adresse& (0+255),b
  5973  002274                     
  5974                           ; BSR set to: 0
  5975                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  5976  002274  9480               	bcf	128,2,c	;volatile
  5977  002276                     
  5978                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  5979  002276  8480               	bsf	128,2,c	;volatile
  5980  002278                     
  5981                           ;Lcd4Lignes.c: 139: __nop();
  5982  002278  F000               	nop	
  5983                           
  5984                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  5985  00227A  ECFC  F011         	call	_lcd_lireDonnees	;wreg free
  5986  00227E  0100               	movlb	0	; force () banked
  5987  002280  13B5               	iorwf	lcd_busy@adresse& (0+255),f,b
  5988  002282                     
  5989                           ; BSR set to: 0
  5990                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  5991  002282  9480               	bcf	128,2,c	;volatile
  5992  002284                     
  5993                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  5994  002284  0100               	movlb	0	; force () banked
  5995  002286  BFB5               	btfsc	lcd_busy@adresse& (0+255),7,b
  5996  002288  EF48  F011         	goto	u1221
  5997  00228C  EF4A  F011         	goto	u1220
  5998  002290                     u1221:
  5999  002290  EF30  F011         	goto	l265
  6000  002294                     u1220:
  6001  002294                     
  6002                           ; BSR set to: 0
  6003                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  6004  002294  9280               	bcf	128,1,c	;volatile
  6005  002296                     
  6006                           ; BSR set to: 0
  6007                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  6008  002296  0100               	movlb	0	; force () banked
  6009  002298  51B5               	movf	lcd_busy@adresse& (0+255),w,b
  6010  00229A  0B7F               	andlw	127
  6011  00229C                     
  6012                           ; BSR set to: 0
  6013  00229C  0012               	return		;funcret
  6014  00229E                     __end_of_lcd_busy:
  6015                           	opt callstack 0
  6016                           
  6017 ;; *************** function _lcd_lireDonnees *****************
  6018 ;; Defined at:
  6019 ;;		line 93 in file "Lcd4Lignes.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;		None
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;		None
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  1    wreg      unsigned char 
  6026 ;; Registers used:
  6027 ;;		wreg, status,2, status,0
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6033 ;;      Params:         0       0       0       0       0       0       0
  6034 ;;      Locals:         0       0       0       0       0       0       0
  6035 ;;      Temps:          0       0       0       0       0       0       0
  6036 ;;      Totals:         0       0       0       0       0       0       0
  6037 ;;Total ram usage:        0 bytes
  6038 ;; Hardware stack levels used:    1
  6039 ;; This function calls:
  6040 ;;		Nothing
  6041 ;; This function is called by:
  6042 ;;		_lcd_busy
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           	psect	text29
  6047  0023F8                     __ptext29:
  6048                           	opt callstack 0
  6049  0023F8                     _lcd_lireDonnees:
  6050                           	opt callstack 26
  6051  0023F8                     
  6052                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  6053  0023F8  5083               	movf	131,w,c	;volatile
  6054  0023FA  0B0F               	andlw	15
  6055  0023FC  0012               	return		;funcret
  6056  0023FE                     __end_of_lcd_lireDonnees:
  6057                           	opt callstack 0
  6058                           
  6059 ;; *************** function ___wmul *****************
  6060 ;; Defined at:
  6061 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  6062 ;; Parameters:    Size  Location     Type
  6063 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6064 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6065 ;; Auto vars:     Size  Location     Type
  6066 ;;  product         2    4[BANK0 ] unsigned int 
  6067 ;; Return value:  Size  Location     Type
  6068 ;;                  2    0[BANK0 ] unsigned int 
  6069 ;; Registers used:
  6070 ;;		wreg, status,2, status,0, prodl, prodh
  6071 ;; Tracked objects:
  6072 ;;		On entry : 0/0
  6073 ;;		On exit  : 0/0
  6074 ;;		Unchanged: 0/0
  6075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6076 ;;      Params:         0       4       0       0       0       0       0
  6077 ;;      Locals:         0       2       0       0       0       0       0
  6078 ;;      Temps:          0       0       0       0       0       0       0
  6079 ;;      Totals:         0       6       0       0       0       0       0
  6080 ;;Total ram usage:        6 bytes
  6081 ;; Hardware stack levels used:    1
  6082 ;; This function calls:
  6083 ;;		Nothing
  6084 ;; This function is called by:
  6085 ;;		_initTabVue
  6086 ;;		_rempliMines
  6087 ;;		_metToucheCombien
  6088 ;;		_calculToucheCombien
  6089 ;;		_enleveTuilesAutour
  6090 ;;		_afficheTabVue
  6091 ;; This function uses a non-reentrant model
  6092 ;;
  6093                           
  6094                           	psect	text30
  6095  002366                     __ptext30:
  6096                           	opt callstack 0
  6097  002366                     ___wmul:
  6098                           	opt callstack 29
  6099  002366  0100               	movlb	0	; () banked
  6100  002368  51B4               	movf	___wmul@multiplier& (0+255),w,b
  6101  00236A  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  6102  00236C  CFF3 F0B8          	movff	prodl,___wmul@product
  6103  002370  CFF4 F0B9          	movff	prodh,___wmul@product+1
  6104  002374  51B4               	movf	___wmul@multiplier& (0+255),w,b
  6105  002376  03B7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6106  002378  50F3               	movf	243,w,c
  6107  00237A  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  6108  00237C  51B5               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6109  00237E  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  6110  002380  50F3               	movf	243,w,c
  6111  002382  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  6112  002384                     
  6113                           ; BSR set to: 0
  6114  002384  C0B8  F0B4         	movff	___wmul@product,?___wmul
  6115  002388  C0B9  F0B5         	movff	___wmul@product+1,?___wmul+1
  6116  00238C                     
  6117                           ; BSR set to: 0
  6118  00238C  0012               	return		;funcret
  6119  00238E                     __end_of___wmul:
  6120                           	opt callstack 0
  6121                           
  6122                           	psect	param0
  6123  0000                     tosu	equ	0xFFF
  6124                           tosh	equ	0xFFE
  6125                           tosl	equ	0xFFD
  6126                           stkptr	equ	0xFFC
  6127                           pclatu	equ	0xFFB
  6128                           pclath	equ	0xFFA
  6129                           pcl	equ	0xFF9
  6130                           tblptru	equ	0xFF8
  6131                           tblptrh	equ	0xFF7
  6132                           tblptrl	equ	0xFF6
  6133                           tablat	equ	0xFF5
  6134                           prodh	equ	0xFF4
  6135                           prodl	equ	0xFF3
  6136                           indf0	equ	0xFEF
  6137                           postinc0	equ	0xFEE
  6138                           postdec0	equ	0xFED
  6139                           preinc0	equ	0xFEC
  6140                           plusw0	equ	0xFEB
  6141                           fsr0h	equ	0xFEA
  6142                           fsr0l	equ	0xFE9
  6143                           wreg	equ	0xFE8
  6144                           indf1	equ	0xFE7
  6145                           postinc1	equ	0xFE6
  6146                           postdec1	equ	0xFE5
  6147                           preinc1	equ	0xFE4
  6148                           plusw1	equ	0xFE3
  6149                           fsr1h	equ	0xFE2
  6150                           fsr1l	equ	0xFE1
  6151                           bsr	equ	0xFE0
  6152                           indf2	equ	0xFDF
  6153                           postinc2	equ	0xFDE
  6154                           postdec2	equ	0xFDD
  6155                           preinc2	equ	0xFDC
  6156                           plusw2	equ	0xFDB
  6157                           fsr2h	equ	0xFDA
  6158                           fsr2l	equ	0xFD9
  6159                           status	equ	0xFD8


Data Sizes:
    Strings     24
    Constant    0
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     48     136
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    gagne@pMines	PTR int  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 32767
		 -> ROM(CODE[32767]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    lcd_putMessage@chaine	PTR const unsigned char  size(3) Largest target is 84
		 -> m_tabMines(BANK0[84]), STR_1(CODE[24]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    deplace@y	PTR unsigned char  size(2) Largest target is 1
		 -> main@y(BANK0[1]), 

    deplace@x	PTR unsigned char  size(2) Largest target is 1
		 -> main@x(BANK0[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_demine
    _rempliMines->___awmod
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _initTabVue->___wmul
    _deplace->_lcd_gotoXY
    _demine->_enleveTuilesAutour
    _enleveTuilesAutour->_calculToucheCombien
    _strcpy->___wmul
    _calculToucheCombien->___wmul
    _afficheTabVue->_lcd_putMessage
    _lcd_putMessage->___wmul
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   37918
                                             43 BANK0      5     5      0
                      _afficheTabVue
                             _demine
                            _deplace
                              _gagne
                         _initTabVue
                         _init_serie
                     _initialisation
                    _lcd_curseurHome
                           _lcd_init
                     _lcd_putMessage
                   _metToucheCombien
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                         16    14      2    5003
                                             20 BANK0     16    14      2
                            ___awmod
                             ___wmul
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     9     9      0   10020
                                             21 BANK0      9     9      0
                             ___wmul
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_serie                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           6     6      0    4037
                                              6 BANK0      6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _gagne                                                2     0      2      76
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _deplace                                              5     1      4    1253
                                              5 BANK0      5     1      4
                          _getAnalog
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      15
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _demine                                               6     5      1   10814
                                             37 BANK0      6     5      1
                 _enleveTuilesAutour
 ---------------------------------------------------------------------------------
 (2) _enleveTuilesAutour                                  16    15      1   10581
                                             21 BANK0     16    15      1
                             ___wmul
                _calculToucheCombien
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4     243
                                              6 BANK0      6     2      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 15    11      4    5871
                                              6 BANK0     15    11      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _afficheTabVue                                        4     4      0    5103
                                             15 BANK0      4     4      0
                             ___wmul
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       9     6      3     555
                                              6 BANK0      9     6      3
                             ___wmul (ARG)
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoXY                                           2     1      1     646
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    3811
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheTabVue
     ___wmul
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _demine
     _enleveTuilesAutour
       ___wmul
       _calculToucheCombien
         ___wmul
       _strcpy
         ___wmul (ARG)
   _deplace
     _getAnalog
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _gagne
   _initTabVue
     ___wmul
   _init_serie
   _initialisation
   _lcd_curseurHome
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_putMessage
     ___wmul (ARG)
     _lcd_ecritChar (ARG)
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _metToucheCombien
     ___wmul
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     ___wmul
     _rand
       ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      94       7       57.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     30      88       5       85.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11C      15        0.0%
DATA                 0      0     11C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Dec 07 18:41:00 2019

 __end_of_calculToucheCombien 114E                            l82 233C                            l91 1B14  
                          l76 23AC                            l68 1BCE                            l79 232C  
        ??_enleveTuilesAutour 00CA           ___wmul@multiplicand 00B6                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
__size_of_lcd_strobeEnableBit 0008                           l102 17F8                           l120 078E  
                         l112 1616                           l130 0A5C                           l116 06D4  
                         l125 0902                           l134 0B16                           l303 1FC8  
                         l151 0FC4                           l320 1CB4                           l144 0DF6  
                         l216 23CA                           l129 0A08                           l314 2212  
                         l170 199A                           l155 10BA                           l147 0F30  
                         l139 0C8E                           l148 0F0C                           l180 124C  
                         l157 114C                           l333 1F56                           l262 23E6  
                         l350 2024                           l175 1EB4                           l351 2034  
                         l336 23F6                           l265 2260                           l273 20A0  
                         l193 1E10                           l185 141C                           l266 2294  
                         l282 2364                           l339 238C                           l259 23FC  
                         l267 229C                           l276 2310                           l188 2402  
                         l279 210A                           l288 23EE                           l583 1D66  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           u630 233A  
                         u631 2336                  __CFG_BORV$18 000000                  ___awmod@sign 00C7  
                 lcd_gotoXY@x 00B8                           wreg 000FE8                   lcd_gotoXY@y 00B7  
                __CFG_LVP$OFF 000000                          l1012 225A                          l1006 21BE  
                        l2000 06DA                          l2010 07B2                          l2100 0D46  
                        l2020 085C                          l2012 07B8                          l2004 06FC  
                        l2110 0DFC                          l2102 0D4C                          l2030 08FC  
                        l2022 0862                          l2006 0788                          l2014 07D6  
                        l2200 1C58                          l2120 0E6E                          l2112 0E18  
                        l2040 0974                          l2032 0908                          l2024 086C  
                        l2016 07EA                          l2008 0794                          l2202 1C5C  
                        l2130 0F36                          l2114 0E2E                          l2106 0D6C  
                        l2050 0A12                          l2042 097A                          l2018 07FE  
                        l2034 0926                          l2220 1F90                          l2212 1F5C  
                        l2124 0E90                          l2116 0E4C                          l2140 0FEC  
                        l2108 0DF0                          l2052 0A30                          l2036 093A  
                        l2028 088E                          l2204 216A                          l2214 1F60  
                        l2150 103E                          l2142 1002                          l2134 0F58  
                        l2126 0F06                          l2118 0E68                          l2070 0B40  
                        l2062 0A84                          l2054 0A3A                          l2046 099C  
                        l2038 0958                          l2230 1190                          l2310 1F26  
                        l2302 1ED8                          l2206 21A0                          l2216 1F70  
                        l2224 1FA0                          l2152 10B4                          l2144 1018  
                        l2160 1148                          l2136 0FBE                          l2128 0F12  
                        l2080 0BF4                          l2064 0B10                          l2048 0A02  
                        l2072 0B5E                          l2240 122A                          l2232 11A4  
                        l2312 1F2A                          l2304 1EDE                          l2320 1CB6  
                        l2208 21B2                          l2400 1696                          l2218 1F80  
                        l2154 10C0                          l2146 101E                          l2138 0FCE  
                        l2090 0C94                          l2082 0BFA                          l2074 0B72  
                        l2066 0B1C                          l2058 0A62                          l2170 2252  
                        l2250 12F8                          l2234 11D4                          l2226 1152  
                        l2314 1F3C                          l2330 1CE4                          l2322 1CBC  
                        l2410 172A                          l2402 16DE                          l2180 21E8  
                        l2156 10DC                          l2076 0B88                          l2092 0CB0  
                        l2068 0B3A                          l2164 2214                          l2252 13D4  
                        l2244 1252                          l2236 11F0                          l2228 1170  
                        l2500 1E1C                          l1460 2316                          l2316 1F40  
                        l2308 1EF4                          l2260 20A2                          l2420 141E  
                        l2340 1D1C                          l2332 1CEC                          l2324 1CCA  
                        l2412 175A                          l2404 16E4                          l2174 21C4  
                        l2158 1142                          l2094 0CC6                          l2086 0C1A  
                        l2078 0BEE                          l2166 2220                          l2254 13DA  
                        l2238 1224                          l2510 1EB0                          l2502 1E5A  
                        l1462 232A                          l1630 23AE                          l1622 238E  
                        l2318 1F52                          l2270 20C4                          l2262 20A6  
                        l2422 1446                          l2350 1D56                          l2342 1D32  
                        l2334 1CFE                          l2326 1CD2                          l2190 1FEA  
                        l2414 1798                          l2406 1702                          l2176 21D4  
                        l2184 21F2                          l2096 0CDA                          l2088 0C88  
                        l2168 222A                          l2256 13F8                          l2248 1274  
                        l2504 1E60                          l1464 232A                          l2360 199C  
                        l1640 23C0                          l1632 23B2                          l1624 239A  
                        l2280 20E2                          l2272 20C8                          l2264 20BA  
                        l2440 1566                          l2432 1494                          l2352 1D5E  
                        l2344 1D3A                          l2336 1D06                          l2328 1CD6  
                        l2192 1FFA                          l2416 17C8                          l2408 1708  
                        l2178 21DE                          l2098 0D40                          l2258 13FE  
                        l2506 1E9E                          l1466 233A                          l2362 19BA  
                        l1642 23C2                          l1634 23BA                          l1626 239C  
                        l2290 20FE                          l2282 20E8                          l2274 20D0  
                        l2266 20BC                          l2450 15F8                          l2442 1582  
                        l2434 14EA                          l2426 1468                          l2346 1D40  
                        l2338 1D0E                          l2194 2004                          l2186 1FCA  
                        l2418 17CE                          l2530 1B2A                          l2522 1B16  
                        l1900 2282                          l2196 1C02                          l2460 1DAA  
                        l2452 1D68                          l2508 1EA4                          l2380 1ACC  
                        l2372 1A08                          l1644 23C4                          l1636 23BC  
                        l1628 23A2                          l2292 2106                          l2284 20EC  
                        l2276 20D6                          l2268 20BE                          l2356 233E  
                        l2436 150A                          l2444 15CE                          l2428 1472  
                        l2348 1D46                          l2188 1FDC                          l2540 1B64  
                        l2532 1B34                          l2524 1B1E                          l1902 2284  
                        l1910 23F0                          l2198 1C0C                          l2462 1DEC  
                        l2454 1D7A                          l2470 1830                          l2382 1AD2  
                        l2374 1A26                          l2366 19DC                          l1638 23BE  
                        l2294 1EB6                          l2286 20F4                          l2278 20DA  
                        l2358 2360                          l2446 15D4                          l2438 151E  
                        l2390 1648                          l2550 1BAE                          l2542 1B68  
                        l2534 1B3A                          l2526 1B22                          l1904 2284  
                        l1920 2044                          l1912 203A                          l2464 1DF2  
                        l2480 18BE                          l2472 1862                          l2376 1A6E  
                        l2384 1AF0                          l2368 19E6                          l2296 1EBC  
                        l2288 20FA                          l2448 15F2                          l2552 1BCA  
                        l2544 1B6C                          l2536 1B40                          l2528 1B26  
                        l1906 2296                          l1930 205C                          l1922 2046  
                        l1914 203E                          l2458 1D9C                          l2490 1926  
                        l2482 18CA                          l2474 1872                          l2466 17FA  
                        l2386 1AF6                          l2378 1A84                          l2298 1EC2  
                        l2394 166A                          l2554 1BDC                          l2546 1B84  
                        l2538 1B58                          l1940 2098                          l1932 2060  
                        l1924 2050                          l1916 2042                          l2492 1940  
                        l2484 18E4                          l2476 188C                          l2468 1816  
                        l2396 1674                          l2388 1618                          l2556 1BE4  
                        l2548 1B92                          l1942 209C                          l1934 2068  
                        l1926 2054                          l1918 2042                          l1950 22E6  
                        l2494 1972                          l2486 18FE                          l2478 18A6  
                        l2558 1BE8                          l1944 209C                          l1936 207A  
                        l1928 2054                          l1960 22F8                          l1952 22EA  
                        l2488 1916                          l2496 197E                          l1882 23F8  
                        l1890 2264                          l1938 208E                          l1970 2308  
                        l1962 22FC                          l1954 22EA                          l2498 1E16  
                        l1892 2274                          l1972 230C                          l1964 22FC  
                        l1956 22EC                          l1948 22E2                          l1894 2276  
                        l1886 23D0                          l1966 2304                          l1958 22EE  
                        l1990 0672                          l1982 23E8                          l1976 2366  
                        l1896 2276                          l1888 225C                          l1968 2308  
                        l1992 068E                          l1984 061A                          l1978 2384  
                        l1898 2278                          l1994 06AC                          l1986 0638  
                        l1996 06B2                          l1988 0656                          STR_1 0601  
                        u2000 1D56                          u2001 1D52                          u2010 19D8  
                        u2011 19D4                          u1220 2294                          u1300 06F8  
                        u2020 1A04                          u2100 1726                          u1221 2290  
                        u1301 06F4                          u2021 1A00                          u2101 1722  
                        u1230 207A                          u1310 0788                          u2030 1A26  
                        u2110 1798                          u1231 2076                          u1311 0784  
                        u2031 1A22                          u2111 1794                          u1240 208E  
                        u2200 1D98                          u1400 093A                          u1320 07B2  
                        u2040 1A84                          u2120 17F8                          u1241 208A  
                        u2201 1D94                          u1401 0936                          u1321 07AE  
                        u2041 1A80                          u2121 17F4                          u2210 1E10  
                        u1410 0958                          u1330 07D6                          u1250 0656  
                        u2050 1AF0                          u2130 1464                          u2211 1E0C  
                        u1411 0954                          u1331 07D2                          u1251 0652  
                        u2051 1AEC                          u2131 1460                          u1500 0B5E  
                        u1420 0974                          u1340 07EA                          u1260 0672  
                        u2300 1E5A                          u2220 1830                          u2060 1B14  
                        u2140 1490                          u1501 0B5A                          u1421 0970  
                        u1341 07E6                          u1261 066E                          u2301 1E56  
                        u2221 182C                          u2061 1B10                          u2141 148C  
                        u1510 0B72                          u1430 0998                          u1350 07FE  
                        u1270 068E                          u2310 1E9E                          u2230 1862  
                        u2150 14EA                          u2070 1666                          u1511 0B6E  
                        u1431 0994                          u1351 07FA                          u1271 068A  
                        u2311 1E9A                          u2231 185E                          u2151 14E6  
                        u2071 1662                          u1600 0D68                          u1520 0B88  
                        u1440 0A02                          u1360 085C                          u1280 06AC  
                        u2240 188C                          u2160 151E                          u2080 1692  
                        u1601 0D64                          u1521 0B84                          u1441 09FE  
                        u1361 0858                          u1281 06A8                          u2241 1888  
                        u2161 151A                          u2081 168E                          u1610 0DF0  
                        u1530 0BEE                          u1450 0A30                          u1370 088A  
                        u1290 06D0                          u2250 18BE                          u2170 1582  
                        u2090 1702                          u2330 1B92                          u1611 0DEC  
                        u1531 0BEA                          u1451 0A2C                          u1371 0886  
                        u1291 06CC                          u2251 18BA                          u2171 157E  
                        u2091 16FE                          u2331 1B8E                          u1700 0FBE  
                        u1620 0E18                          u1540 0C16                          u1460 0A58  
                        u1380 08FC                          u2260 18E4                          u2180 15F2  
                        u2340 1BAE                          u1701 0FBA                          u1621 0E14  
                        u1541 0C12                          u1461 0A54                          u1381 08F8  
                        u2261 18E0                          u2181 15EE                          u2341 1BAA  
                        u1710 0FEC                          u1630 0E2E                          u1550 0C88  
                        u1470 0A80                          u1390 0926                          u2270 1916  
                        u2190 1616                          u2350 1BCA                          u1711 0FE8  
                        u1631 0E2A                          u1551 0C84                          u1471 0A7C  
                        u1391 0922                          u2271 1912                          u2407 20DC  
                        u2191 1612                          u2351 1BC6                          u1720 1002  
                        u1640 0E4C                          u1560 0CB0                          u1480 0B10  
                        u2280 1940                          u1800 2024                          u2360 1BDC  
                        u1721 0FFE                          u1641 0E48                          u1561 0CAC  
                        u1481 0B0C                          u2281 193C                          u2417 20EE  
                        u1801 2020                          u2361 1BD8                          u1810 1C54  
                        u1730 1018                          u1650 0E68                          u1570 0CC6  
                        u1490 0B3A                          u2290 1972                          u1731 1014  
                        u1651 0E64                          u1571 0CC2                          u1491 0B36  
                        u2291 196E                          u2427 2100                          u1820 1CA4  
                        u1740 103A                          u1660 0E8C                          u1580 0CDA  
                        u1900 141C                          u2437 2062                          u1741 1036  
                        u1661 0E88                          u1581 0CD6                          u1901 1418  
                        u1830 1CB4                          u1750 10B4                          u1670 0F06  
                        u1590 0D40                          u1910 1ED4                          u2447 2090  
                        u1831 1CB0                          u1751 10B0                          u1671 0F02  
                        u1591 0D3C                          u1911 1ED0                          u1760 10DC  
                        u1680 0F30                          u1840 11A4                          u1920 1EF0  
                        u1817 1C4A                          u1761 10D8                          u1681 0F2C  
                        u1841 11A0                          u1921 1EEC                          u2377 1BF0  
                        u1770 1142                          u1690 0F54                          u1850 11F0  
                        u1930 1F3C                          u1827 1C9A                          u1771 113E  
                        u1691 0F50                          u1851 11EC                          u1931 1F38  
                        u2387 20AE                          u1780 2252                          u1860 1248  
                        u1940 1F52                          u1781 224E                          u1861 1244  
                        u1941 1F4E                          u2397 20CA                          u1870 1270  
                        u1950 1CCA                          u1790 1FEA                          u1871 126C  
                        u1951 1CC6                          u1791 1FE6                          u1880 12F8  
                        u1960 1CE4                          u1881 12F4                          u1961 1CE0  
                        u1890 13F8                          u1970 1CFE                          u1891 13F4  
                        u1971 1CFA                          u1980 1D1C                          u1981 1D18  
                        u1990 1D32                          u1991 1D2E                          _RCIF 007CF5  
            ??_initialisation 00B4                          _main 1B16                          _rand 216A  
                        fsr2h 000FDA                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          prodh 000FF4                          prodl 000FF3  
                        start 0000               ?_lcd_putMessage 00BA                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000               ??_lcd_ecritChar 00B7  
                       ?_main 00B4                         ?_rand 00C0               __end_of___awmod 1D68  
                       _ANSEL 000F7E                         _RCREG 000FAE                         _SPBRG 000FAF  
                       _PORTD 000F83                         _TRISA 000F92                         _TRISD 000F95  
                       _TXREG 000FAD                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000               __end_of_deplace 199C  
         ___lmul@multiplicand 00B8                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000               ??_lcd_initCGRam 00B7  
                       _gagne 2402                         _randx 00E4                         main@x 00E2  
                       main@y 00E3                         tablat 000FF5                         status 000FD8  
              __CFG_HFOFST$ON 000000                __CFG_PBADEN$ON 000000              _metToucheCombien 141E  
             __initialization 210C                  __end_of_main 1C02                  __end_of_rand 21C0  
      enleveTuilesAutour@mine 00D2           enleveTuilesAutour@i 00D4           enleveTuilesAutour@j 00D6  
         enleveTuilesAutour@x 00D8           enleveTuilesAutour@y 00C9          lcd_putMessage@chaine 00BA  
  calculToucheCombien@colonne 00BC    calculToucheCombien@nb_mine 00C3                        ??_main 00DF  
                      ??_rand 00C2                 __activetblptr 000003                        ?_gagne 00B4  
                      _ADCON1 000FC1                        _ADRESH 000FC4                   initTabVue@i 00BC  
                 initTabVue@j 00BE                __CFG_WDTEN$OFF 000000                  ?_rempliMines 00C8  
                      _SPBRGH 000FB0                __CFG_XINST$OFF 000000                lcd_initCGRam@i 00B9  
              lcd_initCGRam@j 00BA                getAnalog@canal 00B5              __end_of_lcd_busy 229E  
            __end_of_lcd_init 2366                        ___lmul 1FCA                        ___wmul 2366  
              __CFG_STVREN$ON 000000                     ??___awmod 00C6                        _demine 1E12  
                      clear_0 2152                        clear_1 215E               ___awmod@divisor 00C4  
                   ??_deplace 00BD               ___awmod@counter 00C6                        _strcpy 2214  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8        __size_of_afficheTabVue 00AA             _lcd_resetSequence 20A2  
                  __accesstop 0060       __end_of__initialization 2164           _lcd_strobeEnableBit 23F0  
          ?_lcd_resetSequence 00B4                 ___rparam_used 000000                  __pidataBANK0 23FE  
                __pidataBANK1 229E           ??_lcd_resetSequence 00B6                 __end_of_gagne 2404  
        ?_lcd_strobeEnableBit 00B4            __size_of_getAnalog 002C            __size_of_lcd_wrCom 006C  
                     ??_gagne 00B6     __end_of_lcd_resetSequence 210C      __size_of_lcd_lireDonnees 0006  
           _lcd_ecrireDonnees 23CC                    __pbssBANK0 0060                    __pbssBANK1 0100  
            ??_lcd_putMessage 00BD            ?_lcd_ecrireDonnees 00B4      __size_of_lcd_curseurHome 0008  
         ??_lcd_ecrireDonnees 00B4                       ?___lmul 00B4                       ?___wmul 00B4  
                     ?_demine 00D9                 _afficheTabVue 1D68                ___lmul@product 00BC  
 __size_of_enleveTuilesAutour 02D0         ??_lcd_strobeEnableBit 00B4                       ?_strcpy 00BA  
__size_of_calculToucheCombien 0B34      __end_of_metToucheCombien 1618                    _lcd_gotoXY 1F58  
                  _lcd_wrData 22DE     __end_of_lcd_ecrireDonnees 23E8                     ?_lcd_busy 00B4  
                   ?_lcd_init 00B4       lcd_ecrireDonnees@donnee 00B5                    _m_tabMines 0060  
           __end_of_getAnalog 233E          __size_of_rempliMines 01E2                       __Hparam 0000  
                     __Lparam 0000                    _initTabVue 199C             __end_of_lcd_wrCom 20A2  
              ?_afficheTabVue 00B4               __size_of___lmul 006C                       ___awmod 1CB6  
             __size_of___wmul 0028               __size_of_demine 00A4                  __psmallconst 0600  
                     __pcinit 210C                    _init_serie 23AE                     _ANSELbits 000F7E  
                     __ramtop 0600                       _deplace 17FA                       __ptext0 1B16  
                     __ptext1 1618                       __ptext2 216A                       __ptext3 1FCA  
                     __ptext4 1CB6                       __ptext5 141E                       __ptext6 233E  
                     __ptext7 20A2                       __ptext8 1EB6                       __ptext9 23E8  
       __end_of_lcd_ecritChar 2214               lcd_busy@adresse 00B5               __size_of_strcpy 0048  
            ___awmod@dividend 00C2                       demine@x 00DE                       demine@y 00D9  
            lcd_ecritChar@car 00B7                    ??_lcd_busy 00B4                    ??_lcd_init 00BB  
  __size_of_lcd_resetSequence 006A          end_of_initialization 2164         __end_of_lcd_initCGRam 1F58  
                  demine@mine 00DD             ??_lcd_lireDonnees 00B4                     _RCSTAbits 000FAB  
                     postdec1 000FE5                       postinc0 000FEE                       postinc2 000FDE  
     __size_of_initialisation 0020             ??_lcd_curseurHome 00B7           lcd_ecritChar@posRam 00B8  
                   _PORTAbits 000F80                     _PORTBbits 000F81                   ?_lcd_gotoXY 00B7  
                   _TRISCbits 000F94                   ?_lcd_wrData 00B4    __size_of_lcd_ecrireDonnees 001C  
                   _TXSTAbits 000FAC               ??_afficheTabVue 00C3                   ?_initTabVue 00B4  
              __end_of___lmul 2036                __end_of___wmul 238E                   _BAUDCONbits 000FB8  
                 ?_init_serie 00B4                __end_of_demine 1EB6                __end_of_strcpy 225C  
         start_initialization 210C           _calculToucheCombien 061A           __size_of_lcd_gotoXY 0072  
                    ??___lmul 00BC                      ??___wmul 00B8                 rempliMines@nb 00C8  
         __size_of_lcd_wrData 0034                      ??_demine 00DA                   __pdataBANK0 00E4  
                 __pdataBANK1 0154              __CFG_LPT1OSC$OFF 000000                      ??_strcpy 00BE  
        ?_calculToucheCombien 00BA                 __pcstackBANK0 00B4             ?_metToucheCombien 00B4  
         __size_of_initTabVue 017A            ??_metToucheCombien 00C9             __size_of_lcd_busy 0042  
           __size_of_lcd_init 0028           __size_of_init_serie 001E             __CFG_CCP2MX$PORTC 000000  
                   _getAnalog 2312   __end_of_lcd_strobeEnableBit 23F8                _initialisation 238E  
  __end_of_enleveTuilesAutour 141E                      ?___awmod 00C2                      ?_deplace 00B9  
                   _lcd_wrCom 2036         ??_calculToucheCombien 00BE                   __smallconst 0600  
           rempliMines@nbMine 00D3                __size_of_gagne 0002               _lcd_lireDonnees 23F8  
         lcd_wrData@caractere 00B6                 ??_rempliMines 00CA          metToucheCombien@mine 00CC  
             _lcd_curseurHome 23E8                ___wmul@product 00B8        __end_of_initialisation 23AE  
                  ?_getAnalog 00B4              __CFG_WDTPS$32768 000000       __size_of_lcd_putMessage 00B4  
                  ?_lcd_wrCom 00B4                    _ADCON0bits 000FC2                    _ADCON2bits 000FC0  
           ___wmul@multiplier 00B4                  ??_lcd_gotoXY 00B8                  ??_lcd_wrData 00B6  
           lcd_wrCom@commande 00B6             ___lmul@multiplier 00B4                     copy_data0 2120  
                   copy_data1 2140                      __Hparam0 0000        __size_of_lcd_ecritChar 0054  
                    __Lparam0 0000               ?_initialisation 00B4           __end_of_rempliMines 17FA  
                ??_initTabVue 00BA            __CFG_BOREN$SBORDIS 000000                  rempliMines@i 00CD  
                rempliMines@j 00CF                  rempliMines@x 00D1                  rempliMines@y 00D2  
          __end_of_lcd_gotoXY 1FCA            __end_of_lcd_wrData 2312              __size_of___awmod 00B2  
                ??_init_serie 00B4        __size_of_lcd_initCGRam 00A2               lcd_putMessage@j 00C2  
            __size_of_deplace 01A2       __end_of_lcd_lireDonnees 23FE                      _matCGRAM 0154  
     __end_of_lcd_curseurHome 23F0                      __ptext10 238E                      __ptext11 23AE  
                    __ptext20 1D68                      __ptext12 199C                      __ptext21 1C02  
                    __ptext13 2402                      __ptext30 2366                      __ptext22 21C0  
                    __ptext14 17FA                      __ptext23 22DE                      __ptext15 2312  
                    __ptext24 1F58                      __ptext16 1E12                      __ptext25 2036  
                    __ptext17 114E                      __ptext26 23F0                      __ptext18 2214  
                    __ptext27 23CC                      __ptext19 061A                      __ptext28 225C  
                    __ptext29 23F8             metToucheCombien@i 00CE             metToucheCombien@j 00D0  
                    _lcd_busy 225C                      _lcd_init 233E            __end_of_initTabVue 1B16  
            rempliMines@i_380 00D4              rempliMines@j_381 00D6      calculToucheCombien@ligne 00BA  
                    _m_tabVue 0100                    strcpy@from 00BC                 __size_of_main 00EC  
               __size_of_rand 0056                   gagne@pMines 00B4            __end_of_init_serie 23CC  
                    deplace@x 00B9                      deplace@y 00BB                   ??_getAnalog 00B4  
       __end_of_afficheTabVue 1E12                   ??_lcd_wrCom 00B6                 _lcd_ecritChar 21C0  
              afficheTabVue@i 00C5                 _lcd_initCGRam 1EB6                   _rempliMines 1618  
        calculToucheCombien@i 00C7          calculToucheCombien@j 00C5     __size_of_metToucheCombien 01FA  
              _lcd_putMessage 1C02                ?_lcd_ecritChar 00B4              ?_lcd_lireDonnees 00B4  
                    strcpy@cp 00BE                      strcpy@to 00BA            _enleveTuilesAutour 114E  
            ?_lcd_curseurHome 00B4                ?_lcd_initCGRam 00B4           ?_enleveTuilesAutour 00C9  
           __CFG_FOSC$INTIO67 000000                   main@NBMines 00E0        __end_of_lcd_putMessage 1CB6  
