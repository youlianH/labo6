

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec 16 21:11:54 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2,minocg
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1,minocg
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1,minocg
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    47  0000                     
    48                           ; Version 2.10
    49                           ; Generated 31/07/2019 GMT
    50                           ; 
    51                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F45K20 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataBANK0
    84  0026E8                     __pidataBANK0:
    85                           	opt callstack 0
    86                           
    87                           ;initializer for _randx
    88  0026E8  0001               	dw	1
    89  0026EA  0000               	dw	0
    90                           
    91                           	psect	idataBANK1
    92  002574                     __pidataBANK1:
    93                           	opt callstack 0
    94                           
    95                           ;initializer for _matCGRAM
    96  002574  08                 	db	8
    97  002575  04                 	db	4
    98  002576  04                 	db	4
    99  002577  0A                 	db	10
   100  002578  11                 	db	17
   101  002579  1F                 	db	31
   102  00257A  11                 	db	17
   103  00257B  00                 	db	0
   104  00257C  00                 	db	0
   105  00257D  0E                 	db	14
   106  00257E  0E                 	db	14
   107  00257F  0E                 	db	14
   108  002580  0E                 	db	14
   109  002581  0E                 	db	14
   110  002582  0E                 	db	14
   111  002583  00                 	db	0
   112  002584  00                 	db	0
   113  002585  00                 	db	0
   114  002586  04                 	db	4
   115  002587  0E                 	db	14
   116  002588  0E                 	db	14
   117  002589  0E                 	db	14
   118  00258A  04                 	db	4
   119  00258B  00                 	db	0
   120  00258C  08                 	db	8
   121  00258D  04                 	db	4
   122  00258E  0E                 	db	14
   123  00258F  11                 	db	17
   124  002590  1F                 	db	31
   125  002591  10                 	db	16
   126  002592  0E                 	db	14
   127  002593  00                 	db	0
   128  002594  08                 	db	8
   129  002595  04                 	db	4
   130  002596  1F                 	db	31
   131  002597  10                 	db	16
   132  002598  1E                 	db	30
   133  002599  10                 	db	16
   134  00259A  1F                 	db	31
   135  00259B  00                 	db	0
   136  00259C  04                 	db	4
   137  00259D  0A                 	db	10
   138  00259E  0E                 	db	14
   139  00259F  11                 	db	17
   140  0025A0  1F                 	db	31
   141  0025A1  10                 	db	16
   142  0025A2  0E                 	db	14
   143  0025A3  00                 	db	0
   144  0025A4  08                 	db	8
   145  0025A5  04                 	db	4
   146  0025A6  0E                 	db	14
   147  0025A7  01                 	db	1
   148  0025A8  0F                 	db	15
   149  0025A9  11                 	db	17
   150  0025AA  0F                 	db	15
   151  0025AB  00                 	db	0
   152  0025AC  04                 	db	4
   153  0025AD  0A                 	db	10
   154  0025AE  0E                 	db	14
   155  0025AF  01                 	db	1
   156  0025B0  0F                 	db	15
   157  0025B1  11                 	db	17
   158  0025B2  0F                 	db	15
   159  0025B3  00                 	db	0
   160  0000                     _PORTAbits	set	3968
   161  0000                     _PORTD	set	3971
   162  0000                     _TRISCbits	set	3988
   163  0000                     _ANSELbits	set	3966
   164  0000                     _TRISA	set	3986
   165  0000                     _ANSEL	set	3966
   166  0000                     _TRISB	set	3987
   167  0000                     _ANSELH	set	3967
   168  0000                     _TRISD	set	3989
   169  0000                     _PORTBbits	set	3969
   170  0000                     _RCREG	set	4014
   171  0000                     _TXREG	set	4013
   172  0000                     _RCSTAbits	set	4011
   173  0000                     _TXSTAbits	set	4012
   174  0000                     _BAUDCONbits	set	4024
   175  0000                     _SPBRG	set	4015
   176  0000                     _SPBRGH	set	4016
   177  0000                     _ADRESH	set	4036
   178  0000                     _ADCON2bits	set	4032
   179  0000                     _ADCON0bits	set	4034
   180  0000                     _ADCON1	set	4033
   181  0000                     _RCIF	set	31989
   182                           
   183                           	psect	smallconst
   184  000600                     __psmallconst:
   185                           	opt callstack 0
   186  000600  00                 	db	0
   187  000601                     STR_1:
   188                           
   189                           ; BSR set to: 0
   190  000601  4C                 	db	76	;'L'
   191  000602  41                 	db	65	;'A'
   192  000603  42                 	db	66	;'B'
   193  000604  36                 	db	54	;'6'
   194  000605  20                 	db	32
   195  000606  59                 	db	89	;'Y'
   196  000607  6F                 	db	111	;'o'
   197  000608  75                 	db	117	;'u'
   198  000609  6C                 	db	108	;'l'
   199  00060A  69                 	db	105	;'i'
   200  00060B  61                 	db	97	;'a'
   201  00060C  6E                 	db	110	;'n'
   202  00060D  20                 	db	32
   203  00060E  48                 	db	72	;'H'
   204  00060F  6F                 	db	111	;'o'
   205  000610  75                 	db	117	;'u'
   206  000611  65                 	db	101	;'e'
   207  000612  68                 	db	104	;'h'
   208  000613  6F                 	db	111	;'o'
   209  000614  75                 	db	117	;'u'
   210  000615  6E                 	db	110	;'n'
   211  000616  6F                 	db	111	;'o'
   212  000617  75                 	db	117	;'u'
   213  000618  00                 	db	0
   214                           
   215                           ; #config settings
   216  000619  00                 	db	0	; dummy byte at the end
   217  0000                     
   218                           	psect	cinit
   219  00242A                     __pcinit:
   220                           	opt callstack 0
   221  00242A                     start_initialization:
   222                           	opt callstack 0
   223  00242A                     __initialization:
   224                           	opt callstack 0
   225                           
   226                           ; Initialize objects allocated to BANK1 (64 bytes)
   227                           ; load TBLPTR registers with __pidataBANK1
   228  00242A  0E74               	movlw	low __pidataBANK1
   229  00242C  6EF6               	movwf	tblptrl,c
   230  00242E  0E25               	movlw	high __pidataBANK1
   231  002430  6EF7               	movwf	tblptrh,c
   232  002432  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   233  002434  6EF8               	movwf	tblptru,c
   234  002436  EE01  F054         	lfsr	0,__pdataBANK1
   235  00243A  EE10 F040          	lfsr	1,64
   236  00243E                     copy_data0:
   237  00243E  0009               	tblrd		*+
   238  002440  CFF5 FFEE          	movff	tablat,postinc0
   239  002444  50E5               	movf	postdec1,w,c
   240  002446  50E1               	movf	fsr1l,w,c
   241  002448  E1FA               	bnz	copy_data0
   242                           
   243                           ; Initialize objects allocated to BANK0 (4 bytes)
   244                           ; load TBLPTR registers with __pidataBANK0
   245  00244A  0EE8               	movlw	low __pidataBANK0
   246  00244C  6EF6               	movwf	tblptrl,c
   247  00244E  0E26               	movlw	high __pidataBANK0
   248  002450  6EF7               	movwf	tblptrh,c
   249  002452  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   250  002454  6EF8               	movwf	tblptru,c
   251  002456  EE00  F0DD         	lfsr	0,__pdataBANK0
   252  00245A  EE10 F004          	lfsr	1,4
   253  00245E                     copy_data1:
   254  00245E  0009               	tblrd		*+
   255  002460  CFF5 FFEE          	movff	tablat,postinc0
   256  002464  50E5               	movf	postdec1,w,c
   257  002466  50E1               	movf	fsr1l,w,c
   258  002468  E1FA               	bnz	copy_data1
   259                           
   260                           ; Clear objects allocated to BANK1 (84 bytes)
   261  00246A  EE01  F000         	lfsr	0,__pbssBANK1
   262  00246E  0E54               	movlw	84
   263  002470                     clear_0:
   264  002470  6AEE               	clrf	postinc0,c
   265  002472  06E8               	decf	wreg,f,c
   266  002474  E1FD               	bnz	clear_0
   267                           
   268                           ; Clear objects allocated to BANK0 (84 bytes)
   269  002476  EE00  F060         	lfsr	0,__pbssBANK0
   270  00247A  0E54               	movlw	84
   271  00247C                     clear_1:
   272  00247C  6AEE               	clrf	postinc0,c
   273  00247E  06E8               	decf	wreg,f,c
   274  002480  E1FD               	bnz	clear_1
   275  002482                     end_of_initialization:
   276                           	opt callstack 0
   277  002482                     __end_of__initialization:
   278                           	opt callstack 0
   279  002482  0100               	movlb	0
   280  002484  EF65  F00F         	goto	_main	;jump to C main() function
   281                           
   282                           	psect	bssBANK0
   283  000060                     __pbssBANK0:
   284                           	opt callstack 0
   285  000060                     _m_tabMines:
   286                           	opt callstack 0
   287  000060                     	ds	84
   288                           
   289                           	psect	dataBANK0
   290  0000DD                     __pdataBANK0:
   291                           	opt callstack 0
   292  0000DD                     _randx:
   293                           	opt callstack 0
   294  0000DD                     	ds	4
   295                           
   296                           	psect	bssBANK1
   297  000100                     __pbssBANK1:
   298                           	opt callstack 0
   299  000100                     _m_tabVue:
   300                           	opt callstack 0
   301  000100                     	ds	84
   302                           
   303                           	psect	dataBANK1
   304  000154                     __pdataBANK1:
   305                           	opt callstack 0
   306  000154                     _matCGRAM:
   307                           	opt callstack 0
   308  000154                     	ds	64
   309                           
   310                           	psect	cstackBANK0
   311  0000B4                     __pcstackBANK0:
   312                           	opt callstack 0
   313  0000B4                     ??_getAnalog:
   314  0000B4                     ??_lcd_ecrireDonnees:
   315  0000B4                     ??_lcd_busy:
   316  0000B4                     ?___wmul:
   317                           	opt callstack 0
   318  0000B4                     ?___lmul:
   319                           	opt callstack 0
   320  0000B4                     ___wmul@multiplier:
   321                           	opt callstack 0
   322  0000B4                     ___lmul@multiplier:
   323                           	opt callstack 0
   324                           
   325                           ; 4 bytes @ 0x0
   326  0000B4                     	ds	1
   327  0000B5                     getAnalog@canal:
   328                           	opt callstack 0
   329  0000B5                     lcd_ecrireDonnees@donnee:
   330                           	opt callstack 0
   331  0000B5                     lcd_busy@adresse:
   332                           	opt callstack 0
   333                           
   334                           ; 1 bytes @ 0x1
   335  0000B5                     	ds	1
   336  0000B6                     ??_lcd_resetSequence:
   337  0000B6                     lcd_wrCom@commande:
   338                           	opt callstack 0
   339  0000B6                     lcd_wrData@caractere:
   340                           	opt callstack 0
   341  0000B6                     ___wmul@multiplicand:
   342                           	opt callstack 0
   343                           
   344                           ; 2 bytes @ 0x2
   345  0000B6                     	ds	1
   346  0000B7                     ??_lcd_initCGRam:
   347  0000B7                     lcd_gotoXY@y:
   348                           	opt callstack 0
   349  0000B7                     lcd_ecritChar@car:
   350                           	opt callstack 0
   351                           
   352                           ; 1 bytes @ 0x3
   353  0000B7                     	ds	1
   354  0000B8                     lcd_gotoXY@x:
   355                           	opt callstack 0
   356  0000B8                     lcd_ecritChar@posRam:
   357                           	opt callstack 0
   358  0000B8                     ___wmul@product:
   359                           	opt callstack 0
   360  0000B8                     ___lmul@multiplicand:
   361                           	opt callstack 0
   362                           
   363                           ; 4 bytes @ 0x4
   364  0000B8                     	ds	1
   365  0000B9                     lcd_initCGRam@i:
   366                           	opt callstack 0
   367  0000B9                     deplace@x:
   368                           	opt callstack 0
   369                           
   370                           ; 2 bytes @ 0x5
   371  0000B9                     	ds	1
   372  0000BA                     ??_initTabVue:
   373  0000BA                     enleveTuilesAutour@y:
   374                           	opt callstack 0
   375  0000BA                     lcd_initCGRam@j:
   376                           	opt callstack 0
   377  0000BA                     calculToucheCombien@ligne:
   378                           	opt callstack 0
   379  0000BA                     gagne@pMines:
   380                           	opt callstack 0
   381  0000BA                     lcd_putMessage@chaine:
   382                           	opt callstack 0
   383                           
   384                           ; 3 bytes @ 0x6
   385  0000BA                     	ds	1
   386  0000BB                     ??_enleveTuilesAutour:
   387  0000BB                     deplace@y:
   388                           	opt callstack 0
   389                           
   390                           ; 2 bytes @ 0x7
   391  0000BB                     	ds	1
   392  0000BC                     ??_gagne:
   393  0000BC                     initTabVue@i:
   394                           	opt callstack 0
   395  0000BC                     calculToucheCombien@colonne:
   396                           	opt callstack 0
   397  0000BC                     ___lmul@product:
   398                           	opt callstack 0
   399                           
   400                           ; 4 bytes @ 0x8
   401  0000BC                     	ds	1
   402  0000BD                     ??_lcd_putMessage:
   403  0000BD                     ??_deplace:
   404                           
   405                           ; 1 bytes @ 0x9
   406  0000BD                     	ds	1
   407  0000BE                     ??_calculToucheCombien:
   408  0000BE                     initTabVue@j:
   409                           	opt callstack 0
   410                           
   411                           ; 2 bytes @ 0xA
   412  0000BE                     	ds	1
   413  0000BF                     enleveTuilesAutour@mine:
   414                           	opt callstack 0
   415  0000BF                     gagne@nb_Tuile:
   416                           	opt callstack 0
   417                           
   418                           ; 2 bytes @ 0xB
   419  0000BF                     	ds	1
   420  0000C0                     ?_rand:
   421                           	opt callstack 0
   422                           
   423                           ; 2 bytes @ 0xC
   424  0000C0                     	ds	1
   425  0000C1                     enleveTuilesAutour@x:
   426                           	opt callstack 0
   427  0000C1                     gagne@gagne:
   428                           	opt callstack 0
   429                           
   430                           ; 1 bytes @ 0xD
   431  0000C1                     	ds	1
   432  0000C2                     ?___awmod:
   433                           	opt callstack 0
   434  0000C2                     lcd_putMessage@j:
   435                           	opt callstack 0
   436  0000C2                     enleveTuilesAutour@j:
   437                           	opt callstack 0
   438  0000C2                     gagne@i:
   439                           	opt callstack 0
   440  0000C2                     ___awmod@dividend:
   441                           	opt callstack 0
   442                           
   443                           ; 2 bytes @ 0xE
   444  0000C2                     	ds	1
   445  0000C3                     ??_afficheTabVue:
   446  0000C3                     calculToucheCombien@nb_mine:
   447                           	opt callstack 0
   448                           
   449                           ; 2 bytes @ 0xF
   450  0000C3                     	ds	1
   451  0000C4                     enleveTuilesAutour@i:
   452                           	opt callstack 0
   453  0000C4                     gagne@j:
   454                           	opt callstack 0
   455  0000C4                     ___awmod@divisor:
   456                           	opt callstack 0
   457                           
   458                           ; 2 bytes @ 0x10
   459  0000C4                     	ds	1
   460  0000C5                     calculToucheCombien@j:
   461                           	opt callstack 0
   462  0000C5                     afficheTabVue@i:
   463                           	opt callstack 0
   464                           
   465                           ; 2 bytes @ 0x11
   466  0000C5                     	ds	1
   467  0000C6                     demine@y:
   468                           	opt callstack 0
   469  0000C6                     ___awmod@counter:
   470                           	opt callstack 0
   471                           
   472                           ; 1 bytes @ 0x12
   473  0000C6                     	ds	1
   474  0000C7                     ??_demine:
   475  0000C7                     ___awmod@sign:
   476                           	opt callstack 0
   477  0000C7                     calculToucheCombien@i:
   478                           	opt callstack 0
   479                           
   480                           ; 2 bytes @ 0x13
   481  0000C7                     	ds	1
   482  0000C8                     rempliMines@nb:
   483                           	opt callstack 0
   484                           
   485                           ; 2 bytes @ 0x14
   486  0000C8                     	ds	1
   487  0000C9                     ??_metToucheCombien:
   488                           
   489                           ; 1 bytes @ 0x15
   490  0000C9                     	ds	1
   491  0000CA                     ??_rempliMines:
   492                           
   493                           ; 1 bytes @ 0x16
   494  0000CA                     	ds	1
   495  0000CB                     demine@mine:
   496                           	opt callstack 0
   497                           
   498                           ; 1 bytes @ 0x17
   499  0000CB                     	ds	1
   500  0000CC                     demine@x:
   501                           	opt callstack 0
   502  0000CC                     metToucheCombien@mine:
   503                           	opt callstack 0
   504                           
   505                           ; 2 bytes @ 0x18
   506  0000CC                     	ds	1
   507  0000CD                     rempliMines@i:
   508                           	opt callstack 0
   509                           
   510                           ; 2 bytes @ 0x19
   511  0000CD                     	ds	1
   512  0000CE                     metToucheCombien@i:
   513                           	opt callstack 0
   514                           
   515                           ; 2 bytes @ 0x1A
   516  0000CE                     	ds	1
   517  0000CF                     rempliMines@j:
   518                           	opt callstack 0
   519                           
   520                           ; 2 bytes @ 0x1B
   521  0000CF                     	ds	1
   522  0000D0                     metToucheCombien@j:
   523                           	opt callstack 0
   524                           
   525                           ; 2 bytes @ 0x1C
   526  0000D0                     	ds	1
   527  0000D1                     rempliMines@x:
   528                           	opt callstack 0
   529                           
   530                           ; 1 bytes @ 0x1D
   531  0000D1                     	ds	1
   532  0000D2                     rempliMines@y:
   533                           	opt callstack 0
   534                           
   535                           ; 1 bytes @ 0x1E
   536  0000D2                     	ds	1
   537  0000D3                     rempliMines@nbMine:
   538                           	opt callstack 0
   539                           
   540                           ; 1 bytes @ 0x1F
   541  0000D3                     	ds	1
   542  0000D4                     rempliMines@i_384:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x20
   546  0000D4                     	ds	2
   547  0000D6                     rempliMines@j_385:
   548                           	opt callstack 0
   549                           
   550                           ; 2 bytes @ 0x22
   551  0000D6                     	ds	2
   552  0000D8                     ??_main:
   553                           
   554                           ; 1 bytes @ 0x24
   555  0000D8                     	ds	1
   556  0000D9                     main@NBMines:
   557                           	opt callstack 0
   558                           
   559                           ; 2 bytes @ 0x25
   560  0000D9                     	ds	2
   561  0000DB                     main@x:
   562                           	opt callstack 0
   563                           
   564                           ; 1 bytes @ 0x27
   565  0000DB                     	ds	1
   566  0000DC                     main@y:
   567                           	opt callstack 0
   568                           
   569                           ; 1 bytes @ 0x28
   570  0000DC                     	ds	1
   571                           
   572 ;;
   573 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   574 ;;
   575 ;; *************** function _main *****************
   576 ;; Defined at:
   577 ;;		line 51 in file "main.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  NBMines         2   37[BANK0 ] int 
   582 ;;  y               1   40[BANK0 ] unsigned char 
   583 ;;  x               1   39[BANK0 ] unsigned char 
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      void 
   586 ;; Registers used:
   587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   593 ;;      Params:         0       0       0       0       0       0       0
   594 ;;      Locals:         0       4       0       0       0       0       0
   595 ;;      Temps:          0       1       0       0       0       0       0
   596 ;;      Totals:         0       5       0       0       0       0       0
   597 ;;Total ram usage:        5 bytes
   598 ;; Hardware stack levels required when called:    6
   599 ;; This function calls:
   600 ;;		_afficheTabVue
   601 ;;		_demine
   602 ;;		_deplace
   603 ;;		_gagne
   604 ;;		_initTabVue
   605 ;;		_init_serie
   606 ;;		_initialisation
   607 ;;		_lcd_curseurHome
   608 ;;		_lcd_init
   609 ;;		_lcd_putMessage
   610 ;;		_metToucheCombien
   611 ;;		_rempliMines
   612 ;; This function is called by:
   613 ;;		Startup code after reset
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           	psect	text0
   618  001ECA                     __ptext0:
   619                           	opt callstack 0
   620  001ECA                     _main:
   621                           	opt callstack 25
   622  001ECA                     
   623                           ;main.c: 53: initialisation();
   624  001ECA  EC32  F013         	call	_initialisation	;wreg free
   625                           
   626                           ;main.c: 54: init_serie();
   627  001ECE  EC45  F013         	call	_init_serie	;wreg free
   628  001ED2                     
   629                           ;main.c: 55: lcd_init();
   630  001ED2  EC0A  F013         	call	_lcd_init	;wreg free
   631  001ED6                     
   632                           ;main.c: 56: initTabVue();
   633  001ED6  ECEB  F00D         	call	_initTabVue	;wreg free
   634  001EDA                     
   635                           ;main.c: 57: lcd_curseurHome();
   636  001EDA  EC69  F013         	call	_lcd_curseurHome	;wreg free
   637  001EDE                     
   638                           ;main.c: 59: int NBMines=12;
   639  001EDE  0E00               	movlw	0
   640  001EE0  0100               	movlb	0	; force () banked
   641  001EE2  6FDA               	movwf	(main@NBMines+1)& (0+255),b
   642  001EE4  0E0C               	movlw	12
   643  001EE6  6FD9               	movwf	main@NBMines& (0+255),b
   644  001EE8                     
   645                           ; BSR set to: 0
   646                           ;main.c: 60: char x =(20/2);
   647  001EE8  0E0A               	movlw	10
   648  001EEA  0100               	movlb	0	; force () banked
   649  001EEC  6FDB               	movwf	main@x& (0+255),b
   650  001EEE                     
   651                           ; BSR set to: 0
   652                           ;main.c: 61: char y = (4/2);
   653  001EEE  0E02               	movlw	2
   654  001EF0  0100               	movlb	0	; force () banked
   655  001EF2  6FDC               	movwf	main@y& (0+255),b
   656  001EF4                     
   657                           ; BSR set to: 0
   658                           ;main.c: 63: lcd_putMessage("LAB6 Youlian Houehounou");
   659  001EF4  0E01               	movlw	low STR_1
   660  001EF6  0100               	movlb	0	; force () banked
   661  001EF8  6FBA               	movwf	lcd_putMessage@chaine& (0+255),b
   662  001EFA  0E06               	movlw	high STR_1
   663  001EFC  6FBB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   664  001EFE  51BA               	movf	lcd_putMessage@chaine& (0+255),w,b
   665  001F00  11BB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   666  001F02  A4D8               	btfss	status,2,c
   667  001F04  0E00               	movlw	low (__mediumconst shr (0+16))
   668  001F06  6FBC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   669  001F08  ECE2  F00F         	call	_lcd_putMessage	;wreg free
   670  001F0C                     
   671                           ;main.c: 64: rempliMines(NBMines);
   672  001F0C  C0D9  F0C8         	movff	main@NBMines,rempliMines@nb
   673  001F10  C0DA  F0C9         	movff	main@NBMines+1,rempliMines@nb+1
   674  001F14  EC72  F00B         	call	_rempliMines	;wreg free
   675  001F18                     
   676                           ;main.c: 65: metToucheCombien();
   677  001F18  EC75  F00A         	call	_metToucheCombien	;wreg free
   678  001F1C                     
   679                           ;main.c: 66: afficheTabVue();
   680  001F1C  EC95  F010         	call	_afficheTabVue	;wreg free
   681  001F20                     l2674:
   682                           
   683                           ;main.c: 68: {;main.c: 69: deplace(&x,&y);
   684  001F20  0EDB               	movlw	low main@x
   685  001F22  0100               	movlb	0	; force () banked
   686  001F24  6FB9               	movwf	deplace@x& (0+255),b
   687  001F26  0E00               	movlw	high main@x
   688  001F28  6FBA               	movwf	(deplace@x+1)& (0+255),b
   689  001F2A  0EDC               	movlw	low main@y
   690  001F2C  0100               	movlb	0	; force () banked
   691  001F2E  6FBB               	movwf	deplace@y& (0+255),b
   692  001F30  0E00               	movlw	high main@y
   693  001F32  6FBC               	movwf	(deplace@y+1)& (0+255),b
   694  001F34  EC28  F00D         	call	_deplace	;wreg free
   695  001F38                     
   696                           ;main.c: 70: if (PORTBbits.RB1 ==0)
   697  001F38  B281               	btfsc	129,1,c	;volatile
   698  001F3A  EFA1  F00F         	goto	u2591
   699  001F3E  EFA3  F00F         	goto	u2590
   700  001F42                     u2591:
   701  001F42  EFD5  F00F         	goto	l2688
   702  001F46                     u2590:
   703  001F46                     
   704                           ;main.c: 71: {;main.c: 72: if((demine(x,y)==0)||(gagne(&NBMines)==1))
   705  001F46  C0DC  F0C6         	movff	main@y,demine@y
   706  001F4A  0100               	movlb	0	; force () banked
   707  001F4C  51DB               	movf	main@x& (0+255),w,b
   708  001F4E  EC63  F00C         	call	_demine
   709  001F52  0900               	iorlw	0
   710  001F54  B4D8               	btfsc	status,2,c
   711  001F56  EFAF  F00F         	goto	u2601
   712  001F5A  EFB1  F00F         	goto	u2600
   713  001F5E                     u2601:
   714  001F5E  EFC0  F00F         	goto	l2682
   715  001F62                     u2600:
   716  001F62  0ED9               	movlw	low main@NBMines
   717  001F64  0100               	movlb	0	; force () banked
   718  001F66  6FBA               	movwf	gagne@pMines& (0+255),b
   719  001F68  0E00               	movlw	high main@NBMines
   720  001F6A  6FBB               	movwf	(gagne@pMines+1)& (0+255),b
   721  001F6C  ECA8  F00E         	call	_gagne	;wreg free
   722  001F70  06E8               	decf	wreg,f,c
   723  001F72  A4D8               	btfss	status,2,c
   724  001F74  EFBE  F00F         	goto	u2611
   725  001F78  EFC0  F00F         	goto	u2610
   726  001F7C                     u2611:
   727  001F7C  EFD5  F00F         	goto	l2688
   728  001F80                     u2610:
   729  001F80                     l2682:
   730                           
   731                           ;main.c: 73: {;main.c: 74: afficheTabVue();
   732  001F80  EC95  F010         	call	_afficheTabVue	;wreg free
   733  001F84                     l74:
   734  001F84  B281               	btfsc	129,1,c	;volatile
   735  001F86  EFC7  F00F         	goto	u2621
   736  001F8A  EFC9  F00F         	goto	u2620
   737  001F8E                     u2621:
   738  001F8E  EFC2  F00F         	goto	l74
   739  001F92                     u2620:
   740  001F92                     
   741                           ;main.c: 76: initTabVue();
   742  001F92  ECEB  F00D         	call	_initTabVue	;wreg free
   743                           
   744                           ;main.c: 77: rempliMines(NBMines);
   745  001F96  C0D9  F0C8         	movff	main@NBMines,rempliMines@nb
   746  001F9A  C0DA  F0C9         	movff	main@NBMines+1,rempliMines@nb+1
   747  001F9E  EC72  F00B         	call	_rempliMines	;wreg free
   748                           
   749                           ;main.c: 78: metToucheCombien();
   750  001FA2  EC75  F00A         	call	_metToucheCombien	;wreg free
   751  001FA6                     
   752                           ;main.c: 79: afficheTabVue();
   753  001FA6  EC95  F010         	call	_afficheTabVue	;wreg free
   754  001FAA                     l2688:
   755                           
   756                           ;main.c: 80: };main.c: 81: };main.c: 82: _delay((unsigned long)((100)*(1000000/4000.0)))
      +                          ;
   757  001FAA  0E21               	movlw	33
   758  001FAC  0100               	movlb	0	; force () banked
   759  001FAE  6FD8               	movwf	??_main& (0+255),b
   760  001FB0  0E76               	movlw	118
   761  001FB2                     u2637:
   762  001FB2  2EE8               	decfsz	wreg,f,c
   763  001FB4  D7FE               	bra	u2637
   764  001FB6  2FD8               	decfsz	??_main& (0+255),f,b
   765  001FB8  D7FC               	bra	u2637
   766  001FBA  F000               	nop	
   767  001FBC  EF90  F00F         	goto	l2674
   768  001FC0  EF00  F000         	goto	start
   769  001FC4                     __end_of_main:
   770                           	opt callstack 0
   771                           
   772 ;; *************** function _rempliMines *****************
   773 ;; Defined at:
   774 ;;		line 157 in file "main.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;  nb              2   20[BANK0 ] int 
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  j               2   34[BANK0 ] int 
   779 ;;  i               2   32[BANK0 ] int 
   780 ;;  j               2   27[BANK0 ] int 
   781 ;;  i               2   25[BANK0 ] int 
   782 ;;  nbMine          1   31[BANK0 ] unsigned char 
   783 ;;  y               1   30[BANK0 ] unsigned char 
   784 ;;  x               1   29[BANK0 ] unsigned char 
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   794 ;;      Params:         0       2       0       0       0       0       0
   795 ;;      Locals:         0      11       0       0       0       0       0
   796 ;;      Temps:          0       3       0       0       0       0       0
   797 ;;      Totals:         0      16       0       0       0       0       0
   798 ;;Total ram usage:       16 bytes
   799 ;; Hardware stack levels used:    1
   800 ;; Hardware stack levels required when called:    2
   801 ;; This function calls:
   802 ;;		___awmod
   803 ;;		___wmul
   804 ;;		_rand
   805 ;; This function is called by:
   806 ;;		_main
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text1
   811  0016E4                     __ptext1:
   812                           	opt callstack 0
   813  0016E4                     _rempliMines:
   814                           	opt callstack 28
   815  0016E4                     
   816                           ;main.c: 159: int i=0;
   817  0016E4  0E00               	movlw	0
   818  0016E6  0100               	movlb	0	; force () banked
   819  0016E8  6FCE               	movwf	(rempliMines@i+1)& (0+255),b
   820  0016EA  0E00               	movlw	0
   821  0016EC  6FCD               	movwf	rempliMines@i& (0+255),b
   822                           
   823                           ;main.c: 160: int j=0;
   824  0016EE  0E00               	movlw	0
   825  0016F0  0100               	movlb	0	; force () banked
   826  0016F2  6FD0               	movwf	(rempliMines@j+1)& (0+255),b
   827  0016F4  0E00               	movlw	0
   828  0016F6  6FCF               	movwf	rempliMines@j& (0+255),b
   829                           
   830                           ;main.c: 161: char x =0;
   831  0016F8  0E00               	movlw	0
   832  0016FA  0100               	movlb	0	; force () banked
   833  0016FC  6FD1               	movwf	rempliMines@x& (0+255),b
   834                           
   835                           ;main.c: 162: char y =0;
   836  0016FE  0E00               	movlw	0
   837  001700  0100               	movlb	0	; force () banked
   838  001702  6FD2               	movwf	rempliMines@y& (0+255),b
   839                           
   840                           ;main.c: 163: char nbMine =0;
   841  001704  0E00               	movlw	0
   842  001706  0100               	movlb	0	; force () banked
   843  001708  6FD3               	movwf	rempliMines@nbMine& (0+255),b
   844                           
   845                           ;main.c: 165: for (int i=0;i<4;i++)
   846  00170A  0E00               	movlw	0
   847  00170C  0100               	movlb	0	; force () banked
   848  00170E  6FD5               	movwf	(rempliMines@i_384+1)& (0+255),b
   849  001710  0E00               	movlw	0
   850  001712  6FD4               	movwf	rempliMines@i_384& (0+255),b
   851  001714                     
   852                           ; BSR set to: 0
   853  001714  0100               	movlb	0	; force () banked
   854  001716  BFD5               	btfsc	(rempliMines@i_384+1)& (0+255),7,b
   855  001718  EF97  F00B         	goto	u2261
   856  00171C  51D5               	movf	(rempliMines@i_384+1)& (0+255),w,b
   857  00171E  E109               	bnz	u2260
   858  001720  0E04               	movlw	4
   859  001722  5DD4               	subwf	rempliMines@i_384& (0+255),w,b
   860  001724  A0D8               	btfss	status,0,c
   861  001726  EF97  F00B         	goto	u2261
   862  00172A  EF99  F00B         	goto	u2260
   863  00172E                     u2261:
   864  00172E  EF9B  F00B         	goto	l2482
   865  001732                     u2260:
   866  001732  EF4D  F00C         	goto	l2506
   867  001736                     l2482:
   868                           
   869                           ; BSR set to: 0
   870                           ;main.c: 166: {;main.c: 167: for (int j=0;j<20;j++)
   871  001736  0E00               	movlw	0
   872  001738  0100               	movlb	0	; force () banked
   873  00173A  6FD7               	movwf	(rempliMines@j_385+1)& (0+255),b
   874  00173C  0E00               	movlw	0
   875  00173E  6FD6               	movwf	rempliMines@j_385& (0+255),b
   876  001740                     
   877                           ; BSR set to: 0
   878  001740  0100               	movlb	0	; force () banked
   879  001742  BFD7               	btfsc	(rempliMines@j_385+1)& (0+255),7,b
   880  001744  EFAD  F00B         	goto	u2271
   881  001748  51D7               	movf	(rempliMines@j_385+1)& (0+255),w,b
   882  00174A  E109               	bnz	u2270
   883  00174C  0E14               	movlw	20
   884  00174E  5DD6               	subwf	rempliMines@j_385& (0+255),w,b
   885  001750  A0D8               	btfss	status,0,c
   886  001752  EFAD  F00B         	goto	u2271
   887  001756  EFAF  F00B         	goto	u2270
   888  00175A                     u2271:
   889  00175A  EFB1  F00B         	goto	l2488
   890  00175E                     u2270:
   891  00175E  EFE7  F00B         	goto	l2494
   892  001762                     l2488:
   893                           
   894                           ; BSR set to: 0
   895                           ;main.c: 168: {;main.c: 169: m_tabMines[i][j]=32;
   896  001762  C0D4  F0B4         	movff	rempliMines@i_384,___wmul@multiplier
   897  001766  C0D5  F0B5         	movff	rempliMines@i_384+1,___wmul@multiplier+1
   898  00176A  0E00               	movlw	0
   899  00176C  0100               	movlb	0	; force () banked
   900  00176E  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
   901  001770  0E15               	movlw	21
   902  001772  6FB6               	movwf	___wmul@multiplicand& (0+255),b
   903  001774  EC1E  F013         	call	___wmul	;wreg free
   904  001778  0E60               	movlw	low _m_tabMines
   905  00177A  0100               	movlb	0	; force () banked
   906  00177C  6FCA               	movwf	??_rempliMines& (0+255),b
   907  00177E  0E00               	movlw	high _m_tabMines
   908  001780  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   909  001782  0100               	movlb	0	; force () banked
   910  001784  51B4               	movf	?___wmul& (0+255),w,b
   911  001786  0100               	movlb	0	; force () banked
   912  001788  27CA               	addwf	??_rempliMines& (0+255),f,b
   913  00178A  0100               	movlb	0	; force () banked
   914  00178C  51B5               	movf	(?___wmul+1)& (0+255),w,b
   915  00178E  0100               	movlb	0	; force () banked
   916  001790  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   917  001792  0100               	movlb	0	; force () banked
   918  001794  51D6               	movf	rempliMines@j_385& (0+255),w,b
   919  001796  0100               	movlb	0	; force () banked
   920  001798  25CA               	addwf	??_rempliMines& (0+255),w,b
   921  00179A  6ED9               	movwf	fsr2l,c
   922  00179C  0100               	movlb	0	; force () banked
   923  00179E  51D7               	movf	(rempliMines@j_385+1)& (0+255),w,b
   924  0017A0  0100               	movlb	0	; force () banked
   925  0017A2  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   926  0017A4  6EDA               	movwf	fsr2h,c
   927  0017A6  0E20               	movlw	32
   928  0017A8  6EDF               	movwf	indf2,c
   929  0017AA                     
   930                           ; BSR set to: 0
   931  0017AA  0100               	movlb	0	; force () banked
   932  0017AC  4BD6               	infsnz	rempliMines@j_385& (0+255),f,b
   933  0017AE  2BD7               	incf	(rempliMines@j_385+1)& (0+255),f,b
   934  0017B0                     
   935                           ; BSR set to: 0
   936  0017B0  0100               	movlb	0	; force () banked
   937  0017B2  BFD7               	btfsc	(rempliMines@j_385+1)& (0+255),7,b
   938  0017B4  EFE5  F00B         	goto	u2281
   939  0017B8  51D7               	movf	(rempliMines@j_385+1)& (0+255),w,b
   940  0017BA  E109               	bnz	u2280
   941  0017BC  0E14               	movlw	20
   942  0017BE  5DD6               	subwf	rempliMines@j_385& (0+255),w,b
   943  0017C0  A0D8               	btfss	status,0,c
   944  0017C2  EFE5  F00B         	goto	u2281
   945  0017C6  EFE7  F00B         	goto	u2280
   946  0017CA                     u2281:
   947  0017CA  EFB1  F00B         	goto	l2488
   948  0017CE                     u2280:
   949  0017CE                     l2494:
   950                           
   951                           ; BSR set to: 0
   952  0017CE  0100               	movlb	0	; force () banked
   953  0017D0  4BD4               	infsnz	rempliMines@i_384& (0+255),f,b
   954  0017D2  2BD5               	incf	(rempliMines@i_384+1)& (0+255),f,b
   955  0017D4                     
   956                           ; BSR set to: 0
   957  0017D4  0100               	movlb	0	; force () banked
   958  0017D6  BFD5               	btfsc	(rempliMines@i_384+1)& (0+255),7,b
   959  0017D8  EFF7  F00B         	goto	u2291
   960  0017DC  51D5               	movf	(rempliMines@i_384+1)& (0+255),w,b
   961  0017DE  E109               	bnz	u2290
   962  0017E0  0E04               	movlw	4
   963  0017E2  5DD4               	subwf	rempliMines@i_384& (0+255),w,b
   964  0017E4  A0D8               	btfss	status,0,c
   965  0017E6  EFF7  F00B         	goto	u2291
   966  0017EA  EFF9  F00B         	goto	u2290
   967  0017EE                     u2291:
   968  0017EE  EF9B  F00B         	goto	l2482
   969  0017F2                     u2290:
   970  0017F2  EF4D  F00C         	goto	l2506
   971  0017F6                     l2498:
   972                           
   973                           ; BSR set to: 0
   974                           ;main.c: 174: {;main.c: 175: x = rand()%20;
   975  0017F6  EC44  F012         	call	_rand	;wreg free
   976  0017FA  C0C0  F0C2         	movff	?_rand,___awmod@dividend
   977  0017FE  C0C1  F0C3         	movff	?_rand+1,___awmod@dividend+1
   978  001802  0E00               	movlw	0
   979  001804  0100               	movlb	0	; force () banked
   980  001806  6FC5               	movwf	(___awmod@divisor+1)& (0+255),b
   981  001808  0E14               	movlw	20
   982  00180A  6FC4               	movwf	___awmod@divisor& (0+255),b
   983  00180C  EC3C  F010         	call	___awmod	;wreg free
   984  001810  0100               	movlb	0	; force () banked
   985  001812  51C2               	movf	?___awmod& (0+255),w,b
   986  001814  0100               	movlb	0	; force () banked
   987  001816  6FD1               	movwf	rempliMines@x& (0+255),b
   988                           
   989                           ;main.c: 176: y = rand()%4;
   990  001818  EC44  F012         	call	_rand	;wreg free
   991  00181C  0100               	movlb	0	; force () banked
   992  00181E  51C0               	movf	?_rand& (0+255),w,b
   993  001820  0B03               	andlw	3
   994  001822  0100               	movlb	0	; force () banked
   995  001824  6FD2               	movwf	rempliMines@y& (0+255),b
   996  001826                     
   997                           ; BSR set to: 0
   998                           ;main.c: 177: if (m_tabMines[y][x]==32)
   999  001826  0100               	movlb	0	; force () banked
  1000  001828  51D2               	movf	rempliMines@y& (0+255),w,b
  1001  00182A  0D15               	mullw	21
  1002  00182C  0E60               	movlw	low _m_tabMines
  1003  00182E  0100               	movlb	0	; force () banked
  1004  001830  6FCA               	movwf	??_rempliMines& (0+255),b
  1005  001832  0E00               	movlw	high _m_tabMines
  1006  001834  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
  1007  001836  50F3               	movf	243,w,c
  1008  001838  27CA               	addwf	??_rempliMines& (0+255),f,b
  1009  00183A  50F4               	movf	244,w,c
  1010  00183C  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
  1011  00183E  0100               	movlb	0	; force () banked
  1012  001840  51D1               	movf	rempliMines@x& (0+255),w,b
  1013  001842  0100               	movlb	0	; force () banked
  1014  001844  25CA               	addwf	??_rempliMines& (0+255),w,b
  1015  001846  6ED9               	movwf	fsr2l,c
  1016  001848  0100               	movlb	0	; force () banked
  1017  00184A  0E00               	movlw	0
  1018  00184C  0100               	movlb	0	; force () banked
  1019  00184E  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
  1020  001850  6EDA               	movwf	fsr2h,c
  1021  001852  0E20               	movlw	32
  1022  001854  18DE               	xorwf	postinc2,w,c
  1023  001856  A4D8               	btfss	status,2,c
  1024  001858  EF30  F00C         	goto	u2301
  1025  00185C  EF32  F00C         	goto	u2300
  1026  001860                     u2301:
  1027  001860  EF4D  F00C         	goto	l2506
  1028  001864                     u2300:
  1029  001864                     
  1030                           ; BSR set to: 0
  1031                           ;main.c: 178: {;main.c: 179: m_tabMines[y][x] = 2;
  1032  001864  0100               	movlb	0	; force () banked
  1033  001866  51D2               	movf	rempliMines@y& (0+255),w,b
  1034  001868  0D15               	mullw	21
  1035  00186A  0E60               	movlw	low _m_tabMines
  1036  00186C  0100               	movlb	0	; force () banked
  1037  00186E  6FCA               	movwf	??_rempliMines& (0+255),b
  1038  001870  0E00               	movlw	high _m_tabMines
  1039  001872  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
  1040  001874  50F3               	movf	243,w,c
  1041  001876  27CA               	addwf	??_rempliMines& (0+255),f,b
  1042  001878  50F4               	movf	244,w,c
  1043  00187A  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
  1044  00187C  0100               	movlb	0	; force () banked
  1045  00187E  51D1               	movf	rempliMines@x& (0+255),w,b
  1046  001880  0100               	movlb	0	; force () banked
  1047  001882  25CA               	addwf	??_rempliMines& (0+255),w,b
  1048  001884  6ED9               	movwf	fsr2l,c
  1049  001886  0100               	movlb	0	; force () banked
  1050  001888  0E00               	movlw	0
  1051  00188A  0100               	movlb	0	; force () banked
  1052  00188C  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
  1053  00188E  6EDA               	movwf	fsr2h,c
  1054  001890  0E02               	movlw	2
  1055  001892  6EDF               	movwf	indf2,c
  1056  001894                     
  1057                           ; BSR set to: 0
  1058                           ;main.c: 180: nbMine = nbMine + 1;
  1059  001894  0100               	movlb	0	; force () banked
  1060  001896  29D3               	incf	rempliMines@nbMine& (0+255),w,b
  1061  001898  6FD3               	movwf	rempliMines@nbMine& (0+255),b
  1062  00189A                     l2506:
  1063                           
  1064                           ; BSR set to: 0
  1065  00189A  0100               	movlb	0	; force () banked
  1066  00189C  51D3               	movf	rempliMines@nbMine& (0+255),w,b
  1067  00189E  0100               	movlb	0	; force () banked
  1068  0018A0  6FCA               	movwf	??_rempliMines& (0+255),b
  1069  0018A2  6BCB               	clrf	(??_rempliMines+1)& (0+255),b
  1070  0018A4  0100               	movlb	0	; force () banked
  1071  0018A6  51C8               	movf	rempliMines@nb& (0+255),w,b
  1072  0018A8  0100               	movlb	0	; force () banked
  1073  0018AA  19CA               	xorwf	??_rempliMines& (0+255),w,b
  1074  0018AC  E109               	bnz	u2311
  1075  0018AE  0100               	movlb	0	; force () banked
  1076  0018B0  51C9               	movf	(rempliMines@nb+1)& (0+255),w,b
  1077  0018B2  0100               	movlb	0	; force () banked
  1078  0018B4  19CB               	xorwf	(??_rempliMines+1)& (0+255),w,b
  1079  0018B6  A4D8               	btfss	status,2,c
  1080  0018B8  EF60  F00C         	goto	u2311
  1081  0018BC  EF62  F00C         	goto	u2310
  1082  0018C0                     u2311:
  1083  0018C0  EFFB  F00B         	goto	l2498
  1084  0018C4                     u2310:
  1085  0018C4                     
  1086                           ; BSR set to: 0
  1087  0018C4  0012               	return		;funcret
  1088  0018C6                     __end_of_rempliMines:
  1089                           	opt callstack 0
  1090                           
  1091 ;; *************** function _rand *****************
  1092 ;; Defined at:
  1093 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  2   12[BANK0 ] int 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2, status,0, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1107 ;;      Params:         0       2       0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0       0       0
  1110 ;;      Totals:         0       2       0       0       0       0       0
  1111 ;;Total ram usage:        2 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:    1
  1114 ;; This function calls:
  1115 ;;		___lmul
  1116 ;; This function is called by:
  1117 ;;		_rempliMines
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text2
  1122  002488                     __ptext2:
  1123                           	opt callstack 0
  1124  002488                     _rand:
  1125                           	opt callstack 28
  1126  002488  C0DD  F0B4         	movff	_randx,___lmul@multiplier
  1127  00248C  C0DE  F0B5         	movff	_randx+1,___lmul@multiplier+1
  1128  002490  C0DF  F0B6         	movff	_randx+2,___lmul@multiplier+2
  1129  002494  C0E0  F0B7         	movff	_randx+3,___lmul@multiplier+3
  1130  002498  0E6D               	movlw	109
  1131  00249A  0100               	movlb	0	; () banked
  1132  00249C  6FB8               	movwf	___lmul@multiplicand& (0+255),b
  1133  00249E  0E4E               	movlw	78
  1134  0024A0  6FB9               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1135  0024A2  0EC6               	movlw	198
  1136  0024A4  6FBA               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1137  0024A6  0E41               	movlw	65
  1138  0024A8  6FBB               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1139  0024AA  EC74  F011         	call	___lmul	;wreg free
  1140  0024AE  C0B4  F0DD         	movff	?___lmul,_randx
  1141  0024B2  C0B5  F0DE         	movff	?___lmul+1,_randx+1
  1142  0024B6  C0B6  F0DF         	movff	?___lmul+2,_randx+2
  1143  0024BA  C0B7  F0E0         	movff	?___lmul+3,_randx+3
  1144  0024BE  0E39               	movlw	57
  1145  0024C0  0100               	movlb	0	; () banked
  1146  0024C2  27DD               	addwf	_randx& (0+255),f,b
  1147  0024C4  0E30               	movlw	48
  1148  0024C6  23DE               	addwfc	(_randx+1)& (0+255),f,b
  1149  0024C8  0E00               	movlw	0
  1150  0024CA  23DF               	addwfc	(_randx+2)& (0+255),f,b
  1151  0024CC  0E00               	movlw	0
  1152  0024CE  23E0               	addwfc	(_randx+3)& (0+255),f,b
  1153  0024D0                     
  1154                           ; BSR set to: 0
  1155  0024D0  0EFF               	movlw	255
  1156  0024D2  15DF               	andwf	(_randx+2)& (0+255),w,b
  1157  0024D4  6FC0               	movwf	?_rand& (0+255),b
  1158  0024D6  0E7F               	movlw	127
  1159  0024D8  15E0               	andwf	(_randx+3)& (0+255),w,b
  1160  0024DA  6FC1               	movwf	(?_rand+1)& (0+255),b
  1161  0024DC                     
  1162                           ; BSR set to: 0
  1163  0024DC  0012               	return		;funcret
  1164  0024DE                     __end_of_rand:
  1165                           	opt callstack 0
  1166                           
  1167 ;; *************** function ___lmul *****************
  1168 ;; Defined at:
  1169 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1172 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;  product         4    8[BANK0 ] unsigned long 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  4    0[BANK0 ] unsigned long 
  1177 ;; Registers used:
  1178 ;;		wreg, status,2, status,0
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1184 ;;      Params:         0       8       0       0       0       0       0
  1185 ;;      Locals:         0       4       0       0       0       0       0
  1186 ;;      Temps:          0       0       0       0       0       0       0
  1187 ;;      Totals:         0      12       0       0       0       0       0
  1188 ;;Total ram usage:       12 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; This function calls:
  1191 ;;		Nothing
  1192 ;; This function is called by:
  1193 ;;		_rand
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text3
  1198  0022E8                     __ptext3:
  1199                           	opt callstack 0
  1200  0022E8                     ___lmul:
  1201                           	opt callstack 28
  1202  0022E8  0E00               	movlw	0
  1203  0022EA  0100               	movlb	0	; () banked
  1204  0022EC  6FBC               	movwf	___lmul@product& (0+255),b
  1205  0022EE  0E00               	movlw	0
  1206  0022F0  6FBD               	movwf	(___lmul@product+1)& (0+255),b
  1207  0022F2  0E00               	movlw	0
  1208  0022F4  6FBE               	movwf	(___lmul@product+2)& (0+255),b
  1209  0022F6  0E00               	movlw	0
  1210  0022F8  6FBF               	movwf	(___lmul@product+3)& (0+255),b
  1211  0022FA                     l2082:
  1212                           
  1213                           ; BSR set to: 0
  1214  0022FA  A1B4               	btfss	___lmul@multiplier& (0+255),0,b
  1215  0022FC  EF82  F011         	goto	u1381
  1216  002300  EF84  F011         	goto	u1380
  1217  002304                     u1381:
  1218  002304  EF8C  F011         	goto	l2086
  1219  002308                     u1380:
  1220  002308                     
  1221                           ; BSR set to: 0
  1222  002308  51B8               	movf	___lmul@multiplicand& (0+255),w,b
  1223  00230A  27BC               	addwf	___lmul@product& (0+255),f,b
  1224  00230C  51B9               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1225  00230E  23BD               	addwfc	(___lmul@product+1)& (0+255),f,b
  1226  002310  51BA               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1227  002312  23BE               	addwfc	(___lmul@product+2)& (0+255),f,b
  1228  002314  51BB               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1229  002316  23BF               	addwfc	(___lmul@product+3)& (0+255),f,b
  1230  002318                     l2086:
  1231                           
  1232                           ; BSR set to: 0
  1233  002318  90D8               	bcf	status,0,c
  1234  00231A  37B8               	rlcf	___lmul@multiplicand& (0+255),f,b
  1235  00231C  37B9               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1236  00231E  37BA               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1237  002320  37BB               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1238  002322                     
  1239                           ; BSR set to: 0
  1240  002322  90D8               	bcf	status,0,c
  1241  002324  33B7               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1242  002326  33B6               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1243  002328  33B5               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1244  00232A  33B4               	rrcf	___lmul@multiplier& (0+255),f,b
  1245  00232C  51B4               	movf	___lmul@multiplier& (0+255),w,b
  1246  00232E  11B5               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1247  002330  11B6               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1248  002332  11B7               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1249  002334  A4D8               	btfss	status,2,c
  1250  002336  EF9F  F011         	goto	u1391
  1251  00233A  EFA1  F011         	goto	u1390
  1252  00233E                     u1391:
  1253  00233E  EF7D  F011         	goto	l2082
  1254  002342                     u1390:
  1255  002342                     
  1256                           ; BSR set to: 0
  1257  002342  C0BC  F0B4         	movff	___lmul@product,?___lmul
  1258  002346  C0BD  F0B5         	movff	___lmul@product+1,?___lmul+1
  1259  00234A  C0BE  F0B6         	movff	___lmul@product+2,?___lmul+2
  1260  00234E  C0BF  F0B7         	movff	___lmul@product+3,?___lmul+3
  1261  002352                     
  1262                           ; BSR set to: 0
  1263  002352  0012               	return		;funcret
  1264  002354                     __end_of___lmul:
  1265                           	opt callstack 0
  1266                           
  1267 ;; *************** function ___awmod *****************
  1268 ;; Defined at:
  1269 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  dividend        2   14[BANK0 ] int 
  1272 ;;  divisor         2   16[BANK0 ] int 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  sign            1   19[BANK0 ] unsigned char 
  1275 ;;  counter         1   18[BANK0 ] unsigned char 
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  2   14[BANK0 ] int 
  1278 ;; Registers used:
  1279 ;;		wreg, status,2, status,0
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1285 ;;      Params:         0       4       0       0       0       0       0
  1286 ;;      Locals:         0       2       0       0       0       0       0
  1287 ;;      Temps:          0       0       0       0       0       0       0
  1288 ;;      Totals:         0       6       0       0       0       0       0
  1289 ;;Total ram usage:        6 bytes
  1290 ;; Hardware stack levels used:    1
  1291 ;; This function calls:
  1292 ;;		Nothing
  1293 ;; This function is called by:
  1294 ;;		_rempliMines
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text4
  1299  002078                     __ptext4:
  1300                           	opt callstack 0
  1301  002078                     ___awmod:
  1302                           	opt callstack 29
  1303  002078  0E00               	movlw	0
  1304  00207A  0100               	movlb	0	; () banked
  1305  00207C  6FC7               	movwf	___awmod@sign& (0+255),b
  1306  00207E                     
  1307                           ; BSR set to: 0
  1308  00207E  BFC3               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1309  002080  EF46  F010         	goto	u2140
  1310  002084  EF44  F010         	goto	u2141
  1311  002088                     u2141:
  1312  002088  EF4C  F010         	goto	l2416
  1313  00208C                     u2140:
  1314  00208C                     
  1315                           ; BSR set to: 0
  1316  00208C  6DC2               	negf	___awmod@dividend& (0+255),b
  1317  00208E  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1318  002090  B0D8               	btfsc	status,0,c
  1319  002092  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1320  002094                     
  1321                           ; BSR set to: 0
  1322  002094  0E01               	movlw	1
  1323  002096  6FC7               	movwf	___awmod@sign& (0+255),b
  1324  002098                     l2416:
  1325                           
  1326                           ; BSR set to: 0
  1327  002098  BFC5               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1328  00209A  EF53  F010         	goto	u2150
  1329  00209E  EF51  F010         	goto	u2151
  1330  0020A2                     u2151:
  1331  0020A2  EF57  F010         	goto	l2420
  1332  0020A6                     u2150:
  1333  0020A6                     
  1334                           ; BSR set to: 0
  1335  0020A6  6DC4               	negf	___awmod@divisor& (0+255),b
  1336  0020A8  1FC5               	comf	(___awmod@divisor+1)& (0+255),f,b
  1337  0020AA  B0D8               	btfsc	status,0,c
  1338  0020AC  2BC5               	incf	(___awmod@divisor+1)& (0+255),f,b
  1339  0020AE                     l2420:
  1340                           
  1341                           ; BSR set to: 0
  1342  0020AE  51C4               	movf	___awmod@divisor& (0+255),w,b
  1343  0020B0  11C5               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1344  0020B2  B4D8               	btfsc	status,2,c
  1345  0020B4  EF5E  F010         	goto	u2161
  1346  0020B8  EF60  F010         	goto	u2160
  1347  0020BC                     u2161:
  1348  0020BC  EF84  F010         	goto	l2436
  1349  0020C0                     u2160:
  1350  0020C0                     
  1351                           ; BSR set to: 0
  1352  0020C0  0E01               	movlw	1
  1353  0020C2  6FC6               	movwf	___awmod@counter& (0+255),b
  1354  0020C4  EF68  F010         	goto	l2426
  1355  0020C8                     l2424:
  1356                           
  1357                           ; BSR set to: 0
  1358  0020C8  90D8               	bcf	status,0,c
  1359  0020CA  37C4               	rlcf	___awmod@divisor& (0+255),f,b
  1360  0020CC  37C5               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1361  0020CE  2BC6               	incf	___awmod@counter& (0+255),f,b
  1362  0020D0                     l2426:
  1363                           
  1364                           ; BSR set to: 0
  1365  0020D0  AFC5               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1366  0020D2  EF6D  F010         	goto	u2171
  1367  0020D6  EF6F  F010         	goto	u2170
  1368  0020DA                     u2171:
  1369  0020DA  EF64  F010         	goto	l2424
  1370  0020DE                     u2170:
  1371  0020DE                     l2428:
  1372                           
  1373                           ; BSR set to: 0
  1374  0020DE  51C4               	movf	___awmod@divisor& (0+255),w,b
  1375  0020E0  5DC2               	subwf	___awmod@dividend& (0+255),w,b
  1376  0020E2  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1377  0020E4  59C3               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1378  0020E6  A0D8               	btfss	status,0,c
  1379  0020E8  EF78  F010         	goto	u2181
  1380  0020EC  EF7A  F010         	goto	u2180
  1381  0020F0                     u2181:
  1382  0020F0  EF7E  F010         	goto	l2432
  1383  0020F4                     u2180:
  1384  0020F4                     
  1385                           ; BSR set to: 0
  1386  0020F4  51C4               	movf	___awmod@divisor& (0+255),w,b
  1387  0020F6  5FC2               	subwf	___awmod@dividend& (0+255),f,b
  1388  0020F8  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1389  0020FA  5BC3               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1390  0020FC                     l2432:
  1391                           
  1392                           ; BSR set to: 0
  1393  0020FC  90D8               	bcf	status,0,c
  1394  0020FE  33C5               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1395  002100  33C4               	rrcf	___awmod@divisor& (0+255),f,b
  1396  002102                     
  1397                           ; BSR set to: 0
  1398  002102  2FC6               	decfsz	___awmod@counter& (0+255),f,b
  1399  002104  EF6F  F010         	goto	l2428
  1400  002108                     l2436:
  1401                           
  1402                           ; BSR set to: 0
  1403  002108  51C7               	movf	___awmod@sign& (0+255),w,b
  1404  00210A  B4D8               	btfsc	status,2,c
  1405  00210C  EF8A  F010         	goto	u2191
  1406  002110  EF8C  F010         	goto	u2190
  1407  002114                     u2191:
  1408  002114  EF90  F010         	goto	l2440
  1409  002118                     u2190:
  1410  002118                     
  1411                           ; BSR set to: 0
  1412  002118  6DC2               	negf	___awmod@dividend& (0+255),b
  1413  00211A  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1414  00211C  B0D8               	btfsc	status,0,c
  1415  00211E  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1416  002120                     l2440:
  1417                           
  1418                           ; BSR set to: 0
  1419  002120  C0C2  F0C2         	movff	___awmod@dividend,?___awmod
  1420  002124  C0C3  F0C3         	movff	___awmod@dividend+1,?___awmod+1
  1421  002128                     
  1422                           ; BSR set to: 0
  1423  002128  0012               	return		;funcret
  1424  00212A                     __end_of___awmod:
  1425                           	opt callstack 0
  1426                           
  1427 ;; *************** function _metToucheCombien *****************
  1428 ;; Defined at:
  1429 ;;		line 194 in file "main.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;  j               2   28[BANK0 ] int 
  1434 ;;  i               2   26[BANK0 ] int 
  1435 ;;  mine            2   24[BANK0 ] int 
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1445 ;;      Params:         0       0       0       0       0       0       0
  1446 ;;      Locals:         0       6       0       0       0       0       0
  1447 ;;      Temps:          0       3       0       0       0       0       0
  1448 ;;      Totals:         0       9       0       0       0       0       0
  1449 ;;Total ram usage:        9 bytes
  1450 ;; Hardware stack levels used:    1
  1451 ;; Hardware stack levels required when called:    2
  1452 ;; This function calls:
  1453 ;;		___wmul
  1454 ;;		_calculToucheCombien
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text5
  1461  0014EA                     __ptext5:
  1462                           	opt callstack 0
  1463  0014EA                     _metToucheCombien:
  1464                           	opt callstack 28
  1465  0014EA                     
  1466                           ;main.c: 196: int i=0;
  1467  0014EA  0E00               	movlw	0
  1468  0014EC  0100               	movlb	0	; force () banked
  1469  0014EE  6FCF               	movwf	(metToucheCombien@i+1)& (0+255),b
  1470  0014F0  0E00               	movlw	0
  1471  0014F2  6FCE               	movwf	metToucheCombien@i& (0+255),b
  1472                           
  1473                           ;main.c: 197: int j=0;
  1474  0014F4  0E00               	movlw	0
  1475  0014F6  0100               	movlb	0	; force () banked
  1476  0014F8  6FD1               	movwf	(metToucheCombien@j+1)& (0+255),b
  1477  0014FA  0E00               	movlw	0
  1478  0014FC  6FD0               	movwf	metToucheCombien@j& (0+255),b
  1479                           
  1480                           ;main.c: 198: int mine=0;
  1481  0014FE  0E00               	movlw	0
  1482  001500  0100               	movlb	0	; force () banked
  1483  001502  6FCD               	movwf	(metToucheCombien@mine+1)& (0+255),b
  1484  001504  0E00               	movlw	0
  1485  001506  6FCC               	movwf	metToucheCombien@mine& (0+255),b
  1486                           
  1487                           ;main.c: 200: for ( i=0;i<4;i++)
  1488  001508  0E00               	movlw	0
  1489  00150A  0100               	movlb	0	; force () banked
  1490  00150C  6FCF               	movwf	(metToucheCombien@i+1)& (0+255),b
  1491  00150E  0E00               	movlw	0
  1492  001510  6FCE               	movwf	metToucheCombien@i& (0+255),b
  1493  001512                     
  1494                           ; BSR set to: 0
  1495  001512  0100               	movlb	0	; force () banked
  1496  001514  BFCF               	btfsc	(metToucheCombien@i+1)& (0+255),7,b
  1497  001516  EF96  F00A         	goto	u2321
  1498  00151A  51CF               	movf	(metToucheCombien@i+1)& (0+255),w,b
  1499  00151C  E109               	bnz	u2320
  1500  00151E  0E04               	movlw	4
  1501  001520  5DCE               	subwf	metToucheCombien@i& (0+255),w,b
  1502  001522  A0D8               	btfss	status,0,c
  1503  001524  EF96  F00A         	goto	u2321
  1504  001528  EF98  F00A         	goto	u2320
  1505  00152C                     u2321:
  1506  00152C  EF9A  F00A         	goto	l2514
  1507  001530                     u2320:
  1508  001530  EF71  F00B         	goto	l118
  1509  001534                     l2514:
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;main.c: 201: {;main.c: 202: for (j=0;j<20;j++)
  1513  001534  0E00               	movlw	0
  1514  001536  0100               	movlb	0	; force () banked
  1515  001538  6FD1               	movwf	(metToucheCombien@j+1)& (0+255),b
  1516  00153A  0E00               	movlw	0
  1517  00153C  6FD0               	movwf	metToucheCombien@j& (0+255),b
  1518  00153E                     
  1519                           ; BSR set to: 0
  1520  00153E  0100               	movlb	0	; force () banked
  1521  001540  BFD1               	btfsc	(metToucheCombien@j+1)& (0+255),7,b
  1522  001542  EFAC  F00A         	goto	u2331
  1523  001546  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1524  001548  E109               	bnz	u2330
  1525  00154A  0E14               	movlw	20
  1526  00154C  5DD0               	subwf	metToucheCombien@j& (0+255),w,b
  1527  00154E  A0D8               	btfss	status,0,c
  1528  001550  EFAC  F00A         	goto	u2331
  1529  001554  EFAE  F00A         	goto	u2330
  1530  001558                     u2331:
  1531  001558  EFB0  F00A         	goto	l2520
  1532  00155C                     u2330:
  1533  00155C  EF5F  F00B         	goto	l2536
  1534  001560                     l2520:
  1535                           
  1536                           ; BSR set to: 0
  1537                           ;main.c: 203: {;main.c: 204: if(m_tabMines[i][j]!= 2)
  1538  001560  C0CE  F0B4         	movff	metToucheCombien@i,___wmul@multiplier
  1539  001564  C0CF  F0B5         	movff	metToucheCombien@i+1,___wmul@multiplier+1
  1540  001568  0E00               	movlw	0
  1541  00156A  0100               	movlb	0	; force () banked
  1542  00156C  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1543  00156E  0E15               	movlw	21
  1544  001570  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1545  001572  EC1E  F013         	call	___wmul	;wreg free
  1546  001576  0E60               	movlw	low _m_tabMines
  1547  001578  0100               	movlb	0	; force () banked
  1548  00157A  6FC9               	movwf	??_metToucheCombien& (0+255),b
  1549  00157C  0E00               	movlw	high _m_tabMines
  1550  00157E  6FCA               	movwf	(??_metToucheCombien+1)& (0+255),b
  1551  001580  0100               	movlb	0	; force () banked
  1552  001582  51B4               	movf	?___wmul& (0+255),w,b
  1553  001584  0100               	movlb	0	; force () banked
  1554  001586  27C9               	addwf	??_metToucheCombien& (0+255),f,b
  1555  001588  0100               	movlb	0	; force () banked
  1556  00158A  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1557  00158C  0100               	movlb	0	; force () banked
  1558  00158E  23CA               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1559  001590  0100               	movlb	0	; force () banked
  1560  001592  51D0               	movf	metToucheCombien@j& (0+255),w,b
  1561  001594  0100               	movlb	0	; force () banked
  1562  001596  25C9               	addwf	??_metToucheCombien& (0+255),w,b
  1563  001598  6ED9               	movwf	fsr2l,c
  1564  00159A  0100               	movlb	0	; force () banked
  1565  00159C  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1566  00159E  0100               	movlb	0	; force () banked
  1567  0015A0  21CA               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1568  0015A2  6EDA               	movwf	fsr2h,c
  1569  0015A4  0E02               	movlw	2
  1570  0015A6  18DE               	xorwf	postinc2,w,c
  1571  0015A8  B4D8               	btfsc	status,2,c
  1572  0015AA  EFD9  F00A         	goto	u2341
  1573  0015AE  EFDB  F00A         	goto	u2340
  1574  0015B2                     u2341:
  1575  0015B2  EF4D  F00B         	goto	l2532
  1576  0015B6                     u2340:
  1577  0015B6                     
  1578                           ; BSR set to: 0
  1579                           ;main.c: 205: {;main.c: 206: mine = calculToucheCombien(i,j);
  1580  0015B6  C0CE  F0BA         	movff	metToucheCombien@i,calculToucheCombien@ligne
  1581  0015BA  C0CF  F0BB         	movff	metToucheCombien@i+1,calculToucheCombien@ligne+1
  1582  0015BE  C0D0  F0BC         	movff	metToucheCombien@j,calculToucheCombien@colonne
  1583  0015C2  C0D1  F0BD         	movff	metToucheCombien@j+1,calculToucheCombien@colonne+1
  1584  0015C6  EC0D  F003         	call	_calculToucheCombien	;wreg free
  1585  0015CA  0100               	movlb	0	; force () banked
  1586  0015CC  6FC9               	movwf	??_metToucheCombien& (0+255),b
  1587  0015CE  51C9               	movf	??_metToucheCombien& (0+255),w,b
  1588  0015D0  0100               	movlb	0	; force () banked
  1589  0015D2  6FCC               	movwf	metToucheCombien@mine& (0+255),b
  1590  0015D4  6BCD               	clrf	(metToucheCombien@mine+1)& (0+255),b
  1591  0015D6                     
  1592                           ; BSR set to: 0
  1593                           ;main.c: 207: if (mine==0)
  1594  0015D6  0100               	movlb	0	; force () banked
  1595  0015D8  51CC               	movf	metToucheCombien@mine& (0+255),w,b
  1596  0015DA  11CD               	iorwf	(metToucheCombien@mine+1)& (0+255),w,b
  1597  0015DC  A4D8               	btfss	status,2,c
  1598  0015DE  EFF3  F00A         	goto	u2351
  1599  0015E2  EFF5  F00A         	goto	u2350
  1600  0015E6                     u2351:
  1601  0015E6  EF19  F00B         	goto	l2528
  1602  0015EA                     u2350:
  1603  0015EA                     
  1604                           ; BSR set to: 0
  1605                           ;main.c: 208: {;main.c: 209: m_tabMines[i][j]=32;
  1606  0015EA  C0CE  F0B4         	movff	metToucheCombien@i,___wmul@multiplier
  1607  0015EE  C0CF  F0B5         	movff	metToucheCombien@i+1,___wmul@multiplier+1
  1608  0015F2  0E00               	movlw	0
  1609  0015F4  0100               	movlb	0	; force () banked
  1610  0015F6  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1611  0015F8  0E15               	movlw	21
  1612  0015FA  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1613  0015FC  EC1E  F013         	call	___wmul	;wreg free
  1614  001600  0E60               	movlw	low _m_tabMines
  1615  001602  0100               	movlb	0	; force () banked
  1616  001604  6FC9               	movwf	??_metToucheCombien& (0+255),b
  1617  001606  0E00               	movlw	high _m_tabMines
  1618  001608  6FCA               	movwf	(??_metToucheCombien+1)& (0+255),b
  1619  00160A  0100               	movlb	0	; force () banked
  1620  00160C  51B4               	movf	?___wmul& (0+255),w,b
  1621  00160E  0100               	movlb	0	; force () banked
  1622  001610  27C9               	addwf	??_metToucheCombien& (0+255),f,b
  1623  001612  0100               	movlb	0	; force () banked
  1624  001614  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1625  001616  0100               	movlb	0	; force () banked
  1626  001618  23CA               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1627  00161A  0100               	movlb	0	; force () banked
  1628  00161C  51D0               	movf	metToucheCombien@j& (0+255),w,b
  1629  00161E  0100               	movlb	0	; force () banked
  1630  001620  25C9               	addwf	??_metToucheCombien& (0+255),w,b
  1631  001622  6ED9               	movwf	fsr2l,c
  1632  001624  0100               	movlb	0	; force () banked
  1633  001626  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1634  001628  0100               	movlb	0	; force () banked
  1635  00162A  21CA               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1636  00162C  6EDA               	movwf	fsr2h,c
  1637  00162E  0E20               	movlw	32
  1638  001630  6EDF               	movwf	indf2,c
  1639  001632                     l2528:
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;main.c: 210: };main.c: 211: if (mine>0)
  1643  001632  0100               	movlb	0	; force () banked
  1644  001634  BFCD               	btfsc	(metToucheCombien@mine+1)& (0+255),7,b
  1645  001636  EF25  F00B         	goto	u2361
  1646  00163A  51CD               	movf	(metToucheCombien@mine+1)& (0+255),w,b
  1647  00163C  E108               	bnz	u2360
  1648  00163E  05CC               	decf	metToucheCombien@mine& (0+255),w,b
  1649  001640  A0D8               	btfss	status,0,c
  1650  001642  EF25  F00B         	goto	u2361
  1651  001646  EF27  F00B         	goto	u2360
  1652  00164A                     u2361:
  1653  00164A  EF4D  F00B         	goto	l2532
  1654  00164E                     u2360:
  1655  00164E                     
  1656                           ; BSR set to: 0
  1657                           ;main.c: 212: {;main.c: 213: m_tabMines[i][j]= (mine+48);
  1658  00164E  C0CE  F0B4         	movff	metToucheCombien@i,___wmul@multiplier
  1659  001652  C0CF  F0B5         	movff	metToucheCombien@i+1,___wmul@multiplier+1
  1660  001656  0E00               	movlw	0
  1661  001658  0100               	movlb	0	; force () banked
  1662  00165A  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1663  00165C  0E15               	movlw	21
  1664  00165E  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1665  001660  EC1E  F013         	call	___wmul	;wreg free
  1666  001664  0E60               	movlw	low _m_tabMines
  1667  001666  0100               	movlb	0	; force () banked
  1668  001668  6FC9               	movwf	??_metToucheCombien& (0+255),b
  1669  00166A  0E00               	movlw	high _m_tabMines
  1670  00166C  6FCA               	movwf	(??_metToucheCombien+1)& (0+255),b
  1671  00166E  0100               	movlb	0	; force () banked
  1672  001670  51B4               	movf	?___wmul& (0+255),w,b
  1673  001672  0100               	movlb	0	; force () banked
  1674  001674  27C9               	addwf	??_metToucheCombien& (0+255),f,b
  1675  001676  0100               	movlb	0	; force () banked
  1676  001678  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1677  00167A  0100               	movlb	0	; force () banked
  1678  00167C  23CA               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1679  00167E  0100               	movlb	0	; force () banked
  1680  001680  51D0               	movf	metToucheCombien@j& (0+255),w,b
  1681  001682  0100               	movlb	0	; force () banked
  1682  001684  25C9               	addwf	??_metToucheCombien& (0+255),w,b
  1683  001686  6ED9               	movwf	fsr2l,c
  1684  001688  0100               	movlb	0	; force () banked
  1685  00168A  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1686  00168C  0100               	movlb	0	; force () banked
  1687  00168E  21CA               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1688  001690  6EDA               	movwf	fsr2h,c
  1689  001692  0100               	movlb	0	; force () banked
  1690  001694  51CC               	movf	metToucheCombien@mine& (0+255),w,b
  1691  001696  0F30               	addlw	48
  1692  001698  6EDF               	movwf	indf2,c
  1693  00169A                     l2532:
  1694                           
  1695                           ; BSR set to: 0
  1696  00169A  0100               	movlb	0	; force () banked
  1697  00169C  4BD0               	infsnz	metToucheCombien@j& (0+255),f,b
  1698  00169E  2BD1               	incf	(metToucheCombien@j+1)& (0+255),f,b
  1699  0016A0                     
  1700                           ; BSR set to: 0
  1701  0016A0  0100               	movlb	0	; force () banked
  1702  0016A2  BFD1               	btfsc	(metToucheCombien@j+1)& (0+255),7,b
  1703  0016A4  EF5D  F00B         	goto	u2371
  1704  0016A8  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1705  0016AA  E109               	bnz	u2370
  1706  0016AC  0E14               	movlw	20
  1707  0016AE  5DD0               	subwf	metToucheCombien@j& (0+255),w,b
  1708  0016B0  A0D8               	btfss	status,0,c
  1709  0016B2  EF5D  F00B         	goto	u2371
  1710  0016B6  EF5F  F00B         	goto	u2370
  1711  0016BA                     u2371:
  1712  0016BA  EFB0  F00A         	goto	l2520
  1713  0016BE                     u2370:
  1714  0016BE                     l2536:
  1715                           
  1716                           ; BSR set to: 0
  1717  0016BE  0100               	movlb	0	; force () banked
  1718  0016C0  4BCE               	infsnz	metToucheCombien@i& (0+255),f,b
  1719  0016C2  2BCF               	incf	(metToucheCombien@i+1)& (0+255),f,b
  1720  0016C4                     
  1721                           ; BSR set to: 0
  1722  0016C4  0100               	movlb	0	; force () banked
  1723  0016C6  BFCF               	btfsc	(metToucheCombien@i+1)& (0+255),7,b
  1724  0016C8  EF6F  F00B         	goto	u2381
  1725  0016CC  51CF               	movf	(metToucheCombien@i+1)& (0+255),w,b
  1726  0016CE  E109               	bnz	u2380
  1727  0016D0  0E04               	movlw	4
  1728  0016D2  5DCE               	subwf	metToucheCombien@i& (0+255),w,b
  1729  0016D4  A0D8               	btfss	status,0,c
  1730  0016D6  EF6F  F00B         	goto	u2381
  1731  0016DA  EF71  F00B         	goto	u2380
  1732  0016DE                     u2381:
  1733  0016DE  EF9A  F00A         	goto	l2514
  1734  0016E2                     u2380:
  1735  0016E2                     l118:
  1736                           
  1737                           ; BSR set to: 0
  1738  0016E2  0012               	return		;funcret
  1739  0016E4                     __end_of_metToucheCombien:
  1740                           	opt callstack 0
  1741                           
  1742 ;; *************** function _calculToucheCombien *****************
  1743 ;; Defined at:
  1744 ;;		line 226 in file "main.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  ligne           2    6[BANK0 ] int 
  1747 ;;  colonne         2    8[BANK0 ] int 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  i               2   19[BANK0 ] int 
  1750 ;;  j               2   17[BANK0 ] int 
  1751 ;;  nb_mine         2   15[BANK0 ] int 
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      unsigned char 
  1754 ;; Registers used:
  1755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1761 ;;      Params:         0       4       0       0       0       0       0
  1762 ;;      Locals:         0       6       0       0       0       0       0
  1763 ;;      Temps:          0       5       0       0       0       0       0
  1764 ;;      Totals:         0      15       0       0       0       0       0
  1765 ;;Total ram usage:       15 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    1
  1768 ;; This function calls:
  1769 ;;		___wmul
  1770 ;; This function is called by:
  1771 ;;		_metToucheCombien
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text6
  1776  00061A                     __ptext6:
  1777                           	opt callstack 0
  1778  00061A                     _calculToucheCombien:
  1779                           	opt callstack 28
  1780  00061A                     
  1781                           ;main.c: 228: int nb_mine =0;
  1782  00061A  0E00               	movlw	0
  1783  00061C  0100               	movlb	0	; force () banked
  1784  00061E  6FC4               	movwf	(calculToucheCombien@nb_mine+1)& (0+255),b
  1785  000620  0E00               	movlw	0
  1786  000622  6FC3               	movwf	calculToucheCombien@nb_mine& (0+255),b
  1787                           
  1788                           ;main.c: 229: int i=0;
  1789  000624  0E00               	movlw	0
  1790  000626  0100               	movlb	0	; force () banked
  1791  000628  6FC8               	movwf	(calculToucheCombien@i+1)& (0+255),b
  1792  00062A  0E00               	movlw	0
  1793  00062C  6FC7               	movwf	calculToucheCombien@i& (0+255),b
  1794                           
  1795                           ;main.c: 230: int j=0;
  1796  00062E  0E00               	movlw	0
  1797  000630  0100               	movlb	0	; force () banked
  1798  000632  6FC6               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1799  000634  0E00               	movlw	0
  1800  000636  6FC5               	movwf	calculToucheCombien@j& (0+255),b
  1801  000638                     
  1802                           ; BSR set to: 0
  1803                           ;main.c: 231: if ((ligne<3)&&(ligne>0)&&(colonne>0)&&(colonne<20))
  1804  000638  0100               	movlb	0	; force () banked
  1805  00063A  BFBB               	btfsc	(calculToucheCombien@ligne+1)& (0+255),7,b
  1806  00063C  EF2B  F003         	goto	u1430
  1807  000640  51BB               	movf	(calculToucheCombien@ligne+1)& (0+255),w,b
  1808  000642  E107               	bnz	u1431
  1809  000644  0E03               	movlw	3
  1810  000646  5DBA               	subwf	calculToucheCombien@ligne& (0+255),w,b
  1811  000648  B0D8               	btfsc	status,0,c
  1812  00064A  EF29  F003         	goto	u1431
  1813  00064E  EF2B  F003         	goto	u1430
  1814  000652                     u1431:
  1815  000652  EFEB  F003         	goto	l2136
  1816  000656                     u1430:
  1817  000656                     
  1818                           ; BSR set to: 0
  1819  000656  0100               	movlb	0	; force () banked
  1820  000658  BFBB               	btfsc	(calculToucheCombien@ligne+1)& (0+255),7,b
  1821  00065A  EF37  F003         	goto	u1441
  1822  00065E  51BB               	movf	(calculToucheCombien@ligne+1)& (0+255),w,b
  1823  000660  E108               	bnz	u1440
  1824  000662  05BA               	decf	calculToucheCombien@ligne& (0+255),w,b
  1825  000664  A0D8               	btfss	status,0,c
  1826  000666  EF37  F003         	goto	u1441
  1827  00066A  EF39  F003         	goto	u1440
  1828  00066E                     u1441:
  1829  00066E  EFEB  F003         	goto	l2136
  1830  000672                     u1440:
  1831  000672                     
  1832                           ; BSR set to: 0
  1833  000672  0100               	movlb	0	; force () banked
  1834  000674  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  1835  000676  EF45  F003         	goto	u1451
  1836  00067A  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1837  00067C  E108               	bnz	u1450
  1838  00067E  05BC               	decf	calculToucheCombien@colonne& (0+255),w,b
  1839  000680  A0D8               	btfss	status,0,c
  1840  000682  EF45  F003         	goto	u1451
  1841  000686  EF47  F003         	goto	u1450
  1842  00068A                     u1451:
  1843  00068A  EFEB  F003         	goto	l2136
  1844  00068E                     u1450:
  1845  00068E                     
  1846                           ; BSR set to: 0
  1847  00068E  0100               	movlb	0	; force () banked
  1848  000690  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  1849  000692  EF56  F003         	goto	u1460
  1850  000696  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1851  000698  E107               	bnz	u1461
  1852  00069A  0E14               	movlw	20
  1853  00069C  5DBC               	subwf	calculToucheCombien@colonne& (0+255),w,b
  1854  00069E  B0D8               	btfsc	status,0,c
  1855  0006A0  EF54  F003         	goto	u1461
  1856  0006A4  EF56  F003         	goto	u1460
  1857  0006A8                     u1461:
  1858  0006A8  EFEB  F003         	goto	l2136
  1859  0006AC                     u1460:
  1860  0006AC                     
  1861                           ; BSR set to: 0
  1862                           ;main.c: 232: {;main.c: 233: for(i=-1;i<2;i++)
  1863  0006AC  0100               	movlb	0	; force () banked
  1864  0006AE  69C7               	setf	calculToucheCombien@i& (0+255),b
  1865  0006B0  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  1866  0006B2                     
  1867                           ; BSR set to: 0
  1868  0006B2  0100               	movlb	0	; force () banked
  1869  0006B4  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  1870  0006B6  EF66  F003         	goto	u1471
  1871  0006BA  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  1872  0006BC  E109               	bnz	u1470
  1873  0006BE  0E02               	movlw	2
  1874  0006C0  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  1875  0006C2  A0D8               	btfss	status,0,c
  1876  0006C4  EF66  F003         	goto	u1471
  1877  0006C8  EF68  F003         	goto	u1470
  1878  0006CC                     u1471:
  1879  0006CC  EF6A  F003         	goto	l122
  1880  0006D0                     u1470:
  1881  0006D0  EFEB  F003         	goto	l2136
  1882  0006D4                     l122:
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;main.c: 234: {;main.c: 235: for(j=-1;j<=1;j++)
  1886  0006D4  0100               	movlb	0	; force () banked
  1887  0006D6  69C5               	setf	calculToucheCombien@j& (0+255),b
  1888  0006D8  69C6               	setf	(calculToucheCombien@j+1)& (0+255),b
  1889  0006DA                     
  1890                           ; BSR set to: 0
  1891  0006DA  0100               	movlb	0	; force () banked
  1892  0006DC  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1893  0006DE  EF7A  F003         	goto	u1481
  1894  0006E2  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1895  0006E4  E109               	bnz	u1480
  1896  0006E6  0E02               	movlw	2
  1897  0006E8  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  1898  0006EA  A0D8               	btfss	status,0,c
  1899  0006EC  EF7A  F003         	goto	u1481
  1900  0006F0  EF7C  F003         	goto	u1480
  1901  0006F4                     u1481:
  1902  0006F4  EF7E  F003         	goto	l2126
  1903  0006F8                     u1480:
  1904  0006F8  EFD9  F003         	goto	l2132
  1905  0006FC                     l2126:
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;main.c: 236: {;main.c: 237: if (m_tabMines[ligne+(i)][colonne+j]== 2)
  1909  0006FC  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  1910  000700  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  1911  000704  0E00               	movlw	0
  1912  000706  0100               	movlb	0	; force () banked
  1913  000708  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1914  00070A  0E15               	movlw	21
  1915  00070C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1916  00070E  EC1E  F013         	call	___wmul	;wreg free
  1917  000712  0E60               	movlw	low _m_tabMines
  1918  000714  0100               	movlb	0	; force () banked
  1919  000716  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1920  000718  0E00               	movlw	high _m_tabMines
  1921  00071A  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1922  00071C  0100               	movlb	0	; force () banked
  1923  00071E  51B4               	movf	?___wmul& (0+255),w,b
  1924  000720  0100               	movlb	0	; force () banked
  1925  000722  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  1926  000724  0100               	movlb	0	; force () banked
  1927  000726  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1928  000728  0100               	movlb	0	; force () banked
  1929  00072A  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1930  00072C  C0C7  F0B4         	movff	calculToucheCombien@i,___wmul@multiplier
  1931  000730  C0C8  F0B5         	movff	calculToucheCombien@i+1,___wmul@multiplier+1
  1932  000734  0E00               	movlw	0
  1933  000736  0100               	movlb	0	; force () banked
  1934  000738  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1935  00073A  0E15               	movlw	21
  1936  00073C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1937  00073E  EC1E  F013         	call	___wmul	;wreg free
  1938  000742  0100               	movlb	0	; force () banked
  1939  000744  51B4               	movf	?___wmul& (0+255),w,b
  1940  000746  0100               	movlb	0	; force () banked
  1941  000748  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  1942  00074A  0100               	movlb	0	; force () banked
  1943  00074C  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1944  00074E  0100               	movlb	0	; force () banked
  1945  000750  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1946  000752  0100               	movlb	0	; force () banked
  1947  000754  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  1948  000756  0100               	movlb	0	; force () banked
  1949  000758  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  1950  00075A  0100               	movlb	0	; force () banked
  1951  00075C  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1952  00075E  0100               	movlb	0	; force () banked
  1953  000760  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1954  000762  0100               	movlb	0	; force () banked
  1955  000764  51C5               	movf	calculToucheCombien@j& (0+255),w,b
  1956  000766  0100               	movlb	0	; force () banked
  1957  000768  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  1958  00076A  6ED9               	movwf	fsr2l,c
  1959  00076C  0100               	movlb	0	; force () banked
  1960  00076E  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1961  000770  0100               	movlb	0	; force () banked
  1962  000772  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  1963  000774  6EDA               	movwf	fsr2h,c
  1964  000776  0E02               	movlw	2
  1965  000778  18DE               	xorwf	postinc2,w,c
  1966  00077A  A4D8               	btfss	status,2,c
  1967  00077C  EFC2  F003         	goto	u1491
  1968  000780  EFC4  F003         	goto	u1490
  1969  000784                     u1491:
  1970  000784  EFC7  F003         	goto	l126
  1971  000788                     u1490:
  1972  000788                     
  1973                           ; BSR set to: 0
  1974                           ;main.c: 238: {;main.c: 239: nb_mine++;
  1975  000788  0100               	movlb	0	; force () banked
  1976  00078A  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  1977  00078C  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  1978  00078E                     l126:
  1979                           
  1980                           ; BSR set to: 0
  1981  00078E  0100               	movlb	0	; force () banked
  1982  000790  4BC5               	infsnz	calculToucheCombien@j& (0+255),f,b
  1983  000792  2BC6               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  1984  000794                     
  1985                           ; BSR set to: 0
  1986  000794  0100               	movlb	0	; force () banked
  1987  000796  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1988  000798  EFD7  F003         	goto	u1501
  1989  00079C  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1990  00079E  E109               	bnz	u1500
  1991  0007A0  0E02               	movlw	2
  1992  0007A2  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  1993  0007A4  A0D8               	btfss	status,0,c
  1994  0007A6  EFD7  F003         	goto	u1501
  1995  0007AA  EFD9  F003         	goto	u1500
  1996  0007AE                     u1501:
  1997  0007AE  EF7E  F003         	goto	l2126
  1998  0007B2                     u1500:
  1999  0007B2                     l2132:
  2000                           
  2001                           ; BSR set to: 0
  2002  0007B2  0100               	movlb	0	; force () banked
  2003  0007B4  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2004  0007B6  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2005  0007B8                     
  2006                           ; BSR set to: 0
  2007  0007B8  0100               	movlb	0	; force () banked
  2008  0007BA  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2009  0007BC  EFE9  F003         	goto	u1511
  2010  0007C0  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2011  0007C2  E109               	bnz	u1510
  2012  0007C4  0E02               	movlw	2
  2013  0007C6  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  2014  0007C8  A0D8               	btfss	status,0,c
  2015  0007CA  EFE9  F003         	goto	u1511
  2016  0007CE  EFEB  F003         	goto	u1510
  2017  0007D2                     u1511:
  2018  0007D2  EF6A  F003         	goto	l122
  2019  0007D6                     u1510:
  2020  0007D6                     l2136:
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;main.c: 240: };main.c: 241: };main.c: 242: };main.c: 243: };main.c: 244: if((ligne==0)&
      +                          &(colonne==0))
  2024  0007D6  0100               	movlb	0	; force () banked
  2025  0007D8  51BA               	movf	calculToucheCombien@ligne& (0+255),w,b
  2026  0007DA  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2027  0007DC  A4D8               	btfss	status,2,c
  2028  0007DE  EFF3  F003         	goto	u1521
  2029  0007E2  EFF5  F003         	goto	u1520
  2030  0007E6                     u1521:
  2031  0007E6  EF93  F004         	goto	l2156
  2032  0007EA                     u1520:
  2033  0007EA                     
  2034                           ; BSR set to: 0
  2035  0007EA  0100               	movlb	0	; force () banked
  2036  0007EC  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2037  0007EE  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2038  0007F0  A4D8               	btfss	status,2,c
  2039  0007F2  EFFD  F003         	goto	u1531
  2040  0007F6  EFFF  F003         	goto	u1530
  2041  0007FA                     u1531:
  2042  0007FA  EF93  F004         	goto	l2156
  2043  0007FE                     u1530:
  2044  0007FE                     
  2045                           ; BSR set to: 0
  2046                           ;main.c: 245: {;main.c: 246: if(m_tabMines[ligne][colonne+1]==2)
  2047  0007FE  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2048  000802  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2049  000806  0E00               	movlw	0
  2050  000808  0100               	movlb	0	; force () banked
  2051  00080A  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2052  00080C  0E15               	movlw	21
  2053  00080E  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2054  000810  EC1E  F013         	call	___wmul	;wreg free
  2055  000814  0E60               	movlw	low _m_tabMines
  2056  000816  0100               	movlb	0	; force () banked
  2057  000818  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2058  00081A  0E00               	movlw	high _m_tabMines
  2059  00081C  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2060  00081E  0E01               	movlw	1
  2061  000820  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2062  000822  0E00               	movlw	0
  2063  000824  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2064  000826  0100               	movlb	0	; force () banked
  2065  000828  51B4               	movf	?___wmul& (0+255),w,b
  2066  00082A  0100               	movlb	0	; force () banked
  2067  00082C  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2068  00082E  0100               	movlb	0	; force () banked
  2069  000830  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2070  000832  0100               	movlb	0	; force () banked
  2071  000834  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2072  000836  0100               	movlb	0	; force () banked
  2073  000838  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2074  00083A  0100               	movlb	0	; force () banked
  2075  00083C  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2076  00083E  6ED9               	movwf	fsr2l,c
  2077  000840  0100               	movlb	0	; force () banked
  2078  000842  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2079  000844  0100               	movlb	0	; force () banked
  2080  000846  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2081  000848  6EDA               	movwf	fsr2h,c
  2082  00084A  0E02               	movlw	2
  2083  00084C  18DE               	xorwf	postinc2,w,c
  2084  00084E  A4D8               	btfss	status,2,c
  2085  000850  EF2C  F004         	goto	u1541
  2086  000854  EF2E  F004         	goto	u1540
  2087  000858                     u1541:
  2088  000858  EF31  F004         	goto	l2144
  2089  00085C                     u1540:
  2090  00085C                     
  2091                           ; BSR set to: 0
  2092                           ;main.c: 247: {;main.c: 248: nb_mine++;
  2093  00085C  0100               	movlb	0	; force () banked
  2094  00085E  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2095  000860  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2096  000862                     l2144:
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;main.c: 249: };main.c: 250: for(j=0;j<=1;j++)
  2100  000862  0E00               	movlw	0
  2101  000864  0100               	movlb	0	; force () banked
  2102  000866  6FC6               	movwf	(calculToucheCombien@j+1)& (0+255),b
  2103  000868  0E00               	movlw	0
  2104  00086A  6FC5               	movwf	calculToucheCombien@j& (0+255),b
  2105  00086C                     
  2106                           ; BSR set to: 0
  2107  00086C  0100               	movlb	0	; force () banked
  2108  00086E  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  2109  000870  EF43  F004         	goto	u1551
  2110  000874  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2111  000876  E109               	bnz	u1550
  2112  000878  0E02               	movlw	2
  2113  00087A  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  2114  00087C  A0D8               	btfss	status,0,c
  2115  00087E  EF43  F004         	goto	u1551
  2116  000882  EF45  F004         	goto	u1550
  2117  000886                     u1551:
  2118  000886  EF47  F004         	goto	l2150
  2119  00088A                     u1550:
  2120  00088A  EF93  F004         	goto	l2156
  2121  00088E                     l2150:
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;main.c: 251: {;main.c: 252: if(m_tabMines[ligne+1][colonne+j]==2)
  2125  00088E  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2126  000892  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2127  000896  0E00               	movlw	0
  2128  000898  0100               	movlb	0	; force () banked
  2129  00089A  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2130  00089C  0E15               	movlw	21
  2131  00089E  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2132  0008A0  EC1E  F013         	call	___wmul	;wreg free
  2133  0008A4  0E60               	movlw	low _m_tabMines
  2134  0008A6  0100               	movlb	0	; force () banked
  2135  0008A8  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2136  0008AA  0E00               	movlw	high _m_tabMines
  2137  0008AC  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2138  0008AE  0E15               	movlw	21
  2139  0008B0  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2140  0008B2  0E00               	movlw	0
  2141  0008B4  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2142  0008B6  0100               	movlb	0	; force () banked
  2143  0008B8  51B4               	movf	?___wmul& (0+255),w,b
  2144  0008BA  0100               	movlb	0	; force () banked
  2145  0008BC  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2146  0008BE  0100               	movlb	0	; force () banked
  2147  0008C0  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2148  0008C2  0100               	movlb	0	; force () banked
  2149  0008C4  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2150  0008C6  0100               	movlb	0	; force () banked
  2151  0008C8  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2152  0008CA  0100               	movlb	0	; force () banked
  2153  0008CC  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2154  0008CE  0100               	movlb	0	; force () banked
  2155  0008D0  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2156  0008D2  0100               	movlb	0	; force () banked
  2157  0008D4  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2158  0008D6  0100               	movlb	0	; force () banked
  2159  0008D8  51C5               	movf	calculToucheCombien@j& (0+255),w,b
  2160  0008DA  0100               	movlb	0	; force () banked
  2161  0008DC  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2162  0008DE  6ED9               	movwf	fsr2l,c
  2163  0008E0  0100               	movlb	0	; force () banked
  2164  0008E2  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2165  0008E4  0100               	movlb	0	; force () banked
  2166  0008E6  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2167  0008E8  6EDA               	movwf	fsr2h,c
  2168  0008EA  0E02               	movlw	2
  2169  0008EC  18DE               	xorwf	postinc2,w,c
  2170  0008EE  A4D8               	btfss	status,2,c
  2171  0008F0  EF7C  F004         	goto	u1561
  2172  0008F4  EF7E  F004         	goto	u1560
  2173  0008F8                     u1561:
  2174  0008F8  EF81  F004         	goto	l131
  2175  0008FC                     u1560:
  2176  0008FC                     
  2177                           ; BSR set to: 0
  2178                           ;main.c: 253: {;main.c: 254: nb_mine++;
  2179  0008FC  0100               	movlb	0	; force () banked
  2180  0008FE  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2181  000900  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2182  000902                     l131:
  2183                           
  2184                           ; BSR set to: 0
  2185  000902  0100               	movlb	0	; force () banked
  2186  000904  4BC5               	infsnz	calculToucheCombien@j& (0+255),f,b
  2187  000906  2BC6               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  2188  000908                     
  2189                           ; BSR set to: 0
  2190  000908  0100               	movlb	0	; force () banked
  2191  00090A  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  2192  00090C  EF91  F004         	goto	u1571
  2193  000910  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2194  000912  E109               	bnz	u1570
  2195  000914  0E02               	movlw	2
  2196  000916  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  2197  000918  A0D8               	btfss	status,0,c
  2198  00091A  EF91  F004         	goto	u1571
  2199  00091E  EF93  F004         	goto	u1570
  2200  000922                     u1571:
  2201  000922  EF47  F004         	goto	l2150
  2202  000926                     u1570:
  2203  000926                     l2156:
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;main.c: 255: };main.c: 256: };main.c: 257: };main.c: 258: if((ligne==0)&&(colonne==20))
  2207  000926  0100               	movlb	0	; force () banked
  2208  000928  51BA               	movf	calculToucheCombien@ligne& (0+255),w,b
  2209  00092A  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2210  00092C  A4D8               	btfss	status,2,c
  2211  00092E  EF9B  F004         	goto	u1581
  2212  000932  EF9D  F004         	goto	u1580
  2213  000936                     u1581:
  2214  000936  EF3C  F005         	goto	l2176
  2215  00093A                     u1580:
  2216  00093A                     
  2217                           ; BSR set to: 0
  2218  00093A  0E14               	movlw	20
  2219  00093C  0100               	movlb	0	; force () banked
  2220  00093E  19BC               	xorwf	calculToucheCombien@colonne& (0+255),w,b
  2221  000940  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2222  000942  A4D8               	btfss	status,2,c
  2223  000944  EFA6  F004         	goto	u1591
  2224  000948  EFA8  F004         	goto	u1590
  2225  00094C                     u1591:
  2226  00094C  EF3C  F005         	goto	l2176
  2227  000950                     u1590:
  2228  000950                     
  2229                           ; BSR set to: 0
  2230                           ;main.c: 259: {;main.c: 260: if(m_tabMines[ligne][colonne-1]==2)
  2231  000950  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2232  000954  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2233  000958  0E00               	movlw	0
  2234  00095A  0100               	movlb	0	; force () banked
  2235  00095C  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2236  00095E  0E15               	movlw	21
  2237  000960  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2238  000962  EC1E  F013         	call	___wmul	;wreg free
  2239  000966  0EFF               	movlw	255
  2240  000968  0100               	movlb	0	; force () banked
  2241  00096A  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2242  00096C  0EFF               	movlw	255
  2243  00096E  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2244  000970  0E60               	movlw	low _m_tabMines
  2245  000972  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2246  000974  0E00               	movlw	high _m_tabMines
  2247  000976  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2248  000978  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  2249  00097A  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2250  00097C  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2251  00097E  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2252  000980  0100               	movlb	0	; force () banked
  2253  000982  51B4               	movf	?___wmul& (0+255),w,b
  2254  000984  0100               	movlb	0	; force () banked
  2255  000986  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2256  000988  0100               	movlb	0	; force () banked
  2257  00098A  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2258  00098C  0100               	movlb	0	; force () banked
  2259  00098E  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2260  000990  0100               	movlb	0	; force () banked
  2261  000992  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2262  000994  0100               	movlb	0	; force () banked
  2263  000996  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2264  000998  6ED9               	movwf	fsr2l,c
  2265  00099A  0100               	movlb	0	; force () banked
  2266  00099C  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2267  00099E  0100               	movlb	0	; force () banked
  2268  0009A0  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2269  0009A2  6EDA               	movwf	fsr2h,c
  2270  0009A4  0E02               	movlw	2
  2271  0009A6  18DE               	xorwf	postinc2,w,c
  2272  0009A8  A4D8               	btfss	status,2,c
  2273  0009AA  EFD9  F004         	goto	u1601
  2274  0009AE  EFDB  F004         	goto	u1600
  2275  0009B2                     u1601:
  2276  0009B2  EFDE  F004         	goto	l2164
  2277  0009B6                     u1600:
  2278  0009B6                     
  2279                           ; BSR set to: 0
  2280                           ;main.c: 261: {;main.c: 262: nb_mine++;
  2281  0009B6  0100               	movlb	0	; force () banked
  2282  0009B8  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2283  0009BA  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2284  0009BC                     l2164:
  2285                           
  2286                           ; BSR set to: 0
  2287                           ;main.c: 263: };main.c: 264: for(i=-1;i<1;i++)
  2288  0009BC  0100               	movlb	0	; force () banked
  2289  0009BE  69C7               	setf	calculToucheCombien@i& (0+255),b
  2290  0009C0  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  2291  0009C2                     
  2292                           ; BSR set to: 0
  2293  0009C2  0100               	movlb	0	; force () banked
  2294  0009C4  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2295  0009C6  EFED  F004         	goto	u1611
  2296  0009CA  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2297  0009CC  E108               	bnz	u1610
  2298  0009CE  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  2299  0009D0  A0D8               	btfss	status,0,c
  2300  0009D2  EFED  F004         	goto	u1611
  2301  0009D6  EFEF  F004         	goto	u1610
  2302  0009DA                     u1611:
  2303  0009DA  EFF1  F004         	goto	l2170
  2304  0009DE                     u1610:
  2305  0009DE  EF3C  F005         	goto	l2176
  2306  0009E2                     l2170:
  2307                           
  2308                           ; BSR set to: 0
  2309                           ;main.c: 265: {;main.c: 266: if(m_tabMines[ligne+1][colonne+i]==2)
  2310  0009E2  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2311  0009E6  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2312  0009EA  0E00               	movlw	0
  2313  0009EC  0100               	movlb	0	; force () banked
  2314  0009EE  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2315  0009F0  0E15               	movlw	21
  2316  0009F2  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2317  0009F4  EC1E  F013         	call	___wmul	;wreg free
  2318  0009F8  0E60               	movlw	low _m_tabMines
  2319  0009FA  0100               	movlb	0	; force () banked
  2320  0009FC  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2321  0009FE  0E00               	movlw	high _m_tabMines
  2322  000A00  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2323  000A02  0E15               	movlw	21
  2324  000A04  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2325  000A06  0E00               	movlw	0
  2326  000A08  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2327  000A0A  0100               	movlb	0	; force () banked
  2328  000A0C  51B4               	movf	?___wmul& (0+255),w,b
  2329  000A0E  0100               	movlb	0	; force () banked
  2330  000A10  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2331  000A12  0100               	movlb	0	; force () banked
  2332  000A14  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2333  000A16  0100               	movlb	0	; force () banked
  2334  000A18  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2335  000A1A  0100               	movlb	0	; force () banked
  2336  000A1C  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2337  000A1E  0100               	movlb	0	; force () banked
  2338  000A20  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2339  000A22  0100               	movlb	0	; force () banked
  2340  000A24  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2341  000A26  0100               	movlb	0	; force () banked
  2342  000A28  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2343  000A2A  0100               	movlb	0	; force () banked
  2344  000A2C  51C7               	movf	calculToucheCombien@i& (0+255),w,b
  2345  000A2E  0100               	movlb	0	; force () banked
  2346  000A30  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2347  000A32  6ED9               	movwf	fsr2l,c
  2348  000A34  0100               	movlb	0	; force () banked
  2349  000A36  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2350  000A38  0100               	movlb	0	; force () banked
  2351  000A3A  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2352  000A3C  6EDA               	movwf	fsr2h,c
  2353  000A3E  0E02               	movlw	2
  2354  000A40  18DE               	xorwf	postinc2,w,c
  2355  000A42  A4D8               	btfss	status,2,c
  2356  000A44  EF26  F005         	goto	u1621
  2357  000A48  EF28  F005         	goto	u1620
  2358  000A4C                     u1621:
  2359  000A4C  EF2B  F005         	goto	l136
  2360  000A50                     u1620:
  2361  000A50                     
  2362                           ; BSR set to: 0
  2363                           ;main.c: 267: {;main.c: 268: nb_mine++;
  2364  000A50  0100               	movlb	0	; force () banked
  2365  000A52  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2366  000A54  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2367  000A56                     l136:
  2368                           
  2369                           ; BSR set to: 0
  2370  000A56  0100               	movlb	0	; force () banked
  2371  000A58  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2372  000A5A  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2373  000A5C                     
  2374                           ; BSR set to: 0
  2375  000A5C  0100               	movlb	0	; force () banked
  2376  000A5E  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2377  000A60  EF3A  F005         	goto	u1631
  2378  000A64  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2379  000A66  E108               	bnz	u1630
  2380  000A68  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  2381  000A6A  A0D8               	btfss	status,0,c
  2382  000A6C  EF3A  F005         	goto	u1631
  2383  000A70  EF3C  F005         	goto	u1630
  2384  000A74                     u1631:
  2385  000A74  EFF1  F004         	goto	l2170
  2386  000A78                     u1630:
  2387  000A78                     l2176:
  2388                           
  2389                           ; BSR set to: 0
  2390                           ;main.c: 269: };main.c: 270: };main.c: 271: };main.c: 272: if((ligne==0)&&(colonne<20)&&
      +                          (colonne>0))
  2391  000A78  0100               	movlb	0	; force () banked
  2392  000A7A  51BA               	movf	calculToucheCombien@ligne& (0+255),w,b
  2393  000A7C  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2394  000A7E  A4D8               	btfss	status,2,c
  2395  000A80  EF44  F005         	goto	u1641
  2396  000A84  EF46  F005         	goto	u1640
  2397  000A88                     u1641:
  2398  000A88  EF58  F006         	goto	l2214
  2399  000A8C                     u1640:
  2400  000A8C                     
  2401                           ; BSR set to: 0
  2402  000A8C  0100               	movlb	0	; force () banked
  2403  000A8E  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  2404  000A90  EF55  F005         	goto	u1650
  2405  000A94  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2406  000A96  E107               	bnz	u1651
  2407  000A98  0E14               	movlw	20
  2408  000A9A  5DBC               	subwf	calculToucheCombien@colonne& (0+255),w,b
  2409  000A9C  B0D8               	btfsc	status,0,c
  2410  000A9E  EF53  F005         	goto	u1651
  2411  000AA2  EF55  F005         	goto	u1650
  2412  000AA6                     u1651:
  2413  000AA6  EF58  F006         	goto	l2214
  2414  000AAA                     u1650:
  2415  000AAA                     
  2416                           ; BSR set to: 0
  2417  000AAA  0100               	movlb	0	; force () banked
  2418  000AAC  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  2419  000AAE  EF61  F005         	goto	u1661
  2420  000AB2  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2421  000AB4  E108               	bnz	u1660
  2422  000AB6  05BC               	decf	calculToucheCombien@colonne& (0+255),w,b
  2423  000AB8  A0D8               	btfss	status,0,c
  2424  000ABA  EF61  F005         	goto	u1661
  2425  000ABE  EF63  F005         	goto	u1660
  2426  000AC2                     u1661:
  2427  000AC2  EF58  F006         	goto	l2214
  2428  000AC6                     u1660:
  2429  000AC6                     
  2430                           ; BSR set to: 0
  2431                           ;main.c: 273: {;main.c: 274: for(i=-1;i<=1;i++)
  2432  000AC6  0100               	movlb	0	; force () banked
  2433  000AC8  69C7               	setf	calculToucheCombien@i& (0+255),b
  2434  000ACA  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  2435  000ACC                     
  2436                           ; BSR set to: 0
  2437  000ACC  0100               	movlb	0	; force () banked
  2438  000ACE  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2439  000AD0  EF73  F005         	goto	u1671
  2440  000AD4  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2441  000AD6  E109               	bnz	u1670
  2442  000AD8  0E02               	movlw	2
  2443  000ADA  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  2444  000ADC  A0D8               	btfss	status,0,c
  2445  000ADE  EF73  F005         	goto	u1671
  2446  000AE2  EF75  F005         	goto	u1670
  2447  000AE6                     u1671:
  2448  000AE6  EF77  F005         	goto	l2188
  2449  000AEA                     u1670:
  2450  000AEA  EFC1  F005         	goto	l2194
  2451  000AEE                     l2188:
  2452                           
  2453                           ; BSR set to: 0
  2454                           ;main.c: 275: {;main.c: 276: if(m_tabMines[ligne][colonne+(i)]==2)
  2455  000AEE  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2456  000AF2  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2457  000AF6  0E00               	movlw	0
  2458  000AF8  0100               	movlb	0	; force () banked
  2459  000AFA  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2460  000AFC  0E15               	movlw	21
  2461  000AFE  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2462  000B00  EC1E  F013         	call	___wmul	;wreg free
  2463  000B04  0E60               	movlw	low _m_tabMines
  2464  000B06  0100               	movlb	0	; force () banked
  2465  000B08  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2466  000B0A  0E00               	movlw	high _m_tabMines
  2467  000B0C  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2468  000B0E  0100               	movlb	0	; force () banked
  2469  000B10  51B4               	movf	?___wmul& (0+255),w,b
  2470  000B12  0100               	movlb	0	; force () banked
  2471  000B14  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2472  000B16  0100               	movlb	0	; force () banked
  2473  000B18  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2474  000B1A  0100               	movlb	0	; force () banked
  2475  000B1C  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2476  000B1E  0100               	movlb	0	; force () banked
  2477  000B20  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2478  000B22  0100               	movlb	0	; force () banked
  2479  000B24  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2480  000B26  0100               	movlb	0	; force () banked
  2481  000B28  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2482  000B2A  0100               	movlb	0	; force () banked
  2483  000B2C  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2484  000B2E  0100               	movlb	0	; force () banked
  2485  000B30  51C7               	movf	calculToucheCombien@i& (0+255),w,b
  2486  000B32  0100               	movlb	0	; force () banked
  2487  000B34  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2488  000B36  6ED9               	movwf	fsr2l,c
  2489  000B38  0100               	movlb	0	; force () banked
  2490  000B3A  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2491  000B3C  0100               	movlb	0	; force () banked
  2492  000B3E  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2493  000B40  6EDA               	movwf	fsr2h,c
  2494  000B42  0E02               	movlw	2
  2495  000B44  18DE               	xorwf	postinc2,w,c
  2496  000B46  A4D8               	btfss	status,2,c
  2497  000B48  EFA8  F005         	goto	u1681
  2498  000B4C  EFAA  F005         	goto	u1680
  2499  000B50                     u1681:
  2500  000B50  EFAD  F005         	goto	l140
  2501  000B54                     u1680:
  2502  000B54                     
  2503                           ; BSR set to: 0
  2504                           ;main.c: 277: {;main.c: 278: nb_mine ++;
  2505  000B54  0100               	movlb	0	; force () banked
  2506  000B56  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2507  000B58  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2508  000B5A                     l140:
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;main.c: 279: };main.c: 280: i++;
  2512  000B5A  0100               	movlb	0	; force () banked
  2513  000B5C  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2514  000B5E  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2515  000B60  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2516  000B62  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2517  000B64                     
  2518                           ; BSR set to: 0
  2519  000B64  0100               	movlb	0	; force () banked
  2520  000B66  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2521  000B68  EFBF  F005         	goto	u1691
  2522  000B6C  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2523  000B6E  E109               	bnz	u1690
  2524  000B70  0E02               	movlw	2
  2525  000B72  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  2526  000B74  A0D8               	btfss	status,0,c
  2527  000B76  EFBF  F005         	goto	u1691
  2528  000B7A  EFC1  F005         	goto	u1690
  2529  000B7E                     u1691:
  2530  000B7E  EF77  F005         	goto	l2188
  2531  000B82                     u1690:
  2532  000B82                     l2194:
  2533                           
  2534                           ; BSR set to: 0
  2535                           ;main.c: 281: };main.c: 282: for(i=1;i<=1;i++)
  2536  000B82  0E00               	movlw	0
  2537  000B84  0100               	movlb	0	; force () banked
  2538  000B86  6FC8               	movwf	(calculToucheCombien@i+1)& (0+255),b
  2539  000B88  0E01               	movlw	1
  2540  000B8A  6FC7               	movwf	calculToucheCombien@i& (0+255),b
  2541  000B8C                     
  2542                           ; BSR set to: 0
  2543  000B8C  0100               	movlb	0	; force () banked
  2544  000B8E  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2545  000B90  EFD3  F005         	goto	u1701
  2546  000B94  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2547  000B96  E109               	bnz	u1700
  2548  000B98  0E02               	movlw	2
  2549  000B9A  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  2550  000B9C  A0D8               	btfss	status,0,c
  2551  000B9E  EFD3  F005         	goto	u1701
  2552  000BA2  EFD5  F005         	goto	u1700
  2553  000BA6                     u1701:
  2554  000BA6  EFD7  F005         	goto	l141
  2555  000BAA                     u1700:
  2556  000BAA  EF58  F006         	goto	l2214
  2557  000BAE                     l141:
  2558                           
  2559                           ; BSR set to: 0
  2560                           ;main.c: 283: {;main.c: 284: for(j=-1;j<=1;j++)
  2561  000BAE  0100               	movlb	0	; force () banked
  2562  000BB0  69C5               	setf	calculToucheCombien@j& (0+255),b
  2563  000BB2  69C6               	setf	(calculToucheCombien@j+1)& (0+255),b
  2564  000BB4                     
  2565                           ; BSR set to: 0
  2566  000BB4  0100               	movlb	0	; force () banked
  2567  000BB6  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  2568  000BB8  EFE7  F005         	goto	u1711
  2569  000BBC  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2570  000BBE  E109               	bnz	u1710
  2571  000BC0  0E02               	movlw	2
  2572  000BC2  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  2573  000BC4  A0D8               	btfss	status,0,c
  2574  000BC6  EFE7  F005         	goto	u1711
  2575  000BCA  EFE9  F005         	goto	u1710
  2576  000BCE                     u1711:
  2577  000BCE  EFEB  F005         	goto	l2204
  2578  000BD2                     u1710:
  2579  000BD2  EF46  F006         	goto	l2210
  2580  000BD6                     l2204:
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;main.c: 285: {;main.c: 286: if(m_tabMines[ligne+i][colonne+j]==2)
  2584  000BD6  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2585  000BDA  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2586  000BDE  0E00               	movlw	0
  2587  000BE0  0100               	movlb	0	; force () banked
  2588  000BE2  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2589  000BE4  0E15               	movlw	21
  2590  000BE6  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2591  000BE8  EC1E  F013         	call	___wmul	;wreg free
  2592  000BEC  0E60               	movlw	low _m_tabMines
  2593  000BEE  0100               	movlb	0	; force () banked
  2594  000BF0  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2595  000BF2  0E00               	movlw	high _m_tabMines
  2596  000BF4  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2597  000BF6  0100               	movlb	0	; force () banked
  2598  000BF8  51B4               	movf	?___wmul& (0+255),w,b
  2599  000BFA  0100               	movlb	0	; force () banked
  2600  000BFC  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2601  000BFE  0100               	movlb	0	; force () banked
  2602  000C00  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2603  000C02  0100               	movlb	0	; force () banked
  2604  000C04  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2605  000C06  C0C7  F0B4         	movff	calculToucheCombien@i,___wmul@multiplier
  2606  000C0A  C0C8  F0B5         	movff	calculToucheCombien@i+1,___wmul@multiplier+1
  2607  000C0E  0E00               	movlw	0
  2608  000C10  0100               	movlb	0	; force () banked
  2609  000C12  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2610  000C14  0E15               	movlw	21
  2611  000C16  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2612  000C18  EC1E  F013         	call	___wmul	;wreg free
  2613  000C1C  0100               	movlb	0	; force () banked
  2614  000C1E  51B4               	movf	?___wmul& (0+255),w,b
  2615  000C20  0100               	movlb	0	; force () banked
  2616  000C22  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2617  000C24  0100               	movlb	0	; force () banked
  2618  000C26  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2619  000C28  0100               	movlb	0	; force () banked
  2620  000C2A  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2621  000C2C  0100               	movlb	0	; force () banked
  2622  000C2E  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2623  000C30  0100               	movlb	0	; force () banked
  2624  000C32  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2625  000C34  0100               	movlb	0	; force () banked
  2626  000C36  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2627  000C38  0100               	movlb	0	; force () banked
  2628  000C3A  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2629  000C3C  0100               	movlb	0	; force () banked
  2630  000C3E  51C5               	movf	calculToucheCombien@j& (0+255),w,b
  2631  000C40  0100               	movlb	0	; force () banked
  2632  000C42  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2633  000C44  6ED9               	movwf	fsr2l,c
  2634  000C46  0100               	movlb	0	; force () banked
  2635  000C48  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2636  000C4A  0100               	movlb	0	; force () banked
  2637  000C4C  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2638  000C4E  6EDA               	movwf	fsr2h,c
  2639  000C50  0E02               	movlw	2
  2640  000C52  18DE               	xorwf	postinc2,w,c
  2641  000C54  A4D8               	btfss	status,2,c
  2642  000C56  EF2F  F006         	goto	u1721
  2643  000C5A  EF31  F006         	goto	u1720
  2644  000C5E                     u1721:
  2645  000C5E  EF34  F006         	goto	l145
  2646  000C62                     u1720:
  2647  000C62                     
  2648                           ; BSR set to: 0
  2649                           ;main.c: 287: {;main.c: 288: nb_mine ++;
  2650  000C62  0100               	movlb	0	; force () banked
  2651  000C64  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2652  000C66  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2653  000C68                     l145:
  2654                           
  2655                           ; BSR set to: 0
  2656  000C68  0100               	movlb	0	; force () banked
  2657  000C6A  4BC5               	infsnz	calculToucheCombien@j& (0+255),f,b
  2658  000C6C  2BC6               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  2659  000C6E                     
  2660                           ; BSR set to: 0
  2661  000C6E  0100               	movlb	0	; force () banked
  2662  000C70  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  2663  000C72  EF44  F006         	goto	u1731
  2664  000C76  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2665  000C78  E109               	bnz	u1730
  2666  000C7A  0E02               	movlw	2
  2667  000C7C  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  2668  000C7E  A0D8               	btfss	status,0,c
  2669  000C80  EF44  F006         	goto	u1731
  2670  000C84  EF46  F006         	goto	u1730
  2671  000C88                     u1731:
  2672  000C88  EFEB  F005         	goto	l2204
  2673  000C8C                     u1730:
  2674  000C8C                     l2210:
  2675                           
  2676                           ; BSR set to: 0
  2677  000C8C  0100               	movlb	0	; force () banked
  2678  000C8E  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2679  000C90  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2680  000C92                     
  2681                           ; BSR set to: 0
  2682  000C92  0100               	movlb	0	; force () banked
  2683  000C94  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2684  000C96  EF56  F006         	goto	u1741
  2685  000C9A  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2686  000C9C  E109               	bnz	u1740
  2687  000C9E  0E02               	movlw	2
  2688  000CA0  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  2689  000CA2  A0D8               	btfss	status,0,c
  2690  000CA4  EF56  F006         	goto	u1741
  2691  000CA8  EF58  F006         	goto	u1740
  2692  000CAC                     u1741:
  2693  000CAC  EFD7  F005         	goto	l141
  2694  000CB0                     u1740:
  2695  000CB0                     l2214:
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;main.c: 289: };main.c: 290: };main.c: 291: };main.c: 292: };main.c: 293: if((ligne==3)&
      +                          &(colonne==0))
  2699  000CB0  0E03               	movlw	3
  2700  000CB2  0100               	movlb	0	; force () banked
  2701  000CB4  19BA               	xorwf	calculToucheCombien@ligne& (0+255),w,b
  2702  000CB6  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2703  000CB8  A4D8               	btfss	status,2,c
  2704  000CBA  EF61  F006         	goto	u1751
  2705  000CBE  EF63  F006         	goto	u1750
  2706  000CC2                     u1751:
  2707  000CC2  EF0C  F007         	goto	l2234
  2708  000CC6                     u1750:
  2709  000CC6                     
  2710                           ; BSR set to: 0
  2711  000CC6  0100               	movlb	0	; force () banked
  2712  000CC8  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2713  000CCA  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2714  000CCC  A4D8               	btfss	status,2,c
  2715  000CCE  EF6B  F006         	goto	u1761
  2716  000CD2  EF6D  F006         	goto	u1760
  2717  000CD6                     u1761:
  2718  000CD6  EF0C  F007         	goto	l2234
  2719  000CDA                     u1760:
  2720  000CDA                     
  2721                           ; BSR set to: 0
  2722                           ;main.c: 294: {;main.c: 295: if(m_tabMines[ligne-1][colonne]==2)
  2723  000CDA  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2724  000CDE  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2725  000CE2  0E00               	movlw	0
  2726  000CE4  0100               	movlb	0	; force () banked
  2727  000CE6  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2728  000CE8  0E15               	movlw	21
  2729  000CEA  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2730  000CEC  EC1E  F013         	call	___wmul	;wreg free
  2731  000CF0  0EEB               	movlw	235
  2732  000CF2  0100               	movlb	0	; force () banked
  2733  000CF4  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2734  000CF6  0EFF               	movlw	255
  2735  000CF8  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2736  000CFA  0E60               	movlw	low _m_tabMines
  2737  000CFC  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2738  000CFE  0E00               	movlw	high _m_tabMines
  2739  000D00  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2740  000D02  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  2741  000D04  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2742  000D06  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2743  000D08  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2744  000D0A  0100               	movlb	0	; force () banked
  2745  000D0C  51B4               	movf	?___wmul& (0+255),w,b
  2746  000D0E  0100               	movlb	0	; force () banked
  2747  000D10  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2748  000D12  0100               	movlb	0	; force () banked
  2749  000D14  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2750  000D16  0100               	movlb	0	; force () banked
  2751  000D18  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2752  000D1A  0100               	movlb	0	; force () banked
  2753  000D1C  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2754  000D1E  0100               	movlb	0	; force () banked
  2755  000D20  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2756  000D22  6ED9               	movwf	fsr2l,c
  2757  000D24  0100               	movlb	0	; force () banked
  2758  000D26  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2759  000D28  0100               	movlb	0	; force () banked
  2760  000D2A  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2761  000D2C  6EDA               	movwf	fsr2h,c
  2762  000D2E  0E02               	movlw	2
  2763  000D30  18DE               	xorwf	postinc2,w,c
  2764  000D32  A4D8               	btfss	status,2,c
  2765  000D34  EF9E  F006         	goto	u1771
  2766  000D38  EFA0  F006         	goto	u1770
  2767  000D3C                     u1771:
  2768  000D3C  EFA3  F006         	goto	l2222
  2769  000D40                     u1770:
  2770  000D40                     
  2771                           ; BSR set to: 0
  2772                           ;main.c: 296: {;main.c: 297: nb_mine++;
  2773  000D40  0100               	movlb	0	; force () banked
  2774  000D42  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2775  000D44  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2776  000D46                     l2222:
  2777                           
  2778                           ; BSR set to: 0
  2779                           ;main.c: 298: };main.c: 299: for(i=-1;i<=0;i++)
  2780  000D46  0100               	movlb	0	; force () banked
  2781  000D48  69C7               	setf	calculToucheCombien@i& (0+255),b
  2782  000D4A  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  2783  000D4C                     
  2784                           ; BSR set to: 0
  2785  000D4C  0100               	movlb	0	; force () banked
  2786  000D4E  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2787  000D50  EFB2  F006         	goto	u1781
  2788  000D54  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2789  000D56  E108               	bnz	u1780
  2790  000D58  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  2791  000D5A  A0D8               	btfss	status,0,c
  2792  000D5C  EFB2  F006         	goto	u1781
  2793  000D60  EFB4  F006         	goto	u1780
  2794  000D64                     u1781:
  2795  000D64  EFB6  F006         	goto	l2228
  2796  000D68                     u1780:
  2797  000D68  EF0C  F007         	goto	l2234
  2798  000D6C                     l2228:
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;main.c: 300: {;main.c: 301: if(m_tabMines[ligne+i][colonne+1]==2)
  2802  000D6C  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2803  000D70  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2804  000D74  0E00               	movlw	0
  2805  000D76  0100               	movlb	0	; force () banked
  2806  000D78  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2807  000D7A  0E15               	movlw	21
  2808  000D7C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2809  000D7E  EC1E  F013         	call	___wmul	;wreg free
  2810  000D82  0E60               	movlw	low _m_tabMines
  2811  000D84  0100               	movlb	0	; force () banked
  2812  000D86  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2813  000D88  0E00               	movlw	high _m_tabMines
  2814  000D8A  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2815  000D8C  0E01               	movlw	1
  2816  000D8E  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2817  000D90  0E00               	movlw	0
  2818  000D92  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2819  000D94  0100               	movlb	0	; force () banked
  2820  000D96  51B4               	movf	?___wmul& (0+255),w,b
  2821  000D98  0100               	movlb	0	; force () banked
  2822  000D9A  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2823  000D9C  0100               	movlb	0	; force () banked
  2824  000D9E  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2825  000DA0  0100               	movlb	0	; force () banked
  2826  000DA2  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2827  000DA4  C0C7  F0B4         	movff	calculToucheCombien@i,___wmul@multiplier
  2828  000DA8  C0C8  F0B5         	movff	calculToucheCombien@i+1,___wmul@multiplier+1
  2829  000DAC  0E00               	movlw	0
  2830  000DAE  0100               	movlb	0	; force () banked
  2831  000DB0  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2832  000DB2  0E15               	movlw	21
  2833  000DB4  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2834  000DB6  EC1E  F013         	call	___wmul	;wreg free
  2835  000DBA  0100               	movlb	0	; force () banked
  2836  000DBC  51B4               	movf	?___wmul& (0+255),w,b
  2837  000DBE  0100               	movlb	0	; force () banked
  2838  000DC0  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2839  000DC2  0100               	movlb	0	; force () banked
  2840  000DC4  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2841  000DC6  0100               	movlb	0	; force () banked
  2842  000DC8  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2843  000DCA  0100               	movlb	0	; force () banked
  2844  000DCC  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2845  000DCE  0100               	movlb	0	; force () banked
  2846  000DD0  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2847  000DD2  6ED9               	movwf	fsr2l,c
  2848  000DD4  0100               	movlb	0	; force () banked
  2849  000DD6  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2850  000DD8  0100               	movlb	0	; force () banked
  2851  000DDA  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2852  000DDC  6EDA               	movwf	fsr2h,c
  2853  000DDE  0E02               	movlw	2
  2854  000DE0  18DE               	xorwf	postinc2,w,c
  2855  000DE2  A4D8               	btfss	status,2,c
  2856  000DE4  EFF6  F006         	goto	u1791
  2857  000DE8  EFF8  F006         	goto	u1790
  2858  000DEC                     u1791:
  2859  000DEC  EFFB  F006         	goto	l150
  2860  000DF0                     u1790:
  2861  000DF0                     
  2862                           ; BSR set to: 0
  2863                           ;main.c: 302: {;main.c: 303: nb_mine++;
  2864  000DF0  0100               	movlb	0	; force () banked
  2865  000DF2  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2866  000DF4  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2867  000DF6                     l150:
  2868                           
  2869                           ; BSR set to: 0
  2870  000DF6  0100               	movlb	0	; force () banked
  2871  000DF8  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2872  000DFA  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2873  000DFC                     
  2874                           ; BSR set to: 0
  2875  000DFC  0100               	movlb	0	; force () banked
  2876  000DFE  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2877  000E00  EF0A  F007         	goto	u1801
  2878  000E04  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2879  000E06  E108               	bnz	u1800
  2880  000E08  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  2881  000E0A  A0D8               	btfss	status,0,c
  2882  000E0C  EF0A  F007         	goto	u1801
  2883  000E10  EF0C  F007         	goto	u1800
  2884  000E14                     u1801:
  2885  000E14  EFB6  F006         	goto	l2228
  2886  000E18                     u1800:
  2887  000E18                     l2234:
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;main.c: 304: };main.c: 305: };main.c: 306: };main.c: 307: if((ligne==3)&&(colonne==20))
  2891  000E18  0E03               	movlw	3
  2892  000E1A  0100               	movlb	0	; force () banked
  2893  000E1C  19BA               	xorwf	calculToucheCombien@ligne& (0+255),w,b
  2894  000E1E  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2895  000E20  A4D8               	btfss	status,2,c
  2896  000E22  EF15  F007         	goto	u1811
  2897  000E26  EF17  F007         	goto	u1810
  2898  000E2A                     u1811:
  2899  000E2A  EFBA  F007         	goto	l2254
  2900  000E2E                     u1810:
  2901  000E2E                     
  2902                           ; BSR set to: 0
  2903  000E2E  0E14               	movlw	20
  2904  000E30  0100               	movlb	0	; force () banked
  2905  000E32  19BC               	xorwf	calculToucheCombien@colonne& (0+255),w,b
  2906  000E34  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2907  000E36  A4D8               	btfss	status,2,c
  2908  000E38  EF20  F007         	goto	u1821
  2909  000E3C  EF22  F007         	goto	u1820
  2910  000E40                     u1821:
  2911  000E40  EFBA  F007         	goto	l2254
  2912  000E44                     u1820:
  2913  000E44                     
  2914                           ; BSR set to: 0
  2915                           ;main.c: 308: {;main.c: 309: for(i=-1;i<1;i++)
  2916  000E44  0100               	movlb	0	; force () banked
  2917  000E46  69C7               	setf	calculToucheCombien@i& (0+255),b
  2918  000E48  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  2919  000E4A                     
  2920                           ; BSR set to: 0
  2921  000E4A  0100               	movlb	0	; force () banked
  2922  000E4C  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2923  000E4E  EF31  F007         	goto	u1831
  2924  000E52  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2925  000E54  E108               	bnz	u1830
  2926  000E56  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  2927  000E58  A0D8               	btfss	status,0,c
  2928  000E5A  EF31  F007         	goto	u1831
  2929  000E5E  EF33  F007         	goto	u1830
  2930  000E62                     u1831:
  2931  000E62  EF35  F007         	goto	l2244
  2932  000E66                     u1830:
  2933  000E66  EF84  F007         	goto	l2250
  2934  000E6A                     l2244:
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;main.c: 310: {;main.c: 311: if(m_tabMines[ligne-1][colonne+i]== 2)
  2938  000E6A  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2939  000E6E  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2940  000E72  0E00               	movlw	0
  2941  000E74  0100               	movlb	0	; force () banked
  2942  000E76  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2943  000E78  0E15               	movlw	21
  2944  000E7A  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2945  000E7C  EC1E  F013         	call	___wmul	;wreg free
  2946  000E80  0EEB               	movlw	235
  2947  000E82  0100               	movlb	0	; force () banked
  2948  000E84  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2949  000E86  0EFF               	movlw	255
  2950  000E88  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2951  000E8A  0E60               	movlw	low _m_tabMines
  2952  000E8C  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2953  000E8E  0E00               	movlw	high _m_tabMines
  2954  000E90  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2955  000E92  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  2956  000E94  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2957  000E96  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2958  000E98  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2959  000E9A  0100               	movlb	0	; force () banked
  2960  000E9C  51B4               	movf	?___wmul& (0+255),w,b
  2961  000E9E  0100               	movlb	0	; force () banked
  2962  000EA0  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2963  000EA2  0100               	movlb	0	; force () banked
  2964  000EA4  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2965  000EA6  0100               	movlb	0	; force () banked
  2966  000EA8  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2967  000EAA  0100               	movlb	0	; force () banked
  2968  000EAC  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2969  000EAE  0100               	movlb	0	; force () banked
  2970  000EB0  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2971  000EB2  0100               	movlb	0	; force () banked
  2972  000EB4  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2973  000EB6  0100               	movlb	0	; force () banked
  2974  000EB8  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2975  000EBA  0100               	movlb	0	; force () banked
  2976  000EBC  51C7               	movf	calculToucheCombien@i& (0+255),w,b
  2977  000EBE  0100               	movlb	0	; force () banked
  2978  000EC0  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2979  000EC2  6ED9               	movwf	fsr2l,c
  2980  000EC4  0100               	movlb	0	; force () banked
  2981  000EC6  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2982  000EC8  0100               	movlb	0	; force () banked
  2983  000ECA  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2984  000ECC  6EDA               	movwf	fsr2h,c
  2985  000ECE  0E02               	movlw	2
  2986  000ED0  18DE               	xorwf	postinc2,w,c
  2987  000ED2  A4D8               	btfss	status,2,c
  2988  000ED4  EF6E  F007         	goto	u1841
  2989  000ED8  EF70  F007         	goto	u1840
  2990  000EDC                     u1841:
  2991  000EDC  EF73  F007         	goto	l154
  2992  000EE0                     u1840:
  2993  000EE0                     
  2994                           ; BSR set to: 0
  2995                           ;main.c: 312: {;main.c: 313: nb_mine++;
  2996  000EE0  0100               	movlb	0	; force () banked
  2997  000EE2  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2998  000EE4  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2999  000EE6                     l154:
  3000                           
  3001                           ; BSR set to: 0
  3002  000EE6  0100               	movlb	0	; force () banked
  3003  000EE8  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  3004  000EEA  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  3005  000EEC                     
  3006                           ; BSR set to: 0
  3007  000EEC  0100               	movlb	0	; force () banked
  3008  000EEE  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  3009  000EF0  EF82  F007         	goto	u1851
  3010  000EF4  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  3011  000EF6  E108               	bnz	u1850
  3012  000EF8  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  3013  000EFA  A0D8               	btfss	status,0,c
  3014  000EFC  EF82  F007         	goto	u1851
  3015  000F00  EF84  F007         	goto	u1850
  3016  000F04                     u1851:
  3017  000F04  EF35  F007         	goto	l2244
  3018  000F08                     u1850:
  3019  000F08                     l2250:
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;main.c: 314: };main.c: 315: };main.c: 316: if(m_tabMines[ligne][colonne-1]==2)
  3023  000F08  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  3024  000F0C  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  3025  000F10  0E00               	movlw	0
  3026  000F12  0100               	movlb	0	; force () banked
  3027  000F14  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3028  000F16  0E15               	movlw	21
  3029  000F18  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3030  000F1A  EC1E  F013         	call	___wmul	;wreg free
  3031  000F1E  0EFF               	movlw	255
  3032  000F20  0100               	movlb	0	; force () banked
  3033  000F22  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  3034  000F24  0EFF               	movlw	255
  3035  000F26  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  3036  000F28  0E60               	movlw	low _m_tabMines
  3037  000F2A  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  3038  000F2C  0E00               	movlw	high _m_tabMines
  3039  000F2E  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  3040  000F30  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  3041  000F32  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  3042  000F34  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  3043  000F36  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  3044  000F38  0100               	movlb	0	; force () banked
  3045  000F3A  51B4               	movf	?___wmul& (0+255),w,b
  3046  000F3C  0100               	movlb	0	; force () banked
  3047  000F3E  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  3048  000F40  0100               	movlb	0	; force () banked
  3049  000F42  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3050  000F44  0100               	movlb	0	; force () banked
  3051  000F46  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  3052  000F48  0100               	movlb	0	; force () banked
  3053  000F4A  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  3054  000F4C  0100               	movlb	0	; force () banked
  3055  000F4E  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  3056  000F50  6ED9               	movwf	fsr2l,c
  3057  000F52  0100               	movlb	0	; force () banked
  3058  000F54  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3059  000F56  0100               	movlb	0	; force () banked
  3060  000F58  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  3061  000F5A  6EDA               	movwf	fsr2h,c
  3062  000F5C  0E02               	movlw	2
  3063  000F5E  18DE               	xorwf	postinc2,w,c
  3064  000F60  A4D8               	btfss	status,2,c
  3065  000F62  EFB5  F007         	goto	u1861
  3066  000F66  EFB7  F007         	goto	u1860
  3067  000F6A                     u1861:
  3068  000F6A  EFBA  F007         	goto	l2254
  3069  000F6E                     u1860:
  3070  000F6E                     
  3071                           ; BSR set to: 0
  3072                           ;main.c: 317: {;main.c: 318: nb_mine++;
  3073  000F6E  0100               	movlb	0	; force () banked
  3074  000F70  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  3075  000F72  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  3076  000F74                     l2254:
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;main.c: 319: };main.c: 320: };main.c: 321: if((ligne==3)&&(colonne<20)&&(colonne>0))
  3080  000F74  0E03               	movlw	3
  3081  000F76  0100               	movlb	0	; force () banked
  3082  000F78  19BA               	xorwf	calculToucheCombien@ligne& (0+255),w,b
  3083  000F7A  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  3084  000F7C  A4D8               	btfss	status,2,c
  3085  000F7E  EFC3  F007         	goto	u1871
  3086  000F82  EFC5  F007         	goto	u1870
  3087  000F86                     u1871:
  3088  000F86  EFA4  F008         	goto	l2282
  3089  000F8A                     u1870:
  3090  000F8A                     
  3091                           ; BSR set to: 0
  3092  000F8A  0100               	movlb	0	; force () banked
  3093  000F8C  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  3094  000F8E  EFD4  F007         	goto	u1880
  3095  000F92  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3096  000F94  E107               	bnz	u1881
  3097  000F96  0E14               	movlw	20
  3098  000F98  5DBC               	subwf	calculToucheCombien@colonne& (0+255),w,b
  3099  000F9A  B0D8               	btfsc	status,0,c
  3100  000F9C  EFD2  F007         	goto	u1881
  3101  000FA0  EFD4  F007         	goto	u1880
  3102  000FA4                     u1881:
  3103  000FA4  EFA4  F008         	goto	l2282
  3104  000FA8                     u1880:
  3105  000FA8                     
  3106                           ; BSR set to: 0
  3107  000FA8  0100               	movlb	0	; force () banked
  3108  000FAA  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  3109  000FAC  EFE0  F007         	goto	u1891
  3110  000FB0  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3111  000FB2  E108               	bnz	u1890
  3112  000FB4  05BC               	decf	calculToucheCombien@colonne& (0+255),w,b
  3113  000FB6  A0D8               	btfss	status,0,c
  3114  000FB8  EFE0  F007         	goto	u1891
  3115  000FBC  EFE2  F007         	goto	u1890
  3116  000FC0                     u1891:
  3117  000FC0  EFA4  F008         	goto	l2282
  3118  000FC4                     u1890:
  3119  000FC4                     
  3120                           ; BSR set to: 0
  3121                           ;main.c: 322: {;main.c: 323: for(j=-1;j<=1;j++)
  3122  000FC4  0100               	movlb	0	; force () banked
  3123  000FC6  69C5               	setf	calculToucheCombien@j& (0+255),b
  3124  000FC8  69C6               	setf	(calculToucheCombien@j+1)& (0+255),b
  3125  000FCA                     
  3126                           ; BSR set to: 0
  3127  000FCA  0100               	movlb	0	; force () banked
  3128  000FCC  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  3129  000FCE  EFF2  F007         	goto	u1901
  3130  000FD2  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  3131  000FD4  E109               	bnz	u1900
  3132  000FD6  0E02               	movlw	2
  3133  000FD8  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  3134  000FDA  A0D8               	btfss	status,0,c
  3135  000FDC  EFF2  F007         	goto	u1901
  3136  000FE0  EFF4  F007         	goto	u1900
  3137  000FE4                     u1901:
  3138  000FE4  EFF6  F007         	goto	l2266
  3139  000FE8                     u1900:
  3140  000FE8  EF46  F008         	goto	l158
  3141  000FEC                     l2266:
  3142                           
  3143                           ; BSR set to: 0
  3144                           ;main.c: 324: {;main.c: 325: if(m_tabMines[ligne-1][colonne+j]== 2)
  3145  000FEC  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  3146  000FF0  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  3147  000FF4  0E00               	movlw	0
  3148  000FF6  0100               	movlb	0	; force () banked
  3149  000FF8  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3150  000FFA  0E15               	movlw	21
  3151  000FFC  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3152  000FFE  EC1E  F013         	call	___wmul	;wreg free
  3153  001002  0EEB               	movlw	235
  3154  001004  0100               	movlb	0	; force () banked
  3155  001006  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  3156  001008  0EFF               	movlw	255
  3157  00100A  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  3158  00100C  0E60               	movlw	low _m_tabMines
  3159  00100E  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  3160  001010  0E00               	movlw	high _m_tabMines
  3161  001012  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  3162  001014  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  3163  001016  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  3164  001018  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  3165  00101A  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  3166  00101C  0100               	movlb	0	; force () banked
  3167  00101E  51B4               	movf	?___wmul& (0+255),w,b
  3168  001020  0100               	movlb	0	; force () banked
  3169  001022  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  3170  001024  0100               	movlb	0	; force () banked
  3171  001026  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3172  001028  0100               	movlb	0	; force () banked
  3173  00102A  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  3174  00102C  0100               	movlb	0	; force () banked
  3175  00102E  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  3176  001030  0100               	movlb	0	; force () banked
  3177  001032  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  3178  001034  0100               	movlb	0	; force () banked
  3179  001036  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3180  001038  0100               	movlb	0	; force () banked
  3181  00103A  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  3182  00103C  0100               	movlb	0	; force () banked
  3183  00103E  51C5               	movf	calculToucheCombien@j& (0+255),w,b
  3184  001040  0100               	movlb	0	; force () banked
  3185  001042  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  3186  001044  6ED9               	movwf	fsr2l,c
  3187  001046  0100               	movlb	0	; force () banked
  3188  001048  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  3189  00104A  0100               	movlb	0	; force () banked
  3190  00104C  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  3191  00104E  6EDA               	movwf	fsr2h,c
  3192  001050  0E02               	movlw	2
  3193  001052  18DE               	xorwf	postinc2,w,c
  3194  001054  A4D8               	btfss	status,2,c
  3195  001056  EF2F  F008         	goto	u1911
  3196  00105A  EF31  F008         	goto	u1910
  3197  00105E                     u1911:
  3198  00105E  EF34  F008         	goto	l159
  3199  001062                     u1910:
  3200  001062                     
  3201                           ; BSR set to: 0
  3202                           ;main.c: 326: {;main.c: 327: nb_mine++;
  3203  001062  0100               	movlb	0	; force () banked
  3204  001064  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  3205  001066  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  3206  001068                     l159:
  3207                           
  3208                           ; BSR set to: 0
  3209  001068  0100               	movlb	0	; force () banked
  3210  00106A  4BC5               	infsnz	calculToucheCombien@j& (0+255),f,b
  3211  00106C  2BC6               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  3212  00106E                     
  3213                           ; BSR set to: 0
  3214  00106E  0100               	movlb	0	; force () banked
  3215  001070  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  3216  001072  EF44  F008         	goto	u1921
  3217  001076  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  3218  001078  E109               	bnz	u1920
  3219  00107A  0E02               	movlw	2
  3220  00107C  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  3221  00107E  A0D8               	btfss	status,0,c
  3222  001080  EF44  F008         	goto	u1921
  3223  001084  EF46  F008         	goto	u1920
  3224  001088                     u1921:
  3225  001088  EFF6  F007         	goto	l2266
  3226  00108C                     u1920:
  3227  00108C                     l158:
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;main.c: 328: };main.c: 329: };main.c: 330: for(i=-1;i<=1;i++)
  3231  00108C  0100               	movlb	0	; force () banked
  3232  00108E  69C7               	setf	calculToucheCombien@i& (0+255),b
  3233  001090  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  3234  001092                     
  3235                           ; BSR set to: 0
  3236  001092  0100               	movlb	0	; force () banked
  3237  001094  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  3238  001096  EF56  F008         	goto	u1931
  3239  00109A  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  3240  00109C  E109               	bnz	u1930
  3241  00109E  0E02               	movlw	2
  3242  0010A0  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  3243  0010A2  A0D8               	btfss	status,0,c
  3244  0010A4  EF56  F008         	goto	u1931
  3245  0010A8  EF58  F008         	goto	u1930
  3246  0010AC                     u1931:
  3247  0010AC  EF5A  F008         	goto	l2276
  3248  0010B0                     u1930:
  3249  0010B0  EFA4  F008         	goto	l2282
  3250  0010B4                     l2276:
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;main.c: 331: {;main.c: 332: if(m_tabMines[ligne][colonne+i]==2)
  3254  0010B4  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  3255  0010B8  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  3256  0010BC  0E00               	movlw	0
  3257  0010BE  0100               	movlb	0	; force () banked
  3258  0010C0  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3259  0010C2  0E15               	movlw	21
  3260  0010C4  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3261  0010C6  EC1E  F013         	call	___wmul	;wreg free
  3262  0010CA  0E60               	movlw	low _m_tabMines
  3263  0010CC  0100               	movlb	0	; force () banked
  3264  0010CE  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  3265  0010D0  0E00               	movlw	high _m_tabMines
  3266  0010D2  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  3267  0010D4  0100               	movlb	0	; force () banked
  3268  0010D6  51B4               	movf	?___wmul& (0+255),w,b
  3269  0010D8  0100               	movlb	0	; force () banked
  3270  0010DA  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  3271  0010DC  0100               	movlb	0	; force () banked
  3272  0010DE  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3273  0010E0  0100               	movlb	0	; force () banked
  3274  0010E2  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  3275  0010E4  0100               	movlb	0	; force () banked
  3276  0010E6  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  3277  0010E8  0100               	movlb	0	; force () banked
  3278  0010EA  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  3279  0010EC  0100               	movlb	0	; force () banked
  3280  0010EE  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3281  0010F0  0100               	movlb	0	; force () banked
  3282  0010F2  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  3283  0010F4  0100               	movlb	0	; force () banked
  3284  0010F6  51C7               	movf	calculToucheCombien@i& (0+255),w,b
  3285  0010F8  0100               	movlb	0	; force () banked
  3286  0010FA  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  3287  0010FC  6ED9               	movwf	fsr2l,c
  3288  0010FE  0100               	movlb	0	; force () banked
  3289  001100  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  3290  001102  0100               	movlb	0	; force () banked
  3291  001104  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  3292  001106  6EDA               	movwf	fsr2h,c
  3293  001108  0E02               	movlw	2
  3294  00110A  18DE               	xorwf	postinc2,w,c
  3295  00110C  A4D8               	btfss	status,2,c
  3296  00110E  EF8B  F008         	goto	u1941
  3297  001112  EF8D  F008         	goto	u1940
  3298  001116                     u1941:
  3299  001116  EF90  F008         	goto	l162
  3300  00111A                     u1940:
  3301  00111A                     
  3302                           ; BSR set to: 0
  3303                           ;main.c: 333: {;main.c: 334: nb_mine++;
  3304  00111A  0100               	movlb	0	; force () banked
  3305  00111C  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  3306  00111E  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  3307  001120                     l162:
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;main.c: 335: };main.c: 336: i++;
  3311  001120  0100               	movlb	0	; force () banked
  3312  001122  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  3313  001124  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  3314  001126  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  3315  001128  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  3316  00112A                     
  3317                           ; BSR set to: 0
  3318  00112A  0100               	movlb	0	; force () banked
  3319  00112C  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  3320  00112E  EFA2  F008         	goto	u1951
  3321  001132  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  3322  001134  E109               	bnz	u1950
  3323  001136  0E02               	movlw	2
  3324  001138  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  3325  00113A  A0D8               	btfss	status,0,c
  3326  00113C  EFA2  F008         	goto	u1951
  3327  001140  EFA4  F008         	goto	u1950
  3328  001144                     u1951:
  3329  001144  EF5A  F008         	goto	l2276
  3330  001148                     u1950:
  3331  001148                     l2282:
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;main.c: 337: };main.c: 338: };main.c: 339: return nb_mine;
  3335  001148  0100               	movlb	0	; force () banked
  3336  00114A  51C3               	movf	calculToucheCombien@nb_mine& (0+255),w,b
  3337  00114C                     
  3338                           ; BSR set to: 0
  3339  00114C  0012               	return		;funcret
  3340  00114E                     __end_of_calculToucheCombien:
  3341                           	opt callstack 0
  3342                           
  3343 ;; *************** function _lcd_init *****************
  3344 ;; Defined at:
  3345 ;;		line 258 in file "Lcd4Lignes.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;		None
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;		None
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3359 ;;      Params:         0       0       0       0       0       0       0
  3360 ;;      Locals:         0       0       0       0       0       0       0
  3361 ;;      Temps:          0       0       0       0       0       0       0
  3362 ;;      Totals:         0       0       0       0       0       0       0
  3363 ;;Total ram usage:        0 bytes
  3364 ;; Hardware stack levels used:    1
  3365 ;; Hardware stack levels required when called:    5
  3366 ;; This function calls:
  3367 ;;		_lcd_initCGRam
  3368 ;;		_lcd_resetSequence
  3369 ;;		_lcd_wrCom
  3370 ;; This function is called by:
  3371 ;;		_main
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text7
  3376  002614                     __ptext7:
  3377                           	opt callstack 0
  3378  002614                     _lcd_init:
  3379                           	opt callstack 25
  3380  002614                     
  3381                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  3382  002614  ECE0  F011         	call	_lcd_resetSequence	;wreg free
  3383                           
  3384                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  3385  002618  0E28               	movlw	40
  3386  00261A  ECAA  F011         	call	_lcd_wrCom
  3387                           
  3388                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  3389  00261E  0E0F               	movlw	15
  3390  002620  ECAA  F011         	call	_lcd_wrCom
  3391                           
  3392                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  3393  002624  0E01               	movlw	1
  3394  002626  ECAA  F011         	call	_lcd_wrCom
  3395                           
  3396                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  3397  00262A  0E06               	movlw	6
  3398  00262C  ECAA  F011         	call	_lcd_wrCom
  3399                           
  3400                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  3401  002630  0E80               	movlw	128
  3402  002632  ECAA  F011         	call	_lcd_wrCom
  3403  002636                     
  3404                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  3405  002636  ECEA  F010         	call	_lcd_initCGRam	;wreg free
  3406  00263A  0012               	return		;funcret
  3407  00263C                     __end_of_lcd_init:
  3408                           	opt callstack 0
  3409                           
  3410 ;; *************** function _lcd_resetSequence *****************
  3411 ;; Defined at:
  3412 ;;		line 221 in file "Lcd4Lignes.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		wreg, status,2, status,0, cstack
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3426 ;;      Params:         0       0       0       0       0       0       0
  3427 ;;      Locals:         0       0       0       0       0       0       0
  3428 ;;      Temps:          0       1       0       0       0       0       0
  3429 ;;      Totals:         0       1       0       0       0       0       0
  3430 ;;Total ram usage:        1 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; Hardware stack levels required when called:    1
  3433 ;; This function calls:
  3434 ;;		_lcd_ecrireDonnees
  3435 ;;		_lcd_strobeEnableBit
  3436 ;; This function is called by:
  3437 ;;		_lcd_init
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           	psect	text8
  3442  0023C0                     __ptext8:
  3443                           	opt callstack 0
  3444  0023C0                     _lcd_resetSequence:
  3445                           	opt callstack 28
  3446  0023C0                     
  3447                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  3448  0023C0  0E00               	movlw	0
  3449  0023C2  6E95               	movwf	149,c	;volatile
  3450  0023C4                     
  3451                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  3452  0023C4  0E0D               	movlw	13
  3453  0023C6  0100               	movlb	0	; force () banked
  3454  0023C8  6FB6               	movwf	??_lcd_resetSequence& (0+255),b
  3455  0023CA  0EFB               	movlw	251
  3456  0023CC                     u2647:
  3457  0023CC  2EE8               	decfsz	wreg,f,c
  3458  0023CE  D7FE               	bra	u2647
  3459  0023D0  2FB6               	decfsz	??_lcd_resetSequence& (0+255),f,b
  3460  0023D2  D7FC               	bra	u2647
  3461  0023D4  F000 F000          	nop2	
  3462  0023D8                     
  3463                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  3464  0023D8  9080               	bcf	128,0,c	;volatile
  3465  0023DA                     
  3466                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  3467  0023DA  9280               	bcf	128,1,c	;volatile
  3468  0023DC                     
  3469                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  3470  0023DC  0E03               	movlw	3
  3471  0023DE  EC54  F013         	call	_lcd_ecrireDonnees
  3472  0023E2                     
  3473                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  3474  0023E2  EC6D  F013         	call	_lcd_strobeEnableBit	;wreg free
  3475  0023E6                     
  3476                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3477  0023E6  0E03               	movlw	3
  3478  0023E8                     u2657:
  3479  0023E8  2EE8               	decfsz	wreg,f,c
  3480  0023EA  D7FE               	bra	u2657
  3481  0023EC  F000               	nop	
  3482  0023EE                     
  3483                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  3484  0023EE  0E03               	movlw	3
  3485  0023F0  EC54  F013         	call	_lcd_ecrireDonnees
  3486  0023F4                     
  3487                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  3488  0023F4  EC6D  F013         	call	_lcd_strobeEnableBit	;wreg free
  3489  0023F8                     
  3490                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3491  0023F8  0E03               	movlw	3
  3492  0023FA                     u2667:
  3493  0023FA  2EE8               	decfsz	wreg,f,c
  3494  0023FC  D7FE               	bra	u2667
  3495  0023FE  F000               	nop	
  3496  002400                     
  3497                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  3498  002400  0E03               	movlw	3
  3499  002402  EC54  F013         	call	_lcd_ecrireDonnees
  3500  002406                     
  3501                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  3502  002406  EC6D  F013         	call	_lcd_strobeEnableBit	;wreg free
  3503  00240A                     
  3504                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3505  00240A  0E03               	movlw	3
  3506  00240C                     u2677:
  3507  00240C  2EE8               	decfsz	wreg,f,c
  3508  00240E  D7FE               	bra	u2677
  3509  002410  F000               	nop	
  3510  002412                     
  3511                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  3512  002412  0E02               	movlw	2
  3513  002414  EC54  F013         	call	_lcd_ecrireDonnees
  3514  002418                     
  3515                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  3516  002418  EC6D  F013         	call	_lcd_strobeEnableBit	;wreg free
  3517  00241C                     
  3518                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3519  00241C  0E03               	movlw	3
  3520  00241E                     u2687:
  3521  00241E  2EE8               	decfsz	wreg,f,c
  3522  002420  D7FE               	bra	u2687
  3523  002422  F000               	nop	
  3524  002424                     
  3525                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  3526  002424  0E0F               	movlw	15
  3527  002426  6E95               	movwf	149,c	;volatile
  3528  002428  0012               	return		;funcret
  3529  00242A                     __end_of_lcd_resetSequence:
  3530                           	opt callstack 0
  3531                           
  3532 ;; *************** function _lcd_initCGRam *****************
  3533 ;; Defined at:
  3534 ;;		line 417 in file "Lcd4Lignes.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;		None
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;  j               1    6[BANK0 ] unsigned char 
  3539 ;;  i               1    5[BANK0 ] unsigned char 
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  1    wreg      void 
  3542 ;; Registers used:
  3543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3549 ;;      Params:         0       0       0       0       0       0       0
  3550 ;;      Locals:         0       2       0       0       0       0       0
  3551 ;;      Temps:          0       2       0       0       0       0       0
  3552 ;;      Totals:         0       4       0       0       0       0       0
  3553 ;;Total ram usage:        4 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:    4
  3556 ;; This function calls:
  3557 ;;		_lcd_curseurHome
  3558 ;;		_lcd_wrCom
  3559 ;;		_lcd_wrData
  3560 ;; This function is called by:
  3561 ;;		_lcd_init
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text9
  3566  0021D4                     __ptext9:
  3567                           	opt callstack 0
  3568  0021D4                     _lcd_initCGRam:
  3569                           	opt callstack 25
  3570  0021D4                     
  3571                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  3572  0021D4  0E40               	movlw	64
  3573  0021D6  ECAA  F011         	call	_lcd_wrCom
  3574  0021DA                     
  3575                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  3576  0021DA  0E00               	movlw	0
  3577  0021DC  0100               	movlb	0	; force () banked
  3578  0021DE  6FB9               	movwf	lcd_initCGRam@i& (0+255),b
  3579  0021E0                     
  3580                           ; BSR set to: 0
  3581  0021E0  0E07               	movlw	7
  3582  0021E2  0100               	movlb	0	; force () banked
  3583  0021E4  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  3584  0021E6  EFF7  F010         	goto	u2101
  3585  0021EA  EFF9  F010         	goto	u2100
  3586  0021EE                     u2101:
  3587  0021EE  EFFB  F010         	goto	l2390
  3588  0021F2                     u2100:
  3589  0021F2  EF38  F011         	goto	l2406
  3590  0021F6                     l2390:
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  3594  0021F6  0E00               	movlw	0
  3595  0021F8  0100               	movlb	0	; force () banked
  3596  0021FA  6FBA               	movwf	lcd_initCGRam@j& (0+255),b
  3597  0021FC                     
  3598                           ; BSR set to: 0
  3599  0021FC  0E07               	movlw	7
  3600  0021FE  0100               	movlb	0	; force () banked
  3601  002200  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  3602  002202  EF05  F011         	goto	u2111
  3603  002206  EF07  F011         	goto	u2110
  3604  00220A                     u2111:
  3605  00220A  EF09  F011         	goto	l2396
  3606  00220E                     u2110:
  3607  00220E  EF2D  F011         	goto	l2402
  3608  002212                     l2396:
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  3612  002212  0100               	movlb	0	; force () banked
  3613  002214  51B9               	movf	lcd_initCGRam@i& (0+255),w,b
  3614  002216  0D08               	mullw	8
  3615  002218  0E54               	movlw	low _matCGRAM
  3616  00221A  0100               	movlb	0	; force () banked
  3617  00221C  6FB7               	movwf	??_lcd_initCGRam& (0+255),b
  3618  00221E  0E01               	movlw	high _matCGRAM
  3619  002220  6FB8               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  3620  002222  50F3               	movf	243,w,c
  3621  002224  27B7               	addwf	??_lcd_initCGRam& (0+255),f,b
  3622  002226  50F4               	movf	244,w,c
  3623  002228  23B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  3624  00222A  0100               	movlb	0	; force () banked
  3625  00222C  51BA               	movf	lcd_initCGRam@j& (0+255),w,b
  3626  00222E  0100               	movlb	0	; force () banked
  3627  002230  25B7               	addwf	??_lcd_initCGRam& (0+255),w,b
  3628  002232  6ED9               	movwf	fsr2l,c
  3629  002234  0100               	movlb	0	; force () banked
  3630  002236  0E00               	movlw	0
  3631  002238  0100               	movlb	0	; force () banked
  3632  00223A  21B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  3633  00223C  6EDA               	movwf	fsr2h,c
  3634  00223E  50DF               	movf	indf2,w,c
  3635  002240  ECDA  F012         	call	_lcd_wrData
  3636  002244  0100               	movlb	0	; force () banked
  3637  002246  2BBA               	incf	lcd_initCGRam@j& (0+255),f,b
  3638  002248                     
  3639                           ; BSR set to: 0
  3640  002248  0E07               	movlw	7
  3641  00224A  0100               	movlb	0	; force () banked
  3642  00224C  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  3643  00224E  EF2B  F011         	goto	u2121
  3644  002252  EF2D  F011         	goto	u2120
  3645  002256                     u2121:
  3646  002256  EF09  F011         	goto	l2396
  3647  00225A                     u2120:
  3648  00225A                     l2402:
  3649                           
  3650                           ; BSR set to: 0
  3651  00225A  0100               	movlb	0	; force () banked
  3652  00225C  2BB9               	incf	lcd_initCGRam@i& (0+255),f,b
  3653  00225E                     
  3654                           ; BSR set to: 0
  3655  00225E  0E07               	movlw	7
  3656  002260  0100               	movlb	0	; force () banked
  3657  002262  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  3658  002264  EF36  F011         	goto	u2131
  3659  002268  EF38  F011         	goto	u2130
  3660  00226C                     u2131:
  3661  00226C  EFFB  F010         	goto	l2390
  3662  002270                     u2130:
  3663  002270                     l2406:
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  3667  002270  EC69  F013         	call	_lcd_curseurHome	;wreg free
  3668  002274  0012               	return		;funcret
  3669  002276                     __end_of_lcd_initCGRam:
  3670                           	opt callstack 0
  3671                           
  3672 ;; *************** function _lcd_curseurHome *****************
  3673 ;; Defined at:
  3674 ;;		line 288 in file "Lcd4Lignes.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;		None
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      void 
  3681 ;; Registers used:
  3682 ;;		wreg, status,2, status,0, cstack
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3688 ;;      Params:         0       0       0       0       0       0       0
  3689 ;;      Locals:         0       0       0       0       0       0       0
  3690 ;;      Temps:          0       0       0       0       0       0       0
  3691 ;;      Totals:         0       0       0       0       0       0       0
  3692 ;;Total ram usage:        0 bytes
  3693 ;; Hardware stack levels used:    1
  3694 ;; Hardware stack levels required when called:    3
  3695 ;; This function calls:
  3696 ;;		_lcd_wrCom
  3697 ;; This function is called by:
  3698 ;;		_main
  3699 ;;		_lcd_initCGRam
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text10
  3704  0026D2                     __ptext10:
  3705                           	opt callstack 0
  3706  0026D2                     _lcd_curseurHome:
  3707                           	opt callstack 25
  3708  0026D2                     
  3709                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  3710  0026D2  0E02               	movlw	2
  3711  0026D4  ECAA  F011         	call	_lcd_wrCom
  3712  0026D8  0012               	return		;funcret
  3713  0026DA                     __end_of_lcd_curseurHome:
  3714                           	opt callstack 0
  3715                           
  3716 ;; *************** function _initialisation *****************
  3717 ;; Defined at:
  3718 ;;		line 91 in file "main.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;		None
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;		None
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  1    wreg      void 
  3725 ;; Registers used:
  3726 ;;		wreg, status,2
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3732 ;;      Params:         0       0       0       0       0       0       0
  3733 ;;      Locals:         0       0       0       0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0
  3735 ;;      Totals:         0       0       0       0       0       0       0
  3736 ;;Total ram usage:        0 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; This function calls:
  3739 ;;		Nothing
  3740 ;; This function is called by:
  3741 ;;		_main
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text11
  3746  002664                     __ptext11:
  3747                           	opt callstack 0
  3748  002664                     _initialisation:
  3749                           	opt callstack 30
  3750  002664                     
  3751                           ;main.c: 93: TRISD = 0;
  3752  002664  0E00               	movlw	0
  3753  002666  6E95               	movwf	149,c	;volatile
  3754                           
  3755                           ;main.c: 94: ANSELH = 0;
  3756  002668  0E00               	movlw	0
  3757  00266A  6E7F               	movwf	127,c	;volatile
  3758  00266C                     
  3759                           ;main.c: 95: TRISB = 0xFF;
  3760  00266C  6893               	setf	147,c	;volatile
  3761                           
  3762                           ;main.c: 96: ANSEL = 0;
  3763  00266E  0E00               	movlw	0
  3764  002670  6E7E               	movwf	126,c	;volatile
  3765                           
  3766                           ;main.c: 97: TRISA = 0;
  3767  002672  0E00               	movlw	0
  3768  002674  6E92               	movwf	146,c	;volatile
  3769                           
  3770                           ;main.c: 99: ADCON1 = 0;
  3771  002676  0E00               	movlw	0
  3772  002678  6EC1               	movwf	193,c	;volatile
  3773  00267A                     
  3774                           ;main.c: 100: ANSELbits.ANS7 = 1;
  3775  00267A  8E7E               	bsf	126,7,c	;volatile
  3776  00267C                     
  3777                           ;main.c: 101: ADCON0bits.ADON = 1;
  3778  00267C  80C2               	bsf	194,0,c	;volatile
  3779  00267E                     
  3780                           ;main.c: 102: ADCON2bits.ADFM = 0;
  3781  00267E  9EC0               	bcf	192,7,c	;volatile
  3782                           
  3783                           ;main.c: 103: ADCON2bits.ACQT = 0;
  3784  002680  0EC7               	movlw	-57
  3785  002682  16C0               	andwf	192,f,c	;volatile
  3786                           
  3787                           ;main.c: 104: ADCON2bits.ADCS = 0;
  3788  002684  0EF8               	movlw	-8
  3789  002686  16C0               	andwf	192,f,c	;volatile
  3790  002688  0012               	return		;funcret
  3791  00268A                     __end_of_initialisation:
  3792                           	opt callstack 0
  3793                           
  3794 ;; *************** function _init_serie *****************
  3795 ;; Defined at:
  3796 ;;		line 29 in file "serie.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;		None
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, status,2
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3810 ;;      Params:         0       0       0       0       0       0       0
  3811 ;;      Locals:         0       0       0       0       0       0       0
  3812 ;;      Temps:          0       0       0       0       0       0       0
  3813 ;;      Totals:         0       0       0       0       0       0       0
  3814 ;;Total ram usage:        0 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; This function calls:
  3817 ;;		Nothing
  3818 ;; This function is called by:
  3819 ;;		_main
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           	psect	text12
  3824  00268A                     __ptext12:
  3825                           	opt callstack 0
  3826  00268A                     _init_serie:
  3827                           	opt callstack 30
  3828  00268A                     
  3829                           ;serie.c: 32: TRISCbits.TRISC7=1;
  3830  00268A  8E94               	bsf	148,7,c	;volatile
  3831                           
  3832                           ;serie.c: 33: TRISCbits.TRISC6=1;
  3833  00268C  8C94               	bsf	148,6,c	;volatile
  3834  00268E                     
  3835                           ;serie.c: 37: SPBRGH=0x00;
  3836  00268E  0E00               	movlw	0
  3837  002690  6EB0               	movwf	176,c	;volatile
  3838                           
  3839                           ;serie.c: 38: SPBRG=25;
  3840  002692  0E19               	movlw	25
  3841  002694  6EAF               	movwf	175,c	;volatile
  3842  002696                     
  3843                           ;serie.c: 39: BAUDCONbits.BRG16=1;
  3844  002696  86B8               	bsf	184,3,c	;volatile
  3845  002698                     
  3846                           ;serie.c: 40: TXSTAbits.BRGH=1;
  3847  002698  84AC               	bsf	172,2,c	;volatile
  3848  00269A                     
  3849                           ;serie.c: 43: TXSTAbits.SYNC=0;
  3850  00269A  98AC               	bcf	172,4,c	;volatile
  3851  00269C                     
  3852                           ;serie.c: 44: TXSTAbits.TXEN=1;
  3853  00269C  8AAC               	bsf	172,5,c	;volatile
  3854  00269E                     
  3855                           ;serie.c: 45: RCSTAbits.CREN = 1;
  3856  00269E  88AB               	bsf	171,4,c	;volatile
  3857  0026A0                     
  3858                           ;serie.c: 46: RCSTAbits.SPEN=1;
  3859  0026A0  8EAB               	bsf	171,7,c	;volatile
  3860                           
  3861                           ;serie.c: 47: ANSEL = 0;
  3862  0026A2  0E00               	movlw	0
  3863  0026A4  6E7E               	movwf	126,c	;volatile
  3864  0026A6  0012               	return		;funcret
  3865  0026A8                     __end_of_init_serie:
  3866                           	opt callstack 0
  3867                           
  3868 ;; *************** function _initTabVue *****************
  3869 ;; Defined at:
  3870 ;;		line 128 in file "main.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;		None
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  j               2   10[BANK0 ] int 
  3875 ;;  i               2    8[BANK0 ] int 
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      void 
  3878 ;; Registers used:
  3879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3885 ;;      Params:         0       0       0       0       0       0       0
  3886 ;;      Locals:         0       4       0       0       0       0       0
  3887 ;;      Temps:          0       2       0       0       0       0       0
  3888 ;;      Totals:         0       6       0       0       0       0       0
  3889 ;;Total ram usage:        6 bytes
  3890 ;; Hardware stack levels used:    1
  3891 ;; Hardware stack levels required when called:    1
  3892 ;; This function calls:
  3893 ;;		___wmul
  3894 ;; This function is called by:
  3895 ;;		_main
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text13
  3900  001BD6                     __ptext13:
  3901                           	opt callstack 0
  3902  001BD6                     _initTabVue:
  3903                           	opt callstack 29
  3904  001BD6                     
  3905                           ;main.c: 130: int i=0;
  3906  001BD6  0E00               	movlw	0
  3907  001BD8  0100               	movlb	0	; force () banked
  3908  001BDA  6FBD               	movwf	(initTabVue@i+1)& (0+255),b
  3909  001BDC  0E00               	movlw	0
  3910  001BDE  6FBC               	movwf	initTabVue@i& (0+255),b
  3911                           
  3912                           ;main.c: 131: int j=0;
  3913  001BE0  0E00               	movlw	0
  3914  001BE2  0100               	movlb	0	; force () banked
  3915  001BE4  6FBF               	movwf	(initTabVue@j+1)& (0+255),b
  3916  001BE6  0E00               	movlw	0
  3917  001BE8  6FBE               	movwf	initTabVue@j& (0+255),b
  3918                           
  3919                           ;main.c: 132: for ( i=0;i<4;i++)
  3920  001BEA  0E00               	movlw	0
  3921  001BEC  0100               	movlb	0	; force () banked
  3922  001BEE  6FBD               	movwf	(initTabVue@i+1)& (0+255),b
  3923  001BF0  0E00               	movlw	0
  3924  001BF2  6FBC               	movwf	initTabVue@i& (0+255),b
  3925  001BF4                     
  3926                           ; BSR set to: 0
  3927  001BF4  0100               	movlb	0	; force () banked
  3928  001BF6  BFBD               	btfsc	(initTabVue@i+1)& (0+255),7,b
  3929  001BF8  EF07  F00E         	goto	u2201
  3930  001BFC  51BD               	movf	(initTabVue@i+1)& (0+255),w,b
  3931  001BFE  E109               	bnz	u2200
  3932  001C00  0E04               	movlw	4
  3933  001C02  5DBC               	subwf	initTabVue@i& (0+255),w,b
  3934  001C04  A0D8               	btfss	status,0,c
  3935  001C06  EF07  F00E         	goto	u2201
  3936  001C0A  EF09  F00E         	goto	u2200
  3937  001C0E                     u2201:
  3938  001C0E  EF0B  F00E         	goto	l2454
  3939  001C12                     u2200:
  3940  001C12  EFA7  F00E         	goto	l97
  3941  001C16                     l2454:
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;main.c: 133: {;main.c: 134: for (j=0;j<=(20);j++)
  3945  001C16  0E00               	movlw	0
  3946  001C18  0100               	movlb	0	; force () banked
  3947  001C1A  6FBF               	movwf	(initTabVue@j+1)& (0+255),b
  3948  001C1C  0E00               	movlw	0
  3949  001C1E  6FBE               	movwf	initTabVue@j& (0+255),b
  3950  001C20                     
  3951                           ; BSR set to: 0
  3952  001C20  0100               	movlb	0	; force () banked
  3953  001C22  BFBF               	btfsc	(initTabVue@j+1)& (0+255),7,b
  3954  001C24  EF1D  F00E         	goto	u2211
  3955  001C28  51BF               	movf	(initTabVue@j+1)& (0+255),w,b
  3956  001C2A  E109               	bnz	u2210
  3957  001C2C  0E15               	movlw	21
  3958  001C2E  5DBE               	subwf	initTabVue@j& (0+255),w,b
  3959  001C30  A0D8               	btfss	status,0,c
  3960  001C32  EF1D  F00E         	goto	u2211
  3961  001C36  EF1F  F00E         	goto	u2210
  3962  001C3A                     u2211:
  3963  001C3A  EF21  F00E         	goto	l2460
  3964  001C3E                     u2210:
  3965  001C3E  EF95  F00E         	goto	l2472
  3966  001C42                     l2460:
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;main.c: 135: {;main.c: 136: if(i<20)
  3970  001C42  0100               	movlb	0	; force () banked
  3971  001C44  BFBD               	btfsc	(initTabVue@i+1)& (0+255),7,b
  3972  001C46  EF30  F00E         	goto	u2220
  3973  001C4A  51BD               	movf	(initTabVue@i+1)& (0+255),w,b
  3974  001C4C  E107               	bnz	u2221
  3975  001C4E  0E14               	movlw	20
  3976  001C50  5DBC               	subwf	initTabVue@i& (0+255),w,b
  3977  001C52  B0D8               	btfsc	status,0,c
  3978  001C54  EF2E  F00E         	goto	u2221
  3979  001C58  EF30  F00E         	goto	u2220
  3980  001C5C                     u2221:
  3981  001C5C  EF54  F00E         	goto	l2464
  3982  001C60                     u2220:
  3983  001C60                     
  3984                           ; BSR set to: 0
  3985                           ;main.c: 137: {;main.c: 138: m_tabVue[i][j]= 1;
  3986  001C60  C0BC  F0B4         	movff	initTabVue@i,___wmul@multiplier
  3987  001C64  C0BD  F0B5         	movff	initTabVue@i+1,___wmul@multiplier+1
  3988  001C68  0E00               	movlw	0
  3989  001C6A  0100               	movlb	0	; force () banked
  3990  001C6C  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3991  001C6E  0E15               	movlw	21
  3992  001C70  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3993  001C72  EC1E  F013         	call	___wmul	;wreg free
  3994  001C76  0E00               	movlw	low _m_tabVue
  3995  001C78  0100               	movlb	0	; force () banked
  3996  001C7A  6FBA               	movwf	??_initTabVue& (0+255),b
  3997  001C7C  0E01               	movlw	high _m_tabVue
  3998  001C7E  6FBB               	movwf	(??_initTabVue+1)& (0+255),b
  3999  001C80  0100               	movlb	0	; force () banked
  4000  001C82  51B4               	movf	?___wmul& (0+255),w,b
  4001  001C84  0100               	movlb	0	; force () banked
  4002  001C86  27BA               	addwf	??_initTabVue& (0+255),f,b
  4003  001C88  0100               	movlb	0	; force () banked
  4004  001C8A  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4005  001C8C  0100               	movlb	0	; force () banked
  4006  001C8E  23BB               	addwfc	(??_initTabVue+1)& (0+255),f,b
  4007  001C90  0100               	movlb	0	; force () banked
  4008  001C92  51BE               	movf	initTabVue@j& (0+255),w,b
  4009  001C94  0100               	movlb	0	; force () banked
  4010  001C96  25BA               	addwf	??_initTabVue& (0+255),w,b
  4011  001C98  6ED9               	movwf	fsr2l,c
  4012  001C9A  0100               	movlb	0	; force () banked
  4013  001C9C  51BF               	movf	(initTabVue@j+1)& (0+255),w,b
  4014  001C9E  0100               	movlb	0	; force () banked
  4015  001CA0  21BB               	addwfc	(??_initTabVue+1)& (0+255),w,b
  4016  001CA2  6EDA               	movwf	fsr2h,c
  4017  001CA4  0E01               	movlw	1
  4018  001CA6  6EDF               	movwf	indf2,c
  4019  001CA8                     l2464:
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;main.c: 139: };main.c: 141: if (j==20)
  4023  001CA8  0E14               	movlw	20
  4024  001CAA  0100               	movlb	0	; force () banked
  4025  001CAC  19BE               	xorwf	initTabVue@j& (0+255),w,b
  4026  001CAE  11BF               	iorwf	(initTabVue@j+1)& (0+255),w,b
  4027  001CB0  A4D8               	btfss	status,2,c
  4028  001CB2  EF5D  F00E         	goto	u2231
  4029  001CB6  EF5F  F00E         	goto	u2230
  4030  001CBA                     u2231:
  4031  001CBA  EF83  F00E         	goto	l2468
  4032  001CBE                     u2230:
  4033  001CBE                     
  4034                           ; BSR set to: 0
  4035                           ;main.c: 142: {;main.c: 143: m_tabVue[i][j]= '\0';
  4036  001CBE  C0BC  F0B4         	movff	initTabVue@i,___wmul@multiplier
  4037  001CC2  C0BD  F0B5         	movff	initTabVue@i+1,___wmul@multiplier+1
  4038  001CC6  0E00               	movlw	0
  4039  001CC8  0100               	movlb	0	; force () banked
  4040  001CCA  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4041  001CCC  0E15               	movlw	21
  4042  001CCE  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4043  001CD0  EC1E  F013         	call	___wmul	;wreg free
  4044  001CD4  0E00               	movlw	low _m_tabVue
  4045  001CD6  0100               	movlb	0	; force () banked
  4046  001CD8  6FBA               	movwf	??_initTabVue& (0+255),b
  4047  001CDA  0E01               	movlw	high _m_tabVue
  4048  001CDC  6FBB               	movwf	(??_initTabVue+1)& (0+255),b
  4049  001CDE  0100               	movlb	0	; force () banked
  4050  001CE0  51B4               	movf	?___wmul& (0+255),w,b
  4051  001CE2  0100               	movlb	0	; force () banked
  4052  001CE4  27BA               	addwf	??_initTabVue& (0+255),f,b
  4053  001CE6  0100               	movlb	0	; force () banked
  4054  001CE8  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4055  001CEA  0100               	movlb	0	; force () banked
  4056  001CEC  23BB               	addwfc	(??_initTabVue+1)& (0+255),f,b
  4057  001CEE  0100               	movlb	0	; force () banked
  4058  001CF0  51BE               	movf	initTabVue@j& (0+255),w,b
  4059  001CF2  0100               	movlb	0	; force () banked
  4060  001CF4  25BA               	addwf	??_initTabVue& (0+255),w,b
  4061  001CF6  6ED9               	movwf	fsr2l,c
  4062  001CF8  0100               	movlb	0	; force () banked
  4063  001CFA  51BF               	movf	(initTabVue@j+1)& (0+255),w,b
  4064  001CFC  0100               	movlb	0	; force () banked
  4065  001CFE  21BB               	addwfc	(??_initTabVue+1)& (0+255),w,b
  4066  001D00  6EDA               	movwf	fsr2h,c
  4067  001D02  0E00               	movlw	0
  4068  001D04  6EDF               	movwf	indf2,c
  4069  001D06                     l2468:
  4070                           
  4071                           ; BSR set to: 0
  4072  001D06  0100               	movlb	0	; force () banked
  4073  001D08  4BBE               	infsnz	initTabVue@j& (0+255),f,b
  4074  001D0A  2BBF               	incf	(initTabVue@j+1)& (0+255),f,b
  4075  001D0C                     
  4076                           ; BSR set to: 0
  4077  001D0C  0100               	movlb	0	; force () banked
  4078  001D0E  BFBF               	btfsc	(initTabVue@j+1)& (0+255),7,b
  4079  001D10  EF93  F00E         	goto	u2241
  4080  001D14  51BF               	movf	(initTabVue@j+1)& (0+255),w,b
  4081  001D16  E109               	bnz	u2240
  4082  001D18  0E15               	movlw	21
  4083  001D1A  5DBE               	subwf	initTabVue@j& (0+255),w,b
  4084  001D1C  A0D8               	btfss	status,0,c
  4085  001D1E  EF93  F00E         	goto	u2241
  4086  001D22  EF95  F00E         	goto	u2240
  4087  001D26                     u2241:
  4088  001D26  EF21  F00E         	goto	l2460
  4089  001D2A                     u2240:
  4090  001D2A                     l2472:
  4091                           
  4092                           ; BSR set to: 0
  4093  001D2A  0100               	movlb	0	; force () banked
  4094  001D2C  4BBC               	infsnz	initTabVue@i& (0+255),f,b
  4095  001D2E  2BBD               	incf	(initTabVue@i+1)& (0+255),f,b
  4096  001D30                     
  4097                           ; BSR set to: 0
  4098  001D30  0100               	movlb	0	; force () banked
  4099  001D32  BFBD               	btfsc	(initTabVue@i+1)& (0+255),7,b
  4100  001D34  EFA5  F00E         	goto	u2251
  4101  001D38  51BD               	movf	(initTabVue@i+1)& (0+255),w,b
  4102  001D3A  E109               	bnz	u2250
  4103  001D3C  0E04               	movlw	4
  4104  001D3E  5DBC               	subwf	initTabVue@i& (0+255),w,b
  4105  001D40  A0D8               	btfss	status,0,c
  4106  001D42  EFA5  F00E         	goto	u2251
  4107  001D46  EFA7  F00E         	goto	u2250
  4108  001D4A                     u2251:
  4109  001D4A  EF0B  F00E         	goto	l2454
  4110  001D4E                     u2250:
  4111  001D4E                     l97:
  4112                           
  4113                           ; BSR set to: 0
  4114  001D4E  0012               	return		;funcret
  4115  001D50                     __end_of_initTabVue:
  4116                           	opt callstack 0
  4117                           
  4118 ;; *************** function _gagne *****************
  4119 ;; Defined at:
  4120 ;;		line 470 in file "main.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;  pMines          2    6[BANK0 ] PTR int 
  4123 ;;		 -> main@NBMines(2), 
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;  j               2   16[BANK0 ] int 
  4126 ;;  i               2   14[BANK0 ] int 
  4127 ;;  nb_Tuile        2   11[BANK0 ] int 
  4128 ;;  gagne           1   13[BANK0 ] unsigned char 
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1    wreg      unsigned char 
  4131 ;; Registers used:
  4132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4138 ;;      Params:         0       2       0       0       0       0       0
  4139 ;;      Locals:         0       7       0       0       0       0       0
  4140 ;;      Temps:          0       3       0       0       0       0       0
  4141 ;;      Totals:         0      12       0       0       0       0       0
  4142 ;;Total ram usage:       12 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    4
  4145 ;; This function calls:
  4146 ;;		___wmul
  4147 ;;		_lcd_effaceAffichage
  4148 ;; This function is called by:
  4149 ;;		_main
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           	psect	text14
  4154  001D50                     __ptext14:
  4155                           	opt callstack 0
  4156  001D50                     _gagne:
  4157                           	opt callstack 26
  4158  001D50                     
  4159                           ;main.c: 472: int nb_Tuile =0;
  4160  001D50  0E00               	movlw	0
  4161  001D52  0100               	movlb	0	; force () banked
  4162  001D54  6FC0               	movwf	(gagne@nb_Tuile+1)& (0+255),b
  4163  001D56  0E00               	movlw	0
  4164  001D58  6FBF               	movwf	gagne@nb_Tuile& (0+255),b
  4165                           
  4166                           ;main.c: 473: bool gagne= 0;
  4167  001D5A  0E00               	movlw	0
  4168  001D5C  0100               	movlb	0	; force () banked
  4169  001D5E  6FC1               	movwf	gagne@gagne& (0+255),b
  4170                           
  4171                           ;main.c: 474: int i=0;
  4172  001D60  0E00               	movlw	0
  4173  001D62  0100               	movlb	0	; force () banked
  4174  001D64  6FC3               	movwf	(gagne@i+1)& (0+255),b
  4175  001D66  0E00               	movlw	0
  4176  001D68  6FC2               	movwf	gagne@i& (0+255),b
  4177                           
  4178                           ;main.c: 475: int j=0;
  4179  001D6A  0E00               	movlw	0
  4180  001D6C  0100               	movlb	0	; force () banked
  4181  001D6E  6FC5               	movwf	(gagne@j+1)& (0+255),b
  4182  001D70  0E00               	movlw	0
  4183  001D72  6FC4               	movwf	gagne@j& (0+255),b
  4184                           
  4185                           ;main.c: 476: for(i=0;i<4;i++)
  4186  001D74  0E00               	movlw	0
  4187  001D76  0100               	movlb	0	; force () banked
  4188  001D78  6FC3               	movwf	(gagne@i+1)& (0+255),b
  4189  001D7A  0E00               	movlw	0
  4190  001D7C  6FC2               	movwf	gagne@i& (0+255),b
  4191  001D7E                     
  4192                           ; BSR set to: 0
  4193  001D7E  0100               	movlb	0	; force () banked
  4194  001D80  BFC3               	btfsc	(gagne@i+1)& (0+255),7,b
  4195  001D82  EFCC  F00E         	goto	u2521
  4196  001D86  51C3               	movf	(gagne@i+1)& (0+255),w,b
  4197  001D88  E109               	bnz	u2520
  4198  001D8A  0E04               	movlw	4
  4199  001D8C  5DC2               	subwf	gagne@i& (0+255),w,b
  4200  001D8E  A0D8               	btfss	status,0,c
  4201  001D90  EFCC  F00E         	goto	u2521
  4202  001D94  EFCE  F00E         	goto	u2520
  4203  001D98                     u2521:
  4204  001D98  EFD0  F00E         	goto	l2616
  4205  001D9C                     u2520:
  4206  001D9C  EF37  F00F         	goto	l2632
  4207  001DA0                     l2616:
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;main.c: 477: {;main.c: 478: for(j=0;j<20;j++)
  4211  001DA0  0E00               	movlw	0
  4212  001DA2  0100               	movlb	0	; force () banked
  4213  001DA4  6FC5               	movwf	(gagne@j+1)& (0+255),b
  4214  001DA6  0E00               	movlw	0
  4215  001DA8  6FC4               	movwf	gagne@j& (0+255),b
  4216  001DAA                     
  4217                           ; BSR set to: 0
  4218  001DAA  0100               	movlb	0	; force () banked
  4219  001DAC  BFC5               	btfsc	(gagne@j+1)& (0+255),7,b
  4220  001DAE  EFE2  F00E         	goto	u2531
  4221  001DB2  51C5               	movf	(gagne@j+1)& (0+255),w,b
  4222  001DB4  E109               	bnz	u2530
  4223  001DB6  0E14               	movlw	20
  4224  001DB8  5DC4               	subwf	gagne@j& (0+255),w,b
  4225  001DBA  A0D8               	btfss	status,0,c
  4226  001DBC  EFE2  F00E         	goto	u2531
  4227  001DC0  EFE4  F00E         	goto	u2530
  4228  001DC4                     u2531:
  4229  001DC4  EFE6  F00E         	goto	l2622
  4230  001DC8                     u2530:
  4231  001DC8  EF25  F00F         	goto	l2628
  4232  001DCC                     l2622:
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;main.c: 479: {;main.c: 480: if(m_tabVue[i][j]==1)
  4236  001DCC  C0C2  F0B4         	movff	gagne@i,___wmul@multiplier
  4237  001DD0  C0C3  F0B5         	movff	gagne@i+1,___wmul@multiplier+1
  4238  001DD4  0E00               	movlw	0
  4239  001DD6  0100               	movlb	0	; force () banked
  4240  001DD8  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4241  001DDA  0E15               	movlw	21
  4242  001DDC  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4243  001DDE  EC1E  F013         	call	___wmul	;wreg free
  4244  001DE2  0E00               	movlw	low _m_tabVue
  4245  001DE4  0100               	movlb	0	; force () banked
  4246  001DE6  6FBC               	movwf	??_gagne& (0+255),b
  4247  001DE8  0E01               	movlw	high _m_tabVue
  4248  001DEA  6FBD               	movwf	(??_gagne+1)& (0+255),b
  4249  001DEC  0100               	movlb	0	; force () banked
  4250  001DEE  51B4               	movf	?___wmul& (0+255),w,b
  4251  001DF0  0100               	movlb	0	; force () banked
  4252  001DF2  27BC               	addwf	??_gagne& (0+255),f,b
  4253  001DF4  0100               	movlb	0	; force () banked
  4254  001DF6  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4255  001DF8  0100               	movlb	0	; force () banked
  4256  001DFA  23BD               	addwfc	(??_gagne+1)& (0+255),f,b
  4257  001DFC  0100               	movlb	0	; force () banked
  4258  001DFE  51C4               	movf	gagne@j& (0+255),w,b
  4259  001E00  0100               	movlb	0	; force () banked
  4260  001E02  25BC               	addwf	??_gagne& (0+255),w,b
  4261  001E04  6ED9               	movwf	fsr2l,c
  4262  001E06  0100               	movlb	0	; force () banked
  4263  001E08  51C5               	movf	(gagne@j+1)& (0+255),w,b
  4264  001E0A  0100               	movlb	0	; force () banked
  4265  001E0C  21BD               	addwfc	(??_gagne+1)& (0+255),w,b
  4266  001E0E  6EDA               	movwf	fsr2h,c
  4267  001E10  04DE               	decf	postinc2,w,c
  4268  001E12  A4D8               	btfss	status,2,c
  4269  001E14  EF0E  F00F         	goto	u2541
  4270  001E18  EF10  F00F         	goto	u2540
  4271  001E1C                     u2541:
  4272  001E1C  EF13  F00F         	goto	l202
  4273  001E20                     u2540:
  4274  001E20                     
  4275                           ; BSR set to: 0
  4276                           ;main.c: 481: {;main.c: 482: nb_Tuile++;
  4277  001E20  0100               	movlb	0	; force () banked
  4278  001E22  4BBF               	infsnz	gagne@nb_Tuile& (0+255),f,b
  4279  001E24  2BC0               	incf	(gagne@nb_Tuile+1)& (0+255),f,b
  4280  001E26                     l202:
  4281                           
  4282                           ; BSR set to: 0
  4283  001E26  0100               	movlb	0	; force () banked
  4284  001E28  4BC4               	infsnz	gagne@j& (0+255),f,b
  4285  001E2A  2BC5               	incf	(gagne@j+1)& (0+255),f,b
  4286  001E2C                     
  4287                           ; BSR set to: 0
  4288  001E2C  0100               	movlb	0	; force () banked
  4289  001E2E  BFC5               	btfsc	(gagne@j+1)& (0+255),7,b
  4290  001E30  EF23  F00F         	goto	u2551
  4291  001E34  51C5               	movf	(gagne@j+1)& (0+255),w,b
  4292  001E36  E109               	bnz	u2550
  4293  001E38  0E14               	movlw	20
  4294  001E3A  5DC4               	subwf	gagne@j& (0+255),w,b
  4295  001E3C  A0D8               	btfss	status,0,c
  4296  001E3E  EF23  F00F         	goto	u2551
  4297  001E42  EF25  F00F         	goto	u2550
  4298  001E46                     u2551:
  4299  001E46  EFE6  F00E         	goto	l2622
  4300  001E4A                     u2550:
  4301  001E4A                     l2628:
  4302                           
  4303                           ; BSR set to: 0
  4304  001E4A  0100               	movlb	0	; force () banked
  4305  001E4C  4BC2               	infsnz	gagne@i& (0+255),f,b
  4306  001E4E  2BC3               	incf	(gagne@i+1)& (0+255),f,b
  4307  001E50                     
  4308                           ; BSR set to: 0
  4309  001E50  0100               	movlb	0	; force () banked
  4310  001E52  BFC3               	btfsc	(gagne@i+1)& (0+255),7,b
  4311  001E54  EF35  F00F         	goto	u2561
  4312  001E58  51C3               	movf	(gagne@i+1)& (0+255),w,b
  4313  001E5A  E109               	bnz	u2560
  4314  001E5C  0E04               	movlw	4
  4315  001E5E  5DC2               	subwf	gagne@i& (0+255),w,b
  4316  001E60  A0D8               	btfss	status,0,c
  4317  001E62  EF35  F00F         	goto	u2561
  4318  001E66  EF37  F00F         	goto	u2560
  4319  001E6A                     u2561:
  4320  001E6A  EFD0  F00E         	goto	l2616
  4321  001E6E                     u2560:
  4322  001E6E                     l2632:
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;main.c: 483: };main.c: 484: };main.c: 485: };main.c: 486: if (*pMines == nb_Tuile)
  4326  001E6E  C0BA  FFD9         	movff	gagne@pMines,fsr2l
  4327  001E72  C0BB  FFDA         	movff	gagne@pMines+1,fsr2h
  4328  001E76  0100               	movlb	0	; force () banked
  4329  001E78  51BF               	movf	gagne@nb_Tuile& (0+255),w,b
  4330  001E7A  18DE               	xorwf	postinc2,w,c
  4331  001E7C  E107               	bnz	u2571
  4332  001E7E  51C0               	movf	(gagne@nb_Tuile+1)& (0+255),w,b
  4333  001E80  18DE               	xorwf	postinc2,w,c
  4334  001E82  A4D8               	btfss	status,2,c
  4335  001E84  EF46  F00F         	goto	u2571
  4336  001E88  EF48  F00F         	goto	u2570
  4337  001E8C                     u2571:
  4338  001E8C  EF62  F00F         	goto	l2640
  4339  001E90                     u2570:
  4340  001E90                     
  4341                           ; BSR set to: 0
  4342                           ;main.c: 487: {;main.c: 488: lcd_effaceAffichage();
  4343  001E90  EC62  F013         	call	_lcd_effaceAffichage	;wreg free
  4344  001E94                     
  4345                           ;main.c: 489: (*pMines)=(*pMines) +1;
  4346  001E94  C0BA  FFD9         	movff	gagne@pMines,fsr2l
  4347  001E98  C0BB  FFDA         	movff	gagne@pMines+1,fsr2h
  4348  001E9C  CFDE F0BC          	movff	postinc2,??_gagne
  4349  001EA0  CFDD F0BD          	movff	postdec2,??_gagne+1
  4350  001EA4  0E01               	movlw	1
  4351  001EA6  0100               	movlb	0	; force () banked
  4352  001EA8  27BC               	addwf	??_gagne& (0+255),f,b
  4353  001EAA  0E00               	movlw	0
  4354  001EAC  23BD               	addwfc	(??_gagne+1)& (0+255),f,b
  4355  001EAE  C0BA  FFD9         	movff	gagne@pMines,fsr2l
  4356  001EB2  C0BB  FFDA         	movff	gagne@pMines+1,fsr2h
  4357  001EB6  C0BC  FFDE         	movff	??_gagne,postinc2
  4358  001EBA  C0BD  FFDD         	movff	??_gagne+1,postdec2
  4359  001EBE                     
  4360                           ; BSR set to: 0
  4361                           ;main.c: 490: gagne=1;
  4362  001EBE  0E01               	movlw	1
  4363  001EC0  0100               	movlb	0	; force () banked
  4364  001EC2  6FC1               	movwf	gagne@gagne& (0+255),b
  4365  001EC4                     l2640:
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;main.c: 491: };main.c: 492: return gagne;
  4369  001EC4  0100               	movlb	0	; force () banked
  4370  001EC6  51C1               	movf	gagne@gagne& (0+255),w,b
  4371  001EC8                     
  4372                           ; BSR set to: 0
  4373  001EC8  0012               	return		;funcret
  4374  001ECA                     __end_of_gagne:
  4375                           	opt callstack 0
  4376                           
  4377 ;; *************** function _lcd_effaceAffichage *****************
  4378 ;; Defined at:
  4379 ;;		line 276 in file "Lcd4Lignes.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;		None
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;		None
  4384 ;; Return value:  Size  Location     Type
  4385 ;;                  1    wreg      void 
  4386 ;; Registers used:
  4387 ;;		wreg, status,2, status,0, cstack
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4393 ;;      Params:         0       0       0       0       0       0       0
  4394 ;;      Locals:         0       0       0       0       0       0       0
  4395 ;;      Temps:          0       0       0       0       0       0       0
  4396 ;;      Totals:         0       0       0       0       0       0       0
  4397 ;;Total ram usage:        0 bytes
  4398 ;; Hardware stack levels used:    1
  4399 ;; Hardware stack levels required when called:    3
  4400 ;; This function calls:
  4401 ;;		_lcd_wrCom
  4402 ;; This function is called by:
  4403 ;;		_gagne
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           	psect	text15
  4408  0026C4                     __ptext15:
  4409                           	opt callstack 0
  4410  0026C4                     _lcd_effaceAffichage:
  4411                           	opt callstack 26
  4412  0026C4                     
  4413                           ;Lcd4Lignes.c: 278: lcd_wrCom(0x01);
  4414  0026C4  0E01               	movlw	1
  4415  0026C6  ECAA  F011         	call	_lcd_wrCom
  4416                           
  4417                           ;Lcd4Lignes.c: 279: lcd_wrCom(0x80);
  4418  0026CA  0E80               	movlw	128
  4419  0026CC  ECAA  F011         	call	_lcd_wrCom
  4420  0026D0  0012               	return		;funcret
  4421  0026D2                     __end_of_lcd_effaceAffichage:
  4422                           	opt callstack 0
  4423                           
  4424 ;; *************** function _deplace *****************
  4425 ;; Defined at:
  4426 ;;		line 348 in file "main.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;  x               2    5[BANK0 ] PTR unsigned char 
  4429 ;;		 -> main@x(1), 
  4430 ;;  y               2    7[BANK0 ] PTR unsigned char 
  4431 ;;		 -> main@y(1), 
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;		None
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1    wreg      void 
  4436 ;; Registers used:
  4437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4443 ;;      Params:         0       4       0       0       0       0       0
  4444 ;;      Locals:         0       0       0       0       0       0       0
  4445 ;;      Temps:          0       1       0       0       0       0       0
  4446 ;;      Totals:         0       5       0       0       0       0       0
  4447 ;;Total ram usage:        5 bytes
  4448 ;; Hardware stack levels used:    1
  4449 ;; Hardware stack levels required when called:    4
  4450 ;; This function calls:
  4451 ;;		_getAnalog
  4452 ;;		_lcd_gotoXY
  4453 ;; This function is called by:
  4454 ;;		_main
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text16
  4459  001A50                     __ptext16:
  4460                           	opt callstack 0
  4461  001A50                     _deplace:
  4462                           	opt callstack 26
  4463  001A50                     
  4464                           ;main.c: 350: if(getAnalog(6)>220)
  4465  001A50  0E06               	movlw	6
  4466  001A52  ECF4  F012         	call	_getAnalog
  4467  001A56  0100               	movlb	0	; force () banked
  4468  001A58  6FBD               	movwf	??_deplace& (0+255),b
  4469  001A5A  0EDC               	movlw	220
  4470  001A5C  65BD               	cpfsgt	??_deplace& (0+255),b
  4471  001A5E  EF33  F00D         	goto	u2411
  4472  001A62  EF35  F00D         	goto	u2410
  4473  001A66                     u2411:
  4474  001A66  EF56  F00D         	goto	l2560
  4475  001A6A                     u2410:
  4476  001A6A                     
  4477                           ; BSR set to: 0
  4478                           ;main.c: 351: {;main.c: 352: (*x)= (*x) +1;
  4479  001A6A  C0B9  FFD9         	movff	deplace@x,fsr2l
  4480  001A6E  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4481  001A72  50DF               	movf	indf2,w,c
  4482  001A74  0100               	movlb	0	; force () banked
  4483  001A76  6FBD               	movwf	??_deplace& (0+255),b
  4484  001A78  29BD               	incf	??_deplace& (0+255),w,b
  4485  001A7A  C0B9  FFD9         	movff	deplace@x,fsr2l
  4486  001A7E  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4487  001A82  6EDF               	movwf	indf2,c
  4488                           
  4489                           ;main.c: 353: if (*x > 20)
  4490  001A84  C0B9  FFD9         	movff	deplace@x,fsr2l
  4491  001A88  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4492  001A8C  0E14               	movlw	20
  4493  001A8E  64DF               	cpfsgt	indf2,c
  4494  001A90  EF4C  F00D         	goto	u2421
  4495  001A94  EF4E  F00D         	goto	u2420
  4496  001A98                     u2421:
  4497  001A98  EF82  F00D         	goto	l2568
  4498  001A9C                     u2420:
  4499  001A9C                     
  4500                           ; BSR set to: 0
  4501                           ;main.c: 354: {;main.c: 355: *x=1;
  4502  001A9C  C0B9  FFD9         	movff	deplace@x,fsr2l
  4503  001AA0  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4504  001AA4  0E01               	movlw	1
  4505  001AA6  6EDF               	movwf	indf2,c
  4506  001AA8  EF82  F00D         	goto	l2568
  4507  001AAC                     l2560:
  4508                           
  4509                           ; BSR set to: 0
  4510                           ;main.c: 358: else if(getAnalog(6)<110)
  4511  001AAC  0E06               	movlw	6
  4512  001AAE  ECF4  F012         	call	_getAnalog
  4513  001AB2  0100               	movlb	0	; force () banked
  4514  001AB4  6FBD               	movwf	??_deplace& (0+255),b
  4515  001AB6  0E6E               	movlw	110
  4516  001AB8  61BD               	cpfslt	??_deplace& (0+255),b
  4517  001ABA  EF61  F00D         	goto	u2431
  4518  001ABE  EF63  F00D         	goto	u2430
  4519  001AC2                     u2431:
  4520  001AC2  EF82  F00D         	goto	l2568
  4521  001AC6                     u2430:
  4522  001AC6                     
  4523                           ; BSR set to: 0
  4524                           ;main.c: 359: {;main.c: 360: (*x)=(*x)-1;
  4525  001AC6  C0B9  FFD9         	movff	deplace@x,fsr2l
  4526  001ACA  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4527  001ACE  50DF               	movf	indf2,w,c
  4528  001AD0  0100               	movlb	0	; force () banked
  4529  001AD2  6FBD               	movwf	??_deplace& (0+255),b
  4530  001AD4  05BD               	decf	??_deplace& (0+255),w,b
  4531  001AD6  C0B9  FFD9         	movff	deplace@x,fsr2l
  4532  001ADA  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4533  001ADE  6EDF               	movwf	indf2,c
  4534  001AE0                     
  4535                           ; BSR set to: 0
  4536                           ;main.c: 361: if((*x)<1)
  4537  001AE0  C0B9  FFD9         	movff	deplace@x,fsr2l
  4538  001AE4  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4539  001AE8  50DF               	movf	indf2,w,c
  4540  001AEA  A4D8               	btfss	status,2,c
  4541  001AEC  EF7A  F00D         	goto	u2441
  4542  001AF0  EF7C  F00D         	goto	u2440
  4543  001AF4                     u2441:
  4544  001AF4  EF82  F00D         	goto	l2568
  4545  001AF8                     u2440:
  4546  001AF8                     
  4547                           ; BSR set to: 0
  4548                           ;main.c: 362: {;main.c: 363: (*x)=20;
  4549  001AF8  C0B9  FFD9         	movff	deplace@x,fsr2l
  4550  001AFC  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4551  001B00  0E14               	movlw	20
  4552  001B02  6EDF               	movwf	indf2,c
  4553  001B04                     l2568:
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;main.c: 364: };main.c: 365: };main.c: 366: if(getAnalog(7)<110)
  4557  001B04  0E07               	movlw	7
  4558  001B06  ECF4  F012         	call	_getAnalog
  4559  001B0A  0100               	movlb	0	; force () banked
  4560  001B0C  6FBD               	movwf	??_deplace& (0+255),b
  4561  001B0E  0E6E               	movlw	110
  4562  001B10  61BD               	cpfslt	??_deplace& (0+255),b
  4563  001B12  EF8D  F00D         	goto	u2451
  4564  001B16  EF8F  F00D         	goto	u2450
  4565  001B1A                     u2451:
  4566  001B1A  EFB0  F00D         	goto	l2574
  4567  001B1E                     u2450:
  4568  001B1E                     
  4569                           ; BSR set to: 0
  4570                           ;main.c: 367: {;main.c: 368: (*y)= (*y) +1;
  4571  001B1E  C0BB  FFD9         	movff	deplace@y,fsr2l
  4572  001B22  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4573  001B26  50DF               	movf	indf2,w,c
  4574  001B28  0100               	movlb	0	; force () banked
  4575  001B2A  6FBD               	movwf	??_deplace& (0+255),b
  4576  001B2C  29BD               	incf	??_deplace& (0+255),w,b
  4577  001B2E  C0BB  FFD9         	movff	deplace@y,fsr2l
  4578  001B32  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4579  001B36  6EDF               	movwf	indf2,c
  4580                           
  4581                           ;main.c: 369: if ((*y )> 4)
  4582  001B38  C0BB  FFD9         	movff	deplace@y,fsr2l
  4583  001B3C  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4584  001B40  0E04               	movlw	4
  4585  001B42  64DF               	cpfsgt	indf2,c
  4586  001B44  EFA6  F00D         	goto	u2461
  4587  001B48  EFA8  F00D         	goto	u2460
  4588  001B4C                     u2461:
  4589  001B4C  EFDC  F00D         	goto	l2582
  4590  001B50                     u2460:
  4591  001B50                     
  4592                           ; BSR set to: 0
  4593                           ;main.c: 370: {;main.c: 371: (*y)=1;
  4594  001B50  C0BB  FFD9         	movff	deplace@y,fsr2l
  4595  001B54  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4596  001B58  0E01               	movlw	1
  4597  001B5A  6EDF               	movwf	indf2,c
  4598  001B5C  EFDC  F00D         	goto	l2582
  4599  001B60                     l2574:
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;main.c: 374: else if(getAnalog(7)>200)
  4603  001B60  0E07               	movlw	7
  4604  001B62  ECF4  F012         	call	_getAnalog
  4605  001B66  0100               	movlb	0	; force () banked
  4606  001B68  6FBD               	movwf	??_deplace& (0+255),b
  4607  001B6A  0EC8               	movlw	200
  4608  001B6C  65BD               	cpfsgt	??_deplace& (0+255),b
  4609  001B6E  EFBB  F00D         	goto	u2471
  4610  001B72  EFBD  F00D         	goto	u2470
  4611  001B76                     u2471:
  4612  001B76  EFDC  F00D         	goto	l2582
  4613  001B7A                     u2470:
  4614  001B7A                     
  4615                           ; BSR set to: 0
  4616                           ;main.c: 375: {;main.c: 376: (*y)=(*y) - 1;
  4617  001B7A  C0BB  FFD9         	movff	deplace@y,fsr2l
  4618  001B7E  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4619  001B82  50DF               	movf	indf2,w,c
  4620  001B84  0100               	movlb	0	; force () banked
  4621  001B86  6FBD               	movwf	??_deplace& (0+255),b
  4622  001B88  05BD               	decf	??_deplace& (0+255),w,b
  4623  001B8A  C0BB  FFD9         	movff	deplace@y,fsr2l
  4624  001B8E  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4625  001B92  6EDF               	movwf	indf2,c
  4626  001B94                     
  4627                           ; BSR set to: 0
  4628                           ;main.c: 377: if (*y < 1)
  4629  001B94  C0BB  FFD9         	movff	deplace@y,fsr2l
  4630  001B98  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4631  001B9C  50DF               	movf	indf2,w,c
  4632  001B9E  A4D8               	btfss	status,2,c
  4633  001BA0  EFD4  F00D         	goto	u2481
  4634  001BA4  EFD6  F00D         	goto	u2480
  4635  001BA8                     u2481:
  4636  001BA8  EFDC  F00D         	goto	l2582
  4637  001BAC                     u2480:
  4638  001BAC                     
  4639                           ; BSR set to: 0
  4640                           ;main.c: 378: {;main.c: 379: (*y)=4;
  4641  001BAC  C0BB  FFD9         	movff	deplace@y,fsr2l
  4642  001BB0  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4643  001BB4  0E04               	movlw	4
  4644  001BB6  6EDF               	movwf	indf2,c
  4645  001BB8                     l2582:
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;main.c: 380: };main.c: 381: };main.c: 382: lcd_gotoXY(*x ,*y);
  4649  001BB8  C0BB  FFD9         	movff	deplace@y,fsr2l
  4650  001BBC  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4651  001BC0  50DF               	movf	indf2,w,c
  4652  001BC2  0100               	movlb	0	; force () banked
  4653  001BC4  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  4654  001BC6  C0B9  FFD9         	movff	deplace@x,fsr2l
  4655  001BCA  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4656  001BCE  50DF               	movf	indf2,w,c
  4657  001BD0  EC3B  F011         	call	_lcd_gotoXY
  4658  001BD4  0012               	return		;funcret
  4659  001BD6                     __end_of_deplace:
  4660                           	opt callstack 0
  4661                           
  4662 ;; *************** function _getAnalog *****************
  4663 ;; Defined at:
  4664 ;;		line 111 in file "main.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;  canal           1    wreg     unsigned char 
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;  canal           1    1[BANK0 ] unsigned char 
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  1    wreg      unsigned char 
  4671 ;; Registers used:
  4672 ;;		wreg, status,2, status,0
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4678 ;;      Params:         0       0       0       0       0       0       0
  4679 ;;      Locals:         0       1       0       0       0       0       0
  4680 ;;      Temps:          0       1       0       0       0       0       0
  4681 ;;      Totals:         0       2       0       0       0       0       0
  4682 ;;Total ram usage:        2 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_deplace
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text17
  4692  0025E8                     __ptext17:
  4693                           	opt callstack 0
  4694  0025E8                     _getAnalog:
  4695                           	opt callstack 29
  4696                           
  4697                           ;incstack = 0
  4698                           ;getAnalog@canal stored from wreg
  4699  0025E8  0100               	movlb	0	; force () banked
  4700  0025EA  6FB5               	movwf	getAnalog@canal& (0+255),b
  4701  0025EC                     
  4702                           ;main.c: 113: ADCON0bits.CHS = canal;
  4703  0025EC  C0B5  F0B4         	movff	getAnalog@canal,??_getAnalog
  4704  0025F0  0100               	movlb	0	; force () banked
  4705  0025F2  47B4               	rlncf	??_getAnalog& (0+255),f,b
  4706  0025F4  47B4               	rlncf	??_getAnalog& (0+255),f,b
  4707  0025F6  50C2               	movf	194,w,c	;volatile
  4708  0025F8  19B4               	xorwf	??_getAnalog& (0+255),w,b
  4709  0025FA  0BC3               	andlw	-61
  4710  0025FC  19B4               	xorwf	??_getAnalog& (0+255),w,b
  4711  0025FE  6EC2               	movwf	194,c	;volatile
  4712  002600                     
  4713                           ;main.c: 115: ADCON0bits.GO_DONE = 1;
  4714  002600  82C2               	bsf	194,1,c	;volatile
  4715  002602                     l85:
  4716  002602  B2C2               	btfsc	194,1,c	;volatile
  4717  002604  EF06  F013         	goto	u91
  4718  002608  EF08  F013         	goto	u90
  4719  00260C                     u91:
  4720  00260C  EF01  F013         	goto	l85
  4721  002610                     u90:
  4722  002610                     
  4723                           ;main.c: 118: return ADRESH;
  4724  002610  50C4               	movf	196,w,c	;volatile
  4725  002612  0012               	return		;funcret
  4726  002614                     __end_of_getAnalog:
  4727                           	opt callstack 0
  4728                           
  4729 ;; *************** function _demine *****************
  4730 ;; Defined at:
  4731 ;;		line 393 in file "main.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  x               1    wreg     unsigned char 
  4734 ;;  y               1   18[BANK0 ] unsigned char 
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;  x               1   24[BANK0 ] unsigned char 
  4737 ;;  mine            1   23[BANK0 ] unsigned char 
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  1    wreg      unsigned char 
  4740 ;; Registers used:
  4741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4747 ;;      Params:         0       1       0       0       0       0       0
  4748 ;;      Locals:         0       2       0       0       0       0       0
  4749 ;;      Temps:          0       4       0       0       0       0       0
  4750 ;;      Totals:         0       7       0       0       0       0       0
  4751 ;;Total ram usage:        7 bytes
  4752 ;; Hardware stack levels used:    1
  4753 ;; Hardware stack levels required when called:    5
  4754 ;; This function calls:
  4755 ;;		_enleveTuilesAutour
  4756 ;;		_lcd_ecritChar
  4757 ;; This function is called by:
  4758 ;;		_main
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           	psect	text18
  4763  0018C6                     __ptext18:
  4764                           	opt callstack 0
  4765  0018C6                     _demine:
  4766                           	opt callstack 25
  4767                           
  4768                           ;incstack = 0
  4769                           ;demine@x stored from wreg
  4770  0018C6  0100               	movlb	0	; force () banked
  4771  0018C8  6FCC               	movwf	demine@x& (0+255),b
  4772  0018CA                     
  4773                           ;main.c: 395: x=x-1;
  4774  0018CA  0100               	movlb	0	; force () banked
  4775  0018CC  05CC               	decf	demine@x& (0+255),w,b
  4776  0018CE  6FCC               	movwf	demine@x& (0+255),b
  4777                           
  4778                           ;main.c: 396: y=y-1;
  4779  0018D0  0100               	movlb	0	; force () banked
  4780  0018D2  05C6               	decf	demine@y& (0+255),w,b
  4781  0018D4  6FC6               	movwf	demine@y& (0+255),b
  4782  0018D6                     
  4783                           ; BSR set to: 0
  4784                           ;main.c: 397: bool mine= 1;
  4785  0018D6  0E01               	movlw	1
  4786  0018D8  0100               	movlb	0	; force () banked
  4787  0018DA  6FCB               	movwf	demine@mine& (0+255),b
  4788  0018DC                     
  4789                           ; BSR set to: 0
  4790                           ;main.c: 398: if (m_tabMines[(y)][(x)]== 2)
  4791  0018DC  0100               	movlb	0	; force () banked
  4792  0018DE  51C6               	movf	demine@y& (0+255),w,b
  4793  0018E0  0D15               	mullw	21
  4794  0018E2  0E60               	movlw	low _m_tabMines
  4795  0018E4  0100               	movlb	0	; force () banked
  4796  0018E6  6FC7               	movwf	??_demine& (0+255),b
  4797  0018E8  0E00               	movlw	high _m_tabMines
  4798  0018EA  6FC8               	movwf	(??_demine+1)& (0+255),b
  4799  0018EC  50F3               	movf	243,w,c
  4800  0018EE  27C7               	addwf	??_demine& (0+255),f,b
  4801  0018F0  50F4               	movf	244,w,c
  4802  0018F2  23C8               	addwfc	(??_demine+1)& (0+255),f,b
  4803  0018F4  0100               	movlb	0	; force () banked
  4804  0018F6  51CC               	movf	demine@x& (0+255),w,b
  4805  0018F8  0100               	movlb	0	; force () banked
  4806  0018FA  25C7               	addwf	??_demine& (0+255),w,b
  4807  0018FC  6ED9               	movwf	fsr2l,c
  4808  0018FE  0100               	movlb	0	; force () banked
  4809  001900  0E00               	movlw	0
  4810  001902  0100               	movlb	0	; force () banked
  4811  001904  21C8               	addwfc	(??_demine+1)& (0+255),w,b
  4812  001906  6EDA               	movwf	fsr2h,c
  4813  001908  0E02               	movlw	2
  4814  00190A  18DE               	xorwf	postinc2,w,c
  4815  00190C  A4D8               	btfss	status,2,c
  4816  00190E  EF8B  F00C         	goto	u2491
  4817  001912  EF8D  F00C         	goto	u2490
  4818  001916                     u2491:
  4819  001916  EF92  F00C         	goto	l2592
  4820  00191A                     u2490:
  4821  00191A                     
  4822                           ; BSR set to: 0
  4823                           ;main.c: 399: {;main.c: 400: mine=0;
  4824  00191A  0E00               	movlw	0
  4825  00191C  0100               	movlb	0	; force () banked
  4826  00191E  6FCB               	movwf	demine@mine& (0+255),b
  4827                           
  4828                           ;main.c: 401: }
  4829  001920  EF25  F00D         	goto	l2606
  4830  001924                     l2592:
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;main.c: 402: else if ((m_tabMines[(y)][(x)]!= 2)&&(m_tabMines[(y)][(x)]==32))
  4834  001924  0100               	movlb	0	; force () banked
  4835  001926  51C6               	movf	demine@y& (0+255),w,b
  4836  001928  0D15               	mullw	21
  4837  00192A  0E60               	movlw	low _m_tabMines
  4838  00192C  0100               	movlb	0	; force () banked
  4839  00192E  6FC7               	movwf	??_demine& (0+255),b
  4840  001930  0E00               	movlw	high _m_tabMines
  4841  001932  6FC8               	movwf	(??_demine+1)& (0+255),b
  4842  001934  50F3               	movf	243,w,c
  4843  001936  27C7               	addwf	??_demine& (0+255),f,b
  4844  001938  50F4               	movf	244,w,c
  4845  00193A  23C8               	addwfc	(??_demine+1)& (0+255),f,b
  4846  00193C  0100               	movlb	0	; force () banked
  4847  00193E  51CC               	movf	demine@x& (0+255),w,b
  4848  001940  0100               	movlb	0	; force () banked
  4849  001942  25C7               	addwf	??_demine& (0+255),w,b
  4850  001944  6ED9               	movwf	fsr2l,c
  4851  001946  0100               	movlb	0	; force () banked
  4852  001948  0E00               	movlw	0
  4853  00194A  0100               	movlb	0	; force () banked
  4854  00194C  21C8               	addwfc	(??_demine+1)& (0+255),w,b
  4855  00194E  6EDA               	movwf	fsr2h,c
  4856  001950  0E02               	movlw	2
  4857  001952  18DE               	xorwf	postinc2,w,c
  4858  001954  B4D8               	btfsc	status,2,c
  4859  001956  EFAF  F00C         	goto	u2501
  4860  00195A  EFB1  F00C         	goto	u2500
  4861  00195E                     u2501:
  4862  00195E  EFDB  F00C         	goto	l2600
  4863  001962                     u2500:
  4864  001962                     
  4865                           ; BSR set to: 0
  4866  001962  0100               	movlb	0	; force () banked
  4867  001964  51C6               	movf	demine@y& (0+255),w,b
  4868  001966  0D15               	mullw	21
  4869  001968  0E60               	movlw	low _m_tabMines
  4870  00196A  0100               	movlb	0	; force () banked
  4871  00196C  6FC7               	movwf	??_demine& (0+255),b
  4872  00196E  0E00               	movlw	high _m_tabMines
  4873  001970  6FC8               	movwf	(??_demine+1)& (0+255),b
  4874  001972  50F3               	movf	243,w,c
  4875  001974  27C7               	addwf	??_demine& (0+255),f,b
  4876  001976  50F4               	movf	244,w,c
  4877  001978  23C8               	addwfc	(??_demine+1)& (0+255),f,b
  4878  00197A  0100               	movlb	0	; force () banked
  4879  00197C  51CC               	movf	demine@x& (0+255),w,b
  4880  00197E  0100               	movlb	0	; force () banked
  4881  001980  25C7               	addwf	??_demine& (0+255),w,b
  4882  001982  6ED9               	movwf	fsr2l,c
  4883  001984  0100               	movlb	0	; force () banked
  4884  001986  0E00               	movlw	0
  4885  001988  0100               	movlb	0	; force () banked
  4886  00198A  21C8               	addwfc	(??_demine+1)& (0+255),w,b
  4887  00198C  6EDA               	movwf	fsr2h,c
  4888  00198E  0E20               	movlw	32
  4889  001990  18DE               	xorwf	postinc2,w,c
  4890  001992  A4D8               	btfss	status,2,c
  4891  001994  EFCE  F00C         	goto	u2511
  4892  001998  EFD0  F00C         	goto	u2510
  4893  00199C                     u2511:
  4894  00199C  EFDB  F00C         	goto	l2600
  4895  0019A0                     u2510:
  4896  0019A0                     
  4897                           ; BSR set to: 0
  4898                           ;main.c: 403: {;main.c: 404: mine=1;
  4899  0019A0  0E01               	movlw	1
  4900  0019A2  0100               	movlb	0	; force () banked
  4901  0019A4  6FCB               	movwf	demine@mine& (0+255),b
  4902  0019A6                     
  4903                           ; BSR set to: 0
  4904                           ;main.c: 405: enleveTuilesAutour((x),(y));
  4905  0019A6  C0C6  F0BA         	movff	demine@y,enleveTuilesAutour@y
  4906  0019AA  0100               	movlb	0	; force () banked
  4907  0019AC  51CC               	movf	demine@x& (0+255),w,b
  4908  0019AE  ECA7  F008         	call	_enleveTuilesAutour
  4909                           
  4910                           ;main.c: 406: }
  4911  0019B2  EF25  F00D         	goto	l2606
  4912  0019B6                     l2600:
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;main.c: 407: else;main.c: 408: {;main.c: 409: mine=1;
  4916  0019B6  0E01               	movlw	1
  4917  0019B8  0100               	movlb	0	; force () banked
  4918  0019BA  6FCB               	movwf	demine@mine& (0+255),b
  4919  0019BC                     
  4920                           ; BSR set to: 0
  4921                           ;main.c: 410: m_tabVue[y][x]=m_tabMines[y][x];
  4922  0019BC  0100               	movlb	0	; force () banked
  4923  0019BE  51C6               	movf	demine@y& (0+255),w,b
  4924  0019C0  0D15               	mullw	21
  4925  0019C2  0E60               	movlw	low _m_tabMines
  4926  0019C4  0100               	movlb	0	; force () banked
  4927  0019C6  6FC7               	movwf	??_demine& (0+255),b
  4928  0019C8  0E00               	movlw	high _m_tabMines
  4929  0019CA  6FC8               	movwf	(??_demine+1)& (0+255),b
  4930  0019CC  50F3               	movf	243,w,c
  4931  0019CE  27C7               	addwf	??_demine& (0+255),f,b
  4932  0019D0  50F4               	movf	244,w,c
  4933  0019D2  23C8               	addwfc	(??_demine+1)& (0+255),f,b
  4934  0019D4  0100               	movlb	0	; force () banked
  4935  0019D6  51CC               	movf	demine@x& (0+255),w,b
  4936  0019D8  0100               	movlb	0	; force () banked
  4937  0019DA  25C7               	addwf	??_demine& (0+255),w,b
  4938  0019DC  6ED9               	movwf	fsr2l,c
  4939  0019DE  0100               	movlb	0	; force () banked
  4940  0019E0  0E00               	movlw	0
  4941  0019E2  0100               	movlb	0	; force () banked
  4942  0019E4  21C8               	addwfc	(??_demine+1)& (0+255),w,b
  4943  0019E6  6EDA               	movwf	fsr2h,c
  4944  0019E8  0100               	movlb	0	; force () banked
  4945  0019EA  51C6               	movf	demine@y& (0+255),w,b
  4946  0019EC  0D15               	mullw	21
  4947  0019EE  0E00               	movlw	low _m_tabVue
  4948  0019F0  0100               	movlb	0	; force () banked
  4949  0019F2  6FC9               	movwf	(??_demine+2)& (0+255),b
  4950  0019F4  0E01               	movlw	high _m_tabVue
  4951  0019F6  6FCA               	movwf	(??_demine+3)& (0+255),b
  4952  0019F8  50F3               	movf	243,w,c
  4953  0019FA  27C9               	addwf	(??_demine+2)& (0+255),f,b
  4954  0019FC  50F4               	movf	244,w,c
  4955  0019FE  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  4956  001A00  0100               	movlb	0	; force () banked
  4957  001A02  51CC               	movf	demine@x& (0+255),w,b
  4958  001A04  0100               	movlb	0	; force () banked
  4959  001A06  25C9               	addwf	(??_demine+2)& (0+255),w,b
  4960  001A08  6EE1               	movwf	fsr1l,c
  4961  001A0A  0100               	movlb	0	; force () banked
  4962  001A0C  0E00               	movlw	0
  4963  001A0E  0100               	movlb	0	; force () banked
  4964  001A10  21CA               	addwfc	(??_demine+3)& (0+255),w,b
  4965  001A12  6EE2               	movwf	fsr1h,c
  4966  001A14  CFDF FFE7          	movff	indf2,indf1
  4967  001A18                     
  4968                           ; BSR set to: 0
  4969                           ;main.c: 411: lcd_ecritChar(m_tabVue[y][x]);
  4970  001A18  0100               	movlb	0	; force () banked
  4971  001A1A  51C6               	movf	demine@y& (0+255),w,b
  4972  001A1C  0D15               	mullw	21
  4973  001A1E  0E00               	movlw	low _m_tabVue
  4974  001A20  0100               	movlb	0	; force () banked
  4975  001A22  6FC7               	movwf	??_demine& (0+255),b
  4976  001A24  0E01               	movlw	high _m_tabVue
  4977  001A26  6FC8               	movwf	(??_demine+1)& (0+255),b
  4978  001A28  50F3               	movf	243,w,c
  4979  001A2A  27C7               	addwf	??_demine& (0+255),f,b
  4980  001A2C  50F4               	movf	244,w,c
  4981  001A2E  23C8               	addwfc	(??_demine+1)& (0+255),f,b
  4982  001A30  0100               	movlb	0	; force () banked
  4983  001A32  51CC               	movf	demine@x& (0+255),w,b
  4984  001A34  0100               	movlb	0	; force () banked
  4985  001A36  25C7               	addwf	??_demine& (0+255),w,b
  4986  001A38  6ED9               	movwf	fsr2l,c
  4987  001A3A  0100               	movlb	0	; force () banked
  4988  001A3C  0E00               	movlw	0
  4989  001A3E  0100               	movlb	0	; force () banked
  4990  001A40  21C8               	addwfc	(??_demine+1)& (0+255),w,b
  4991  001A42  6EDA               	movwf	fsr2h,c
  4992  001A44  50DF               	movf	indf2,w,c
  4993  001A46  EC6F  F012         	call	_lcd_ecritChar
  4994  001A4A                     l2606:
  4995                           
  4996                           ;main.c: 412: };main.c: 413: return mine;
  4997  001A4A  0100               	movlb	0	; force () banked
  4998  001A4C  51CB               	movf	demine@mine& (0+255),w,b
  4999  001A4E                     
  5000                           ; BSR set to: 0
  5001  001A4E  0012               	return		;funcret
  5002  001A50                     __end_of_demine:
  5003                           	opt callstack 0
  5004                           
  5005 ;; *************** function _enleveTuilesAutour *****************
  5006 ;; Defined at:
  5007 ;;		line 422 in file "main.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;  x               1    wreg     unsigned char 
  5010 ;;  y               1    6[BANK0 ] unsigned char 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;  x               1   13[BANK0 ] unsigned char 
  5013 ;;  j               2   14[BANK0 ] int 
  5014 ;;  i               2   16[BANK0 ] int 
  5015 ;;  mine            2   11[BANK0 ] int 
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  1    wreg      void 
  5018 ;; Registers used:
  5019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5025 ;;      Params:         0       1       0       0       0       0       0
  5026 ;;      Locals:         0       7       0       0       0       0       0
  5027 ;;      Temps:          0       4       0       0       0       0       0
  5028 ;;      Totals:         0      12       0       0       0       0       0
  5029 ;;Total ram usage:       12 bytes
  5030 ;; Hardware stack levels used:    1
  5031 ;; Hardware stack levels required when called:    4
  5032 ;; This function calls:
  5033 ;;		___wmul
  5034 ;;		_lcd_ecritChar
  5035 ;;		_lcd_gotoXY
  5036 ;; This function is called by:
  5037 ;;		_demine
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           	psect	text19
  5042  00114E                     __ptext19:
  5043                           	opt callstack 0
  5044  00114E                     _enleveTuilesAutour:
  5045                           	opt callstack 25
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;incstack = 0
  5049                           ;enleveTuilesAutour@x stored from wreg
  5050  00114E  0100               	movlb	0	; force () banked
  5051  001150  6FC1               	movwf	enleveTuilesAutour@x& (0+255),b
  5052  001152                     
  5053                           ;main.c: 424: int i=-1;
  5054  001152  0100               	movlb	0	; force () banked
  5055  001154  69C4               	setf	enleveTuilesAutour@i& (0+255),b
  5056  001156  69C5               	setf	(enleveTuilesAutour@i+1)& (0+255),b
  5057  001158                     
  5058                           ; BSR set to: 0
  5059                           ;main.c: 425: int mine=0;
  5060  001158  0E00               	movlw	0
  5061  00115A  0100               	movlb	0	; force () banked
  5062  00115C  6FC0               	movwf	(enleveTuilesAutour@mine+1)& (0+255),b
  5063  00115E  0E00               	movlw	0
  5064  001160  6FBF               	movwf	enleveTuilesAutour@mine& (0+255),b
  5065  001162                     
  5066                           ; BSR set to: 0
  5067                           ;main.c: 427: m_tabVue[y][x]=32;
  5068  001162  0100               	movlb	0	; force () banked
  5069  001164  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5070  001166  0D15               	mullw	21
  5071  001168  0E00               	movlw	low _m_tabVue
  5072  00116A  0100               	movlb	0	; force () banked
  5073  00116C  6FBB               	movwf	??_enleveTuilesAutour& (0+255),b
  5074  00116E  0E01               	movlw	high _m_tabVue
  5075  001170  6FBC               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  5076  001172  50F3               	movf	243,w,c
  5077  001174  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5078  001176  50F4               	movf	244,w,c
  5079  001178  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5080  00117A  0100               	movlb	0	; force () banked
  5081  00117C  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5082  00117E  0100               	movlb	0	; force () banked
  5083  001180  25BB               	addwf	??_enleveTuilesAutour& (0+255),w,b
  5084  001182  6ED9               	movwf	fsr2l,c
  5085  001184  0100               	movlb	0	; force () banked
  5086  001186  0E00               	movlw	0
  5087  001188  0100               	movlb	0	; force () banked
  5088  00118A  21BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  5089  00118C  6EDA               	movwf	fsr2h,c
  5090  00118E  0E20               	movlw	32
  5091  001190  6EDF               	movwf	indf2,c
  5092  001192                     
  5093                           ; BSR set to: 0
  5094                           ;main.c: 428: for ( i=-1;i<=1;i++)
  5095  001192  0100               	movlb	0	; force () banked
  5096  001194  69C4               	setf	enleveTuilesAutour@i& (0+255),b
  5097  001196  69C5               	setf	(enleveTuilesAutour@i+1)& (0+255),b
  5098  001198                     
  5099                           ; BSR set to: 0
  5100  001198  0100               	movlb	0	; force () banked
  5101  00119A  BFC5               	btfsc	(enleveTuilesAutour@i+1)& (0+255),7,b
  5102  00119C  EFD9  F008         	goto	u1961
  5103  0011A0  51C5               	movf	(enleveTuilesAutour@i+1)& (0+255),w,b
  5104  0011A2  E109               	bnz	u1960
  5105  0011A4  0E02               	movlw	2
  5106  0011A6  5DC4               	subwf	enleveTuilesAutour@i& (0+255),w,b
  5107  0011A8  A0D8               	btfss	status,0,c
  5108  0011AA  EFD9  F008         	goto	u1961
  5109  0011AE  EFDB  F008         	goto	u1960
  5110  0011B2                     u1961:
  5111  0011B2  EFDD  F008         	goto	l2298
  5112  0011B6                     u1960:
  5113  0011B6  EF74  F00A         	goto	l195
  5114  0011BA                     l2298:
  5115                           
  5116                           ; BSR set to: 0
  5117                           ;main.c: 429: {;main.c: 430: if((y==0)&&(i==-1))
  5118  0011BA  0100               	movlb	0	; force () banked
  5119  0011BC  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5120  0011BE  A4D8               	btfss	status,2,c
  5121  0011C0  EFE4  F008         	goto	u1971
  5122  0011C4  EFE6  F008         	goto	u1970
  5123  0011C8                     u1971:
  5124  0011C8  EFF6  F008         	goto	l2304
  5125  0011CC                     u1970:
  5126  0011CC                     
  5127                           ; BSR set to: 0
  5128  0011CC  0100               	movlb	0	; force () banked
  5129  0011CE  29C4               	incf	enleveTuilesAutour@i& (0+255),w,b
  5130  0011D0  E106               	bnz	u1981
  5131  0011D2  29C5               	incf	(enleveTuilesAutour@i+1)& (0+255),w,b
  5132  0011D4  A4D8               	btfss	status,2,c
  5133  0011D6  EFEF  F008         	goto	u1981
  5134  0011DA  EFF1  F008         	goto	u1980
  5135  0011DE                     u1981:
  5136  0011DE  EFF6  F008         	goto	l2304
  5137  0011E2                     u1980:
  5138  0011E2                     
  5139                           ; BSR set to: 0
  5140                           ;main.c: 431: {;main.c: 432: i=0;
  5141  0011E2  0E00               	movlw	0
  5142  0011E4  0100               	movlb	0	; force () banked
  5143  0011E6  6FC5               	movwf	(enleveTuilesAutour@i+1)& (0+255),b
  5144  0011E8  0E00               	movlw	0
  5145  0011EA  6FC4               	movwf	enleveTuilesAutour@i& (0+255),b
  5146  0011EC                     l2304:
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;main.c: 433: };main.c: 434: for(int j=-1;j<=1;j++)
  5150  0011EC  0100               	movlb	0	; force () banked
  5151  0011EE  69C2               	setf	enleveTuilesAutour@j& (0+255),b
  5152  0011F0  69C3               	setf	(enleveTuilesAutour@j+1)& (0+255),b
  5153  0011F2                     
  5154                           ; BSR set to: 0
  5155  0011F2  0100               	movlb	0	; force () banked
  5156  0011F4  BFC3               	btfsc	(enleveTuilesAutour@j+1)& (0+255),7,b
  5157  0011F6  EF06  F009         	goto	u1991
  5158  0011FA  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5159  0011FC  E109               	bnz	u1990
  5160  0011FE  0E02               	movlw	2
  5161  001200  5DC2               	subwf	enleveTuilesAutour@j& (0+255),w,b
  5162  001202  A0D8               	btfss	status,0,c
  5163  001204  EF06  F009         	goto	u1991
  5164  001208  EF08  F009         	goto	u1990
  5165  00120C                     u1991:
  5166  00120C  EF0A  F009         	goto	l2310
  5167  001210                     u1990:
  5168  001210  EF49  F00A         	goto	l2336
  5169  001214                     l2310:
  5170                           
  5171                           ; BSR set to: 0
  5172                           ;main.c: 435: {;main.c: 436: if((x==0)&&(j==-1))
  5173  001214  0100               	movlb	0	; force () banked
  5174  001216  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5175  001218  A4D8               	btfss	status,2,c
  5176  00121A  EF11  F009         	goto	u2001
  5177  00121E  EF13  F009         	goto	u2000
  5178  001222                     u2001:
  5179  001222  EF23  F009         	goto	l2316
  5180  001226                     u2000:
  5181  001226                     
  5182                           ; BSR set to: 0
  5183  001226  0100               	movlb	0	; force () banked
  5184  001228  29C2               	incf	enleveTuilesAutour@j& (0+255),w,b
  5185  00122A  E106               	bnz	u2011
  5186  00122C  29C3               	incf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5187  00122E  A4D8               	btfss	status,2,c
  5188  001230  EF1C  F009         	goto	u2011
  5189  001234  EF1E  F009         	goto	u2010
  5190  001238                     u2011:
  5191  001238  EF23  F009         	goto	l2316
  5192  00123C                     u2010:
  5193  00123C                     
  5194                           ; BSR set to: 0
  5195                           ;main.c: 437: {;main.c: 438: j=0;
  5196  00123C  0E00               	movlw	0
  5197  00123E  0100               	movlb	0	; force () banked
  5198  001240  6FC3               	movwf	(enleveTuilesAutour@j+1)& (0+255),b
  5199  001242  0E00               	movlw	0
  5200  001244  6FC2               	movwf	enleveTuilesAutour@j& (0+255),b
  5201  001246                     l2316:
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;main.c: 439: };main.c: 440: if ((m_tabMines[y +i][x+j]!= 2)&&(m_tabMines[(y)][(x)]==32)
      +                          )
  5205  001246  C0C4  F0B4         	movff	enleveTuilesAutour@i,___wmul@multiplier
  5206  00124A  C0C5  F0B5         	movff	enleveTuilesAutour@i+1,___wmul@multiplier+1
  5207  00124E  0E00               	movlw	0
  5208  001250  0100               	movlb	0	; force () banked
  5209  001252  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5210  001254  0E15               	movlw	21
  5211  001256  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  5212  001258  EC1E  F013         	call	___wmul	;wreg free
  5213  00125C  0100               	movlb	0	; force () banked
  5214  00125E  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5215  001260  0D15               	mullw	21
  5216  001262  0E60               	movlw	low _m_tabMines
  5217  001264  0100               	movlb	0	; force () banked
  5218  001266  6FBB               	movwf	??_enleveTuilesAutour& (0+255),b
  5219  001268  0E00               	movlw	high _m_tabMines
  5220  00126A  6FBC               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  5221  00126C  50F3               	movf	243,w,c
  5222  00126E  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5223  001270  50F4               	movf	244,w,c
  5224  001272  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5225  001274  0100               	movlb	0	; force () banked
  5226  001276  51B4               	movf	?___wmul& (0+255),w,b
  5227  001278  0100               	movlb	0	; force () banked
  5228  00127A  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5229  00127C  0100               	movlb	0	; force () banked
  5230  00127E  51B5               	movf	(?___wmul+1)& (0+255),w,b
  5231  001280  0100               	movlb	0	; force () banked
  5232  001282  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5233  001284  0100               	movlb	0	; force () banked
  5234  001286  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5235  001288  0100               	movlb	0	; force () banked
  5236  00128A  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5237  00128C  0E00               	movlw	0
  5238  00128E  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5239  001290  0100               	movlb	0	; force () banked
  5240  001292  51C2               	movf	enleveTuilesAutour@j& (0+255),w,b
  5241  001294  0100               	movlb	0	; force () banked
  5242  001296  25BB               	addwf	??_enleveTuilesAutour& (0+255),w,b
  5243  001298  6ED9               	movwf	fsr2l,c
  5244  00129A  0100               	movlb	0	; force () banked
  5245  00129C  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5246  00129E  0100               	movlb	0	; force () banked
  5247  0012A0  21BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  5248  0012A2  6EDA               	movwf	fsr2h,c
  5249  0012A4  0E02               	movlw	2
  5250  0012A6  18DE               	xorwf	postinc2,w,c
  5251  0012A8  B4D8               	btfsc	status,2,c
  5252  0012AA  EF59  F009         	goto	u2021
  5253  0012AE  EF5B  F009         	goto	u2020
  5254  0012B2                     u2021:
  5255  0012B2  EF1E  F00A         	goto	l2326
  5256  0012B6                     u2020:
  5257  0012B6                     
  5258                           ; BSR set to: 0
  5259  0012B6  0100               	movlb	0	; force () banked
  5260  0012B8  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5261  0012BA  0D15               	mullw	21
  5262  0012BC  0E60               	movlw	low _m_tabMines
  5263  0012BE  0100               	movlb	0	; force () banked
  5264  0012C0  6FBB               	movwf	??_enleveTuilesAutour& (0+255),b
  5265  0012C2  0E00               	movlw	high _m_tabMines
  5266  0012C4  6FBC               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  5267  0012C6  50F3               	movf	243,w,c
  5268  0012C8  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5269  0012CA  50F4               	movf	244,w,c
  5270  0012CC  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5271  0012CE  0100               	movlb	0	; force () banked
  5272  0012D0  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5273  0012D2  0100               	movlb	0	; force () banked
  5274  0012D4  25BB               	addwf	??_enleveTuilesAutour& (0+255),w,b
  5275  0012D6  6ED9               	movwf	fsr2l,c
  5276  0012D8  0100               	movlb	0	; force () banked
  5277  0012DA  0E00               	movlw	0
  5278  0012DC  0100               	movlb	0	; force () banked
  5279  0012DE  21BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  5280  0012E0  6EDA               	movwf	fsr2h,c
  5281  0012E2  0E20               	movlw	32
  5282  0012E4  18DE               	xorwf	postinc2,w,c
  5283  0012E6  A4D8               	btfss	status,2,c
  5284  0012E8  EF78  F009         	goto	u2031
  5285  0012EC  EF7A  F009         	goto	u2030
  5286  0012F0                     u2031:
  5287  0012F0  EF1E  F00A         	goto	l2326
  5288  0012F4                     u2030:
  5289  0012F4                     
  5290                           ; BSR set to: 0
  5291                           ;main.c: 441: {;main.c: 442: m_tabVue[y+i][x+j]= m_tabMines[y+i][x+j];
  5292  0012F4  C0C4  F0B4         	movff	enleveTuilesAutour@i,___wmul@multiplier
  5293  0012F8  C0C5  F0B5         	movff	enleveTuilesAutour@i+1,___wmul@multiplier+1
  5294  0012FC  0E00               	movlw	0
  5295  0012FE  0100               	movlb	0	; force () banked
  5296  001300  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5297  001302  0E15               	movlw	21
  5298  001304  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  5299  001306  EC1E  F013         	call	___wmul	;wreg free
  5300  00130A  0100               	movlb	0	; force () banked
  5301  00130C  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5302  00130E  0D15               	mullw	21
  5303  001310  0E60               	movlw	low _m_tabMines
  5304  001312  0100               	movlb	0	; force () banked
  5305  001314  6FBB               	movwf	??_enleveTuilesAutour& (0+255),b
  5306  001316  0E00               	movlw	high _m_tabMines
  5307  001318  6FBC               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  5308  00131A  50F3               	movf	243,w,c
  5309  00131C  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5310  00131E  50F4               	movf	244,w,c
  5311  001320  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5312  001322  0100               	movlb	0	; force () banked
  5313  001324  51B4               	movf	?___wmul& (0+255),w,b
  5314  001326  0100               	movlb	0	; force () banked
  5315  001328  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5316  00132A  0100               	movlb	0	; force () banked
  5317  00132C  51B5               	movf	(?___wmul+1)& (0+255),w,b
  5318  00132E  0100               	movlb	0	; force () banked
  5319  001330  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5320  001332  0100               	movlb	0	; force () banked
  5321  001334  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5322  001336  0100               	movlb	0	; force () banked
  5323  001338  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5324  00133A  0E00               	movlw	0
  5325  00133C  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5326  00133E  0100               	movlb	0	; force () banked
  5327  001340  51C2               	movf	enleveTuilesAutour@j& (0+255),w,b
  5328  001342  0100               	movlb	0	; force () banked
  5329  001344  25BB               	addwf	??_enleveTuilesAutour& (0+255),w,b
  5330  001346  6ED9               	movwf	fsr2l,c
  5331  001348  0100               	movlb	0	; force () banked
  5332  00134A  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5333  00134C  0100               	movlb	0	; force () banked
  5334  00134E  21BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  5335  001350  6EDA               	movwf	fsr2h,c
  5336  001352  C0C4  F0B4         	movff	enleveTuilesAutour@i,___wmul@multiplier
  5337  001356  C0C5  F0B5         	movff	enleveTuilesAutour@i+1,___wmul@multiplier+1
  5338  00135A  0E00               	movlw	0
  5339  00135C  0100               	movlb	0	; force () banked
  5340  00135E  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5341  001360  0E15               	movlw	21
  5342  001362  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  5343  001364  EC1E  F013         	call	___wmul	;wreg free
  5344  001368  0100               	movlb	0	; force () banked
  5345  00136A  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5346  00136C  0D15               	mullw	21
  5347  00136E  0E00               	movlw	low _m_tabVue
  5348  001370  0100               	movlb	0	; force () banked
  5349  001372  6FBD               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  5350  001374  0E01               	movlw	high _m_tabVue
  5351  001376  6FBE               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  5352  001378  50F3               	movf	243,w,c
  5353  00137A  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  5354  00137C  50F4               	movf	244,w,c
  5355  00137E  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  5356  001380  0100               	movlb	0	; force () banked
  5357  001382  51B4               	movf	?___wmul& (0+255),w,b
  5358  001384  0100               	movlb	0	; force () banked
  5359  001386  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  5360  001388  0100               	movlb	0	; force () banked
  5361  00138A  51B5               	movf	(?___wmul+1)& (0+255),w,b
  5362  00138C  0100               	movlb	0	; force () banked
  5363  00138E  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  5364  001390  0100               	movlb	0	; force () banked
  5365  001392  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5366  001394  0100               	movlb	0	; force () banked
  5367  001396  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  5368  001398  0E00               	movlw	0
  5369  00139A  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  5370  00139C  0100               	movlb	0	; force () banked
  5371  00139E  51C2               	movf	enleveTuilesAutour@j& (0+255),w,b
  5372  0013A0  0100               	movlb	0	; force () banked
  5373  0013A2  25BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  5374  0013A4  6EE1               	movwf	fsr1l,c
  5375  0013A6  0100               	movlb	0	; force () banked
  5376  0013A8  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5377  0013AA  0100               	movlb	0	; force () banked
  5378  0013AC  21BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  5379  0013AE  6EE2               	movwf	fsr1h,c
  5380  0013B0  CFDF FFE7          	movff	indf2,indf1
  5381  0013B4                     
  5382                           ; BSR set to: 0
  5383                           ;main.c: 443: lcd_gotoXY(x+1+j,y+i+1);
  5384  0013B4  0100               	movlb	0	; force () banked
  5385  0013B6  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5386  0013B8  0100               	movlb	0	; force () banked
  5387  0013BA  25C4               	addwf	enleveTuilesAutour@i& (0+255),w,b
  5388  0013BC  0100               	movlb	0	; force () banked
  5389  0013BE  6FBB               	movwf	??_enleveTuilesAutour& (0+255),b
  5390  0013C0  29BB               	incf	??_enleveTuilesAutour& (0+255),w,b
  5391  0013C2  0100               	movlb	0	; force () banked
  5392  0013C4  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  5393  0013C6  0100               	movlb	0	; force () banked
  5394  0013C8  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5395  0013CA  0100               	movlb	0	; force () banked
  5396  0013CC  25C2               	addwf	enleveTuilesAutour@j& (0+255),w,b
  5397  0013CE  0100               	movlb	0	; force () banked
  5398  0013D0  6FBC               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  5399  0013D2  29BC               	incf	(??_enleveTuilesAutour+1)& (0+255),w,b
  5400  0013D4  EC3B  F011         	call	_lcd_gotoXY
  5401  0013D8                     
  5402                           ;main.c: 444: lcd_ecritChar(m_tabVue[y+i][x+j]);
  5403  0013D8  C0C4  F0B4         	movff	enleveTuilesAutour@i,___wmul@multiplier
  5404  0013DC  C0C5  F0B5         	movff	enleveTuilesAutour@i+1,___wmul@multiplier+1
  5405  0013E0  0E00               	movlw	0
  5406  0013E2  0100               	movlb	0	; force () banked
  5407  0013E4  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5408  0013E6  0E15               	movlw	21
  5409  0013E8  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  5410  0013EA  EC1E  F013         	call	___wmul	;wreg free
  5411  0013EE  0100               	movlb	0	; force () banked
  5412  0013F0  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5413  0013F2  0D15               	mullw	21
  5414  0013F4  0E00               	movlw	low _m_tabVue
  5415  0013F6  0100               	movlb	0	; force () banked
  5416  0013F8  6FBB               	movwf	??_enleveTuilesAutour& (0+255),b
  5417  0013FA  0E01               	movlw	high _m_tabVue
  5418  0013FC  6FBC               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  5419  0013FE  50F3               	movf	243,w,c
  5420  001400  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5421  001402  50F4               	movf	244,w,c
  5422  001404  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5423  001406  0100               	movlb	0	; force () banked
  5424  001408  51B4               	movf	?___wmul& (0+255),w,b
  5425  00140A  0100               	movlb	0	; force () banked
  5426  00140C  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5427  00140E  0100               	movlb	0	; force () banked
  5428  001410  51B5               	movf	(?___wmul+1)& (0+255),w,b
  5429  001412  0100               	movlb	0	; force () banked
  5430  001414  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5431  001416  0100               	movlb	0	; force () banked
  5432  001418  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5433  00141A  0100               	movlb	0	; force () banked
  5434  00141C  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5435  00141E  0E00               	movlw	0
  5436  001420  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5437  001422  0100               	movlb	0	; force () banked
  5438  001424  51C2               	movf	enleveTuilesAutour@j& (0+255),w,b
  5439  001426  0100               	movlb	0	; force () banked
  5440  001428  25BB               	addwf	??_enleveTuilesAutour& (0+255),w,b
  5441  00142A  6ED9               	movwf	fsr2l,c
  5442  00142C  0100               	movlb	0	; force () banked
  5443  00142E  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5444  001430  0100               	movlb	0	; force () banked
  5445  001432  21BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  5446  001434  6EDA               	movwf	fsr2h,c
  5447  001436  50DF               	movf	indf2,w,c
  5448  001438  EC6F  F012         	call	_lcd_ecritChar
  5449  00143C                     l2326:
  5450                           
  5451                           ;main.c: 445: };main.c: 449: if((x==19)&&(j==0))
  5452  00143C  0E13               	movlw	19
  5453  00143E  0100               	movlb	0	; force () banked
  5454  001440  19C1               	xorwf	enleveTuilesAutour@x& (0+255),w,b
  5455  001442  A4D8               	btfss	status,2,c
  5456  001444  EF26  F00A         	goto	u2041
  5457  001448  EF28  F00A         	goto	u2040
  5458  00144C                     u2041:
  5459  00144C  EF37  F00A         	goto	l2332
  5460  001450                     u2040:
  5461  001450                     
  5462                           ; BSR set to: 0
  5463  001450  0100               	movlb	0	; force () banked
  5464  001452  51C2               	movf	enleveTuilesAutour@j& (0+255),w,b
  5465  001454  11C3               	iorwf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5466  001456  A4D8               	btfss	status,2,c
  5467  001458  EF30  F00A         	goto	u2051
  5468  00145C  EF32  F00A         	goto	u2050
  5469  001460                     u2051:
  5470  001460  EF37  F00A         	goto	l2332
  5471  001464                     u2050:
  5472  001464                     
  5473                           ; BSR set to: 0
  5474                           ;main.c: 450: {;main.c: 451: j=1;
  5475  001464  0E00               	movlw	0
  5476  001466  0100               	movlb	0	; force () banked
  5477  001468  6FC3               	movwf	(enleveTuilesAutour@j+1)& (0+255),b
  5478  00146A  0E01               	movlw	1
  5479  00146C  6FC2               	movwf	enleveTuilesAutour@j& (0+255),b
  5480  00146E                     l2332:
  5481                           
  5482                           ; BSR set to: 0
  5483  00146E  0100               	movlb	0	; force () banked
  5484  001470  4BC2               	infsnz	enleveTuilesAutour@j& (0+255),f,b
  5485  001472  2BC3               	incf	(enleveTuilesAutour@j+1)& (0+255),f,b
  5486  001474                     
  5487                           ; BSR set to: 0
  5488  001474  0100               	movlb	0	; force () banked
  5489  001476  BFC3               	btfsc	(enleveTuilesAutour@j+1)& (0+255),7,b
  5490  001478  EF47  F00A         	goto	u2061
  5491  00147C  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5492  00147E  E109               	bnz	u2060
  5493  001480  0E02               	movlw	2
  5494  001482  5DC2               	subwf	enleveTuilesAutour@j& (0+255),w,b
  5495  001484  A0D8               	btfss	status,0,c
  5496  001486  EF47  F00A         	goto	u2061
  5497  00148A  EF49  F00A         	goto	u2060
  5498  00148E                     u2061:
  5499  00148E  EF0A  F009         	goto	l2310
  5500  001492                     u2060:
  5501  001492                     l2336:
  5502                           
  5503                           ; BSR set to: 0
  5504                           ;main.c: 452: };main.c: 453: };main.c: 454: if((y==3)&&(i==0))
  5505  001492  0E03               	movlw	3
  5506  001494  0100               	movlb	0	; force () banked
  5507  001496  19BA               	xorwf	enleveTuilesAutour@y& (0+255),w,b
  5508  001498  A4D8               	btfss	status,2,c
  5509  00149A  EF51  F00A         	goto	u2071
  5510  00149E  EF53  F00A         	goto	u2070
  5511  0014A2                     u2071:
  5512  0014A2  EF62  F00A         	goto	l2342
  5513  0014A6                     u2070:
  5514  0014A6                     
  5515                           ; BSR set to: 0
  5516  0014A6  0100               	movlb	0	; force () banked
  5517  0014A8  51C4               	movf	enleveTuilesAutour@i& (0+255),w,b
  5518  0014AA  11C5               	iorwf	(enleveTuilesAutour@i+1)& (0+255),w,b
  5519  0014AC  A4D8               	btfss	status,2,c
  5520  0014AE  EF5B  F00A         	goto	u2081
  5521  0014B2  EF5D  F00A         	goto	u2080
  5522  0014B6                     u2081:
  5523  0014B6  EF62  F00A         	goto	l2342
  5524  0014BA                     u2080:
  5525  0014BA                     
  5526                           ; BSR set to: 0
  5527                           ;main.c: 455: {;main.c: 456: i=1;
  5528  0014BA  0E00               	movlw	0
  5529  0014BC  0100               	movlb	0	; force () banked
  5530  0014BE  6FC5               	movwf	(enleveTuilesAutour@i+1)& (0+255),b
  5531  0014C0  0E01               	movlw	1
  5532  0014C2  6FC4               	movwf	enleveTuilesAutour@i& (0+255),b
  5533  0014C4                     l2342:
  5534                           
  5535                           ; BSR set to: 0
  5536  0014C4  0100               	movlb	0	; force () banked
  5537  0014C6  4BC4               	infsnz	enleveTuilesAutour@i& (0+255),f,b
  5538  0014C8  2BC5               	incf	(enleveTuilesAutour@i+1)& (0+255),f,b
  5539  0014CA                     
  5540                           ; BSR set to: 0
  5541  0014CA  0100               	movlb	0	; force () banked
  5542  0014CC  BFC5               	btfsc	(enleveTuilesAutour@i+1)& (0+255),7,b
  5543  0014CE  EF72  F00A         	goto	u2091
  5544  0014D2  51C5               	movf	(enleveTuilesAutour@i+1)& (0+255),w,b
  5545  0014D4  E109               	bnz	u2090
  5546  0014D6  0E02               	movlw	2
  5547  0014D8  5DC4               	subwf	enleveTuilesAutour@i& (0+255),w,b
  5548  0014DA  A0D8               	btfss	status,0,c
  5549  0014DC  EF72  F00A         	goto	u2091
  5550  0014E0  EF74  F00A         	goto	u2090
  5551  0014E4                     u2091:
  5552  0014E4  EFDD  F008         	goto	l2298
  5553  0014E8                     u2090:
  5554  0014E8                     l195:
  5555                           
  5556                           ; BSR set to: 0
  5557  0014E8  0012               	return		;funcret
  5558  0014EA                     __end_of_enleveTuilesAutour:
  5559                           	opt callstack 0
  5560                           
  5561 ;; *************** function _afficheTabVue *****************
  5562 ;; Defined at:
  5563 ;;		line 499 in file "main.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;		None
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;  i               2   17[BANK0 ] int 
  5568 ;; Return value:  Size  Location     Type
  5569 ;;                  1    wreg      void 
  5570 ;; Registers used:
  5571 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5577 ;;      Params:         0       0       0       0       0       0       0
  5578 ;;      Locals:         0       2       0       0       0       0       0
  5579 ;;      Temps:          0       2       0       0       0       0       0
  5580 ;;      Totals:         0       4       0       0       0       0       0
  5581 ;;Total ram usage:        4 bytes
  5582 ;; Hardware stack levels used:    1
  5583 ;; Hardware stack levels required when called:    5
  5584 ;; This function calls:
  5585 ;;		___wmul
  5586 ;;		_lcd_gotoXY
  5587 ;;		_lcd_putMessage
  5588 ;; This function is called by:
  5589 ;;		_main
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593                           	psect	text20
  5594  00212A                     __ptext20:
  5595                           	opt callstack 0
  5596  00212A                     _afficheTabVue:
  5597                           	opt callstack 25
  5598  00212A                     
  5599                           ;main.c: 501: int i=0;
  5600  00212A  0E00               	movlw	0
  5601  00212C  0100               	movlb	0	; force () banked
  5602  00212E  6FC6               	movwf	(afficheTabVue@i+1)& (0+255),b
  5603  002130  0E00               	movlw	0
  5604  002132  6FC5               	movwf	afficheTabVue@i& (0+255),b
  5605                           
  5606                           ;main.c: 502: for(i=0;i<4;i++)
  5607  002134  0E00               	movlw	0
  5608  002136  6FC6               	movwf	(afficheTabVue@i+1)& (0+255),b
  5609  002138  0E00               	movlw	0
  5610  00213A  6FC5               	movwf	afficheTabVue@i& (0+255),b
  5611  00213C                     
  5612                           ; BSR set to: 0
  5613  00213C  0100               	movlb	0	; force () banked
  5614  00213E  BFC6               	btfsc	(afficheTabVue@i+1)& (0+255),7,b
  5615  002140  EFAB  F010         	goto	u2391
  5616  002144  51C6               	movf	(afficheTabVue@i+1)& (0+255),w,b
  5617  002146  E109               	bnz	u2390
  5618  002148  0E04               	movlw	4
  5619  00214A  5DC5               	subwf	afficheTabVue@i& (0+255),w,b
  5620  00214C  A0D8               	btfss	status,0,c
  5621  00214E  EFAB  F010         	goto	u2391
  5622  002152  EFAD  F010         	goto	u2390
  5623  002156                     u2391:
  5624  002156  EFAF  F010         	goto	l2546
  5625  00215A                     u2390:
  5626  00215A  EFE9  F010         	goto	l209
  5627  00215E                     l2546:
  5628                           
  5629                           ; BSR set to: 0
  5630                           ;main.c: 503: {;main.c: 504: lcd_gotoXY( 1, i+1);
  5631  00215E  0100               	movlb	0	; force () banked
  5632  002160  29C5               	incf	afficheTabVue@i& (0+255),w,b
  5633  002162  0100               	movlb	0	; force () banked
  5634  002164  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  5635  002166  0E01               	movlw	1
  5636  002168  EC3B  F011         	call	_lcd_gotoXY
  5637  00216C                     
  5638                           ;main.c: 505: lcd_putMessage(m_tabVue[i]);
  5639  00216C  C0C5  F0B4         	movff	afficheTabVue@i,___wmul@multiplier
  5640  002170  C0C6  F0B5         	movff	afficheTabVue@i+1,___wmul@multiplier+1
  5641  002174  0E00               	movlw	0
  5642  002176  0100               	movlb	0	; force () banked
  5643  002178  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5644  00217A  0E15               	movlw	21
  5645  00217C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  5646  00217E  EC1E  F013         	call	___wmul	;wreg free
  5647  002182  0E00               	movlw	low _m_tabVue
  5648  002184  0100               	movlb	0	; force () banked
  5649  002186  25B4               	addwf	?___wmul& (0+255),w,b
  5650  002188  0100               	movlb	0	; force () banked
  5651  00218A  6FC3               	movwf	??_afficheTabVue& (0+255),b
  5652  00218C  0E01               	movlw	high _m_tabVue
  5653  00218E  0100               	movlb	0	; force () banked
  5654  002190  21B5               	addwfc	(?___wmul+1)& (0+255),w,b
  5655  002192  0100               	movlb	0	; force () banked
  5656  002194  6FC4               	movwf	(??_afficheTabVue+1)& (0+255),b
  5657  002196  C0C3  F0BA         	movff	??_afficheTabVue,lcd_putMessage@chaine
  5658  00219A  C0C4  F0BB         	movff	??_afficheTabVue+1,lcd_putMessage@chaine+1
  5659  00219E  0100               	movlb	0	; force () banked
  5660  0021A0  51BA               	movf	lcd_putMessage@chaine& (0+255),w,b
  5661  0021A2  11BB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  5662  0021A4  A4D8               	btfss	status,2,c
  5663  0021A6  0E20               	movlw	32
  5664  0021A8  6FBC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  5665  0021AA  ECE2  F00F         	call	_lcd_putMessage	;wreg free
  5666  0021AE  0100               	movlb	0	; force () banked
  5667  0021B0  4BC5               	infsnz	afficheTabVue@i& (0+255),f,b
  5668  0021B2  2BC6               	incf	(afficheTabVue@i+1)& (0+255),f,b
  5669  0021B4                     
  5670                           ; BSR set to: 0
  5671  0021B4  0100               	movlb	0	; force () banked
  5672  0021B6  BFC6               	btfsc	(afficheTabVue@i+1)& (0+255),7,b
  5673  0021B8  EFE7  F010         	goto	u2401
  5674  0021BC  51C6               	movf	(afficheTabVue@i+1)& (0+255),w,b
  5675  0021BE  E109               	bnz	u2400
  5676  0021C0  0E04               	movlw	4
  5677  0021C2  5DC5               	subwf	afficheTabVue@i& (0+255),w,b
  5678  0021C4  A0D8               	btfss	status,0,c
  5679  0021C6  EFE7  F010         	goto	u2401
  5680  0021CA  EFE9  F010         	goto	u2400
  5681  0021CE                     u2401:
  5682  0021CE  EFAF  F010         	goto	l2546
  5683  0021D2                     u2400:
  5684  0021D2                     l209:
  5685                           
  5686                           ; BSR set to: 0
  5687  0021D2  0012               	return		;funcret
  5688  0021D4                     __end_of_afficheTabVue:
  5689                           	opt callstack 0
  5690                           
  5691 ;; *************** function _lcd_putMessage *****************
  5692 ;; Defined at:
  5693 ;;		line 387 in file "Lcd4Lignes.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;  chaine          3    6[BANK0 ] PTR const unsigned char 
  5696 ;;		 -> m_tabVue(84), STR_1(24), 
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;  j               1   14[BANK0 ] unsigned char 
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  1    wreg      void 
  5701 ;; Registers used:
  5702 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5708 ;;      Params:         0       3       0       0       0       0       0
  5709 ;;      Locals:         0       1       0       0       0       0       0
  5710 ;;      Temps:          0       5       0       0       0       0       0
  5711 ;;      Totals:         0       9       0       0       0       0       0
  5712 ;;Total ram usage:        9 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; Hardware stack levels required when called:    4
  5715 ;; This function calls:
  5716 ;;		_lcd_ecritChar
  5717 ;; This function is called by:
  5718 ;;		_main
  5719 ;;		_afficheTabVue
  5720 ;; This function uses a non-reentrant model
  5721 ;;
  5722                           
  5723                           	psect	text21
  5724  001FC4                     __ptext21:
  5725                           	opt callstack 0
  5726  001FC4                     _lcd_putMessage:
  5727                           	opt callstack 26
  5728  001FC4                     
  5729                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  5730  001FC4  0E00               	movlw	0
  5731  001FC6  0100               	movlb	0	; force () banked
  5732  001FC8  6FC2               	movwf	lcd_putMessage@j& (0+255),b
  5733  001FCA  EF0F  F010         	goto	l2096
  5734  001FCE                     l2092:
  5735                           
  5736                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  5737  001FCE  0100               	movlb	0	; force () banked
  5738  001FD0  51C2               	movf	lcd_putMessage@j& (0+255),w,b
  5739  001FD2  0100               	movlb	0	; force () banked
  5740  001FD4  6FBD               	movwf	??_lcd_putMessage& (0+255),b
  5741  001FD6  6BBE               	clrf	(??_lcd_putMessage+1)& (0+255),b
  5742  001FD8  51BD               	movf	??_lcd_putMessage& (0+255),w,b
  5743  001FDA  0100               	movlb	0	; force () banked
  5744  001FDC  25BA               	addwf	lcd_putMessage@chaine& (0+255),w,b
  5745  001FDE  0100               	movlb	0	; force () banked
  5746  001FE0  6FBF               	movwf	(??_lcd_putMessage+2)& (0+255),b
  5747  001FE2  51BE               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  5748  001FE4  0100               	movlb	0	; force () banked
  5749  001FE6  21BB               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  5750  001FE8  0100               	movlb	0	; force () banked
  5751  001FEA  6FC0               	movwf	(??_lcd_putMessage+3)& (0+255),b
  5752  001FEC  0E00               	movlw	0
  5753  001FEE  0100               	movlb	0	; force () banked
  5754  001FF0  21BC               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  5755  001FF2  0100               	movlb	0	; force () banked
  5756  001FF4  6FC1               	movwf	(??_lcd_putMessage+4)& (0+255),b
  5757  001FF6  C0BF  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  5758  001FFA  C0C0  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  5759  001FFE  C0C1  FFF8         	movff	??_lcd_putMessage+4,tblptru
  5760  002002  BAF8               	btfsc	tblptru,5,c
  5761  002004  D003               	bra	u1407
  5762  002006  0008               	tblrd		*
  5763  002008  50F5               	movf	tablat,w,c
  5764  00200A  D005               	bra	u1400
  5765  00200C                     u1407:
  5766  00200C  CFF6 FFE9          	movff	tblptrl,fsr0l
  5767  002010  CFF7 FFEA          	movff	tblptrh,fsr0h
  5768  002014  50EF               	movf	indf0,w,c
  5769  002016                     u1400:
  5770  002016  EC6F  F012         	call	_lcd_ecritChar
  5771  00201A  0100               	movlb	0	; force () banked
  5772  00201C  2BC2               	incf	lcd_putMessage@j& (0+255),f,b
  5773  00201E                     l2096:
  5774                           
  5775                           ; BSR set to: 0
  5776  00201E  0100               	movlb	0	; force () banked
  5777  002020  51C2               	movf	lcd_putMessage@j& (0+255),w,b
  5778  002022  0100               	movlb	0	; force () banked
  5779  002024  6FBD               	movwf	??_lcd_putMessage& (0+255),b
  5780  002026  6BBE               	clrf	(??_lcd_putMessage+1)& (0+255),b
  5781  002028  51BD               	movf	??_lcd_putMessage& (0+255),w,b
  5782  00202A  0100               	movlb	0	; force () banked
  5783  00202C  25BA               	addwf	lcd_putMessage@chaine& (0+255),w,b
  5784  00202E  0100               	movlb	0	; force () banked
  5785  002030  6FBF               	movwf	(??_lcd_putMessage+2)& (0+255),b
  5786  002032  51BE               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  5787  002034  0100               	movlb	0	; force () banked
  5788  002036  21BB               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  5789  002038  0100               	movlb	0	; force () banked
  5790  00203A  6FC0               	movwf	(??_lcd_putMessage+3)& (0+255),b
  5791  00203C  0E00               	movlw	0
  5792  00203E  0100               	movlb	0	; force () banked
  5793  002040  21BC               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  5794  002042  0100               	movlb	0	; force () banked
  5795  002044  6FC1               	movwf	(??_lcd_putMessage+4)& (0+255),b
  5796  002046  C0BF  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  5797  00204A  C0C0  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  5798  00204E  C0C1  FFF8         	movff	??_lcd_putMessage+4,tblptru
  5799  002052  BAF8               	btfsc	tblptru,5,c
  5800  002054  D003               	bra	u1417
  5801  002056  0008               	tblrd		*
  5802  002058  50F5               	movf	tablat,w,c
  5803  00205A  D005               	bra	u1410
  5804  00205C                     u1417:
  5805  00205C  CFF6 FFE9          	movff	tblptrl,fsr0l
  5806  002060  CFF7 FFEA          	movff	tblptrh,fsr0h
  5807  002064  50EF               	movf	indf0,w,c
  5808  002066                     u1410:
  5809  002066  0900               	iorlw	0
  5810  002068  A4D8               	btfss	status,2,c
  5811  00206A  EF39  F010         	goto	u1421
  5812  00206E  EF3B  F010         	goto	u1420
  5813  002072                     u1421:
  5814  002072  EFE7  F00F         	goto	l2092
  5815  002076                     u1420:
  5816  002076  0012               	return		;funcret
  5817  002078                     __end_of_lcd_putMessage:
  5818                           	opt callstack 0
  5819                           
  5820 ;; *************** function _lcd_ecritChar *****************
  5821 ;; Defined at:
  5822 ;;		line 359 in file "Lcd4Lignes.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;  car             1    wreg     unsigned char 
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;  car             1    3[BANK0 ] unsigned char 
  5827 ;;  posRam          1    4[BANK0 ] unsigned char 
  5828 ;; Return value:  Size  Location     Type
  5829 ;;                  1    wreg      void 
  5830 ;; Registers used:
  5831 ;;		wreg, status,2, status,0, cstack
  5832 ;; Tracked objects:
  5833 ;;		On entry : 0/0
  5834 ;;		On exit  : 0/0
  5835 ;;		Unchanged: 0/0
  5836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5837 ;;      Params:         0       0       0       0       0       0       0
  5838 ;;      Locals:         0       2       0       0       0       0       0
  5839 ;;      Temps:          0       0       0       0       0       0       0
  5840 ;;      Totals:         0       2       0       0       0       0       0
  5841 ;;Total ram usage:        2 bytes
  5842 ;; Hardware stack levels used:    1
  5843 ;; Hardware stack levels required when called:    3
  5844 ;; This function calls:
  5845 ;;		_lcd_wrCom
  5846 ;;		_lcd_wrData
  5847 ;; This function is called by:
  5848 ;;		_demine
  5849 ;;		_enleveTuilesAutour
  5850 ;;		_lcd_putMessage
  5851 ;; This function uses a non-reentrant model
  5852 ;;
  5853                           
  5854                           	psect	text22
  5855  0024DE                     __ptext22:
  5856                           	opt callstack 0
  5857  0024DE                     _lcd_ecritChar:
  5858                           	opt callstack 26
  5859                           
  5860                           ;incstack = 0
  5861                           ;lcd_ecritChar@car stored from wreg
  5862  0024DE  0100               	movlb	0	; force () banked
  5863  0024E0  6FB7               	movwf	lcd_ecritChar@car& (0+255),b
  5864  0024E2                     
  5865                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  5866  0024E2  0100               	movlb	0	; force () banked
  5867  0024E4  51B7               	movf	lcd_ecritChar@car& (0+255),w,b
  5868  0024E6  ECDA  F012         	call	_lcd_wrData
  5869  0024EA  0100               	movlb	0	; force () banked
  5870  0024EC  6FB8               	movwf	lcd_ecritChar@posRam& (0+255),b
  5871                           
  5872                           ;Lcd4Lignes.c: 364: switch(posRam)
  5873  0024EE  EF88  F012         	goto	l2072
  5874  0024F2                     l2064:
  5875                           
  5876                           ; BSR set to: 0
  5877                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  5878  0024F2  0EC0               	movlw	192
  5879  0024F4  ECAA  F011         	call	_lcd_wrCom
  5880                           
  5881                           ;Lcd4Lignes.c: 368: break;
  5882  0024F8  EF98  F012         	goto	l330
  5883  0024FC                     l2066:
  5884                           
  5885                           ; BSR set to: 0
  5886                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  5887  0024FC  0E94               	movlw	148
  5888  0024FE  ECAA  F011         	call	_lcd_wrCom
  5889                           
  5890                           ;Lcd4Lignes.c: 371: break;
  5891  002502  EF98  F012         	goto	l330
  5892  002506                     l2068:
  5893                           
  5894                           ; BSR set to: 0
  5895                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  5896  002506  0ED4               	movlw	212
  5897  002508  ECAA  F011         	call	_lcd_wrCom
  5898                           
  5899                           ;Lcd4Lignes.c: 374: break;
  5900  00250C  EF98  F012         	goto	l330
  5901  002510                     l2072:
  5902                           
  5903                           ; BSR set to: 0
  5904  002510  0100               	movlb	0	; force () banked
  5905  002512  51B8               	movf	lcd_ecritChar@posRam& (0+255),w,b
  5906                           
  5907                           ; Switch size 1, requested type "simple"
  5908                           ; Number of cases is 3, Range of values is 148 to 212
  5909                           ; switch strategies available:
  5910                           ; Name         Instructions Cycles
  5911                           ; simple_byte           10     6 (average)
  5912                           ;	Chosen strategy is simple_byte
  5913  002514  0A94               	xorlw	148	; case 148
  5914  002516  B4D8               	btfsc	status,2,c
  5915  002518  EF79  F012         	goto	l2064
  5916  00251C  0A54               	xorlw	84	; case 192
  5917  00251E  B4D8               	btfsc	status,2,c
  5918  002520  EF83  F012         	goto	l2068
  5919  002524  0A14               	xorlw	20	; case 212
  5920  002526  B4D8               	btfsc	status,2,c
  5921  002528  EF7E  F012         	goto	l2066
  5922  00252C  EF98  F012         	goto	l330
  5923  002530                     l330:
  5924  002530  0012               	return		;funcret
  5925  002532                     __end_of_lcd_ecritChar:
  5926                           	opt callstack 0
  5927                           
  5928 ;; *************** function _lcd_wrData *****************
  5929 ;; Defined at:
  5930 ;;		line 188 in file "Lcd4Lignes.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;  caractere       1    wreg     unsigned char 
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;  caractere       1    2[BANK0 ] unsigned char 
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  1    wreg      unsigned char 
  5937 ;; Registers used:
  5938 ;;		wreg, status,2, status,0, cstack
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5944 ;;      Params:         0       0       0       0       0       0       0
  5945 ;;      Locals:         0       1       0       0       0       0       0
  5946 ;;      Temps:          0       0       0       0       0       0       0
  5947 ;;      Totals:         0       1       0       0       0       0       0
  5948 ;;Total ram usage:        1 bytes
  5949 ;; Hardware stack levels used:    1
  5950 ;; Hardware stack levels required when called:    2
  5951 ;; This function calls:
  5952 ;;		_lcd_busy
  5953 ;;		_lcd_ecrireDonnees
  5954 ;;		_lcd_strobeEnableBit
  5955 ;; This function is called by:
  5956 ;;		_lcd_ecritChar
  5957 ;;		_lcd_initCGRam
  5958 ;;		_lcd_effaceChar
  5959 ;; This function uses a non-reentrant model
  5960 ;;
  5961                           
  5962                           	psect	text23
  5963  0025B4                     __ptext23:
  5964                           	opt callstack 0
  5965  0025B4                     _lcd_wrData:
  5966                           	opt callstack 26
  5967                           
  5968                           ;incstack = 0
  5969                           ;lcd_wrData@caractere stored from wreg
  5970  0025B4  0100               	movlb	0	; force () banked
  5971  0025B6  6FB6               	movwf	lcd_wrData@caractere& (0+255),b
  5972  0025B8                     
  5973                           ;Lcd4Lignes.c: 190: lcd_busy();
  5974  0025B8  EC99  F012         	call	_lcd_busy	;wreg free
  5975  0025BC                     
  5976                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  5977  0025BC  0E00               	movlw	0
  5978  0025BE  6E95               	movwf	149,c	;volatile
  5979  0025C0                     
  5980                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  5981  0025C0  8080               	bsf	128,0,c	;volatile
  5982  0025C2                     
  5983                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  5984  0025C2  9280               	bcf	128,1,c	;volatile
  5985  0025C4                     
  5986                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  5987  0025C4  0100               	movlb	0	; force () banked
  5988  0025C6  39B6               	swapf	lcd_wrData@caractere& (0+255),w,b
  5989  0025C8  0B0F               	andlw	15
  5990  0025CA  EC54  F013         	call	_lcd_ecrireDonnees
  5991  0025CE                     
  5992                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  5993  0025CE  EC6D  F013         	call	_lcd_strobeEnableBit	;wreg free
  5994  0025D2                     
  5995                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  5996  0025D2  0100               	movlb	0	; force () banked
  5997  0025D4  51B6               	movf	lcd_wrData@caractere& (0+255),w,b
  5998  0025D6  EC54  F013         	call	_lcd_ecrireDonnees
  5999  0025DA                     
  6000                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  6001  0025DA  EC6D  F013         	call	_lcd_strobeEnableBit	;wreg free
  6002  0025DE                     
  6003                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  6004  0025DE  0E0F               	movlw	15
  6005  0025E0  6E95               	movwf	149,c	;volatile
  6006  0025E2                     
  6007                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  6008                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  6009  0025E2  EC99  F012         	call	_lcd_busy	;wreg free
  6010  0025E6  0012               	return		;funcret
  6011  0025E8                     __end_of_lcd_wrData:
  6012                           	opt callstack 0
  6013                           
  6014 ;; *************** function _lcd_gotoXY *****************
  6015 ;; Defined at:
  6016 ;;		line 314 in file "Lcd4Lignes.c"
  6017 ;; Parameters:    Size  Location     Type
  6018 ;;  x               1    wreg     unsigned char 
  6019 ;;  y               1    3[BANK0 ] unsigned char 
  6020 ;; Auto vars:     Size  Location     Type
  6021 ;;  x               1    4[BANK0 ] unsigned char 
  6022 ;; Return value:  Size  Location     Type
  6023 ;;                  1    wreg      void 
  6024 ;; Registers used:
  6025 ;;		wreg, status,2, status,0, cstack
  6026 ;; Tracked objects:
  6027 ;;		On entry : 0/0
  6028 ;;		On exit  : 0/0
  6029 ;;		Unchanged: 0/0
  6030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6031 ;;      Params:         0       1       0       0       0       0       0
  6032 ;;      Locals:         0       1       0       0       0       0       0
  6033 ;;      Temps:          0       0       0       0       0       0       0
  6034 ;;      Totals:         0       2       0       0       0       0       0
  6035 ;;Total ram usage:        2 bytes
  6036 ;; Hardware stack levels used:    1
  6037 ;; Hardware stack levels required when called:    3
  6038 ;; This function calls:
  6039 ;;		_lcd_wrCom
  6040 ;; This function is called by:
  6041 ;;		_deplace
  6042 ;;		_enleveTuilesAutour
  6043 ;;		_afficheTabVue
  6044 ;;		_lcd_effaceLigne
  6045 ;; This function uses a non-reentrant model
  6046 ;;
  6047                           
  6048                           	psect	text24
  6049  002276                     __ptext24:
  6050                           	opt callstack 0
  6051  002276                     _lcd_gotoXY:
  6052                           	opt callstack 26
  6053                           
  6054                           ;incstack = 0
  6055                           ;lcd_gotoXY@x stored from wreg
  6056  002276  0100               	movlb	0	; force () banked
  6057  002278  6FB8               	movwf	lcd_gotoXY@x& (0+255),b
  6058  00227A                     
  6059                           ;Lcd4Lignes.c: 316: switch(y)
  6060  00227A  EF5F  F011         	goto	l2060
  6061  00227E                     l2050:
  6062                           
  6063                           ; BSR set to: 0
  6064                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  6065  00227E  0100               	movlb	0	; force () banked
  6066  002280  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  6067  002282  0F7F               	addlw	127
  6068  002284  0980               	iorlw	128
  6069  002286  ECAA  F011         	call	_lcd_wrCom
  6070                           
  6071                           ;Lcd4Lignes.c: 320: break;
  6072  00228A  EF73  F011         	goto	l319
  6073  00228E                     l2052:
  6074                           
  6075                           ; BSR set to: 0
  6076                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  6077  00228E  0100               	movlb	0	; force () banked
  6078  002290  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  6079  002292  0FBF               	addlw	191
  6080  002294  0980               	iorlw	128
  6081  002296  ECAA  F011         	call	_lcd_wrCom
  6082                           
  6083                           ;Lcd4Lignes.c: 323: break;
  6084  00229A  EF73  F011         	goto	l319
  6085  00229E                     l2054:
  6086                           
  6087                           ; BSR set to: 0
  6088                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  6089  00229E  0100               	movlb	0	; force () banked
  6090  0022A0  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  6091  0022A2  0F93               	addlw	147
  6092  0022A4  0980               	iorlw	128
  6093  0022A6  ECAA  F011         	call	_lcd_wrCom
  6094                           
  6095                           ;Lcd4Lignes.c: 326: break;
  6096  0022AA  EF73  F011         	goto	l319
  6097  0022AE                     l2056:
  6098                           
  6099                           ; BSR set to: 0
  6100                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  6101  0022AE  0100               	movlb	0	; force () banked
  6102  0022B0  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  6103  0022B2  0FD3               	addlw	211
  6104  0022B4  0980               	iorlw	128
  6105  0022B6  ECAA  F011         	call	_lcd_wrCom
  6106                           
  6107                           ;Lcd4Lignes.c: 329: break;
  6108  0022BA  EF73  F011         	goto	l319
  6109  0022BE                     l2060:
  6110  0022BE  0100               	movlb	0	; force () banked
  6111  0022C0  51B7               	movf	lcd_gotoXY@y& (0+255),w,b
  6112                           
  6113                           ; Switch size 1, requested type "simple"
  6114                           ; Number of cases is 4, Range of values is 1 to 4
  6115                           ; switch strategies available:
  6116                           ; Name         Instructions Cycles
  6117                           ; simple_byte           13     7 (average)
  6118                           ;	Chosen strategy is simple_byte
  6119  0022C2  0A01               	xorlw	1	; case 1
  6120  0022C4  B4D8               	btfsc	status,2,c
  6121  0022C6  EF3F  F011         	goto	l2050
  6122  0022CA  0A03               	xorlw	3	; case 2
  6123  0022CC  B4D8               	btfsc	status,2,c
  6124  0022CE  EF47  F011         	goto	l2052
  6125  0022D2  0A01               	xorlw	1	; case 3
  6126  0022D4  B4D8               	btfsc	status,2,c
  6127  0022D6  EF4F  F011         	goto	l2054
  6128  0022DA  0A07               	xorlw	7	; case 4
  6129  0022DC  B4D8               	btfsc	status,2,c
  6130  0022DE  EF57  F011         	goto	l2056
  6131  0022E2  EF73  F011         	goto	l319
  6132  0022E6                     l319:
  6133  0022E6  0012               	return		;funcret
  6134  0022E8                     __end_of_lcd_gotoXY:
  6135                           	opt callstack 0
  6136                           
  6137 ;; *************** function _lcd_wrCom *****************
  6138 ;; Defined at:
  6139 ;;		line 156 in file "Lcd4Lignes.c"
  6140 ;; Parameters:    Size  Location     Type
  6141 ;;  commande        1    wreg     unsigned char 
  6142 ;; Auto vars:     Size  Location     Type
  6143 ;;  commande        1    2[BANK0 ] unsigned char 
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  1    wreg      unsigned char 
  6146 ;; Registers used:
  6147 ;;		wreg, status,2, status,0, cstack
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6153 ;;      Params:         0       0       0       0       0       0       0
  6154 ;;      Locals:         0       1       0       0       0       0       0
  6155 ;;      Temps:          0       0       0       0       0       0       0
  6156 ;;      Totals:         0       1       0       0       0       0       0
  6157 ;;Total ram usage:        1 bytes
  6158 ;; Hardware stack levels used:    1
  6159 ;; Hardware stack levels required when called:    2
  6160 ;; This function calls:
  6161 ;;		_lcd_busy
  6162 ;;		_lcd_ecrireDonnees
  6163 ;;		_lcd_strobeEnableBit
  6164 ;; This function is called by:
  6165 ;;		_lcd_init
  6166 ;;		_lcd_effaceAffichage
  6167 ;;		_lcd_curseurHome
  6168 ;;		_lcd_gotoXY
  6169 ;;		_lcd_ecritChar
  6170 ;;		_lcd_initCGRam
  6171 ;;		_lcd_cacheCurseur
  6172 ;;		_lcd_montreCurseur
  6173 ;; This function uses a non-reentrant model
  6174 ;;
  6175                           
  6176                           	psect	text25
  6177  002354                     __ptext25:
  6178                           	opt callstack 0
  6179  002354                     _lcd_wrCom:
  6180                           	opt callstack 26
  6181                           
  6182                           ;incstack = 0
  6183                           ;lcd_wrCom@commande stored from wreg
  6184  002354  0100               	movlb	0	; force () banked
  6185  002356  6FB6               	movwf	lcd_wrCom@commande& (0+255),b
  6186  002358                     
  6187                           ;Lcd4Lignes.c: 158: lcd_busy();
  6188  002358  EC99  F012         	call	_lcd_busy	;wreg free
  6189  00235C                     
  6190                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  6191  00235C  0E00               	movlw	0
  6192  00235E  6E95               	movwf	149,c	;volatile
  6193  002360                     
  6194                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  6195  002360  9080               	bcf	128,0,c	;volatile
  6196  002362                     
  6197                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  6198  002362  9280               	bcf	128,1,c	;volatile
  6199  002364                     
  6200                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  6201  002364  0100               	movlb	0	; force () banked
  6202  002366  39B6               	swapf	lcd_wrCom@commande& (0+255),w,b
  6203  002368  0B0F               	andlw	15
  6204  00236A  EC54  F013         	call	_lcd_ecrireDonnees
  6205  00236E                     
  6206                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  6207  00236E  EC6D  F013         	call	_lcd_strobeEnableBit	;wreg free
  6208  002372                     
  6209                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  6210  002372  0100               	movlb	0	; force () banked
  6211  002374  51B6               	movf	lcd_wrCom@commande& (0+255),w,b
  6212  002376  EC54  F013         	call	_lcd_ecrireDonnees
  6213  00237A                     
  6214                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  6215  00237A  EC6D  F013         	call	_lcd_strobeEnableBit	;wreg free
  6216  00237E                     
  6217                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  6218  00237E  0E03               	movlw	3
  6219  002380                     u2697:
  6220  002380  2EE8               	decfsz	wreg,f,c
  6221  002382  D7FE               	bra	u2697
  6222  002384  F000               	nop	
  6223  002386                     
  6224                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  6225  002386  0100               	movlb	0	; force () banked
  6226  002388  05B6               	decf	lcd_wrCom@commande& (0+255),w,b
  6227  00238A  B4D8               	btfsc	status,2,c
  6228  00238C  EFCA  F011         	goto	u1361
  6229  002390  EFCC  F011         	goto	u1360
  6230  002394                     u1361:
  6231  002394  EFD6  F011         	goto	l2008
  6232  002398                     u1360:
  6233  002398                     
  6234                           ; BSR set to: 0
  6235  002398  0E02               	movlw	2
  6236  00239A  0100               	movlb	0	; force () banked
  6237  00239C  19B6               	xorwf	lcd_wrCom@commande& (0+255),w,b
  6238  00239E  A4D8               	btfss	status,2,c
  6239  0023A0  EFD4  F011         	goto	u1371
  6240  0023A4  EFD6  F011         	goto	u1370
  6241  0023A8                     u1371:
  6242  0023A8  EFDB  F011         	goto	l2010
  6243  0023AC                     u1370:
  6244  0023AC                     l2008:
  6245                           
  6246                           ; BSR set to: 0
  6247                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  6248  0023AC  0EA6               	movlw	166
  6249  0023AE                     u2707:
  6250  0023AE  2EE8               	decfsz	wreg,f,c
  6251  0023B0  D7FE               	bra	u2707
  6252  0023B2  F000 F000          	nop2	
  6253  0023B6                     l2010:
  6254                           
  6255                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  6256  0023B6  0E0F               	movlw	15
  6257  0023B8  6E95               	movwf	149,c	;volatile
  6258  0023BA                     
  6259                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  6260  0023BA  EC99  F012         	call	_lcd_busy	;wreg free
  6261  0023BE  0012               	return		;funcret
  6262  0023C0                     __end_of_lcd_wrCom:
  6263                           	opt callstack 0
  6264                           
  6265 ;; *************** function _lcd_strobeEnableBit *****************
  6266 ;; Defined at:
  6267 ;;		line 431 in file "Lcd4Lignes.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;		None
  6270 ;; Auto vars:     Size  Location     Type
  6271 ;;		None
  6272 ;; Return value:  Size  Location     Type
  6273 ;;                  1    wreg      void 
  6274 ;; Registers used:
  6275 ;;		None
  6276 ;; Tracked objects:
  6277 ;;		On entry : 0/0
  6278 ;;		On exit  : 0/0
  6279 ;;		Unchanged: 0/0
  6280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6281 ;;      Params:         0       0       0       0       0       0       0
  6282 ;;      Locals:         0       0       0       0       0       0       0
  6283 ;;      Temps:          0       0       0       0       0       0       0
  6284 ;;      Totals:         0       0       0       0       0       0       0
  6285 ;;Total ram usage:        0 bytes
  6286 ;; Hardware stack levels used:    1
  6287 ;; This function calls:
  6288 ;;		Nothing
  6289 ;; This function is called by:
  6290 ;;		_lcd_wrCom
  6291 ;;		_lcd_wrData
  6292 ;;		_lcd_resetSequence
  6293 ;; This function uses a non-reentrant model
  6294 ;;
  6295                           
  6296                           	psect	text26
  6297  0026DA                     __ptext26:
  6298                           	opt callstack 0
  6299  0026DA                     _lcd_strobeEnableBit:
  6300                           	opt callstack 27
  6301  0026DA                     
  6302                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  6303  0026DA  8480               	bsf	128,2,c	;volatile
  6304                           
  6305                           ;Lcd4Lignes.c: 434: __nop();
  6306  0026DC  F000               	nop	
  6307                           
  6308                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  6309  0026DE  9480               	bcf	128,2,c	;volatile
  6310  0026E0  0012               	return		;funcret
  6311  0026E2                     __end_of_lcd_strobeEnableBit:
  6312                           	opt callstack 0
  6313                           
  6314 ;; *************** function _lcd_ecrireDonnees *****************
  6315 ;; Defined at:
  6316 ;;		line 107 in file "Lcd4Lignes.c"
  6317 ;; Parameters:    Size  Location     Type
  6318 ;;  donnee          1    wreg     unsigned char 
  6319 ;; Auto vars:     Size  Location     Type
  6320 ;;  donnee          1    1[BANK0 ] unsigned char 
  6321 ;; Return value:  Size  Location     Type
  6322 ;;                  1    wreg      void 
  6323 ;; Registers used:
  6324 ;;		wreg, status,2, status,0
  6325 ;; Tracked objects:
  6326 ;;		On entry : 0/0
  6327 ;;		On exit  : 0/0
  6328 ;;		Unchanged: 0/0
  6329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6330 ;;      Params:         0       0       0       0       0       0       0
  6331 ;;      Locals:         0       1       0       0       0       0       0
  6332 ;;      Temps:          0       1       0       0       0       0       0
  6333 ;;      Totals:         0       2       0       0       0       0       0
  6334 ;;Total ram usage:        2 bytes
  6335 ;; Hardware stack levels used:    1
  6336 ;; This function calls:
  6337 ;;		Nothing
  6338 ;; This function is called by:
  6339 ;;		_lcd_wrCom
  6340 ;;		_lcd_wrData
  6341 ;;		_lcd_resetSequence
  6342 ;; This function uses a non-reentrant model
  6343 ;;
  6344                           
  6345                           	psect	text27
  6346  0026A8                     __ptext27:
  6347                           	opt callstack 0
  6348  0026A8                     _lcd_ecrireDonnees:
  6349                           	opt callstack 27
  6350                           
  6351                           ;incstack = 0
  6352                           ;lcd_ecrireDonnees@donnee stored from wreg
  6353  0026A8  0100               	movlb	0	; force () banked
  6354  0026AA  6FB5               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  6355  0026AC                     
  6356                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  6357  0026AC  CF83 F0B4          	movff	3971,??_lcd_ecrireDonnees	;volatile
  6358  0026B0  0EF0               	movlw	240
  6359  0026B2  0100               	movlb	0	; force () banked
  6360  0026B4  17B4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  6361  0026B6  0100               	movlb	0	; force () banked
  6362  0026B8  51B5               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  6363  0026BA  0B0F               	andlw	15
  6364  0026BC  0100               	movlb	0	; force () banked
  6365  0026BE  11B4               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  6366  0026C0  6E83               	movwf	131,c	;volatile
  6367  0026C2                     
  6368                           ; BSR set to: 0
  6369  0026C2  0012               	return		;funcret
  6370  0026C4                     __end_of_lcd_ecrireDonnees:
  6371                           	opt callstack 0
  6372                           
  6373 ;; *************** function _lcd_busy *****************
  6374 ;; Defined at:
  6375 ;;		line 124 in file "Lcd4Lignes.c"
  6376 ;; Parameters:    Size  Location     Type
  6377 ;;		None
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;  adresse         1    1[BANK0 ] unsigned char 
  6380 ;; Return value:  Size  Location     Type
  6381 ;;                  1    wreg      unsigned char 
  6382 ;; Registers used:
  6383 ;;		wreg, status,2, status,0, cstack
  6384 ;; Tracked objects:
  6385 ;;		On entry : 0/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6389 ;;      Params:         0       0       0       0       0       0       0
  6390 ;;      Locals:         0       1       0       0       0       0       0
  6391 ;;      Temps:          0       1       0       0       0       0       0
  6392 ;;      Totals:         0       2       0       0       0       0       0
  6393 ;;Total ram usage:        2 bytes
  6394 ;; Hardware stack levels used:    1
  6395 ;; Hardware stack levels required when called:    1
  6396 ;; This function calls:
  6397 ;;		_lcd_lireDonnees
  6398 ;; This function is called by:
  6399 ;;		_lcd_wrCom
  6400 ;;		_lcd_wrData
  6401 ;; This function uses a non-reentrant model
  6402 ;;
  6403                           
  6404                           	psect	text28
  6405  002532                     __ptext28:
  6406                           	opt callstack 0
  6407  002532                     _lcd_busy:
  6408                           	opt callstack 26
  6409  002532                     
  6410                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  6411  002532  9080               	bcf	128,0,c	;volatile
  6412                           
  6413                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  6414  002534  8280               	bsf	128,1,c	;volatile
  6415  002536                     l281:
  6416                           
  6417                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  6418  002536  8480               	bsf	128,2,c	;volatile
  6419                           
  6420                           ;Lcd4Lignes.c: 134: __nop();
  6421  002538  F000               	nop	
  6422  00253A                     
  6423                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  6424  00253A  EC71  F013         	call	_lcd_lireDonnees	;wreg free
  6425  00253E  0100               	movlb	0	; force () banked
  6426  002540  6FB4               	movwf	??_lcd_busy& (0+255),b
  6427  002542  39B4               	swapf	??_lcd_busy& (0+255),w,b
  6428  002544  0BF0               	andlw	240
  6429  002546  0100               	movlb	0	; force () banked
  6430  002548  6FB5               	movwf	lcd_busy@adresse& (0+255),b
  6431  00254A                     
  6432                           ; BSR set to: 0
  6433                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  6434  00254A  9480               	bcf	128,2,c	;volatile
  6435  00254C                     
  6436                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  6437  00254C  8480               	bsf	128,2,c	;volatile
  6438  00254E                     
  6439                           ;Lcd4Lignes.c: 139: __nop();
  6440  00254E  F000               	nop	
  6441                           
  6442                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  6443  002550  EC71  F013         	call	_lcd_lireDonnees	;wreg free
  6444  002554  0100               	movlb	0	; force () banked
  6445  002556  13B5               	iorwf	lcd_busy@adresse& (0+255),f,b
  6446  002558                     
  6447                           ; BSR set to: 0
  6448                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  6449  002558  9480               	bcf	128,2,c	;volatile
  6450  00255A                     
  6451                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  6452  00255A  0100               	movlb	0	; force () banked
  6453  00255C  BFB5               	btfsc	lcd_busy@adresse& (0+255),7,b
  6454  00255E  EFB3  F012         	goto	u1351
  6455  002562  EFB5  F012         	goto	u1350
  6456  002566                     u1351:
  6457  002566  EF9B  F012         	goto	l281
  6458  00256A                     u1350:
  6459  00256A                     
  6460                           ; BSR set to: 0
  6461                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  6462  00256A  9280               	bcf	128,1,c	;volatile
  6463  00256C                     
  6464                           ; BSR set to: 0
  6465                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  6466  00256C  0100               	movlb	0	; force () banked
  6467  00256E  51B5               	movf	lcd_busy@adresse& (0+255),w,b
  6468  002570  0B7F               	andlw	127
  6469  002572                     
  6470                           ; BSR set to: 0
  6471  002572  0012               	return		;funcret
  6472  002574                     __end_of_lcd_busy:
  6473                           	opt callstack 0
  6474                           
  6475 ;; *************** function _lcd_lireDonnees *****************
  6476 ;; Defined at:
  6477 ;;		line 93 in file "Lcd4Lignes.c"
  6478 ;; Parameters:    Size  Location     Type
  6479 ;;		None
  6480 ;; Auto vars:     Size  Location     Type
  6481 ;;		None
  6482 ;; Return value:  Size  Location     Type
  6483 ;;                  1    wreg      unsigned char 
  6484 ;; Registers used:
  6485 ;;		wreg, status,2, status,0
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6491 ;;      Params:         0       0       0       0       0       0       0
  6492 ;;      Locals:         0       0       0       0       0       0       0
  6493 ;;      Temps:          0       0       0       0       0       0       0
  6494 ;;      Totals:         0       0       0       0       0       0       0
  6495 ;;Total ram usage:        0 bytes
  6496 ;; Hardware stack levels used:    1
  6497 ;; This function calls:
  6498 ;;		Nothing
  6499 ;; This function is called by:
  6500 ;;		_lcd_busy
  6501 ;; This function uses a non-reentrant model
  6502 ;;
  6503                           
  6504                           	psect	text29
  6505  0026E2                     __ptext29:
  6506                           	opt callstack 0
  6507  0026E2                     _lcd_lireDonnees:
  6508                           	opt callstack 26
  6509  0026E2                     
  6510                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  6511  0026E2  5083               	movf	131,w,c	;volatile
  6512  0026E4  0B0F               	andlw	15
  6513  0026E6  0012               	return		;funcret
  6514  0026E8                     __end_of_lcd_lireDonnees:
  6515                           	opt callstack 0
  6516                           
  6517 ;; *************** function ___wmul *****************
  6518 ;; Defined at:
  6519 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  6520 ;; Parameters:    Size  Location     Type
  6521 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6522 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;  product         2    4[BANK0 ] unsigned int 
  6525 ;; Return value:  Size  Location     Type
  6526 ;;                  2    0[BANK0 ] unsigned int 
  6527 ;; Registers used:
  6528 ;;		wreg, status,2, status,0, prodl, prodh
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6534 ;;      Params:         0       4       0       0       0       0       0
  6535 ;;      Locals:         0       2       0       0       0       0       0
  6536 ;;      Temps:          0       0       0       0       0       0       0
  6537 ;;      Totals:         0       6       0       0       0       0       0
  6538 ;;Total ram usage:        6 bytes
  6539 ;; Hardware stack levels used:    1
  6540 ;; This function calls:
  6541 ;;		Nothing
  6542 ;; This function is called by:
  6543 ;;		_initTabVue
  6544 ;;		_rempliMines
  6545 ;;		_metToucheCombien
  6546 ;;		_calculToucheCombien
  6547 ;;		_enleveTuilesAutour
  6548 ;;		_gagne
  6549 ;;		_afficheTabVue
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552                           
  6553                           	psect	text30
  6554  00263C                     __ptext30:
  6555                           	opt callstack 0
  6556  00263C                     ___wmul:
  6557                           	opt callstack 29
  6558  00263C  0100               	movlb	0	; () banked
  6559  00263E  51B4               	movf	___wmul@multiplier& (0+255),w,b
  6560  002640  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  6561  002642  CFF3 F0B8          	movff	prodl,___wmul@product
  6562  002646  CFF4 F0B9          	movff	prodh,___wmul@product+1
  6563  00264A  51B4               	movf	___wmul@multiplier& (0+255),w,b
  6564  00264C  03B7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6565  00264E  50F3               	movf	243,w,c
  6566  002650  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  6567  002652  51B5               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6568  002654  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  6569  002656  50F3               	movf	243,w,c
  6570  002658  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  6571  00265A                     
  6572                           ; BSR set to: 0
  6573  00265A  C0B8  F0B4         	movff	___wmul@product,?___wmul
  6574  00265E  C0B9  F0B5         	movff	___wmul@product+1,?___wmul+1
  6575  002662                     
  6576                           ; BSR set to: 0
  6577  002662  0012               	return		;funcret
  6578  002664                     __end_of___wmul:
  6579                           	opt callstack 0
  6580                           
  6581                           	psect	param0
  6582  0000                     tosu	equ	0xFFF
  6583                           tosh	equ	0xFFE
  6584                           tosl	equ	0xFFD
  6585                           stkptr	equ	0xFFC
  6586                           pclatu	equ	0xFFB
  6587                           pclath	equ	0xFFA
  6588                           pcl	equ	0xFF9
  6589                           tblptru	equ	0xFF8
  6590                           tblptrh	equ	0xFF7
  6591                           tblptrl	equ	0xFF6
  6592                           tablat	equ	0xFF5
  6593                           prodh	equ	0xFF4
  6594                           prodl	equ	0xFF3
  6595                           indf0	equ	0xFEF
  6596                           postinc0	equ	0xFEE
  6597                           postdec0	equ	0xFED
  6598                           preinc0	equ	0xFEC
  6599                           plusw0	equ	0xFEB
  6600                           fsr0h	equ	0xFEA
  6601                           fsr0l	equ	0xFE9
  6602                           wreg	equ	0xFE8
  6603                           indf1	equ	0xFE7
  6604                           postinc1	equ	0xFE6
  6605                           postdec1	equ	0xFE5
  6606                           preinc1	equ	0xFE4
  6607                           plusw1	equ	0xFE3
  6608                           fsr1h	equ	0xFE2
  6609                           fsr1l	equ	0xFE1
  6610                           bsr	equ	0xFE0
  6611                           indf2	equ	0xFDF
  6612                           postinc2	equ	0xFDE
  6613                           postdec2	equ	0xFDD
  6614                           preinc2	equ	0xFDC
  6615                           plusw2	equ	0xFDB
  6616                           fsr2h	equ	0xFDA
  6617                           fsr2l	equ	0xFD9
  6618                           status	equ	0xFD8


Data Sizes:
    Strings     24
    Constant    0
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     41     129
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(3) Largest target is 84
		 -> m_tabVue(BANK1[84]), STR_1(CODE[24]), 

    gagne@pMines	PTR int  size(2) Largest target is 2
		 -> main@NBMines(BANK0[2]), 

    deplace@y	PTR unsigned char  size(2) Largest target is 1
		 -> main@y(BANK0[1]), 

    deplace@x	PTR unsigned char  size(2) Largest target is 1
		 -> main@x(BANK0[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_rempliMines
    _rempliMines->___awmod
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _calculToucheCombien->___wmul
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _initTabVue->___wmul
    _gagne->___wmul
    _lcd_effaceAffichage->_lcd_wrCom
    _deplace->_lcd_gotoXY
    _demine->_enleveTuilesAutour
    _enleveTuilesAutour->___wmul
    _afficheTabVue->_lcd_putMessage
    _lcd_putMessage->___wmul
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   39772
                                             36 BANK0      5     5      0
                      _afficheTabVue
                             _demine
                            _deplace
                              _gagne
                         _initTabVue
                         _init_serie
                     _initialisation
                    _lcd_curseurHome
                           _lcd_init
                     _lcd_putMessage
                   _metToucheCombien
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                         16    14      2    5383
                                             20 BANK0     16    14      2
                            ___awmod
                             ___wmul
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     9     9      0   10476
                                             21 BANK0      9     9      0
                             ___wmul
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 15    11      4    6023
                                              6 BANK0     15    11      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_serie                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           6     6      0    4341
                                              6 BANK0      6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _gagne                                               12    10      2    4599
                                              6 BANK0     12    10      2
                             ___wmul
                _lcd_effaceAffichage
 ---------------------------------------------------------------------------------
 (2) _lcd_effaceAffichage                                  0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _deplace                                              5     1      4    1209
                                              5 BANK0      5     1      4
                          _getAnalog
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      15
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _demine                                               7     6      1    6721
                                             18 BANK0      7     6      1
                 _enleveTuilesAutour
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _enleveTuilesAutour                                  12    11      1    5952
                                              6 BANK0     12    11      1
                             ___wmul
                      _lcd_ecritChar
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (1) _afficheTabVue                                        4     4      0    5407
                                             15 BANK0      4     4      0
                             ___wmul
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       9     6      3     555
                                              6 BANK0      9     6      3
                             ___wmul (ARG)
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoXY                                           2     1      1     646
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    4115
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheTabVue
     ___wmul
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _demine
     _enleveTuilesAutour
       ___wmul
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_gotoXY
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _deplace
     _getAnalog
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _gagne
     ___wmul
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _initTabVue
     ___wmul
   _init_serie
   _initialisation
   _lcd_curseurHome
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_putMessage
     ___wmul (ARG)
     _lcd_ecritChar (ARG)
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _metToucheCombien
     ___wmul
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     ___wmul
     _rand
       ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      94       6       57.8%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     29      81       4       80.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     115      14        0.0%
DATA                 0      0     115      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec 16 21:11:54 2019

 __end_of_calculToucheCombien 114E                            l82 2688                            l74 1F84  
                          l85 2602                            l88 2612                            l97 1D4E  
                          u90 2610                            u91 260C          ??_enleveTuilesAutour 00BB  
         ___wmul@multiplicand 00B6                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  __size_of_lcd_strobeEnableBit 0008  
                         l202 1E26                           l122 06D4                           l131 0902  
                         l204 1EC8                           l140 0B5A                           l108 18C4  
                         l301 26D0                           l141 0BAE                           l150 0DF6  
                         l126 078E                           l118 16E2                           l232 26A6  
                         l304 26D8                           l136 0A56                           l209 21D2  
                         l145 0C68                           l330 2530                           l162 1120  
                         l154 0EE6                           l163 114C                           l158 108C  
                         l319 22E6                           l183 1A4E                           l159 1068  
                         l352 26E0                           l336 2076                           l176 1BD4  
                         l281 2536                           l282 256A                           l355 2662  
                         l275 26E6                           l283 2572                           l195 14E8  
                         l292 25E6                           l349 2274                           l278 26C2  
                         l366 2342                           l295 2428                           l367 2352  
                         l289 23BE                           l298 263A                           l599 2128  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                  __CFG_BORV$18 000000  
                ___awmod@sign 00C7                   lcd_gotoXY@x 00B8                           wreg 000FE8  
                 lcd_gotoXY@y 00B7  __size_of_lcd_effaceAffichage 000E                  __CFG_LVP$OFF 000000  
                        l1022 24DC                          l2000 237A                          l2010 23B6  
                        l2002 237E                          l2012 23BA                          l2004 2386  
                        l2020 25BC                          l1300 2610                          l2100 24BE  
                        l2014 23BA                          l2006 2398                          l2030 25CE  
                        l2022 25C0                          l2110 0656                          l2102 24D0  
                        l2008 23AC                          l2040 25DE                          l2032 25D2  
                        l2024 25C0                          l2200 0BB4                          l2112 0672  
                        l2050 227E                          l2042 25E2                          l2034 25D2  
                        l2026 25C2                          l2018 25B8                          l2210 0C8C  
                        l2130 0794                          l2122 06DA                          l2114 068E  
                        l2106 061A                          l2052 228E                          l2060 22BE  
                        l2036 25DA                          l2028 25C4                          l2300 11CC  
                        l2220 0D40                          l2212 0C92                          l2204 0BD6  
                        l2140 07FE                          l2132 07B2                          l2116 06AC  
                        l2108 0638                          l2054 229E                          l2038 25DE  
                        l2062 24E2                          l2310 1214                          l2302 11E2  
                        l2046 26D2                          l2230 0DF0                          l2222 0D46  
                        l2206 0C62                          l2214 0CB0                          l2150 088E  
                        l2142 085C                          l2134 07B8                          l2126 06FC  
                        l2118 06B2                          l2056 22AE                          l2048 227A  
                        l2064 24F2                          l2072 2510                          l2320 12F4  
                        l2312 1226                          l2304 11EC                          l2400 2248  
                        l2240 0E4A                          l2232 0DFC                          l2224 0D4C  
                        l2216 0CC6                          l2208 0C6E                          l2160 0950  
                        l2152 08FC                          l2144 0862                          l2128 0788  
                        l2136 07D6                          l2080 22E8                          l2074 263C  
                        l2066 24FC                          l2090 1FC4                          l2330 1464  
                        l2322 13B4                          l2314 123C                          l2306 11F2  
                        l2402 225A                          l2250 0F08                          l2218 0CDA  
                        l2234 0E18                          l2170 09E2                          l2162 09B6  
                        l2154 0908                          l2146 086C                          l2138 07EA  
                        l2410 207E                          l2082 22FA                          l2076 265A  
                        l2068 2506                          l2092 1FCE                          l2340 14BA  
                        l2332 146E                          l2324 13D8                          l2316 1246  
                        l2404 225E                          l2260 0FC4                          l2252 0F6E  
                        l2244 0E6A                          l2236 0E2E                          l2228 0D6C  
                        l2180 0AAA                          l2172 0A50                          l2164 09BC  
                        l2156 0926                          l2420 20AE                          l2412 208C  
                        l2084 2308                          l2500 1826                          l2094 201A  
                        l2342 14C4                          l2334 1474                          l2318 12B6  
                        l2326 143C                          l1294 25EC                          l2406 2270  
                        l2350 23C4                          l2270 106E                          l2262 0FCA  
                        l2246 0EE0                          l2238 0E44                          l2254 0F74  
                        l2190 0B54                          l2182 0AC6                          l2174 0A5C  
                        l2166 09C2                          l2158 093A                          l2510 1512  
                        l2430 20F4                          l2422 20C0                          l2414 2094  
                        l2086 2318                          l2502 1864                          l2096 201E  
                        l2344 14CA                          l2328 1450                          l2336 1492  
                        l2600 19B6                          l1296 2600                          l2360 23E6  
                        l2352 23D8                          l2280 112A                          l2272 1092  
                        l2256 0F8A                          l2248 0EEC                          l2192 0B64  
                        l2184 0ACC                          l2176 0A78                          l2520 1560  
                        l2440 2120                          l2432 20FC                          l2424 20C8  
                        l2416 2098                          l2408 2078                          l2088 2322  
                        l2504 1894                          l2338 14A6                          l2290 1162  
                        l2602 19BC                          l1298 2600                          l2346 26C4  
                        l2610 1D50                          l2450 1BF4                          l1650 2664  
                        l2370 2406                          l2362 23EE                          l2354 23DA  
                        l2266 0FEC                          l2258 0FA8                          l2282 1148  
                        l2194 0B82                          l2178 0A8C                          l2530 164E  
                        l2522 15B6                          l2514 1534                          l2434 2102  
                        l2426 20D0                          l2418 20A6                          l2098 2488  
                        l2506 189A                          l2540 212A                          l2292 1192  
                        l2604 1A18                          l2612 1D7E                          l2460 1C42  
                        l1660 268A                          l1652 266C                          l2380 2424  
                        l2372 240A                          l2364 23F4                          l2356 23DC  
                        l2348 23C0                          l2444 2614                          l2276 10B4  
                        l2268 1062                          l2196 0B8C                          l2188 0AEE  
                        l2524 15D6                          l2532 169A                          l2516 153E  
                        l2508 14EA                          l2428 20DE                          l2436 2108  
                        l2550 21AE                          l2542 213C                          l2294 1198  
                        l2286 1152                          l2606 1A4A                          l2630 1E50  
                        l2622 1DCC                          l2470 1D0C                          l2462 1C60  
                        l2454 1C16                          l1670 269C                          l1662 268E  
                        l1654 267A                          l2390 21F6                          l2382 21D4  
                        l2374 2412                          l2366 23F8                          l2358 23E2  
                        l2446 2636                          l2278 111A                          l2534 16A0  
                        l2526 15EA                          l2438 2118                          l2552 21B4  
                        l2288 1158                          l2560 1AAC                          l2640 1EC4  
                        l2624 1E20                          l2632 1E6E                          l2616 1DA0  
                        l2464 1CA8                          l2472 1D2A                          l2456 1C20  
                        l2448 1BD6                          l1672 269E                          l1664 2696  
                        l1656 267C                          l2392 21FC                          l2384 21DA  
                        l2376 2418                          l2368 2400                          l2528 1632  
                        l2536 16BE                          l2546 215E                          l2298 11BA  
                        l2570 1B1E                          l2562 1AC6                          l2554 1A50  
                        l2634 1E90                          l2626 1E2C                          l2618 1DAA  
                        l2474 1D30                          l2466 1CBE                          l1674 26A0  
                        l1666 2698                          l1658 267E                          l2386 21E0  
                        l2378 241C                          l2538 16C4                          l2490 17AA  
                        l2482 1736                          l2548 216C                          l2580 1BAC  
                        l2572 1B50                          l2564 1AE0                          l2556 1A6A  
                        l2636 1E94                          l2628 1E4A                          l2468 1D06  
                        l1668 269A                          l2396 2212                          l2492 17B0  
                        l2484 1740                          l2476 16E4                          l2660 1EDE  
                        l2652 1ECA                          l2590 191A                          l2582 1BB8  
                        l2574 1B60                          l2566 1AF8                          l2558 1A9C  
                        l2638 1EBE                          l2398 2244                          l2494 17CE  
                        l2478 1714                          l2670 1F18                          l2662 1EE8  
                        l2654 1ED2                          l1952 26E2                          l1960 253A  
                        l2592 1924                          l2584 18CA                          l2576 1B7A  
                        l2568 1B04                          l2496 17D4                          l2488 1762  
                        l2680 1F62                          l2672 1F1C                          l2664 1EEE  
                        l2656 1ED6                          l1970 2558                          l1962 254A  
                        l2594 1962                          l2586 18D6                          l2578 1B94  
                        l2498 17F6                          l2682 1F80                          l2674 1F20  
                        l2666 1EF4                          l2658 1EDA                          l1972 255A  
                        l1964 254C                          l1956 26AC                          l1980 26DA  
                        l2596 19A0                          l2588 18DC                          l2684 1F92  
                        l2676 1F38                          l2668 1F0C                          l1974 255A  
                        l1966 254C                          l1958 2532                          l1990 2362  
                        l1982 2358                          l2598 19A6                          l2686 1FA6  
                        l2678 1F46                          l1976 256C                          l1968 254E  
                        l1992 2364                          l1984 235C                          l2688 1FAA  
                        l1994 236E                          l1986 2360                          l1996 2372  
                        l1988 2360                          l1998 2372                          STR_1 0601  
                        u2000 1226                          u2001 1222                          u2010 123C  
                        u2011 1238                          u2020 12B6                          u2100 21F2  
                        u2021 12B2                          u2101 21EE                          u2030 12F4  
                        u2110 220E                          u2031 12F0                          u2111 220A  
                        u1400 2016                          u2040 1450                          u2200 1C12  
                        u2120 225A                          u2041 144C                          u2201 1C0E  
                        u2121 2256                          u1410 2066                          u2050 1464  
                        u2210 1C3E                          u2130 2270                          u2051 1460  
                        u2211 1C3A                          u2131 226C                          u1420 2076  
                        u2060 1492                          u2220 1C60                          u1500 07B2  
                        u2140 208C                          u2300 1864                          u1421 2072  
                        u2061 148E                          u2221 1C5C                          u1501 07AE  
                        u2141 2088                          u2301 1860                          u1350 256A  
                        u2070 14A6                          u2230 1CBE                          u1510 07D6  
                        u1430 0656                          u2150 20A6                          u2310 18C4  
                        u1351 2566                          u1407 200C                          u2071 14A2  
                        u2231 1CBA                          u1511 07D2                          u1431 0652  
                        u2151 20A2                          u2311 18C0                          u1360 2398  
                        u2400 21D2                          u2080 14BA                          u2240 1D2A  
                        u1600 09B6                          u1520 07EA                          u1440 0672  
                        u2320 1530                          u2160 20C0                          u1361 2394  
                        u1417 205C                          u2401 21CE                          u2081 14B6  
                        u2241 1D26                          u1601 09B2                          u1521 07E6  
                        u1441 066E                          u2321 152C                          u2161 20BC  
                        u1370 23AC                          u2090 14E8                          u2410 1A6A  
                        u2250 1D4E                          u1610 09DE                          u1530 07FE  
                        u1450 068E                          u2330 155C                          u2170 20DE  
                        u1371 23A8                          u2091 14E4                          u2411 1A66  
                        u2251 1D4A                          u1611 09DA                          u1531 07FA  
                        u1451 068A                          u2331 1558                          u2171 20DA  
                        u2500 1962                          u2420 1A9C                          u1700 0BAA  
                        u1620 0A50                          u1540 085C                          u1460 06AC  
                        u2340 15B6                          u2180 20F4                          u1380 2308  
                        u2260 1732                          u2501 195E                          u2421 1A98  
                        u1701 0BA6                          u1621 0A4C                          u1541 0858  
                        u1461 06A8                          u2341 15B2                          u2181 20F0  
                        u1381 2304                          u2261 172E                          u2510 19A0  
                        u2430 1AC6                          u1710 0BD2                          u1630 0A78  
                        u1550 088A                          u1470 06D0                          u2350 15EA  
                        u2190 2118                          u1390 2342                          u2270 175E  
                        u2511 199C                          u2431 1AC2                          u1711 0BCE  
                        u1631 0A74                          u1551 0886                          u1471 06CC  
                        u2351 15E6                          u2191 2114                          u1391 233E  
                        u2271 175A                          u2440 1AF8                          u2520 1D9C  
                        u1800 0E18                          u1720 0C62                          u1640 0A8C  
                        u1560 08FC                          u1480 06F8                          u2360 164E  
                        u2280 17CE                          u2600 1F62                          u2441 1AF4  
                        u2521 1D98                          u1801 0E14                          u1721 0C5E  
                        u1641 0A88                          u1561 08F8                          u1481 06F4  
                        u2361 164A                          u2281 17CA                          u2601 1F5E  
                        u2450 1B1E                          u2530 1DC8                          u1810 0E2E  
                        u1730 0C8C                          u1650 0AAA                          u1570 0926  
                        u1490 0788                          u2370 16BE                          u2290 17F2  
                        u2610 1F80                          u2451 1B1A                          u2531 1DC4  
                        u1811 0E2A                          u1731 0C88                          u1651 0AA6  
                        u1571 0922                          u1491 0784                          u2371 16BA  
                        u2291 17EE                          u2611 1F7C                          u2460 1B50  
                        u2540 1E20                          u1900 0FE8                          u1820 0E44  
                        u1740 0CB0                          u1660 0AC6                          u1580 093A  
                        u2380 16E2                          u2620 1F92                          u2461 1B4C  
                        u2541 1E1C                          u1901 0FE4                          u1821 0E40  
                        u1741 0CAC                          u1661 0AC2                          u1581 0936  
                        u2381 16DE                          u2621 1F8E                          u2390 215A  
                        u2470 1B7A                          u2550 1E4A                          u1910 1062  
                        u1830 0E66                          u1750 0CC6                          u1670 0AEA  
                        u1590 0950                          u2391 2156                          u2471 1B76  
                        u2551 1E46                          u1911 105E                          u1831 0E62  
                        u1751 0CC2                          u1671 0AE6                          u1591 094C  
                        u2480 1BAC                          u2560 1E6E                          u1920 108C  
                        u1840 0EE0                          u1760 0CDA                          u1680 0B54  
                        u2481 1BA8                          u2561 1E6A                          u1921 1088  
                        u1841 0EDC                          u1761 0CD6                          u1681 0B50  
                        u2490 191A                          u2570 1E90                          u1930 10B0  
                        u1850 0F08                          u1770 0D40                          u1690 0B82  
                        u2707 23AE                          u2491 1916                          u2571 1E8C  
                        u1931 10AC                          u1851 0F04                          u1771 0D3C  
                        u1691 0B7E                          u1940 111A                          u1860 0F6E  
                        u1780 0D68                          u1941 1116                          u1861 0F6A  
                        u1781 0D64                          u2637 1FB2                          u1950 1148  
                        u1870 0F8A                          u1790 0DF0                          u2590 1F46  
                        u2647 23CC                          u1951 1144                          u1871 0F86  
                        u1791 0DEC                          u2591 1F42                          u1960 11B6  
                        u1880 0FA8                          u1961 11B2                          u2657 23E8  
                        u1881 0FA4                          u1970 11CC                          u1890 0FC4  
                        u1971 11C8                          u2667 23FA                          u1891 0FC0  
                        u1980 11E2                          u1981 11DE                          u2677 240C  
                        u1990 1210                          u1991 120C                          u2687 241E  
                        u2697 2380                          _RCIF 007CF5              ??_initialisation 00B4  
                        _main 1ECA                          _rand 2488                          fsr0h 000FEA  
                        indf0 000FEF                          fsr2h 000FDA                          fsr0l 000FE9  
                        indf1 000FE7                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          prodh 000FF4                          prodl 000FF3  
                        start 0000               ?_lcd_putMessage 00BA                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000               ??_lcd_ecritChar 00B7  
                       ?_main 00B4                         ?_rand 00C0               __end_of___awmod 212A  
                       _ANSEL 000F7E                         _RCREG 000FAE                         _SPBRG 000FAF  
                       _PORTD 000F83                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISD 000F95                         _TXREG 000FAD                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
             __end_of_deplace 1BD6           ___lmul@multiplicand 00B8                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
             ??_lcd_initCGRam 00B7                         _gagne 1D50                         _randx 00DD  
                       main@x 00DB                         main@y 00DC                         tablat 000FF5  
                       status 000FD8                __CFG_HFOFST$ON 000000                __CFG_PBADEN$ON 000000  
            _metToucheCombien 14EA               __initialization 242A                  __end_of_main 1FC4  
                __end_of_rand 24DE        enleveTuilesAutour@mine 00BF           enleveTuilesAutour@i 00C4  
         enleveTuilesAutour@j 00C2           enleveTuilesAutour@x 00C1           enleveTuilesAutour@y 00BA  
        lcd_putMessage@chaine 00BA    calculToucheCombien@colonne 00BC    calculToucheCombien@nb_mine 00C3  
                      ??_main 00D8                        ??_rand 00C2                 __activetblptr 000003  
                      ?_gagne 00BA                        _ADCON1 000FC1                        _ADRESH 000FC4  
                      _ANSELH 000F7F                   initTabVue@i 00BC                   initTabVue@j 00BE  
              __CFG_WDTEN$OFF 000000                  ?_rempliMines 00C8                        _SPBRGH 000FB0  
              __CFG_XINST$OFF 000000                lcd_initCGRam@i 00B9                lcd_initCGRam@j 00BA  
              getAnalog@canal 00B5              __end_of_lcd_busy 2574              __end_of_lcd_init 263C  
                      ___lmul 22E8                        ___wmul 263C                __CFG_STVREN$ON 000000  
                   ??___awmod 00C6                        _demine 18C6                        gagne@i 00C2  
                      gagne@j 00C4                        clear_0 2470                        clear_1 247C  
             ___awmod@divisor 00C4                     ??_deplace 00BD               ___awmod@counter 00C6  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8        __size_of_afficheTabVue 00AA             _lcd_resetSequence 23C0  
                  __accesstop 0060       __end_of__initialization 2482           _lcd_strobeEnableBit 26DA  
          ?_lcd_resetSequence 00B4                 ___rparam_used 000000           _lcd_effaceAffichage 26C4  
                __pidataBANK0 26E8                  __pidataBANK1 2574           ??_lcd_resetSequence 00B6  
               __end_of_gagne 1ECA          ?_lcd_strobeEnableBit 00B4            __size_of_getAnalog 002C  
        ?_lcd_effaceAffichage 00B4            __size_of_lcd_wrCom 006C                       ??_gagne 00BC  
   __end_of_lcd_resetSequence 242A      __size_of_lcd_lireDonnees 0006             _lcd_ecrireDonnees 26A8  
                  __pbssBANK0 0060                    __pbssBANK1 0100              ??_lcd_putMessage 00BD  
          ?_lcd_ecrireDonnees 00B4      __size_of_lcd_curseurHome 0008           ??_lcd_ecrireDonnees 00B4  
                     ?___lmul 00B4                       ?___wmul 00B4                       ?_demine 00C6  
               _afficheTabVue 212A                ___lmul@product 00BC   __size_of_enleveTuilesAutour 039C  
       ??_lcd_strobeEnableBit 00B4  __size_of_calculToucheCombien 0B34      __end_of_metToucheCombien 16E4  
                  _lcd_gotoXY 2276         ??_lcd_effaceAffichage 00B7                    _lcd_wrData 25B4  
   __end_of_lcd_ecrireDonnees 26C4                     ?_lcd_busy 00B4                     ?_lcd_init 00B4  
     lcd_ecrireDonnees@donnee 00B5                    _m_tabMines 0060             __end_of_getAnalog 2614  
        __size_of_rempliMines 01E2                       __Hparam 0000                       __Lparam 0000  
                  _initTabVue 1BD6             __end_of_lcd_wrCom 23C0                ?_afficheTabVue 00B4  
             __size_of___lmul 006C                       ___awmod 2078               __size_of___wmul 0028  
             __size_of_demine 018A                  __psmallconst 0600                       __pcinit 242A  
                  _init_serie 268A                     _ANSELbits 000F7E                       __ramtop 0600  
                     _deplace 1A50                       __ptext0 1ECA                       __ptext1 16E4  
                     __ptext2 2488                       __ptext3 22E8                       __ptext4 2078  
                     __ptext5 14EA                       __ptext6 061A                       __ptext7 2614  
                     __ptext8 23C0                       __ptext9 21D4         __end_of_lcd_ecritChar 2532  
             lcd_busy@adresse 00B5                    gagne@gagne 00C1              ___awmod@dividend 00C2  
               gagne@nb_Tuile 00BF                       demine@x 00CC                       demine@y 00C6  
            lcd_ecritChar@car 00B7                    ??_lcd_busy 00B4                    ??_lcd_init 00BB  
  __size_of_lcd_resetSequence 006A          end_of_initialization 2482         __end_of_lcd_initCGRam 2276  
                  demine@mine 00CB             ??_lcd_lireDonnees 00B4                     _RCSTAbits 000FAB  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc2 000FDE       __size_of_initialisation 0026             ??_lcd_curseurHome 00B7  
         lcd_ecritChar@posRam 00B8                     _PORTAbits 000F80                     _PORTBbits 000F81  
                 ?_lcd_gotoXY 00B7                     _TRISCbits 000F94                   ?_lcd_wrData 00B4  
  __size_of_lcd_ecrireDonnees 001C                     _TXSTAbits 000FAC               ??_afficheTabVue 00C3  
                 ?_initTabVue 00B4                __end_of___lmul 2354                __end_of___wmul 2664  
                 _BAUDCONbits 000FB8                   ?_init_serie 00B4                __end_of_demine 1A50  
         start_initialization 242A           _calculToucheCombien 061A           __size_of_lcd_gotoXY 0072  
                    ??___lmul 00BC                      ??___wmul 00B8                 rempliMines@nb 00C8  
         __size_of_lcd_wrData 0034                      ??_demine 00C7                   __pdataBANK0 00DD  
                 __pdataBANK1 0154              __CFG_LPT1OSC$OFF 000000          ?_calculToucheCombien 00BA  
               __pcstackBANK0 00B4             ?_metToucheCombien 00B4           __size_of_initTabVue 017A  
          ??_metToucheCombien 00C9             __size_of_lcd_busy 0042             __size_of_lcd_init 0028  
         __size_of_init_serie 001E             __CFG_CCP2MX$PORTC 000000                     _getAnalog 25E8  
 __end_of_lcd_strobeEnableBit 26E2                _initialisation 2664    __end_of_enleveTuilesAutour 14EA  
                    ?___awmod 00C2                      ?_deplace 00B9   __end_of_lcd_effaceAffichage 26D2  
                   _lcd_wrCom 2354         ??_calculToucheCombien 00BE                   __smallconst 0600  
           rempliMines@nbMine 00D3                __size_of_gagne 017A               _lcd_lireDonnees 26E2  
         lcd_wrData@caractere 00B6                 ??_rempliMines 00CA          metToucheCombien@mine 00CC  
             _lcd_curseurHome 26D2                ___wmul@product 00B8        __end_of_initialisation 268A  
                  ?_getAnalog 00B4              __CFG_WDTPS$32768 000000       __size_of_lcd_putMessage 00B4  
                  ?_lcd_wrCom 00B4                    _ADCON0bits 000FC2                    _ADCON2bits 000FC0  
           ___wmul@multiplier 00B4                  ??_lcd_gotoXY 00B8                  ??_lcd_wrData 00B6  
           lcd_wrCom@commande 00B6             ___lmul@multiplier 00B4                     copy_data0 243E  
                   copy_data1 245E                      __Hparam0 0000        __size_of_lcd_ecritChar 0054  
                    __Lparam0 0000               ?_initialisation 00B4           __end_of_rempliMines 18C6  
                ??_initTabVue 00BA            __CFG_BOREN$SBORDIS 000000                  rempliMines@i 00CD  
                rempliMines@j 00CF                  rempliMines@x 00D1                  rempliMines@y 00D2  
          __end_of_lcd_gotoXY 22E8            __end_of_lcd_wrData 25E8              __size_of___awmod 00B2  
                ??_init_serie 00B4        __size_of_lcd_initCGRam 00A2               lcd_putMessage@j 00C2  
            __size_of_deplace 0186       __end_of_lcd_lireDonnees 26E8                      _matCGRAM 0154  
     __end_of_lcd_curseurHome 26DA                      __ptext10 26D2                      __ptext11 2664  
                    __ptext20 212A                      __ptext12 268A                      __ptext21 1FC4  
                    __ptext13 1BD6                      __ptext30 263C                      __ptext22 24DE  
                    __ptext14 1D50                      __ptext23 25B4                      __ptext15 26C4  
                    __ptext24 2276                      __ptext16 1A50                      __ptext25 2354  
                    __ptext17 25E8                      __ptext26 26DA                      __ptext18 18C6  
                    __ptext27 26A8                      __ptext19 114E                      __ptext28 2532  
                    __ptext29 26E2             metToucheCombien@i 00CE             metToucheCombien@j 00D0  
                    _lcd_busy 2532                      _lcd_init 2614            __end_of_initTabVue 1D50  
            rempliMines@i_384 00D4              rempliMines@j_385 00D6      calculToucheCombien@ligne 00BA  
                    _m_tabVue 0100                 __size_of_main 00FA                 __size_of_rand 0056  
                 gagne@pMines 00BA            __end_of_init_serie 26A8                      deplace@x 00B9  
                    deplace@y 00BB                   ??_getAnalog 00B4         __end_of_afficheTabVue 21D4  
                 ??_lcd_wrCom 00B6                 _lcd_ecritChar 24DE                afficheTabVue@i 00C5  
               _lcd_initCGRam 21D4                   _rempliMines 16E4          calculToucheCombien@i 00C7  
        calculToucheCombien@j 00C5     __size_of_metToucheCombien 01FA                _lcd_putMessage 1FC4  
              ?_lcd_ecritChar 00B4              ?_lcd_lireDonnees 00B4            _enleveTuilesAutour 114E  
            ?_lcd_curseurHome 00B4                ?_lcd_initCGRam 00B4           ?_enleveTuilesAutour 00BA  
           __CFG_FOSC$INTIO67 000000                   main@NBMines 00D9        __end_of_lcd_putMessage 2078  
