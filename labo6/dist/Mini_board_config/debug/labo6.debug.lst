

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec 16 12:49:54 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K20
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec,minocg
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec,minocg
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec,minocg
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1,minocg
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec,minocg
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec,minocg
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec,minocg
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1,minocg
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,minocg
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2,minocg
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1,minocg
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1,minocg
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,minocg
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,minocg
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,minocg
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,minocg
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,minocg
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,minocg
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,minocg
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,minocg
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,minocg
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,minocg
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,minocg
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,minocg
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,minocg
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,minocg
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,minocg
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,minocg
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,minocg
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,minocg
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,minocg
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,minocg
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,minocg
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,minocg
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,minocg
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,minocg
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,minocg
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1,minocg
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    46                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
    47  0000                     
    48                           ; Version 2.10
    49                           ; Generated 31/07/2019 GMT
    50                           ; 
    51                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F45K20 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83                           	psect	idataBANK0
    84  00263A                     __pidataBANK0:
    85                           	opt callstack 0
    86                           
    87                           ;initializer for _randx
    88  00263A  0001               	dw	1
    89  00263C  0000               	dw	0
    90                           
    91                           	psect	idataBANK1
    92  0024C6                     __pidataBANK1:
    93                           	opt callstack 0
    94                           
    95                           ;initializer for _matCGRAM
    96  0024C6  08                 	db	8
    97  0024C7  04                 	db	4
    98  0024C8  04                 	db	4
    99  0024C9  0A                 	db	10
   100  0024CA  11                 	db	17
   101  0024CB  1F                 	db	31
   102  0024CC  11                 	db	17
   103  0024CD  00                 	db	0
   104  0024CE  00                 	db	0
   105  0024CF  0E                 	db	14
   106  0024D0  0E                 	db	14
   107  0024D1  0E                 	db	14
   108  0024D2  0E                 	db	14
   109  0024D3  0E                 	db	14
   110  0024D4  0E                 	db	14
   111  0024D5  00                 	db	0
   112  0024D6  00                 	db	0
   113  0024D7  00                 	db	0
   114  0024D8  04                 	db	4
   115  0024D9  0E                 	db	14
   116  0024DA  0E                 	db	14
   117  0024DB  0E                 	db	14
   118  0024DC  04                 	db	4
   119  0024DD  00                 	db	0
   120  0024DE  08                 	db	8
   121  0024DF  04                 	db	4
   122  0024E0  0E                 	db	14
   123  0024E1  11                 	db	17
   124  0024E2  1F                 	db	31
   125  0024E3  10                 	db	16
   126  0024E4  0E                 	db	14
   127  0024E5  00                 	db	0
   128  0024E6  08                 	db	8
   129  0024E7  04                 	db	4
   130  0024E8  1F                 	db	31
   131  0024E9  10                 	db	16
   132  0024EA  1E                 	db	30
   133  0024EB  10                 	db	16
   134  0024EC  1F                 	db	31
   135  0024ED  00                 	db	0
   136  0024EE  04                 	db	4
   137  0024EF  0A                 	db	10
   138  0024F0  0E                 	db	14
   139  0024F1  11                 	db	17
   140  0024F2  1F                 	db	31
   141  0024F3  10                 	db	16
   142  0024F4  0E                 	db	14
   143  0024F5  00                 	db	0
   144  0024F6  08                 	db	8
   145  0024F7  04                 	db	4
   146  0024F8  0E                 	db	14
   147  0024F9  01                 	db	1
   148  0024FA  0F                 	db	15
   149  0024FB  11                 	db	17
   150  0024FC  0F                 	db	15
   151  0024FD  00                 	db	0
   152  0024FE  04                 	db	4
   153  0024FF  0A                 	db	10
   154  002500  0E                 	db	14
   155  002501  01                 	db	1
   156  002502  0F                 	db	15
   157  002503  11                 	db	17
   158  002504  0F                 	db	15
   159  002505  00                 	db	0
   160  0000                     _PORTAbits	set	3968
   161  0000                     _PORTD	set	3971
   162  0000                     _TRISCbits	set	3988
   163  0000                     _ANSELbits	set	3966
   164  0000                     _TRISA	set	3986
   165  0000                     _ANSEL	set	3966
   166  0000                     _TRISB	set	3987
   167  0000                     _ANSELH	set	3967
   168  0000                     _TRISD	set	3989
   169  0000                     _PORTBbits	set	3969
   170  0000                     _RCREG	set	4014
   171  0000                     _TXREG	set	4013
   172  0000                     _RCSTAbits	set	4011
   173  0000                     _TXSTAbits	set	4012
   174  0000                     _BAUDCONbits	set	4024
   175  0000                     _SPBRG	set	4015
   176  0000                     _SPBRGH	set	4016
   177  0000                     _ADRESH	set	4036
   178  0000                     _ADCON2bits	set	4032
   179  0000                     _ADCON1	set	4033
   180  0000                     _ADCON0bits	set	4034
   181  0000                     _RCIF	set	31989
   182                           
   183                           	psect	smallconst
   184  000600                     __psmallconst:
   185                           	opt callstack 0
   186  000600  00                 	db	0
   187  000601                     STR_1:
   188                           
   189                           ; BSR set to: 0
   190  000601  4C                 	db	76	;'L'
   191  000602  41                 	db	65	;'A'
   192  000603  42                 	db	66	;'B'
   193  000604  36                 	db	54	;'6'
   194  000605  20                 	db	32
   195  000606  59                 	db	89	;'Y'
   196  000607  6F                 	db	111	;'o'
   197  000608  75                 	db	117	;'u'
   198  000609  6C                 	db	108	;'l'
   199  00060A  69                 	db	105	;'i'
   200  00060B  61                 	db	97	;'a'
   201  00060C  6E                 	db	110	;'n'
   202  00060D  20                 	db	32
   203  00060E  48                 	db	72	;'H'
   204  00060F  6F                 	db	111	;'o'
   205  000610  75                 	db	117	;'u'
   206  000611  65                 	db	101	;'e'
   207  000612  68                 	db	104	;'h'
   208  000613  6F                 	db	111	;'o'
   209  000614  75                 	db	117	;'u'
   210  000615  6E                 	db	110	;'n'
   211  000616  6F                 	db	111	;'o'
   212  000617  75                 	db	117	;'u'
   213  000618  00                 	db	0
   214                           
   215                           ; #config settings
   216  000619  00                 	db	0	; dummy byte at the end
   217  0000                     
   218                           	psect	cinit
   219  00237C                     __pcinit:
   220                           	opt callstack 0
   221  00237C                     start_initialization:
   222                           	opt callstack 0
   223  00237C                     __initialization:
   224                           	opt callstack 0
   225                           
   226                           ; Initialize objects allocated to BANK1 (64 bytes)
   227                           ; load TBLPTR registers with __pidataBANK1
   228  00237C  0EC6               	movlw	low __pidataBANK1
   229  00237E  6EF6               	movwf	tblptrl,c
   230  002380  0E24               	movlw	high __pidataBANK1
   231  002382  6EF7               	movwf	tblptrh,c
   232  002384  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   233  002386  6EF8               	movwf	tblptru,c
   234  002388  EE01  F054         	lfsr	0,__pdataBANK1
   235  00238C  EE10 F040          	lfsr	1,64
   236  002390                     copy_data0:
   237  002390  0009               	tblrd		*+
   238  002392  CFF5 FFEE          	movff	tablat,postinc0
   239  002396  50E5               	movf	postdec1,w,c
   240  002398  50E1               	movf	fsr1l,w,c
   241  00239A  E1FA               	bnz	copy_data0
   242                           
   243                           ; Initialize objects allocated to BANK0 (4 bytes)
   244                           ; load TBLPTR registers with __pidataBANK0
   245  00239C  0E3A               	movlw	low __pidataBANK0
   246  00239E  6EF6               	movwf	tblptrl,c
   247  0023A0  0E26               	movlw	high __pidataBANK0
   248  0023A2  6EF7               	movwf	tblptrh,c
   249  0023A4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   250  0023A6  6EF8               	movwf	tblptru,c
   251  0023A8  EE00  F0DD         	lfsr	0,__pdataBANK0
   252  0023AC  EE10 F004          	lfsr	1,4
   253  0023B0                     copy_data1:
   254  0023B0  0009               	tblrd		*+
   255  0023B2  CFF5 FFEE          	movff	tablat,postinc0
   256  0023B6  50E5               	movf	postdec1,w,c
   257  0023B8  50E1               	movf	fsr1l,w,c
   258  0023BA  E1FA               	bnz	copy_data1
   259                           
   260                           ; Clear objects allocated to BANK1 (84 bytes)
   261  0023BC  EE01  F000         	lfsr	0,__pbssBANK1
   262  0023C0  0E54               	movlw	84
   263  0023C2                     clear_0:
   264  0023C2  6AEE               	clrf	postinc0,c
   265  0023C4  06E8               	decf	wreg,f,c
   266  0023C6  E1FD               	bnz	clear_0
   267                           
   268                           ; Clear objects allocated to BANK0 (84 bytes)
   269  0023C8  EE00  F060         	lfsr	0,__pbssBANK0
   270  0023CC  0E54               	movlw	84
   271  0023CE                     clear_1:
   272  0023CE  6AEE               	clrf	postinc0,c
   273  0023D0  06E8               	decf	wreg,f,c
   274  0023D2  E1FD               	bnz	clear_1
   275  0023D4                     end_of_initialization:
   276                           	opt callstack 0
   277  0023D4                     __end_of__initialization:
   278                           	opt callstack 0
   279  0023D4  0100               	movlb	0
   280  0023D6  EF0E  F00F         	goto	_main	;jump to C main() function
   281                           
   282                           	psect	bssBANK0
   283  000060                     __pbssBANK0:
   284                           	opt callstack 0
   285  000060                     _m_tabMines:
   286                           	opt callstack 0
   287  000060                     	ds	84
   288                           
   289                           	psect	dataBANK0
   290  0000DD                     __pdataBANK0:
   291                           	opt callstack 0
   292  0000DD                     _randx:
   293                           	opt callstack 0
   294  0000DD                     	ds	4
   295                           
   296                           	psect	bssBANK1
   297  000100                     __pbssBANK1:
   298                           	opt callstack 0
   299  000100                     _m_tabVue:
   300                           	opt callstack 0
   301  000100                     	ds	84
   302                           
   303                           	psect	dataBANK1
   304  000154                     __pdataBANK1:
   305                           	opt callstack 0
   306  000154                     _matCGRAM:
   307                           	opt callstack 0
   308  000154                     	ds	64
   309                           
   310                           	psect	cstackBANK0
   311  0000B4                     __pcstackBANK0:
   312                           	opt callstack 0
   313  0000B4                     ??_getAnalog:
   314  0000B4                     ??_lcd_ecrireDonnees:
   315  0000B4                     ??_lcd_busy:
   316  0000B4                     ?___wmul:
   317                           	opt callstack 0
   318  0000B4                     ?___lmul:
   319                           	opt callstack 0
   320  0000B4                     ___wmul@multiplier:
   321                           	opt callstack 0
   322  0000B4                     ___lmul@multiplier:
   323                           	opt callstack 0
   324                           
   325                           ; 4 bytes @ 0x0
   326  0000B4                     	ds	1
   327  0000B5                     getAnalog@canal:
   328                           	opt callstack 0
   329  0000B5                     lcd_ecrireDonnees@donnee:
   330                           	opt callstack 0
   331  0000B5                     lcd_busy@adresse:
   332                           	opt callstack 0
   333                           
   334                           ; 1 bytes @ 0x1
   335  0000B5                     	ds	1
   336  0000B6                     ??_lcd_resetSequence:
   337  0000B6                     lcd_wrCom@commande:
   338                           	opt callstack 0
   339  0000B6                     lcd_wrData@caractere:
   340                           	opt callstack 0
   341  0000B6                     ___wmul@multiplicand:
   342                           	opt callstack 0
   343                           
   344                           ; 2 bytes @ 0x2
   345  0000B6                     	ds	1
   346  0000B7                     ??_lcd_initCGRam:
   347  0000B7                     lcd_gotoXY@y:
   348                           	opt callstack 0
   349  0000B7                     lcd_ecritChar@car:
   350                           	opt callstack 0
   351                           
   352                           ; 1 bytes @ 0x3
   353  0000B7                     	ds	1
   354  0000B8                     lcd_gotoXY@x:
   355                           	opt callstack 0
   356  0000B8                     lcd_ecritChar@posRam:
   357                           	opt callstack 0
   358  0000B8                     ___wmul@product:
   359                           	opt callstack 0
   360  0000B8                     ___lmul@multiplicand:
   361                           	opt callstack 0
   362                           
   363                           ; 4 bytes @ 0x4
   364  0000B8                     	ds	1
   365  0000B9                     lcd_initCGRam@i:
   366                           	opt callstack 0
   367  0000B9                     deplace@x:
   368                           	opt callstack 0
   369                           
   370                           ; 2 bytes @ 0x5
   371  0000B9                     	ds	1
   372  0000BA                     ??_initTabVue:
   373  0000BA                     enleveTuilesAutour@y:
   374                           	opt callstack 0
   375  0000BA                     lcd_initCGRam@j:
   376                           	opt callstack 0
   377  0000BA                     calculToucheCombien@ligne:
   378                           	opt callstack 0
   379  0000BA                     gagne@pMines:
   380                           	opt callstack 0
   381  0000BA                     lcd_putMessage@chaine:
   382                           	opt callstack 0
   383                           
   384                           ; 3 bytes @ 0x6
   385  0000BA                     	ds	1
   386  0000BB                     ??_enleveTuilesAutour:
   387  0000BB                     deplace@y:
   388                           	opt callstack 0
   389                           
   390                           ; 2 bytes @ 0x7
   391  0000BB                     	ds	1
   392  0000BC                     ??_gagne:
   393  0000BC                     initTabVue@i:
   394                           	opt callstack 0
   395  0000BC                     calculToucheCombien@colonne:
   396                           	opt callstack 0
   397  0000BC                     ___lmul@product:
   398                           	opt callstack 0
   399                           
   400                           ; 4 bytes @ 0x8
   401  0000BC                     	ds	1
   402  0000BD                     ??_lcd_putMessage:
   403  0000BD                     ??_deplace:
   404                           
   405                           ; 1 bytes @ 0x9
   406  0000BD                     	ds	1
   407  0000BE                     ??_calculToucheCombien:
   408  0000BE                     initTabVue@j:
   409                           	opt callstack 0
   410                           
   411                           ; 2 bytes @ 0xA
   412  0000BE                     	ds	1
   413  0000BF                     enleveTuilesAutour@mine:
   414                           	opt callstack 0
   415  0000BF                     gagne@nb_Tuile:
   416                           	opt callstack 0
   417                           
   418                           ; 2 bytes @ 0xB
   419  0000BF                     	ds	1
   420  0000C0                     ?_rand:
   421                           	opt callstack 0
   422                           
   423                           ; 2 bytes @ 0xC
   424  0000C0                     	ds	1
   425  0000C1                     enleveTuilesAutour@x:
   426                           	opt callstack 0
   427  0000C1                     gagne@gagne:
   428                           	opt callstack 0
   429                           
   430                           ; 1 bytes @ 0xD
   431  0000C1                     	ds	1
   432  0000C2                     ?___awmod:
   433                           	opt callstack 0
   434  0000C2                     lcd_putMessage@j:
   435                           	opt callstack 0
   436  0000C2                     enleveTuilesAutour@j:
   437                           	opt callstack 0
   438  0000C2                     gagne@i:
   439                           	opt callstack 0
   440  0000C2                     ___awmod@dividend:
   441                           	opt callstack 0
   442                           
   443                           ; 2 bytes @ 0xE
   444  0000C2                     	ds	1
   445  0000C3                     ??_afficheTabVue:
   446  0000C3                     calculToucheCombien@nb_mine:
   447                           	opt callstack 0
   448                           
   449                           ; 2 bytes @ 0xF
   450  0000C3                     	ds	1
   451  0000C4                     enleveTuilesAutour@i:
   452                           	opt callstack 0
   453  0000C4                     gagne@j:
   454                           	opt callstack 0
   455  0000C4                     ___awmod@divisor:
   456                           	opt callstack 0
   457                           
   458                           ; 2 bytes @ 0x10
   459  0000C4                     	ds	1
   460  0000C5                     calculToucheCombien@j:
   461                           	opt callstack 0
   462  0000C5                     afficheTabVue@i:
   463                           	opt callstack 0
   464                           
   465                           ; 2 bytes @ 0x11
   466  0000C5                     	ds	1
   467  0000C6                     demine@y:
   468                           	opt callstack 0
   469  0000C6                     ___awmod@counter:
   470                           	opt callstack 0
   471                           
   472                           ; 1 bytes @ 0x12
   473  0000C6                     	ds	1
   474  0000C7                     ??_demine:
   475  0000C7                     ___awmod@sign:
   476                           	opt callstack 0
   477  0000C7                     calculToucheCombien@i:
   478                           	opt callstack 0
   479                           
   480                           ; 2 bytes @ 0x13
   481  0000C7                     	ds	1
   482  0000C8                     rempliMines@nb:
   483                           	opt callstack 0
   484                           
   485                           ; 2 bytes @ 0x14
   486  0000C8                     	ds	1
   487  0000C9                     ??_metToucheCombien:
   488                           
   489                           ; 1 bytes @ 0x15
   490  0000C9                     	ds	1
   491  0000CA                     ??_rempliMines:
   492                           
   493                           ; 1 bytes @ 0x16
   494  0000CA                     	ds	1
   495  0000CB                     demine@mine:
   496                           	opt callstack 0
   497                           
   498                           ; 1 bytes @ 0x17
   499  0000CB                     	ds	1
   500  0000CC                     demine@x:
   501                           	opt callstack 0
   502  0000CC                     metToucheCombien@mine:
   503                           	opt callstack 0
   504                           
   505                           ; 2 bytes @ 0x18
   506  0000CC                     	ds	1
   507  0000CD                     rempliMines@i:
   508                           	opt callstack 0
   509                           
   510                           ; 2 bytes @ 0x19
   511  0000CD                     	ds	1
   512  0000CE                     metToucheCombien@i:
   513                           	opt callstack 0
   514                           
   515                           ; 2 bytes @ 0x1A
   516  0000CE                     	ds	1
   517  0000CF                     rempliMines@j:
   518                           	opt callstack 0
   519                           
   520                           ; 2 bytes @ 0x1B
   521  0000CF                     	ds	1
   522  0000D0                     metToucheCombien@j:
   523                           	opt callstack 0
   524                           
   525                           ; 2 bytes @ 0x1C
   526  0000D0                     	ds	1
   527  0000D1                     rempliMines@x:
   528                           	opt callstack 0
   529                           
   530                           ; 1 bytes @ 0x1D
   531  0000D1                     	ds	1
   532  0000D2                     rempliMines@y:
   533                           	opt callstack 0
   534                           
   535                           ; 1 bytes @ 0x1E
   536  0000D2                     	ds	1
   537  0000D3                     rempliMines@nbMine:
   538                           	opt callstack 0
   539                           
   540                           ; 1 bytes @ 0x1F
   541  0000D3                     	ds	1
   542  0000D4                     rempliMines@i_384:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x20
   546  0000D4                     	ds	2
   547  0000D6                     rempliMines@j_385:
   548                           	opt callstack 0
   549                           
   550                           ; 2 bytes @ 0x22
   551  0000D6                     	ds	2
   552  0000D8                     ??_main:
   553                           
   554                           ; 1 bytes @ 0x24
   555  0000D8                     	ds	1
   556  0000D9                     main@NBMines:
   557                           	opt callstack 0
   558                           
   559                           ; 2 bytes @ 0x25
   560  0000D9                     	ds	2
   561  0000DB                     main@x:
   562                           	opt callstack 0
   563                           
   564                           ; 1 bytes @ 0x27
   565  0000DB                     	ds	1
   566  0000DC                     main@y:
   567                           	opt callstack 0
   568                           
   569                           ; 1 bytes @ 0x28
   570  0000DC                     	ds	1
   571                           
   572 ;;
   573 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   574 ;;
   575 ;; *************** function _main *****************
   576 ;; Defined at:
   577 ;;		line 51 in file "main.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  NBMines         2   37[BANK0 ] int 
   582 ;;  y               1   40[BANK0 ] unsigned char 
   583 ;;  x               1   39[BANK0 ] unsigned char 
   584 ;; Return value:  Size  Location     Type
   585 ;;                  1    wreg      void 
   586 ;; Registers used:
   587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   588 ;; Tracked objects:
   589 ;;		On entry : 0/0
   590 ;;		On exit  : 0/0
   591 ;;		Unchanged: 0/0
   592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   593 ;;      Params:         0       0       0       0       0       0       0
   594 ;;      Locals:         0       4       0       0       0       0       0
   595 ;;      Temps:          0       1       0       0       0       0       0
   596 ;;      Totals:         0       5       0       0       0       0       0
   597 ;;Total ram usage:        5 bytes
   598 ;; Hardware stack levels required when called:    6
   599 ;; This function calls:
   600 ;;		_afficheTabVue
   601 ;;		_demine
   602 ;;		_deplace
   603 ;;		_gagne
   604 ;;		_initTabVue
   605 ;;		_init_serie
   606 ;;		_initialisation
   607 ;;		_lcd_curseurHome
   608 ;;		_lcd_init
   609 ;;		_lcd_putMessage
   610 ;;		_metToucheCombien
   611 ;;		_rempliMines
   612 ;; This function is called by:
   613 ;;		Startup code after reset
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           	psect	text0
   618  001E1C                     __ptext0:
   619                           	opt callstack 0
   620  001E1C                     _main:
   621                           	opt callstack 25
   622  001E1C                     
   623                           ;main.c: 53: initialisation();
   624  001E1C  ECDB  F012         	call	_initialisation	;wreg free
   625                           
   626                           ;main.c: 54: init_serie();
   627  001E20  ECEE  F012         	call	_init_serie	;wreg free
   628  001E24                     
   629                           ;main.c: 55: lcd_init();
   630  001E24  ECB3  F012         	call	_lcd_init	;wreg free
   631  001E28                     
   632                           ;main.c: 56: initTabVue();
   633  001E28  EC94  F00D         	call	_initTabVue	;wreg free
   634  001E2C                     
   635                           ;main.c: 57: lcd_curseurHome();
   636  001E2C  EC12  F013         	call	_lcd_curseurHome	;wreg free
   637  001E30                     
   638                           ;main.c: 59: int NBMines=12;
   639  001E30  0E00               	movlw	0
   640  001E32  0100               	movlb	0	; force () banked
   641  001E34  6FDA               	movwf	(main@NBMines+1)& (0+255),b
   642  001E36  0E0C               	movlw	12
   643  001E38  6FD9               	movwf	main@NBMines& (0+255),b
   644  001E3A                     
   645                           ; BSR set to: 0
   646                           ;main.c: 60: char x =(20/2);
   647  001E3A  0E0A               	movlw	10
   648  001E3C  0100               	movlb	0	; force () banked
   649  001E3E  6FDB               	movwf	main@x& (0+255),b
   650  001E40                     
   651                           ; BSR set to: 0
   652                           ;main.c: 61: char y = (4/2);
   653  001E40  0E02               	movlw	2
   654  001E42  0100               	movlb	0	; force () banked
   655  001E44  6FDC               	movwf	main@y& (0+255),b
   656  001E46                     
   657                           ; BSR set to: 0
   658                           ;main.c: 63: lcd_putMessage("LAB6 Youlian Houehounou");
   659  001E46  0E01               	movlw	low STR_1
   660  001E48  0100               	movlb	0	; force () banked
   661  001E4A  6FBA               	movwf	lcd_putMessage@chaine& (0+255),b
   662  001E4C  0E06               	movlw	high STR_1
   663  001E4E  6FBB               	movwf	(lcd_putMessage@chaine+1)& (0+255),b
   664  001E50  51BA               	movf	lcd_putMessage@chaine& (0+255),w,b
   665  001E52  11BB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
   666  001E54  A4D8               	btfss	status,2,c
   667  001E56  0E00               	movlw	low (__mediumconst shr (0+16))
   668  001E58  6FBC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
   669  001E5A  EC8B  F00F         	call	_lcd_putMessage	;wreg free
   670  001E5E                     
   671                           ;main.c: 64: rempliMines(NBMines);
   672  001E5E  C0D9  F0C8         	movff	main@NBMines,rempliMines@nb
   673  001E62  C0DA  F0C9         	movff	main@NBMines+1,rempliMines@nb+1
   674  001E66  EC1B  F00B         	call	_rempliMines	;wreg free
   675  001E6A                     
   676                           ;main.c: 65: metToucheCombien();
   677  001E6A  EC1E  F00A         	call	_metToucheCombien	;wreg free
   678  001E6E                     
   679                           ;main.c: 66: afficheTabVue();
   680  001E6E  EC3E  F010         	call	_afficheTabVue	;wreg free
   681  001E72                     l2665:
   682                           
   683                           ;main.c: 68: {;main.c: 69: deplace(&x,&y);
   684  001E72  0EDB               	movlw	low main@x
   685  001E74  0100               	movlb	0	; force () banked
   686  001E76  6FB9               	movwf	deplace@x& (0+255),b
   687  001E78  0E00               	movlw	high main@x
   688  001E7A  6FBA               	movwf	(deplace@x+1)& (0+255),b
   689  001E7C  0EDC               	movlw	low main@y
   690  001E7E  0100               	movlb	0	; force () banked
   691  001E80  6FBB               	movwf	deplace@y& (0+255),b
   692  001E82  0E00               	movlw	high main@y
   693  001E84  6FBC               	movwf	(deplace@y+1)& (0+255),b
   694  001E86  ECD1  F00C         	call	_deplace	;wreg free
   695  001E8A                     
   696                           ;main.c: 70: if (PORTBbits.RB1 ==0)
   697  001E8A  B281               	btfsc	129,1,c	;volatile
   698  001E8C  EF4A  F00F         	goto	u2551
   699  001E90  EF4C  F00F         	goto	u2550
   700  001E94                     u2551:
   701  001E94  EF7E  F00F         	goto	l2679
   702  001E98                     u2550:
   703  001E98                     
   704                           ;main.c: 71: {;main.c: 72: if((demine(x,y)==0)||(gagne(&NBMines)==1))
   705  001E98  C0DC  F0C6         	movff	main@y,demine@y
   706  001E9C  0100               	movlb	0	; force () banked
   707  001E9E  51DB               	movf	main@x& (0+255),w,b
   708  001EA0  EC0C  F00C         	call	_demine
   709  001EA4  0900               	iorlw	0
   710  001EA6  B4D8               	btfsc	status,2,c
   711  001EA8  EF58  F00F         	goto	u2561
   712  001EAC  EF5A  F00F         	goto	u2560
   713  001EB0                     u2561:
   714  001EB0  EF69  F00F         	goto	l2673
   715  001EB4                     u2560:
   716  001EB4  0ED9               	movlw	low main@NBMines
   717  001EB6  0100               	movlb	0	; force () banked
   718  001EB8  6FBA               	movwf	gagne@pMines& (0+255),b
   719  001EBA  0E00               	movlw	high main@NBMines
   720  001EBC  6FBB               	movwf	(gagne@pMines+1)& (0+255),b
   721  001EBE  EC51  F00E         	call	_gagne	;wreg free
   722  001EC2  06E8               	decf	wreg,f,c
   723  001EC4  A4D8               	btfss	status,2,c
   724  001EC6  EF67  F00F         	goto	u2571
   725  001ECA  EF69  F00F         	goto	u2570
   726  001ECE                     u2571:
   727  001ECE  EF7E  F00F         	goto	l2679
   728  001ED2                     u2570:
   729  001ED2                     l2673:
   730                           
   731                           ;main.c: 73: {;main.c: 74: afficheTabVue();
   732  001ED2  EC3E  F010         	call	_afficheTabVue	;wreg free
   733  001ED6                     l74:
   734  001ED6  B281               	btfsc	129,1,c	;volatile
   735  001ED8  EF70  F00F         	goto	u2581
   736  001EDC  EF72  F00F         	goto	u2580
   737  001EE0                     u2581:
   738  001EE0  EF6B  F00F         	goto	l74
   739  001EE4                     u2580:
   740  001EE4                     
   741                           ;main.c: 76: initTabVue();
   742  001EE4  EC94  F00D         	call	_initTabVue	;wreg free
   743                           
   744                           ;main.c: 77: rempliMines(NBMines);
   745  001EE8  C0D9  F0C8         	movff	main@NBMines,rempliMines@nb
   746  001EEC  C0DA  F0C9         	movff	main@NBMines+1,rempliMines@nb+1
   747  001EF0  EC1B  F00B         	call	_rempliMines	;wreg free
   748                           
   749                           ;main.c: 78: metToucheCombien();
   750  001EF4  EC1E  F00A         	call	_metToucheCombien	;wreg free
   751  001EF8                     
   752                           ;main.c: 79: afficheTabVue();
   753  001EF8  EC3E  F010         	call	_afficheTabVue	;wreg free
   754  001EFC                     l2679:
   755                           
   756                           ;main.c: 80: };main.c: 81: };main.c: 82: _delay((unsigned long)((100)*(1000000/4000.0)))
      +                          ;
   757  001EFC  0E21               	movlw	33
   758  001EFE  0100               	movlb	0	; force () banked
   759  001F00  6FD8               	movwf	??_main& (0+255),b
   760  001F02  0E76               	movlw	118
   761  001F04                     u2597:
   762  001F04  2EE8               	decfsz	wreg,f,c
   763  001F06  D7FE               	bra	u2597
   764  001F08  2FD8               	decfsz	??_main& (0+255),f,b
   765  001F0A  D7FC               	bra	u2597
   766  001F0C  F000               	nop	
   767  001F0E  EF39  F00F         	goto	l2665
   768  001F12  EF00  F000         	goto	start
   769  001F16                     __end_of_main:
   770                           	opt callstack 0
   771                           
   772 ;; *************** function _rempliMines *****************
   773 ;; Defined at:
   774 ;;		line 161 in file "main.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;  nb              2   20[BANK0 ] int 
   777 ;; Auto vars:     Size  Location     Type
   778 ;;  j               2   34[BANK0 ] int 
   779 ;;  i               2   32[BANK0 ] int 
   780 ;;  j               2   27[BANK0 ] int 
   781 ;;  i               2   25[BANK0 ] int 
   782 ;;  nbMine          1   31[BANK0 ] unsigned char 
   783 ;;  y               1   30[BANK0 ] unsigned char 
   784 ;;  x               1   29[BANK0 ] unsigned char 
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   794 ;;      Params:         0       2       0       0       0       0       0
   795 ;;      Locals:         0      11       0       0       0       0       0
   796 ;;      Temps:          0       3       0       0       0       0       0
   797 ;;      Totals:         0      16       0       0       0       0       0
   798 ;;Total ram usage:       16 bytes
   799 ;; Hardware stack levels used:    1
   800 ;; Hardware stack levels required when called:    2
   801 ;; This function calls:
   802 ;;		___awmod
   803 ;;		___wmul
   804 ;;		_rand
   805 ;; This function is called by:
   806 ;;		_main
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text1
   811  001636                     __ptext1:
   812                           	opt callstack 0
   813  001636                     _rempliMines:
   814                           	opt callstack 28
   815  001636                     
   816                           ;main.c: 163: int i=0;
   817  001636  0E00               	movlw	0
   818  001638  0100               	movlb	0	; force () banked
   819  00163A  6FCE               	movwf	(rempliMines@i+1)& (0+255),b
   820  00163C  0E00               	movlw	0
   821  00163E  6FCD               	movwf	rempliMines@i& (0+255),b
   822                           
   823                           ;main.c: 164: int j=0;
   824  001640  0E00               	movlw	0
   825  001642  0100               	movlb	0	; force () banked
   826  001644  6FD0               	movwf	(rempliMines@j+1)& (0+255),b
   827  001646  0E00               	movlw	0
   828  001648  6FCF               	movwf	rempliMines@j& (0+255),b
   829                           
   830                           ;main.c: 165: char x =0;
   831  00164A  0E00               	movlw	0
   832  00164C  0100               	movlb	0	; force () banked
   833  00164E  6FD1               	movwf	rempliMines@x& (0+255),b
   834                           
   835                           ;main.c: 166: char y =0;
   836  001650  0E00               	movlw	0
   837  001652  0100               	movlb	0	; force () banked
   838  001654  6FD2               	movwf	rempliMines@y& (0+255),b
   839                           
   840                           ;main.c: 167: char nbMine =0;
   841  001656  0E00               	movlw	0
   842  001658  0100               	movlb	0	; force () banked
   843  00165A  6FD3               	movwf	rempliMines@nbMine& (0+255),b
   844                           
   845                           ;main.c: 169: for (int i=0;i<4;i++)
   846  00165C  0E00               	movlw	0
   847  00165E  0100               	movlb	0	; force () banked
   848  001660  6FD5               	movwf	(rempliMines@i_384+1)& (0+255),b
   849  001662  0E00               	movlw	0
   850  001664  6FD4               	movwf	rempliMines@i_384& (0+255),b
   851  001666                     
   852                           ; BSR set to: 0
   853  001666  0100               	movlb	0	; force () banked
   854  001668  BFD5               	btfsc	(rempliMines@i_384+1)& (0+255),7,b
   855  00166A  EF40  F00B         	goto	u2221
   856  00166E  51D5               	movf	(rempliMines@i_384+1)& (0+255),w,b
   857  001670  E109               	bnz	u2220
   858  001672  0E04               	movlw	4
   859  001674  5DD4               	subwf	rempliMines@i_384& (0+255),w,b
   860  001676  A0D8               	btfss	status,0,c
   861  001678  EF40  F00B         	goto	u2221
   862  00167C  EF42  F00B         	goto	u2220
   863  001680                     u2221:
   864  001680  EF44  F00B         	goto	l2473
   865  001684                     u2220:
   866  001684  EFF6  F00B         	goto	l2497
   867  001688                     l2473:
   868                           
   869                           ; BSR set to: 0
   870                           ;main.c: 170: {;main.c: 171: for (int j=0;j<20;j++)
   871  001688  0E00               	movlw	0
   872  00168A  0100               	movlb	0	; force () banked
   873  00168C  6FD7               	movwf	(rempliMines@j_385+1)& (0+255),b
   874  00168E  0E00               	movlw	0
   875  001690  6FD6               	movwf	rempliMines@j_385& (0+255),b
   876  001692                     
   877                           ; BSR set to: 0
   878  001692  0100               	movlb	0	; force () banked
   879  001694  BFD7               	btfsc	(rempliMines@j_385+1)& (0+255),7,b
   880  001696  EF56  F00B         	goto	u2231
   881  00169A  51D7               	movf	(rempliMines@j_385+1)& (0+255),w,b
   882  00169C  E109               	bnz	u2230
   883  00169E  0E14               	movlw	20
   884  0016A0  5DD6               	subwf	rempliMines@j_385& (0+255),w,b
   885  0016A2  A0D8               	btfss	status,0,c
   886  0016A4  EF56  F00B         	goto	u2231
   887  0016A8  EF58  F00B         	goto	u2230
   888  0016AC                     u2231:
   889  0016AC  EF5A  F00B         	goto	l2479
   890  0016B0                     u2230:
   891  0016B0  EF90  F00B         	goto	l2485
   892  0016B4                     l2479:
   893                           
   894                           ; BSR set to: 0
   895                           ;main.c: 172: {;main.c: 173: m_tabMines[i][j]=32;
   896  0016B4  C0D4  F0B4         	movff	rempliMines@i_384,___wmul@multiplier
   897  0016B8  C0D5  F0B5         	movff	rempliMines@i_384+1,___wmul@multiplier+1
   898  0016BC  0E00               	movlw	0
   899  0016BE  0100               	movlb	0	; force () banked
   900  0016C0  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
   901  0016C2  0E15               	movlw	21
   902  0016C4  6FB6               	movwf	___wmul@multiplicand& (0+255),b
   903  0016C6  ECC7  F012         	call	___wmul	;wreg free
   904  0016CA  0E60               	movlw	low _m_tabMines
   905  0016CC  0100               	movlb	0	; force () banked
   906  0016CE  6FCA               	movwf	??_rempliMines& (0+255),b
   907  0016D0  0E00               	movlw	high _m_tabMines
   908  0016D2  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
   909  0016D4  0100               	movlb	0	; force () banked
   910  0016D6  51B4               	movf	?___wmul& (0+255),w,b
   911  0016D8  0100               	movlb	0	; force () banked
   912  0016DA  27CA               	addwf	??_rempliMines& (0+255),f,b
   913  0016DC  0100               	movlb	0	; force () banked
   914  0016DE  51B5               	movf	(?___wmul+1)& (0+255),w,b
   915  0016E0  0100               	movlb	0	; force () banked
   916  0016E2  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
   917  0016E4  0100               	movlb	0	; force () banked
   918  0016E6  51D6               	movf	rempliMines@j_385& (0+255),w,b
   919  0016E8  0100               	movlb	0	; force () banked
   920  0016EA  25CA               	addwf	??_rempliMines& (0+255),w,b
   921  0016EC  6ED9               	movwf	fsr2l,c
   922  0016EE  0100               	movlb	0	; force () banked
   923  0016F0  51D7               	movf	(rempliMines@j_385+1)& (0+255),w,b
   924  0016F2  0100               	movlb	0	; force () banked
   925  0016F4  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
   926  0016F6  6EDA               	movwf	fsr2h,c
   927  0016F8  0E20               	movlw	32
   928  0016FA  6EDF               	movwf	indf2,c
   929  0016FC                     
   930                           ; BSR set to: 0
   931  0016FC  0100               	movlb	0	; force () banked
   932  0016FE  4BD6               	infsnz	rempliMines@j_385& (0+255),f,b
   933  001700  2BD7               	incf	(rempliMines@j_385+1)& (0+255),f,b
   934  001702                     
   935                           ; BSR set to: 0
   936  001702  0100               	movlb	0	; force () banked
   937  001704  BFD7               	btfsc	(rempliMines@j_385+1)& (0+255),7,b
   938  001706  EF8E  F00B         	goto	u2241
   939  00170A  51D7               	movf	(rempliMines@j_385+1)& (0+255),w,b
   940  00170C  E109               	bnz	u2240
   941  00170E  0E14               	movlw	20
   942  001710  5DD6               	subwf	rempliMines@j_385& (0+255),w,b
   943  001712  A0D8               	btfss	status,0,c
   944  001714  EF8E  F00B         	goto	u2241
   945  001718  EF90  F00B         	goto	u2240
   946  00171C                     u2241:
   947  00171C  EF5A  F00B         	goto	l2479
   948  001720                     u2240:
   949  001720                     l2485:
   950                           
   951                           ; BSR set to: 0
   952  001720  0100               	movlb	0	; force () banked
   953  001722  4BD4               	infsnz	rempliMines@i_384& (0+255),f,b
   954  001724  2BD5               	incf	(rempliMines@i_384+1)& (0+255),f,b
   955  001726                     
   956                           ; BSR set to: 0
   957  001726  0100               	movlb	0	; force () banked
   958  001728  BFD5               	btfsc	(rempliMines@i_384+1)& (0+255),7,b
   959  00172A  EFA0  F00B         	goto	u2251
   960  00172E  51D5               	movf	(rempliMines@i_384+1)& (0+255),w,b
   961  001730  E109               	bnz	u2250
   962  001732  0E04               	movlw	4
   963  001734  5DD4               	subwf	rempliMines@i_384& (0+255),w,b
   964  001736  A0D8               	btfss	status,0,c
   965  001738  EFA0  F00B         	goto	u2251
   966  00173C  EFA2  F00B         	goto	u2250
   967  001740                     u2251:
   968  001740  EF44  F00B         	goto	l2473
   969  001744                     u2250:
   970  001744  EFF6  F00B         	goto	l2497
   971  001748                     l2489:
   972                           
   973                           ; BSR set to: 0
   974                           ;main.c: 178: {;main.c: 179: x = rand()%20;
   975  001748  ECED  F011         	call	_rand	;wreg free
   976  00174C  C0C0  F0C2         	movff	?_rand,___awmod@dividend
   977  001750  C0C1  F0C3         	movff	?_rand+1,___awmod@dividend+1
   978  001754  0E00               	movlw	0
   979  001756  0100               	movlb	0	; force () banked
   980  001758  6FC5               	movwf	(___awmod@divisor+1)& (0+255),b
   981  00175A  0E14               	movlw	20
   982  00175C  6FC4               	movwf	___awmod@divisor& (0+255),b
   983  00175E  ECE5  F00F         	call	___awmod	;wreg free
   984  001762  0100               	movlb	0	; force () banked
   985  001764  51C2               	movf	?___awmod& (0+255),w,b
   986  001766  0100               	movlb	0	; force () banked
   987  001768  6FD1               	movwf	rempliMines@x& (0+255),b
   988                           
   989                           ;main.c: 180: y = rand()%4;
   990  00176A  ECED  F011         	call	_rand	;wreg free
   991  00176E  0100               	movlb	0	; force () banked
   992  001770  51C0               	movf	?_rand& (0+255),w,b
   993  001772  0B03               	andlw	3
   994  001774  0100               	movlb	0	; force () banked
   995  001776  6FD2               	movwf	rempliMines@y& (0+255),b
   996  001778                     
   997                           ; BSR set to: 0
   998                           ;main.c: 181: if (m_tabMines[y][x]==32)
   999  001778  0100               	movlb	0	; force () banked
  1000  00177A  51D2               	movf	rempliMines@y& (0+255),w,b
  1001  00177C  0D15               	mullw	21
  1002  00177E  0E60               	movlw	low _m_tabMines
  1003  001780  0100               	movlb	0	; force () banked
  1004  001782  6FCA               	movwf	??_rempliMines& (0+255),b
  1005  001784  0E00               	movlw	high _m_tabMines
  1006  001786  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
  1007  001788  50F3               	movf	243,w,c
  1008  00178A  27CA               	addwf	??_rempliMines& (0+255),f,b
  1009  00178C  50F4               	movf	244,w,c
  1010  00178E  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
  1011  001790  0100               	movlb	0	; force () banked
  1012  001792  51D1               	movf	rempliMines@x& (0+255),w,b
  1013  001794  0100               	movlb	0	; force () banked
  1014  001796  25CA               	addwf	??_rempliMines& (0+255),w,b
  1015  001798  6ED9               	movwf	fsr2l,c
  1016  00179A  0100               	movlb	0	; force () banked
  1017  00179C  0E00               	movlw	0
  1018  00179E  0100               	movlb	0	; force () banked
  1019  0017A0  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
  1020  0017A2  6EDA               	movwf	fsr2h,c
  1021  0017A4  0E20               	movlw	32
  1022  0017A6  18DE               	xorwf	postinc2,w,c
  1023  0017A8  A4D8               	btfss	status,2,c
  1024  0017AA  EFD9  F00B         	goto	u2261
  1025  0017AE  EFDB  F00B         	goto	u2260
  1026  0017B2                     u2261:
  1027  0017B2  EFF6  F00B         	goto	l2497
  1028  0017B6                     u2260:
  1029  0017B6                     
  1030                           ; BSR set to: 0
  1031                           ;main.c: 182: {;main.c: 183: m_tabMines[y][x] = 2;
  1032  0017B6  0100               	movlb	0	; force () banked
  1033  0017B8  51D2               	movf	rempliMines@y& (0+255),w,b
  1034  0017BA  0D15               	mullw	21
  1035  0017BC  0E60               	movlw	low _m_tabMines
  1036  0017BE  0100               	movlb	0	; force () banked
  1037  0017C0  6FCA               	movwf	??_rempliMines& (0+255),b
  1038  0017C2  0E00               	movlw	high _m_tabMines
  1039  0017C4  6FCB               	movwf	(??_rempliMines+1)& (0+255),b
  1040  0017C6  50F3               	movf	243,w,c
  1041  0017C8  27CA               	addwf	??_rempliMines& (0+255),f,b
  1042  0017CA  50F4               	movf	244,w,c
  1043  0017CC  23CB               	addwfc	(??_rempliMines+1)& (0+255),f,b
  1044  0017CE  0100               	movlb	0	; force () banked
  1045  0017D0  51D1               	movf	rempliMines@x& (0+255),w,b
  1046  0017D2  0100               	movlb	0	; force () banked
  1047  0017D4  25CA               	addwf	??_rempliMines& (0+255),w,b
  1048  0017D6  6ED9               	movwf	fsr2l,c
  1049  0017D8  0100               	movlb	0	; force () banked
  1050  0017DA  0E00               	movlw	0
  1051  0017DC  0100               	movlb	0	; force () banked
  1052  0017DE  21CB               	addwfc	(??_rempliMines+1)& (0+255),w,b
  1053  0017E0  6EDA               	movwf	fsr2h,c
  1054  0017E2  0E02               	movlw	2
  1055  0017E4  6EDF               	movwf	indf2,c
  1056  0017E6                     
  1057                           ; BSR set to: 0
  1058                           ;main.c: 184: nbMine = nbMine + 1;
  1059  0017E6  0100               	movlb	0	; force () banked
  1060  0017E8  29D3               	incf	rempliMines@nbMine& (0+255),w,b
  1061  0017EA  6FD3               	movwf	rempliMines@nbMine& (0+255),b
  1062  0017EC                     l2497:
  1063                           
  1064                           ; BSR set to: 0
  1065  0017EC  0100               	movlb	0	; force () banked
  1066  0017EE  51D3               	movf	rempliMines@nbMine& (0+255),w,b
  1067  0017F0  0100               	movlb	0	; force () banked
  1068  0017F2  6FCA               	movwf	??_rempliMines& (0+255),b
  1069  0017F4  6BCB               	clrf	(??_rempliMines+1)& (0+255),b
  1070  0017F6  0100               	movlb	0	; force () banked
  1071  0017F8  51C8               	movf	rempliMines@nb& (0+255),w,b
  1072  0017FA  0100               	movlb	0	; force () banked
  1073  0017FC  19CA               	xorwf	??_rempliMines& (0+255),w,b
  1074  0017FE  E109               	bnz	u2271
  1075  001800  0100               	movlb	0	; force () banked
  1076  001802  51C9               	movf	(rempliMines@nb+1)& (0+255),w,b
  1077  001804  0100               	movlb	0	; force () banked
  1078  001806  19CB               	xorwf	(??_rempliMines+1)& (0+255),w,b
  1079  001808  A4D8               	btfss	status,2,c
  1080  00180A  EF09  F00C         	goto	u2271
  1081  00180E  EF0B  F00C         	goto	u2270
  1082  001812                     u2271:
  1083  001812  EFA4  F00B         	goto	l2489
  1084  001816                     u2270:
  1085  001816                     
  1086                           ; BSR set to: 0
  1087  001816  0012               	return		;funcret
  1088  001818                     __end_of_rempliMines:
  1089                           	opt callstack 0
  1090                           
  1091 ;; *************** function _rand *****************
  1092 ;; Defined at:
  1093 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\rand.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  2   12[BANK0 ] int 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2, status,0, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1107 ;;      Params:         0       2       0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0       0       0
  1110 ;;      Totals:         0       2       0       0       0       0       0
  1111 ;;Total ram usage:        2 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:    1
  1114 ;; This function calls:
  1115 ;;		___lmul
  1116 ;; This function is called by:
  1117 ;;		_rempliMines
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text2
  1122  0023DA                     __ptext2:
  1123                           	opt callstack 0
  1124  0023DA                     _rand:
  1125                           	opt callstack 28
  1126  0023DA  C0DD  F0B4         	movff	_randx,___lmul@multiplier
  1127  0023DE  C0DE  F0B5         	movff	_randx+1,___lmul@multiplier+1
  1128  0023E2  C0DF  F0B6         	movff	_randx+2,___lmul@multiplier+2
  1129  0023E6  C0E0  F0B7         	movff	_randx+3,___lmul@multiplier+3
  1130  0023EA  0E6D               	movlw	109
  1131  0023EC  0100               	movlb	0	; () banked
  1132  0023EE  6FB8               	movwf	___lmul@multiplicand& (0+255),b
  1133  0023F0  0E4E               	movlw	78
  1134  0023F2  6FB9               	movwf	(___lmul@multiplicand+1)& (0+255),b
  1135  0023F4  0EC6               	movlw	198
  1136  0023F6  6FBA               	movwf	(___lmul@multiplicand+2)& (0+255),b
  1137  0023F8  0E41               	movlw	65
  1138  0023FA  6FBB               	movwf	(___lmul@multiplicand+3)& (0+255),b
  1139  0023FC  EC1D  F011         	call	___lmul	;wreg free
  1140  002400  C0B4  F0DD         	movff	?___lmul,_randx
  1141  002404  C0B5  F0DE         	movff	?___lmul+1,_randx+1
  1142  002408  C0B6  F0DF         	movff	?___lmul+2,_randx+2
  1143  00240C  C0B7  F0E0         	movff	?___lmul+3,_randx+3
  1144  002410  0E39               	movlw	57
  1145  002412  0100               	movlb	0	; () banked
  1146  002414  27DD               	addwf	_randx& (0+255),f,b
  1147  002416  0E30               	movlw	48
  1148  002418  23DE               	addwfc	(_randx+1)& (0+255),f,b
  1149  00241A  0E00               	movlw	0
  1150  00241C  23DF               	addwfc	(_randx+2)& (0+255),f,b
  1151  00241E  0E00               	movlw	0
  1152  002420  23E0               	addwfc	(_randx+3)& (0+255),f,b
  1153  002422                     
  1154                           ; BSR set to: 0
  1155  002422  0EFF               	movlw	255
  1156  002424  15DF               	andwf	(_randx+2)& (0+255),w,b
  1157  002426  6FC0               	movwf	?_rand& (0+255),b
  1158  002428  0E7F               	movlw	127
  1159  00242A  15E0               	andwf	(_randx+3)& (0+255),w,b
  1160  00242C  6FC1               	movwf	(?_rand+1)& (0+255),b
  1161  00242E                     
  1162                           ; BSR set to: 0
  1163  00242E  0012               	return		;funcret
  1164  002430                     __end_of_rand:
  1165                           	opt callstack 0
  1166                           
  1167 ;; *************** function ___lmul *****************
  1168 ;; Defined at:
  1169 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul32.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;  multiplier      4    0[BANK0 ] unsigned long 
  1172 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;  product         4    8[BANK0 ] unsigned long 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  4    0[BANK0 ] unsigned long 
  1177 ;; Registers used:
  1178 ;;		wreg, status,2, status,0
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1184 ;;      Params:         0       8       0       0       0       0       0
  1185 ;;      Locals:         0       4       0       0       0       0       0
  1186 ;;      Temps:          0       0       0       0       0       0       0
  1187 ;;      Totals:         0      12       0       0       0       0       0
  1188 ;;Total ram usage:       12 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; This function calls:
  1191 ;;		Nothing
  1192 ;; This function is called by:
  1193 ;;		_rand
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text3
  1198  00223A                     __ptext3:
  1199                           	opt callstack 0
  1200  00223A                     ___lmul:
  1201                           	opt callstack 28
  1202  00223A  0E00               	movlw	0
  1203  00223C  0100               	movlb	0	; () banked
  1204  00223E  6FBC               	movwf	___lmul@product& (0+255),b
  1205  002240  0E00               	movlw	0
  1206  002242  6FBD               	movwf	(___lmul@product+1)& (0+255),b
  1207  002244  0E00               	movlw	0
  1208  002246  6FBE               	movwf	(___lmul@product+2)& (0+255),b
  1209  002248  0E00               	movlw	0
  1210  00224A  6FBF               	movwf	(___lmul@product+3)& (0+255),b
  1211  00224C                     l2077:
  1212                           
  1213                           ; BSR set to: 0
  1214  00224C  A1B4               	btfss	___lmul@multiplier& (0+255),0,b
  1215  00224E  EF2B  F011         	goto	u1361
  1216  002252  EF2D  F011         	goto	u1360
  1217  002256                     u1361:
  1218  002256  EF35  F011         	goto	l2081
  1219  00225A                     u1360:
  1220  00225A                     
  1221                           ; BSR set to: 0
  1222  00225A  51B8               	movf	___lmul@multiplicand& (0+255),w,b
  1223  00225C  27BC               	addwf	___lmul@product& (0+255),f,b
  1224  00225E  51B9               	movf	(___lmul@multiplicand+1)& (0+255),w,b
  1225  002260  23BD               	addwfc	(___lmul@product+1)& (0+255),f,b
  1226  002262  51BA               	movf	(___lmul@multiplicand+2)& (0+255),w,b
  1227  002264  23BE               	addwfc	(___lmul@product+2)& (0+255),f,b
  1228  002266  51BB               	movf	(___lmul@multiplicand+3)& (0+255),w,b
  1229  002268  23BF               	addwfc	(___lmul@product+3)& (0+255),f,b
  1230  00226A                     l2081:
  1231                           
  1232                           ; BSR set to: 0
  1233  00226A  90D8               	bcf	status,0,c
  1234  00226C  37B8               	rlcf	___lmul@multiplicand& (0+255),f,b
  1235  00226E  37B9               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
  1236  002270  37BA               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
  1237  002272  37BB               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
  1238  002274                     
  1239                           ; BSR set to: 0
  1240  002274  90D8               	bcf	status,0,c
  1241  002276  33B7               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
  1242  002278  33B6               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
  1243  00227A  33B5               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
  1244  00227C  33B4               	rrcf	___lmul@multiplier& (0+255),f,b
  1245  00227E  51B4               	movf	___lmul@multiplier& (0+255),w,b
  1246  002280  11B5               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
  1247  002282  11B6               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
  1248  002284  11B7               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
  1249  002286  A4D8               	btfss	status,2,c
  1250  002288  EF48  F011         	goto	u1371
  1251  00228C  EF4A  F011         	goto	u1370
  1252  002290                     u1371:
  1253  002290  EF26  F011         	goto	l2077
  1254  002294                     u1370:
  1255  002294                     
  1256                           ; BSR set to: 0
  1257  002294  C0BC  F0B4         	movff	___lmul@product,?___lmul
  1258  002298  C0BD  F0B5         	movff	___lmul@product+1,?___lmul+1
  1259  00229C  C0BE  F0B6         	movff	___lmul@product+2,?___lmul+2
  1260  0022A0  C0BF  F0B7         	movff	___lmul@product+3,?___lmul+3
  1261  0022A4                     
  1262                           ; BSR set to: 0
  1263  0022A4  0012               	return		;funcret
  1264  0022A6                     __end_of___lmul:
  1265                           	opt callstack 0
  1266                           
  1267 ;; *************** function ___awmod *****************
  1268 ;; Defined at:
  1269 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  dividend        2   14[BANK0 ] int 
  1272 ;;  divisor         2   16[BANK0 ] int 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  sign            1   19[BANK0 ] unsigned char 
  1275 ;;  counter         1   18[BANK0 ] unsigned char 
  1276 ;; Return value:  Size  Location     Type
  1277 ;;                  2   14[BANK0 ] int 
  1278 ;; Registers used:
  1279 ;;		wreg, status,2, status,0
  1280 ;; Tracked objects:
  1281 ;;		On entry : 0/0
  1282 ;;		On exit  : 0/0
  1283 ;;		Unchanged: 0/0
  1284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1285 ;;      Params:         0       4       0       0       0       0       0
  1286 ;;      Locals:         0       2       0       0       0       0       0
  1287 ;;      Temps:          0       0       0       0       0       0       0
  1288 ;;      Totals:         0       6       0       0       0       0       0
  1289 ;;Total ram usage:        6 bytes
  1290 ;; Hardware stack levels used:    1
  1291 ;; This function calls:
  1292 ;;		Nothing
  1293 ;; This function is called by:
  1294 ;;		_rempliMines
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text4
  1299  001FCA                     __ptext4:
  1300                           	opt callstack 0
  1301  001FCA                     ___awmod:
  1302                           	opt callstack 29
  1303  001FCA  0E00               	movlw	0
  1304  001FCC  0100               	movlb	0	; () banked
  1305  001FCE  6FC7               	movwf	___awmod@sign& (0+255),b
  1306  001FD0                     
  1307                           ; BSR set to: 0
  1308  001FD0  BFC3               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  1309  001FD2  EFEF  F00F         	goto	u2100
  1310  001FD6  EFED  F00F         	goto	u2101
  1311  001FDA                     u2101:
  1312  001FDA  EFF5  F00F         	goto	l2407
  1313  001FDE                     u2100:
  1314  001FDE                     
  1315                           ; BSR set to: 0
  1316  001FDE  6DC2               	negf	___awmod@dividend& (0+255),b
  1317  001FE0  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1318  001FE2  B0D8               	btfsc	status,0,c
  1319  001FE4  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1320  001FE6                     
  1321                           ; BSR set to: 0
  1322  001FE6  0E01               	movlw	1
  1323  001FE8  6FC7               	movwf	___awmod@sign& (0+255),b
  1324  001FEA                     l2407:
  1325                           
  1326                           ; BSR set to: 0
  1327  001FEA  BFC5               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  1328  001FEC  EFFC  F00F         	goto	u2110
  1329  001FF0  EFFA  F00F         	goto	u2111
  1330  001FF4                     u2111:
  1331  001FF4  EF00  F010         	goto	l2411
  1332  001FF8                     u2110:
  1333  001FF8                     
  1334                           ; BSR set to: 0
  1335  001FF8  6DC4               	negf	___awmod@divisor& (0+255),b
  1336  001FFA  1FC5               	comf	(___awmod@divisor+1)& (0+255),f,b
  1337  001FFC  B0D8               	btfsc	status,0,c
  1338  001FFE  2BC5               	incf	(___awmod@divisor+1)& (0+255),f,b
  1339  002000                     l2411:
  1340                           
  1341                           ; BSR set to: 0
  1342  002000  51C4               	movf	___awmod@divisor& (0+255),w,b
  1343  002002  11C5               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  1344  002004  B4D8               	btfsc	status,2,c
  1345  002006  EF07  F010         	goto	u2121
  1346  00200A  EF09  F010         	goto	u2120
  1347  00200E                     u2121:
  1348  00200E  EF2D  F010         	goto	l2427
  1349  002012                     u2120:
  1350  002012                     
  1351                           ; BSR set to: 0
  1352  002012  0E01               	movlw	1
  1353  002014  6FC6               	movwf	___awmod@counter& (0+255),b
  1354  002016  EF11  F010         	goto	l2417
  1355  00201A                     l2415:
  1356                           
  1357                           ; BSR set to: 0
  1358  00201A  90D8               	bcf	status,0,c
  1359  00201C  37C4               	rlcf	___awmod@divisor& (0+255),f,b
  1360  00201E  37C5               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  1361  002020  2BC6               	incf	___awmod@counter& (0+255),f,b
  1362  002022                     l2417:
  1363                           
  1364                           ; BSR set to: 0
  1365  002022  AFC5               	btfss	(___awmod@divisor+1)& (0+255),7,b
  1366  002024  EF16  F010         	goto	u2131
  1367  002028  EF18  F010         	goto	u2130
  1368  00202C                     u2131:
  1369  00202C  EF0D  F010         	goto	l2415
  1370  002030                     u2130:
  1371  002030                     l2419:
  1372                           
  1373                           ; BSR set to: 0
  1374  002030  51C4               	movf	___awmod@divisor& (0+255),w,b
  1375  002032  5DC2               	subwf	___awmod@dividend& (0+255),w,b
  1376  002034  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1377  002036  59C3               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  1378  002038  A0D8               	btfss	status,0,c
  1379  00203A  EF21  F010         	goto	u2141
  1380  00203E  EF23  F010         	goto	u2140
  1381  002042                     u2141:
  1382  002042  EF27  F010         	goto	l2423
  1383  002046                     u2140:
  1384  002046                     
  1385                           ; BSR set to: 0
  1386  002046  51C4               	movf	___awmod@divisor& (0+255),w,b
  1387  002048  5FC2               	subwf	___awmod@dividend& (0+255),f,b
  1388  00204A  51C5               	movf	(___awmod@divisor+1)& (0+255),w,b
  1389  00204C  5BC3               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  1390  00204E                     l2423:
  1391                           
  1392                           ; BSR set to: 0
  1393  00204E  90D8               	bcf	status,0,c
  1394  002050  33C5               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  1395  002052  33C4               	rrcf	___awmod@divisor& (0+255),f,b
  1396  002054                     
  1397                           ; BSR set to: 0
  1398  002054  2FC6               	decfsz	___awmod@counter& (0+255),f,b
  1399  002056  EF18  F010         	goto	l2419
  1400  00205A                     l2427:
  1401                           
  1402                           ; BSR set to: 0
  1403  00205A  51C7               	movf	___awmod@sign& (0+255),w,b
  1404  00205C  B4D8               	btfsc	status,2,c
  1405  00205E  EF33  F010         	goto	u2151
  1406  002062  EF35  F010         	goto	u2150
  1407  002066                     u2151:
  1408  002066  EF39  F010         	goto	l2431
  1409  00206A                     u2150:
  1410  00206A                     
  1411                           ; BSR set to: 0
  1412  00206A  6DC2               	negf	___awmod@dividend& (0+255),b
  1413  00206C  1FC3               	comf	(___awmod@dividend+1)& (0+255),f,b
  1414  00206E  B0D8               	btfsc	status,0,c
  1415  002070  2BC3               	incf	(___awmod@dividend+1)& (0+255),f,b
  1416  002072                     l2431:
  1417                           
  1418                           ; BSR set to: 0
  1419  002072  C0C2  F0C2         	movff	___awmod@dividend,?___awmod
  1420  002076  C0C3  F0C3         	movff	___awmod@dividend+1,?___awmod+1
  1421  00207A                     
  1422                           ; BSR set to: 0
  1423  00207A  0012               	return		;funcret
  1424  00207C                     __end_of___awmod:
  1425                           	opt callstack 0
  1426                           
  1427 ;; *************** function _metToucheCombien *****************
  1428 ;; Defined at:
  1429 ;;		line 198 in file "main.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;  j               2   28[BANK0 ] int 
  1434 ;;  i               2   26[BANK0 ] int 
  1435 ;;  mine            2   24[BANK0 ] int 
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1445 ;;      Params:         0       0       0       0       0       0       0
  1446 ;;      Locals:         0       6       0       0       0       0       0
  1447 ;;      Temps:          0       3       0       0       0       0       0
  1448 ;;      Totals:         0       9       0       0       0       0       0
  1449 ;;Total ram usage:        9 bytes
  1450 ;; Hardware stack levels used:    1
  1451 ;; Hardware stack levels required when called:    2
  1452 ;; This function calls:
  1453 ;;		___wmul
  1454 ;;		_calculToucheCombien
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text5
  1461  00143C                     __ptext5:
  1462                           	opt callstack 0
  1463  00143C                     _metToucheCombien:
  1464                           	opt callstack 28
  1465  00143C                     
  1466                           ;main.c: 200: int i=0;
  1467  00143C  0E00               	movlw	0
  1468  00143E  0100               	movlb	0	; force () banked
  1469  001440  6FCF               	movwf	(metToucheCombien@i+1)& (0+255),b
  1470  001442  0E00               	movlw	0
  1471  001444  6FCE               	movwf	metToucheCombien@i& (0+255),b
  1472                           
  1473                           ;main.c: 201: int j=0;
  1474  001446  0E00               	movlw	0
  1475  001448  0100               	movlb	0	; force () banked
  1476  00144A  6FD1               	movwf	(metToucheCombien@j+1)& (0+255),b
  1477  00144C  0E00               	movlw	0
  1478  00144E  6FD0               	movwf	metToucheCombien@j& (0+255),b
  1479                           
  1480                           ;main.c: 202: int mine=0;
  1481  001450  0E00               	movlw	0
  1482  001452  0100               	movlb	0	; force () banked
  1483  001454  6FCD               	movwf	(metToucheCombien@mine+1)& (0+255),b
  1484  001456  0E00               	movlw	0
  1485  001458  6FCC               	movwf	metToucheCombien@mine& (0+255),b
  1486                           
  1487                           ;main.c: 204: for ( i=0;i<4;i++)
  1488  00145A  0E00               	movlw	0
  1489  00145C  0100               	movlb	0	; force () banked
  1490  00145E  6FCF               	movwf	(metToucheCombien@i+1)& (0+255),b
  1491  001460  0E00               	movlw	0
  1492  001462  6FCE               	movwf	metToucheCombien@i& (0+255),b
  1493  001464                     
  1494                           ; BSR set to: 0
  1495  001464  0100               	movlb	0	; force () banked
  1496  001466  BFCF               	btfsc	(metToucheCombien@i+1)& (0+255),7,b
  1497  001468  EF3F  F00A         	goto	u2281
  1498  00146C  51CF               	movf	(metToucheCombien@i+1)& (0+255),w,b
  1499  00146E  E109               	bnz	u2280
  1500  001470  0E04               	movlw	4
  1501  001472  5DCE               	subwf	metToucheCombien@i& (0+255),w,b
  1502  001474  A0D8               	btfss	status,0,c
  1503  001476  EF3F  F00A         	goto	u2281
  1504  00147A  EF41  F00A         	goto	u2280
  1505  00147E                     u2281:
  1506  00147E  EF43  F00A         	goto	l2505
  1507  001482                     u2280:
  1508  001482  EF1A  F00B         	goto	l118
  1509  001486                     l2505:
  1510                           
  1511                           ; BSR set to: 0
  1512                           ;main.c: 205: {;main.c: 206: for (j=0;j<20;j++)
  1513  001486  0E00               	movlw	0
  1514  001488  0100               	movlb	0	; force () banked
  1515  00148A  6FD1               	movwf	(metToucheCombien@j+1)& (0+255),b
  1516  00148C  0E00               	movlw	0
  1517  00148E  6FD0               	movwf	metToucheCombien@j& (0+255),b
  1518  001490                     
  1519                           ; BSR set to: 0
  1520  001490  0100               	movlb	0	; force () banked
  1521  001492  BFD1               	btfsc	(metToucheCombien@j+1)& (0+255),7,b
  1522  001494  EF55  F00A         	goto	u2291
  1523  001498  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1524  00149A  E109               	bnz	u2290
  1525  00149C  0E14               	movlw	20
  1526  00149E  5DD0               	subwf	metToucheCombien@j& (0+255),w,b
  1527  0014A0  A0D8               	btfss	status,0,c
  1528  0014A2  EF55  F00A         	goto	u2291
  1529  0014A6  EF57  F00A         	goto	u2290
  1530  0014AA                     u2291:
  1531  0014AA  EF59  F00A         	goto	l2511
  1532  0014AE                     u2290:
  1533  0014AE  EF08  F00B         	goto	l2527
  1534  0014B2                     l2511:
  1535                           
  1536                           ; BSR set to: 0
  1537                           ;main.c: 207: {;main.c: 208: if(m_tabMines[i][j]!= 2)
  1538  0014B2  C0CE  F0B4         	movff	metToucheCombien@i,___wmul@multiplier
  1539  0014B6  C0CF  F0B5         	movff	metToucheCombien@i+1,___wmul@multiplier+1
  1540  0014BA  0E00               	movlw	0
  1541  0014BC  0100               	movlb	0	; force () banked
  1542  0014BE  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1543  0014C0  0E15               	movlw	21
  1544  0014C2  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1545  0014C4  ECC7  F012         	call	___wmul	;wreg free
  1546  0014C8  0E60               	movlw	low _m_tabMines
  1547  0014CA  0100               	movlb	0	; force () banked
  1548  0014CC  6FC9               	movwf	??_metToucheCombien& (0+255),b
  1549  0014CE  0E00               	movlw	high _m_tabMines
  1550  0014D0  6FCA               	movwf	(??_metToucheCombien+1)& (0+255),b
  1551  0014D2  0100               	movlb	0	; force () banked
  1552  0014D4  51B4               	movf	?___wmul& (0+255),w,b
  1553  0014D6  0100               	movlb	0	; force () banked
  1554  0014D8  27C9               	addwf	??_metToucheCombien& (0+255),f,b
  1555  0014DA  0100               	movlb	0	; force () banked
  1556  0014DC  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1557  0014DE  0100               	movlb	0	; force () banked
  1558  0014E0  23CA               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1559  0014E2  0100               	movlb	0	; force () banked
  1560  0014E4  51D0               	movf	metToucheCombien@j& (0+255),w,b
  1561  0014E6  0100               	movlb	0	; force () banked
  1562  0014E8  25C9               	addwf	??_metToucheCombien& (0+255),w,b
  1563  0014EA  6ED9               	movwf	fsr2l,c
  1564  0014EC  0100               	movlb	0	; force () banked
  1565  0014EE  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1566  0014F0  0100               	movlb	0	; force () banked
  1567  0014F2  21CA               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1568  0014F4  6EDA               	movwf	fsr2h,c
  1569  0014F6  0E02               	movlw	2
  1570  0014F8  18DE               	xorwf	postinc2,w,c
  1571  0014FA  B4D8               	btfsc	status,2,c
  1572  0014FC  EF82  F00A         	goto	u2301
  1573  001500  EF84  F00A         	goto	u2300
  1574  001504                     u2301:
  1575  001504  EFF6  F00A         	goto	l2523
  1576  001508                     u2300:
  1577  001508                     
  1578                           ; BSR set to: 0
  1579                           ;main.c: 209: {;main.c: 210: mine = calculToucheCombien(i,j);
  1580  001508  C0CE  F0BA         	movff	metToucheCombien@i,calculToucheCombien@ligne
  1581  00150C  C0CF  F0BB         	movff	metToucheCombien@i+1,calculToucheCombien@ligne+1
  1582  001510  C0D0  F0BC         	movff	metToucheCombien@j,calculToucheCombien@colonne
  1583  001514  C0D1  F0BD         	movff	metToucheCombien@j+1,calculToucheCombien@colonne+1
  1584  001518  EC0D  F003         	call	_calculToucheCombien	;wreg free
  1585  00151C  0100               	movlb	0	; force () banked
  1586  00151E  6FC9               	movwf	??_metToucheCombien& (0+255),b
  1587  001520  51C9               	movf	??_metToucheCombien& (0+255),w,b
  1588  001522  0100               	movlb	0	; force () banked
  1589  001524  6FCC               	movwf	metToucheCombien@mine& (0+255),b
  1590  001526  6BCD               	clrf	(metToucheCombien@mine+1)& (0+255),b
  1591  001528                     
  1592                           ; BSR set to: 0
  1593                           ;main.c: 211: if (mine==0)
  1594  001528  0100               	movlb	0	; force () banked
  1595  00152A  51CC               	movf	metToucheCombien@mine& (0+255),w,b
  1596  00152C  11CD               	iorwf	(metToucheCombien@mine+1)& (0+255),w,b
  1597  00152E  A4D8               	btfss	status,2,c
  1598  001530  EF9C  F00A         	goto	u2311
  1599  001534  EF9E  F00A         	goto	u2310
  1600  001538                     u2311:
  1601  001538  EFC2  F00A         	goto	l2519
  1602  00153C                     u2310:
  1603  00153C                     
  1604                           ; BSR set to: 0
  1605                           ;main.c: 212: {;main.c: 213: m_tabMines[i][j]=32;
  1606  00153C  C0CE  F0B4         	movff	metToucheCombien@i,___wmul@multiplier
  1607  001540  C0CF  F0B5         	movff	metToucheCombien@i+1,___wmul@multiplier+1
  1608  001544  0E00               	movlw	0
  1609  001546  0100               	movlb	0	; force () banked
  1610  001548  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1611  00154A  0E15               	movlw	21
  1612  00154C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1613  00154E  ECC7  F012         	call	___wmul	;wreg free
  1614  001552  0E60               	movlw	low _m_tabMines
  1615  001554  0100               	movlb	0	; force () banked
  1616  001556  6FC9               	movwf	??_metToucheCombien& (0+255),b
  1617  001558  0E00               	movlw	high _m_tabMines
  1618  00155A  6FCA               	movwf	(??_metToucheCombien+1)& (0+255),b
  1619  00155C  0100               	movlb	0	; force () banked
  1620  00155E  51B4               	movf	?___wmul& (0+255),w,b
  1621  001560  0100               	movlb	0	; force () banked
  1622  001562  27C9               	addwf	??_metToucheCombien& (0+255),f,b
  1623  001564  0100               	movlb	0	; force () banked
  1624  001566  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1625  001568  0100               	movlb	0	; force () banked
  1626  00156A  23CA               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1627  00156C  0100               	movlb	0	; force () banked
  1628  00156E  51D0               	movf	metToucheCombien@j& (0+255),w,b
  1629  001570  0100               	movlb	0	; force () banked
  1630  001572  25C9               	addwf	??_metToucheCombien& (0+255),w,b
  1631  001574  6ED9               	movwf	fsr2l,c
  1632  001576  0100               	movlb	0	; force () banked
  1633  001578  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1634  00157A  0100               	movlb	0	; force () banked
  1635  00157C  21CA               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1636  00157E  6EDA               	movwf	fsr2h,c
  1637  001580  0E20               	movlw	32
  1638  001582  6EDF               	movwf	indf2,c
  1639  001584                     l2519:
  1640                           
  1641                           ; BSR set to: 0
  1642                           ;main.c: 214: };main.c: 215: if (mine>0)
  1643  001584  0100               	movlb	0	; force () banked
  1644  001586  BFCD               	btfsc	(metToucheCombien@mine+1)& (0+255),7,b
  1645  001588  EFCE  F00A         	goto	u2321
  1646  00158C  51CD               	movf	(metToucheCombien@mine+1)& (0+255),w,b
  1647  00158E  E108               	bnz	u2320
  1648  001590  05CC               	decf	metToucheCombien@mine& (0+255),w,b
  1649  001592  A0D8               	btfss	status,0,c
  1650  001594  EFCE  F00A         	goto	u2321
  1651  001598  EFD0  F00A         	goto	u2320
  1652  00159C                     u2321:
  1653  00159C  EFF6  F00A         	goto	l2523
  1654  0015A0                     u2320:
  1655  0015A0                     
  1656                           ; BSR set to: 0
  1657                           ;main.c: 216: {;main.c: 217: m_tabMines[i][j]= (mine+48);
  1658  0015A0  C0CE  F0B4         	movff	metToucheCombien@i,___wmul@multiplier
  1659  0015A4  C0CF  F0B5         	movff	metToucheCombien@i+1,___wmul@multiplier+1
  1660  0015A8  0E00               	movlw	0
  1661  0015AA  0100               	movlb	0	; force () banked
  1662  0015AC  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1663  0015AE  0E15               	movlw	21
  1664  0015B0  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1665  0015B2  ECC7  F012         	call	___wmul	;wreg free
  1666  0015B6  0E60               	movlw	low _m_tabMines
  1667  0015B8  0100               	movlb	0	; force () banked
  1668  0015BA  6FC9               	movwf	??_metToucheCombien& (0+255),b
  1669  0015BC  0E00               	movlw	high _m_tabMines
  1670  0015BE  6FCA               	movwf	(??_metToucheCombien+1)& (0+255),b
  1671  0015C0  0100               	movlb	0	; force () banked
  1672  0015C2  51B4               	movf	?___wmul& (0+255),w,b
  1673  0015C4  0100               	movlb	0	; force () banked
  1674  0015C6  27C9               	addwf	??_metToucheCombien& (0+255),f,b
  1675  0015C8  0100               	movlb	0	; force () banked
  1676  0015CA  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1677  0015CC  0100               	movlb	0	; force () banked
  1678  0015CE  23CA               	addwfc	(??_metToucheCombien+1)& (0+255),f,b
  1679  0015D0  0100               	movlb	0	; force () banked
  1680  0015D2  51D0               	movf	metToucheCombien@j& (0+255),w,b
  1681  0015D4  0100               	movlb	0	; force () banked
  1682  0015D6  25C9               	addwf	??_metToucheCombien& (0+255),w,b
  1683  0015D8  6ED9               	movwf	fsr2l,c
  1684  0015DA  0100               	movlb	0	; force () banked
  1685  0015DC  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1686  0015DE  0100               	movlb	0	; force () banked
  1687  0015E0  21CA               	addwfc	(??_metToucheCombien+1)& (0+255),w,b
  1688  0015E2  6EDA               	movwf	fsr2h,c
  1689  0015E4  0100               	movlb	0	; force () banked
  1690  0015E6  51CC               	movf	metToucheCombien@mine& (0+255),w,b
  1691  0015E8  0F30               	addlw	48
  1692  0015EA  6EDF               	movwf	indf2,c
  1693  0015EC                     l2523:
  1694                           
  1695                           ; BSR set to: 0
  1696  0015EC  0100               	movlb	0	; force () banked
  1697  0015EE  4BD0               	infsnz	metToucheCombien@j& (0+255),f,b
  1698  0015F0  2BD1               	incf	(metToucheCombien@j+1)& (0+255),f,b
  1699  0015F2                     
  1700                           ; BSR set to: 0
  1701  0015F2  0100               	movlb	0	; force () banked
  1702  0015F4  BFD1               	btfsc	(metToucheCombien@j+1)& (0+255),7,b
  1703  0015F6  EF06  F00B         	goto	u2331
  1704  0015FA  51D1               	movf	(metToucheCombien@j+1)& (0+255),w,b
  1705  0015FC  E109               	bnz	u2330
  1706  0015FE  0E14               	movlw	20
  1707  001600  5DD0               	subwf	metToucheCombien@j& (0+255),w,b
  1708  001602  A0D8               	btfss	status,0,c
  1709  001604  EF06  F00B         	goto	u2331
  1710  001608  EF08  F00B         	goto	u2330
  1711  00160C                     u2331:
  1712  00160C  EF59  F00A         	goto	l2511
  1713  001610                     u2330:
  1714  001610                     l2527:
  1715                           
  1716                           ; BSR set to: 0
  1717  001610  0100               	movlb	0	; force () banked
  1718  001612  4BCE               	infsnz	metToucheCombien@i& (0+255),f,b
  1719  001614  2BCF               	incf	(metToucheCombien@i+1)& (0+255),f,b
  1720  001616                     
  1721                           ; BSR set to: 0
  1722  001616  0100               	movlb	0	; force () banked
  1723  001618  BFCF               	btfsc	(metToucheCombien@i+1)& (0+255),7,b
  1724  00161A  EF18  F00B         	goto	u2341
  1725  00161E  51CF               	movf	(metToucheCombien@i+1)& (0+255),w,b
  1726  001620  E109               	bnz	u2340
  1727  001622  0E04               	movlw	4
  1728  001624  5DCE               	subwf	metToucheCombien@i& (0+255),w,b
  1729  001626  A0D8               	btfss	status,0,c
  1730  001628  EF18  F00B         	goto	u2341
  1731  00162C  EF1A  F00B         	goto	u2340
  1732  001630                     u2341:
  1733  001630  EF43  F00A         	goto	l2505
  1734  001634                     u2340:
  1735  001634                     l118:
  1736                           
  1737                           ; BSR set to: 0
  1738  001634  0012               	return		;funcret
  1739  001636                     __end_of_metToucheCombien:
  1740                           	opt callstack 0
  1741                           
  1742 ;; *************** function _calculToucheCombien *****************
  1743 ;; Defined at:
  1744 ;;		line 230 in file "main.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  ligne           2    6[BANK0 ] int 
  1747 ;;  colonne         2    8[BANK0 ] int 
  1748 ;; Auto vars:     Size  Location     Type
  1749 ;;  i               2   19[BANK0 ] int 
  1750 ;;  j               2   17[BANK0 ] int 
  1751 ;;  nb_mine         2   15[BANK0 ] int 
  1752 ;; Return value:  Size  Location     Type
  1753 ;;                  1    wreg      unsigned char 
  1754 ;; Registers used:
  1755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1756 ;; Tracked objects:
  1757 ;;		On entry : 0/0
  1758 ;;		On exit  : 0/0
  1759 ;;		Unchanged: 0/0
  1760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1761 ;;      Params:         0       4       0       0       0       0       0
  1762 ;;      Locals:         0       6       0       0       0       0       0
  1763 ;;      Temps:          0       5       0       0       0       0       0
  1764 ;;      Totals:         0      15       0       0       0       0       0
  1765 ;;Total ram usage:       15 bytes
  1766 ;; Hardware stack levels used:    1
  1767 ;; Hardware stack levels required when called:    1
  1768 ;; This function calls:
  1769 ;;		___wmul
  1770 ;; This function is called by:
  1771 ;;		_metToucheCombien
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text6
  1776  00061A                     __ptext6:
  1777                           	opt callstack 0
  1778  00061A                     _calculToucheCombien:
  1779                           	opt callstack 28
  1780  00061A                     
  1781                           ;main.c: 232: int nb_mine =0;
  1782  00061A  0E00               	movlw	0
  1783  00061C  0100               	movlb	0	; force () banked
  1784  00061E  6FC4               	movwf	(calculToucheCombien@nb_mine+1)& (0+255),b
  1785  000620  0E00               	movlw	0
  1786  000622  6FC3               	movwf	calculToucheCombien@nb_mine& (0+255),b
  1787                           
  1788                           ;main.c: 233: int i=0;
  1789  000624  0E00               	movlw	0
  1790  000626  0100               	movlb	0	; force () banked
  1791  000628  6FC8               	movwf	(calculToucheCombien@i+1)& (0+255),b
  1792  00062A  0E00               	movlw	0
  1793  00062C  6FC7               	movwf	calculToucheCombien@i& (0+255),b
  1794                           
  1795                           ;main.c: 234: int j=0;
  1796  00062E  0E00               	movlw	0
  1797  000630  0100               	movlb	0	; force () banked
  1798  000632  6FC6               	movwf	(calculToucheCombien@j+1)& (0+255),b
  1799  000634  0E00               	movlw	0
  1800  000636  6FC5               	movwf	calculToucheCombien@j& (0+255),b
  1801  000638                     
  1802                           ; BSR set to: 0
  1803                           ;main.c: 235: if ((ligne<3)&&(ligne>0)&&(colonne>0)&&(colonne<20))
  1804  000638  0100               	movlb	0	; force () banked
  1805  00063A  BFBB               	btfsc	(calculToucheCombien@ligne+1)& (0+255),7,b
  1806  00063C  EF2B  F003         	goto	u1410
  1807  000640  51BB               	movf	(calculToucheCombien@ligne+1)& (0+255),w,b
  1808  000642  E107               	bnz	u1411
  1809  000644  0E03               	movlw	3
  1810  000646  5DBA               	subwf	calculToucheCombien@ligne& (0+255),w,b
  1811  000648  B0D8               	btfsc	status,0,c
  1812  00064A  EF29  F003         	goto	u1411
  1813  00064E  EF2B  F003         	goto	u1410
  1814  000652                     u1411:
  1815  000652  EFEB  F003         	goto	l2131
  1816  000656                     u1410:
  1817  000656                     
  1818                           ; BSR set to: 0
  1819  000656  0100               	movlb	0	; force () banked
  1820  000658  BFBB               	btfsc	(calculToucheCombien@ligne+1)& (0+255),7,b
  1821  00065A  EF37  F003         	goto	u1421
  1822  00065E  51BB               	movf	(calculToucheCombien@ligne+1)& (0+255),w,b
  1823  000660  E108               	bnz	u1420
  1824  000662  05BA               	decf	calculToucheCombien@ligne& (0+255),w,b
  1825  000664  A0D8               	btfss	status,0,c
  1826  000666  EF37  F003         	goto	u1421
  1827  00066A  EF39  F003         	goto	u1420
  1828  00066E                     u1421:
  1829  00066E  EFEB  F003         	goto	l2131
  1830  000672                     u1420:
  1831  000672                     
  1832                           ; BSR set to: 0
  1833  000672  0100               	movlb	0	; force () banked
  1834  000674  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  1835  000676  EF45  F003         	goto	u1431
  1836  00067A  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1837  00067C  E108               	bnz	u1430
  1838  00067E  05BC               	decf	calculToucheCombien@colonne& (0+255),w,b
  1839  000680  A0D8               	btfss	status,0,c
  1840  000682  EF45  F003         	goto	u1431
  1841  000686  EF47  F003         	goto	u1430
  1842  00068A                     u1431:
  1843  00068A  EFEB  F003         	goto	l2131
  1844  00068E                     u1430:
  1845  00068E                     
  1846                           ; BSR set to: 0
  1847  00068E  0100               	movlb	0	; force () banked
  1848  000690  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  1849  000692  EF56  F003         	goto	u1440
  1850  000696  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1851  000698  E107               	bnz	u1441
  1852  00069A  0E14               	movlw	20
  1853  00069C  5DBC               	subwf	calculToucheCombien@colonne& (0+255),w,b
  1854  00069E  B0D8               	btfsc	status,0,c
  1855  0006A0  EF54  F003         	goto	u1441
  1856  0006A4  EF56  F003         	goto	u1440
  1857  0006A8                     u1441:
  1858  0006A8  EFEB  F003         	goto	l2131
  1859  0006AC                     u1440:
  1860  0006AC                     
  1861                           ; BSR set to: 0
  1862                           ;main.c: 236: {;main.c: 237: for(i=-1;i<2;i++)
  1863  0006AC  0100               	movlb	0	; force () banked
  1864  0006AE  69C7               	setf	calculToucheCombien@i& (0+255),b
  1865  0006B0  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  1866  0006B2                     
  1867                           ; BSR set to: 0
  1868  0006B2  0100               	movlb	0	; force () banked
  1869  0006B4  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  1870  0006B6  EF66  F003         	goto	u1451
  1871  0006BA  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  1872  0006BC  E109               	bnz	u1450
  1873  0006BE  0E02               	movlw	2
  1874  0006C0  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  1875  0006C2  A0D8               	btfss	status,0,c
  1876  0006C4  EF66  F003         	goto	u1451
  1877  0006C8  EF68  F003         	goto	u1450
  1878  0006CC                     u1451:
  1879  0006CC  EF6A  F003         	goto	l122
  1880  0006D0                     u1450:
  1881  0006D0  EFEB  F003         	goto	l2131
  1882  0006D4                     l122:
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;main.c: 238: {;main.c: 239: for(j=-1;j<=1;j++)
  1886  0006D4  0100               	movlb	0	; force () banked
  1887  0006D6  69C5               	setf	calculToucheCombien@j& (0+255),b
  1888  0006D8  69C6               	setf	(calculToucheCombien@j+1)& (0+255),b
  1889  0006DA                     
  1890                           ; BSR set to: 0
  1891  0006DA  0100               	movlb	0	; force () banked
  1892  0006DC  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1893  0006DE  EF7A  F003         	goto	u1461
  1894  0006E2  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1895  0006E4  E109               	bnz	u1460
  1896  0006E6  0E02               	movlw	2
  1897  0006E8  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  1898  0006EA  A0D8               	btfss	status,0,c
  1899  0006EC  EF7A  F003         	goto	u1461
  1900  0006F0  EF7C  F003         	goto	u1460
  1901  0006F4                     u1461:
  1902  0006F4  EF7E  F003         	goto	l2121
  1903  0006F8                     u1460:
  1904  0006F8  EFD9  F003         	goto	l2127
  1905  0006FC                     l2121:
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;main.c: 240: {;main.c: 241: if (m_tabMines[ligne+(i)][colonne+(j)]== 2)
  1909  0006FC  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  1910  000700  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  1911  000704  0E00               	movlw	0
  1912  000706  0100               	movlb	0	; force () banked
  1913  000708  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1914  00070A  0E15               	movlw	21
  1915  00070C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1916  00070E  ECC7  F012         	call	___wmul	;wreg free
  1917  000712  0E60               	movlw	low _m_tabMines
  1918  000714  0100               	movlb	0	; force () banked
  1919  000716  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  1920  000718  0E00               	movlw	high _m_tabMines
  1921  00071A  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  1922  00071C  0100               	movlb	0	; force () banked
  1923  00071E  51B4               	movf	?___wmul& (0+255),w,b
  1924  000720  0100               	movlb	0	; force () banked
  1925  000722  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  1926  000724  0100               	movlb	0	; force () banked
  1927  000726  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1928  000728  0100               	movlb	0	; force () banked
  1929  00072A  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1930  00072C  C0C7  F0B4         	movff	calculToucheCombien@i,___wmul@multiplier
  1931  000730  C0C8  F0B5         	movff	calculToucheCombien@i+1,___wmul@multiplier+1
  1932  000734  0E00               	movlw	0
  1933  000736  0100               	movlb	0	; force () banked
  1934  000738  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1935  00073A  0E15               	movlw	21
  1936  00073C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  1937  00073E  ECC7  F012         	call	___wmul	;wreg free
  1938  000742  0100               	movlb	0	; force () banked
  1939  000744  51B4               	movf	?___wmul& (0+255),w,b
  1940  000746  0100               	movlb	0	; force () banked
  1941  000748  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  1942  00074A  0100               	movlb	0	; force () banked
  1943  00074C  51B5               	movf	(?___wmul+1)& (0+255),w,b
  1944  00074E  0100               	movlb	0	; force () banked
  1945  000750  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1946  000752  0100               	movlb	0	; force () banked
  1947  000754  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  1948  000756  0100               	movlb	0	; force () banked
  1949  000758  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  1950  00075A  0100               	movlb	0	; force () banked
  1951  00075C  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  1952  00075E  0100               	movlb	0	; force () banked
  1953  000760  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  1954  000762  0100               	movlb	0	; force () banked
  1955  000764  51C5               	movf	calculToucheCombien@j& (0+255),w,b
  1956  000766  0100               	movlb	0	; force () banked
  1957  000768  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  1958  00076A  6ED9               	movwf	fsr2l,c
  1959  00076C  0100               	movlb	0	; force () banked
  1960  00076E  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1961  000770  0100               	movlb	0	; force () banked
  1962  000772  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  1963  000774  6EDA               	movwf	fsr2h,c
  1964  000776  0E02               	movlw	2
  1965  000778  18DE               	xorwf	postinc2,w,c
  1966  00077A  A4D8               	btfss	status,2,c
  1967  00077C  EFC2  F003         	goto	u1471
  1968  000780  EFC4  F003         	goto	u1470
  1969  000784                     u1471:
  1970  000784  EFC7  F003         	goto	l126
  1971  000788                     u1470:
  1972  000788                     
  1973                           ; BSR set to: 0
  1974                           ;main.c: 242: {;main.c: 243: nb_mine++;
  1975  000788  0100               	movlb	0	; force () banked
  1976  00078A  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  1977  00078C  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  1978  00078E                     l126:
  1979                           
  1980                           ; BSR set to: 0
  1981  00078E  0100               	movlb	0	; force () banked
  1982  000790  4BC5               	infsnz	calculToucheCombien@j& (0+255),f,b
  1983  000792  2BC6               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  1984  000794                     
  1985                           ; BSR set to: 0
  1986  000794  0100               	movlb	0	; force () banked
  1987  000796  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  1988  000798  EFD7  F003         	goto	u1481
  1989  00079C  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  1990  00079E  E109               	bnz	u1480
  1991  0007A0  0E02               	movlw	2
  1992  0007A2  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  1993  0007A4  A0D8               	btfss	status,0,c
  1994  0007A6  EFD7  F003         	goto	u1481
  1995  0007AA  EFD9  F003         	goto	u1480
  1996  0007AE                     u1481:
  1997  0007AE  EF7E  F003         	goto	l2121
  1998  0007B2                     u1480:
  1999  0007B2                     l2127:
  2000                           
  2001                           ; BSR set to: 0
  2002  0007B2  0100               	movlb	0	; force () banked
  2003  0007B4  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2004  0007B6  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2005  0007B8                     
  2006                           ; BSR set to: 0
  2007  0007B8  0100               	movlb	0	; force () banked
  2008  0007BA  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2009  0007BC  EFE9  F003         	goto	u1491
  2010  0007C0  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2011  0007C2  E109               	bnz	u1490
  2012  0007C4  0E02               	movlw	2
  2013  0007C6  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  2014  0007C8  A0D8               	btfss	status,0,c
  2015  0007CA  EFE9  F003         	goto	u1491
  2016  0007CE  EFEB  F003         	goto	u1490
  2017  0007D2                     u1491:
  2018  0007D2  EF6A  F003         	goto	l122
  2019  0007D6                     u1490:
  2020  0007D6                     l2131:
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;main.c: 244: };main.c: 245: };main.c: 246: };main.c: 247: };main.c: 248: if((ligne==0)&
      +                          &(colonne==0))
  2024  0007D6  0100               	movlb	0	; force () banked
  2025  0007D8  51BA               	movf	calculToucheCombien@ligne& (0+255),w,b
  2026  0007DA  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2027  0007DC  A4D8               	btfss	status,2,c
  2028  0007DE  EFF3  F003         	goto	u1501
  2029  0007E2  EFF5  F003         	goto	u1500
  2030  0007E6                     u1501:
  2031  0007E6  EF93  F004         	goto	l2151
  2032  0007EA                     u1500:
  2033  0007EA                     
  2034                           ; BSR set to: 0
  2035  0007EA  0100               	movlb	0	; force () banked
  2036  0007EC  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2037  0007EE  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2038  0007F0  A4D8               	btfss	status,2,c
  2039  0007F2  EFFD  F003         	goto	u1511
  2040  0007F6  EFFF  F003         	goto	u1510
  2041  0007FA                     u1511:
  2042  0007FA  EF93  F004         	goto	l2151
  2043  0007FE                     u1510:
  2044  0007FE                     
  2045                           ; BSR set to: 0
  2046                           ;main.c: 249: {;main.c: 250: if(m_tabMines[ligne][colonne+1]==2)
  2047  0007FE  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2048  000802  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2049  000806  0E00               	movlw	0
  2050  000808  0100               	movlb	0	; force () banked
  2051  00080A  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2052  00080C  0E15               	movlw	21
  2053  00080E  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2054  000810  ECC7  F012         	call	___wmul	;wreg free
  2055  000814  0E60               	movlw	low _m_tabMines
  2056  000816  0100               	movlb	0	; force () banked
  2057  000818  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2058  00081A  0E00               	movlw	high _m_tabMines
  2059  00081C  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2060  00081E  0E01               	movlw	1
  2061  000820  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2062  000822  0E00               	movlw	0
  2063  000824  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2064  000826  0100               	movlb	0	; force () banked
  2065  000828  51B4               	movf	?___wmul& (0+255),w,b
  2066  00082A  0100               	movlb	0	; force () banked
  2067  00082C  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2068  00082E  0100               	movlb	0	; force () banked
  2069  000830  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2070  000832  0100               	movlb	0	; force () banked
  2071  000834  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2072  000836  0100               	movlb	0	; force () banked
  2073  000838  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2074  00083A  0100               	movlb	0	; force () banked
  2075  00083C  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2076  00083E  6ED9               	movwf	fsr2l,c
  2077  000840  0100               	movlb	0	; force () banked
  2078  000842  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2079  000844  0100               	movlb	0	; force () banked
  2080  000846  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2081  000848  6EDA               	movwf	fsr2h,c
  2082  00084A  0E02               	movlw	2
  2083  00084C  18DE               	xorwf	postinc2,w,c
  2084  00084E  A4D8               	btfss	status,2,c
  2085  000850  EF2C  F004         	goto	u1521
  2086  000854  EF2E  F004         	goto	u1520
  2087  000858                     u1521:
  2088  000858  EF31  F004         	goto	l2139
  2089  00085C                     u1520:
  2090  00085C                     
  2091                           ; BSR set to: 0
  2092                           ;main.c: 251: {;main.c: 252: nb_mine++;
  2093  00085C  0100               	movlb	0	; force () banked
  2094  00085E  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2095  000860  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2096  000862                     l2139:
  2097                           
  2098                           ; BSR set to: 0
  2099                           ;main.c: 253: };main.c: 254: for(j=0;j<=1;j++)
  2100  000862  0E00               	movlw	0
  2101  000864  0100               	movlb	0	; force () banked
  2102  000866  6FC6               	movwf	(calculToucheCombien@j+1)& (0+255),b
  2103  000868  0E00               	movlw	0
  2104  00086A  6FC5               	movwf	calculToucheCombien@j& (0+255),b
  2105  00086C                     
  2106                           ; BSR set to: 0
  2107  00086C  0100               	movlb	0	; force () banked
  2108  00086E  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  2109  000870  EF43  F004         	goto	u1531
  2110  000874  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2111  000876  E109               	bnz	u1530
  2112  000878  0E02               	movlw	2
  2113  00087A  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  2114  00087C  A0D8               	btfss	status,0,c
  2115  00087E  EF43  F004         	goto	u1531
  2116  000882  EF45  F004         	goto	u1530
  2117  000886                     u1531:
  2118  000886  EF47  F004         	goto	l2145
  2119  00088A                     u1530:
  2120  00088A  EF93  F004         	goto	l2151
  2121  00088E                     l2145:
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;main.c: 255: {;main.c: 256: if(m_tabMines[ligne+1][colonne+(j)]==2)
  2125  00088E  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2126  000892  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2127  000896  0E00               	movlw	0
  2128  000898  0100               	movlb	0	; force () banked
  2129  00089A  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2130  00089C  0E15               	movlw	21
  2131  00089E  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2132  0008A0  ECC7  F012         	call	___wmul	;wreg free
  2133  0008A4  0E60               	movlw	low _m_tabMines
  2134  0008A6  0100               	movlb	0	; force () banked
  2135  0008A8  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2136  0008AA  0E00               	movlw	high _m_tabMines
  2137  0008AC  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2138  0008AE  0E15               	movlw	21
  2139  0008B0  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2140  0008B2  0E00               	movlw	0
  2141  0008B4  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2142  0008B6  0100               	movlb	0	; force () banked
  2143  0008B8  51B4               	movf	?___wmul& (0+255),w,b
  2144  0008BA  0100               	movlb	0	; force () banked
  2145  0008BC  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2146  0008BE  0100               	movlb	0	; force () banked
  2147  0008C0  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2148  0008C2  0100               	movlb	0	; force () banked
  2149  0008C4  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2150  0008C6  0100               	movlb	0	; force () banked
  2151  0008C8  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2152  0008CA  0100               	movlb	0	; force () banked
  2153  0008CC  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2154  0008CE  0100               	movlb	0	; force () banked
  2155  0008D0  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2156  0008D2  0100               	movlb	0	; force () banked
  2157  0008D4  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2158  0008D6  0100               	movlb	0	; force () banked
  2159  0008D8  51C5               	movf	calculToucheCombien@j& (0+255),w,b
  2160  0008DA  0100               	movlb	0	; force () banked
  2161  0008DC  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2162  0008DE  6ED9               	movwf	fsr2l,c
  2163  0008E0  0100               	movlb	0	; force () banked
  2164  0008E2  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2165  0008E4  0100               	movlb	0	; force () banked
  2166  0008E6  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2167  0008E8  6EDA               	movwf	fsr2h,c
  2168  0008EA  0E02               	movlw	2
  2169  0008EC  18DE               	xorwf	postinc2,w,c
  2170  0008EE  A4D8               	btfss	status,2,c
  2171  0008F0  EF7C  F004         	goto	u1541
  2172  0008F4  EF7E  F004         	goto	u1540
  2173  0008F8                     u1541:
  2174  0008F8  EF81  F004         	goto	l131
  2175  0008FC                     u1540:
  2176  0008FC                     
  2177                           ; BSR set to: 0
  2178                           ;main.c: 257: {;main.c: 258: nb_mine++;
  2179  0008FC  0100               	movlb	0	; force () banked
  2180  0008FE  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2181  000900  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2182  000902                     l131:
  2183                           
  2184                           ; BSR set to: 0
  2185  000902  0100               	movlb	0	; force () banked
  2186  000904  4BC5               	infsnz	calculToucheCombien@j& (0+255),f,b
  2187  000906  2BC6               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  2188  000908                     
  2189                           ; BSR set to: 0
  2190  000908  0100               	movlb	0	; force () banked
  2191  00090A  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  2192  00090C  EF91  F004         	goto	u1551
  2193  000910  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2194  000912  E109               	bnz	u1550
  2195  000914  0E02               	movlw	2
  2196  000916  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  2197  000918  A0D8               	btfss	status,0,c
  2198  00091A  EF91  F004         	goto	u1551
  2199  00091E  EF93  F004         	goto	u1550
  2200  000922                     u1551:
  2201  000922  EF47  F004         	goto	l2145
  2202  000926                     u1550:
  2203  000926                     l2151:
  2204                           
  2205                           ; BSR set to: 0
  2206                           ;main.c: 259: };main.c: 260: };main.c: 261: };main.c: 262: if((ligne==0)&&(colonne<20)&&
      +                          (colonne>0))
  2207  000926  0100               	movlb	0	; force () banked
  2208  000928  51BA               	movf	calculToucheCombien@ligne& (0+255),w,b
  2209  00092A  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2210  00092C  A4D8               	btfss	status,2,c
  2211  00092E  EF9B  F004         	goto	u1561
  2212  000932  EF9D  F004         	goto	u1560
  2213  000936                     u1561:
  2214  000936  EFAF  F005         	goto	l2189
  2215  00093A                     u1560:
  2216  00093A                     
  2217                           ; BSR set to: 0
  2218  00093A  0100               	movlb	0	; force () banked
  2219  00093C  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  2220  00093E  EFAC  F004         	goto	u1570
  2221  000942  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2222  000944  E107               	bnz	u1571
  2223  000946  0E14               	movlw	20
  2224  000948  5DBC               	subwf	calculToucheCombien@colonne& (0+255),w,b
  2225  00094A  B0D8               	btfsc	status,0,c
  2226  00094C  EFAA  F004         	goto	u1571
  2227  000950  EFAC  F004         	goto	u1570
  2228  000954                     u1571:
  2229  000954  EFAF  F005         	goto	l2189
  2230  000958                     u1570:
  2231  000958                     
  2232                           ; BSR set to: 0
  2233  000958  0100               	movlb	0	; force () banked
  2234  00095A  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  2235  00095C  EFB8  F004         	goto	u1581
  2236  000960  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2237  000962  E108               	bnz	u1580
  2238  000964  05BC               	decf	calculToucheCombien@colonne& (0+255),w,b
  2239  000966  A0D8               	btfss	status,0,c
  2240  000968  EFB8  F004         	goto	u1581
  2241  00096C  EFBA  F004         	goto	u1580
  2242  000970                     u1581:
  2243  000970  EFAF  F005         	goto	l2189
  2244  000974                     u1580:
  2245  000974                     
  2246                           ; BSR set to: 0
  2247                           ;main.c: 263: {;main.c: 264: for(i=-1;i<=1;i++)
  2248  000974  0100               	movlb	0	; force () banked
  2249  000976  69C7               	setf	calculToucheCombien@i& (0+255),b
  2250  000978  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  2251  00097A                     
  2252                           ; BSR set to: 0
  2253  00097A  0100               	movlb	0	; force () banked
  2254  00097C  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2255  00097E  EFCA  F004         	goto	u1591
  2256  000982  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2257  000984  E109               	bnz	u1590
  2258  000986  0E02               	movlw	2
  2259  000988  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  2260  00098A  A0D8               	btfss	status,0,c
  2261  00098C  EFCA  F004         	goto	u1591
  2262  000990  EFCC  F004         	goto	u1590
  2263  000994                     u1591:
  2264  000994  EFCE  F004         	goto	l2163
  2265  000998                     u1590:
  2266  000998  EF18  F005         	goto	l2169
  2267  00099C                     l2163:
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;main.c: 265: {;main.c: 266: if(m_tabMines[ligne][colonne+(i)]==2)
  2271  00099C  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2272  0009A0  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2273  0009A4  0E00               	movlw	0
  2274  0009A6  0100               	movlb	0	; force () banked
  2275  0009A8  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2276  0009AA  0E15               	movlw	21
  2277  0009AC  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2278  0009AE  ECC7  F012         	call	___wmul	;wreg free
  2279  0009B2  0E60               	movlw	low _m_tabMines
  2280  0009B4  0100               	movlb	0	; force () banked
  2281  0009B6  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2282  0009B8  0E00               	movlw	high _m_tabMines
  2283  0009BA  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2284  0009BC  0100               	movlb	0	; force () banked
  2285  0009BE  51B4               	movf	?___wmul& (0+255),w,b
  2286  0009C0  0100               	movlb	0	; force () banked
  2287  0009C2  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2288  0009C4  0100               	movlb	0	; force () banked
  2289  0009C6  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2290  0009C8  0100               	movlb	0	; force () banked
  2291  0009CA  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2292  0009CC  0100               	movlb	0	; force () banked
  2293  0009CE  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2294  0009D0  0100               	movlb	0	; force () banked
  2295  0009D2  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2296  0009D4  0100               	movlb	0	; force () banked
  2297  0009D6  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2298  0009D8  0100               	movlb	0	; force () banked
  2299  0009DA  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2300  0009DC  0100               	movlb	0	; force () banked
  2301  0009DE  51C7               	movf	calculToucheCombien@i& (0+255),w,b
  2302  0009E0  0100               	movlb	0	; force () banked
  2303  0009E2  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2304  0009E4  6ED9               	movwf	fsr2l,c
  2305  0009E6  0100               	movlb	0	; force () banked
  2306  0009E8  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2307  0009EA  0100               	movlb	0	; force () banked
  2308  0009EC  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2309  0009EE  6EDA               	movwf	fsr2h,c
  2310  0009F0  0E02               	movlw	2
  2311  0009F2  18DE               	xorwf	postinc2,w,c
  2312  0009F4  A4D8               	btfss	status,2,c
  2313  0009F6  EFFF  F004         	goto	u1601
  2314  0009FA  EF01  F005         	goto	u1600
  2315  0009FE                     u1601:
  2316  0009FE  EF04  F005         	goto	l135
  2317  000A02                     u1600:
  2318  000A02                     
  2319                           ; BSR set to: 0
  2320                           ;main.c: 267: {;main.c: 268: nb_mine ++;
  2321  000A02  0100               	movlb	0	; force () banked
  2322  000A04  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2323  000A06  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2324  000A08                     l135:
  2325                           
  2326                           ; BSR set to: 0
  2327                           ;main.c: 269: };main.c: 270: i++;
  2328  000A08  0100               	movlb	0	; force () banked
  2329  000A0A  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2330  000A0C  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2331  000A0E  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2332  000A10  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2333  000A12                     
  2334                           ; BSR set to: 0
  2335  000A12  0100               	movlb	0	; force () banked
  2336  000A14  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2337  000A16  EF16  F005         	goto	u1611
  2338  000A1A  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2339  000A1C  E109               	bnz	u1610
  2340  000A1E  0E02               	movlw	2
  2341  000A20  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  2342  000A22  A0D8               	btfss	status,0,c
  2343  000A24  EF16  F005         	goto	u1611
  2344  000A28  EF18  F005         	goto	u1610
  2345  000A2C                     u1611:
  2346  000A2C  EFCE  F004         	goto	l2163
  2347  000A30                     u1610:
  2348  000A30                     l2169:
  2349                           
  2350                           ; BSR set to: 0
  2351                           ;main.c: 271: };main.c: 272: for(i=1;i<=1;i++)
  2352  000A30  0E00               	movlw	0
  2353  000A32  0100               	movlb	0	; force () banked
  2354  000A34  6FC8               	movwf	(calculToucheCombien@i+1)& (0+255),b
  2355  000A36  0E01               	movlw	1
  2356  000A38  6FC7               	movwf	calculToucheCombien@i& (0+255),b
  2357  000A3A                     
  2358                           ; BSR set to: 0
  2359  000A3A  0100               	movlb	0	; force () banked
  2360  000A3C  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2361  000A3E  EF2A  F005         	goto	u1621
  2362  000A42  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2363  000A44  E109               	bnz	u1620
  2364  000A46  0E02               	movlw	2
  2365  000A48  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  2366  000A4A  A0D8               	btfss	status,0,c
  2367  000A4C  EF2A  F005         	goto	u1621
  2368  000A50  EF2C  F005         	goto	u1620
  2369  000A54                     u1621:
  2370  000A54  EF2E  F005         	goto	l136
  2371  000A58                     u1620:
  2372  000A58  EFAF  F005         	goto	l2189
  2373  000A5C                     l136:
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;main.c: 273: {;main.c: 274: for(j=-1;j<=1;j++)
  2377  000A5C  0100               	movlb	0	; force () banked
  2378  000A5E  69C5               	setf	calculToucheCombien@j& (0+255),b
  2379  000A60  69C6               	setf	(calculToucheCombien@j+1)& (0+255),b
  2380  000A62                     
  2381                           ; BSR set to: 0
  2382  000A62  0100               	movlb	0	; force () banked
  2383  000A64  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  2384  000A66  EF3E  F005         	goto	u1631
  2385  000A6A  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2386  000A6C  E109               	bnz	u1630
  2387  000A6E  0E02               	movlw	2
  2388  000A70  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  2389  000A72  A0D8               	btfss	status,0,c
  2390  000A74  EF3E  F005         	goto	u1631
  2391  000A78  EF40  F005         	goto	u1630
  2392  000A7C                     u1631:
  2393  000A7C  EF42  F005         	goto	l2179
  2394  000A80                     u1630:
  2395  000A80  EF9D  F005         	goto	l2185
  2396  000A84                     l2179:
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;main.c: 275: {;main.c: 276: if(m_tabMines[ligne+(i)][colonne+(j)]==2)
  2400  000A84  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2401  000A88  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2402  000A8C  0E00               	movlw	0
  2403  000A8E  0100               	movlb	0	; force () banked
  2404  000A90  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2405  000A92  0E15               	movlw	21
  2406  000A94  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2407  000A96  ECC7  F012         	call	___wmul	;wreg free
  2408  000A9A  0E60               	movlw	low _m_tabMines
  2409  000A9C  0100               	movlb	0	; force () banked
  2410  000A9E  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2411  000AA0  0E00               	movlw	high _m_tabMines
  2412  000AA2  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2413  000AA4  0100               	movlb	0	; force () banked
  2414  000AA6  51B4               	movf	?___wmul& (0+255),w,b
  2415  000AA8  0100               	movlb	0	; force () banked
  2416  000AAA  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2417  000AAC  0100               	movlb	0	; force () banked
  2418  000AAE  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2419  000AB0  0100               	movlb	0	; force () banked
  2420  000AB2  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2421  000AB4  C0C7  F0B4         	movff	calculToucheCombien@i,___wmul@multiplier
  2422  000AB8  C0C8  F0B5         	movff	calculToucheCombien@i+1,___wmul@multiplier+1
  2423  000ABC  0E00               	movlw	0
  2424  000ABE  0100               	movlb	0	; force () banked
  2425  000AC0  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2426  000AC2  0E15               	movlw	21
  2427  000AC4  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2428  000AC6  ECC7  F012         	call	___wmul	;wreg free
  2429  000ACA  0100               	movlb	0	; force () banked
  2430  000ACC  51B4               	movf	?___wmul& (0+255),w,b
  2431  000ACE  0100               	movlb	0	; force () banked
  2432  000AD0  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2433  000AD2  0100               	movlb	0	; force () banked
  2434  000AD4  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2435  000AD6  0100               	movlb	0	; force () banked
  2436  000AD8  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2437  000ADA  0100               	movlb	0	; force () banked
  2438  000ADC  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2439  000ADE  0100               	movlb	0	; force () banked
  2440  000AE0  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2441  000AE2  0100               	movlb	0	; force () banked
  2442  000AE4  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2443  000AE6  0100               	movlb	0	; force () banked
  2444  000AE8  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2445  000AEA  0100               	movlb	0	; force () banked
  2446  000AEC  51C5               	movf	calculToucheCombien@j& (0+255),w,b
  2447  000AEE  0100               	movlb	0	; force () banked
  2448  000AF0  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2449  000AF2  6ED9               	movwf	fsr2l,c
  2450  000AF4  0100               	movlb	0	; force () banked
  2451  000AF6  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2452  000AF8  0100               	movlb	0	; force () banked
  2453  000AFA  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2454  000AFC  6EDA               	movwf	fsr2h,c
  2455  000AFE  0E02               	movlw	2
  2456  000B00  18DE               	xorwf	postinc2,w,c
  2457  000B02  A4D8               	btfss	status,2,c
  2458  000B04  EF86  F005         	goto	u1641
  2459  000B08  EF88  F005         	goto	u1640
  2460  000B0C                     u1641:
  2461  000B0C  EF8B  F005         	goto	l140
  2462  000B10                     u1640:
  2463  000B10                     
  2464                           ; BSR set to: 0
  2465                           ;main.c: 277: {;main.c: 278: nb_mine ++;
  2466  000B10  0100               	movlb	0	; force () banked
  2467  000B12  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2468  000B14  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2469  000B16                     l140:
  2470                           
  2471                           ; BSR set to: 0
  2472  000B16  0100               	movlb	0	; force () banked
  2473  000B18  4BC5               	infsnz	calculToucheCombien@j& (0+255),f,b
  2474  000B1A  2BC6               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  2475  000B1C                     
  2476                           ; BSR set to: 0
  2477  000B1C  0100               	movlb	0	; force () banked
  2478  000B1E  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  2479  000B20  EF9B  F005         	goto	u1651
  2480  000B24  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2481  000B26  E109               	bnz	u1650
  2482  000B28  0E02               	movlw	2
  2483  000B2A  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  2484  000B2C  A0D8               	btfss	status,0,c
  2485  000B2E  EF9B  F005         	goto	u1651
  2486  000B32  EF9D  F005         	goto	u1650
  2487  000B36                     u1651:
  2488  000B36  EF42  F005         	goto	l2179
  2489  000B3A                     u1650:
  2490  000B3A                     l2185:
  2491                           
  2492                           ; BSR set to: 0
  2493  000B3A  0100               	movlb	0	; force () banked
  2494  000B3C  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2495  000B3E  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2496  000B40                     
  2497                           ; BSR set to: 0
  2498  000B40  0100               	movlb	0	; force () banked
  2499  000B42  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2500  000B44  EFAD  F005         	goto	u1661
  2501  000B48  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2502  000B4A  E109               	bnz	u1660
  2503  000B4C  0E02               	movlw	2
  2504  000B4E  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  2505  000B50  A0D8               	btfss	status,0,c
  2506  000B52  EFAD  F005         	goto	u1661
  2507  000B56  EFAF  F005         	goto	u1660
  2508  000B5A                     u1661:
  2509  000B5A  EF2E  F005         	goto	l136
  2510  000B5E                     u1660:
  2511  000B5E                     l2189:
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;main.c: 279: };main.c: 280: };main.c: 281: };main.c: 282: };main.c: 283: if((ligne==0)&
      +                          &(colonne==20))
  2515  000B5E  0100               	movlb	0	; force () banked
  2516  000B60  51BA               	movf	calculToucheCombien@ligne& (0+255),w,b
  2517  000B62  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2518  000B64  A4D8               	btfss	status,2,c
  2519  000B66  EFB7  F005         	goto	u1671
  2520  000B6A  EFB9  F005         	goto	u1670
  2521  000B6E                     u1671:
  2522  000B6E  EF58  F006         	goto	l2209
  2523  000B72                     u1670:
  2524  000B72                     
  2525                           ; BSR set to: 0
  2526  000B72  0E14               	movlw	20
  2527  000B74  0100               	movlb	0	; force () banked
  2528  000B76  19BC               	xorwf	calculToucheCombien@colonne& (0+255),w,b
  2529  000B78  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2530  000B7A  A4D8               	btfss	status,2,c
  2531  000B7C  EFC2  F005         	goto	u1681
  2532  000B80  EFC4  F005         	goto	u1680
  2533  000B84                     u1681:
  2534  000B84  EF58  F006         	goto	l2209
  2535  000B88                     u1680:
  2536  000B88                     
  2537                           ; BSR set to: 0
  2538                           ;main.c: 284: {;main.c: 285: if(m_tabMines[ligne][colonne-1]==2)
  2539  000B88  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2540  000B8C  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2541  000B90  0E00               	movlw	0
  2542  000B92  0100               	movlb	0	; force () banked
  2543  000B94  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2544  000B96  0E15               	movlw	21
  2545  000B98  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2546  000B9A  ECC7  F012         	call	___wmul	;wreg free
  2547  000B9E  0EFF               	movlw	255
  2548  000BA0  0100               	movlb	0	; force () banked
  2549  000BA2  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2550  000BA4  0EFF               	movlw	255
  2551  000BA6  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2552  000BA8  0E60               	movlw	low _m_tabMines
  2553  000BAA  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2554  000BAC  0E00               	movlw	high _m_tabMines
  2555  000BAE  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2556  000BB0  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  2557  000BB2  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2558  000BB4  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2559  000BB6  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2560  000BB8  0100               	movlb	0	; force () banked
  2561  000BBA  51B4               	movf	?___wmul& (0+255),w,b
  2562  000BBC  0100               	movlb	0	; force () banked
  2563  000BBE  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2564  000BC0  0100               	movlb	0	; force () banked
  2565  000BC2  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2566  000BC4  0100               	movlb	0	; force () banked
  2567  000BC6  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2568  000BC8  0100               	movlb	0	; force () banked
  2569  000BCA  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2570  000BCC  0100               	movlb	0	; force () banked
  2571  000BCE  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2572  000BD0  6ED9               	movwf	fsr2l,c
  2573  000BD2  0100               	movlb	0	; force () banked
  2574  000BD4  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2575  000BD6  0100               	movlb	0	; force () banked
  2576  000BD8  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2577  000BDA  6EDA               	movwf	fsr2h,c
  2578  000BDC  0E02               	movlw	2
  2579  000BDE  18DE               	xorwf	postinc2,w,c
  2580  000BE0  A4D8               	btfss	status,2,c
  2581  000BE2  EFF5  F005         	goto	u1691
  2582  000BE6  EFF7  F005         	goto	u1690
  2583  000BEA                     u1691:
  2584  000BEA  EFFA  F005         	goto	l2197
  2585  000BEE                     u1690:
  2586  000BEE                     
  2587                           ; BSR set to: 0
  2588                           ;main.c: 286: {;main.c: 287: nb_mine++;
  2589  000BEE  0100               	movlb	0	; force () banked
  2590  000BF0  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2591  000BF2  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2592  000BF4                     l2197:
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;main.c: 288: };main.c: 289: for(i=-1;i<1;i++)
  2596  000BF4  0100               	movlb	0	; force () banked
  2597  000BF6  69C7               	setf	calculToucheCombien@i& (0+255),b
  2598  000BF8  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  2599  000BFA                     
  2600                           ; BSR set to: 0
  2601  000BFA  0100               	movlb	0	; force () banked
  2602  000BFC  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2603  000BFE  EF09  F006         	goto	u1701
  2604  000C02  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2605  000C04  E108               	bnz	u1700
  2606  000C06  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  2607  000C08  A0D8               	btfss	status,0,c
  2608  000C0A  EF09  F006         	goto	u1701
  2609  000C0E  EF0B  F006         	goto	u1700
  2610  000C12                     u1701:
  2611  000C12  EF0D  F006         	goto	l2203
  2612  000C16                     u1700:
  2613  000C16  EF58  F006         	goto	l2209
  2614  000C1A                     l2203:
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;main.c: 290: {;main.c: 291: if(m_tabMines[ligne+1][colonne+i]==2)
  2618  000C1A  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2619  000C1E  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2620  000C22  0E00               	movlw	0
  2621  000C24  0100               	movlb	0	; force () banked
  2622  000C26  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2623  000C28  0E15               	movlw	21
  2624  000C2A  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2625  000C2C  ECC7  F012         	call	___wmul	;wreg free
  2626  000C30  0E60               	movlw	low _m_tabMines
  2627  000C32  0100               	movlb	0	; force () banked
  2628  000C34  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2629  000C36  0E00               	movlw	high _m_tabMines
  2630  000C38  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2631  000C3A  0E15               	movlw	21
  2632  000C3C  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2633  000C3E  0E00               	movlw	0
  2634  000C40  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2635  000C42  0100               	movlb	0	; force () banked
  2636  000C44  51B4               	movf	?___wmul& (0+255),w,b
  2637  000C46  0100               	movlb	0	; force () banked
  2638  000C48  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2639  000C4A  0100               	movlb	0	; force () banked
  2640  000C4C  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2641  000C4E  0100               	movlb	0	; force () banked
  2642  000C50  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2643  000C52  0100               	movlb	0	; force () banked
  2644  000C54  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2645  000C56  0100               	movlb	0	; force () banked
  2646  000C58  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2647  000C5A  0100               	movlb	0	; force () banked
  2648  000C5C  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2649  000C5E  0100               	movlb	0	; force () banked
  2650  000C60  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2651  000C62  0100               	movlb	0	; force () banked
  2652  000C64  51C7               	movf	calculToucheCombien@i& (0+255),w,b
  2653  000C66  0100               	movlb	0	; force () banked
  2654  000C68  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2655  000C6A  6ED9               	movwf	fsr2l,c
  2656  000C6C  0100               	movlb	0	; force () banked
  2657  000C6E  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2658  000C70  0100               	movlb	0	; force () banked
  2659  000C72  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2660  000C74  6EDA               	movwf	fsr2h,c
  2661  000C76  0E02               	movlw	2
  2662  000C78  18DE               	xorwf	postinc2,w,c
  2663  000C7A  A4D8               	btfss	status,2,c
  2664  000C7C  EF42  F006         	goto	u1711
  2665  000C80  EF44  F006         	goto	u1710
  2666  000C84                     u1711:
  2667  000C84  EF47  F006         	goto	l145
  2668  000C88                     u1710:
  2669  000C88                     
  2670                           ; BSR set to: 0
  2671                           ;main.c: 292: {;main.c: 293: nb_mine++;
  2672  000C88  0100               	movlb	0	; force () banked
  2673  000C8A  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2674  000C8C  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2675  000C8E                     l145:
  2676                           
  2677                           ; BSR set to: 0
  2678  000C8E  0100               	movlb	0	; force () banked
  2679  000C90  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2680  000C92  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2681  000C94                     
  2682                           ; BSR set to: 0
  2683  000C94  0100               	movlb	0	; force () banked
  2684  000C96  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2685  000C98  EF56  F006         	goto	u1721
  2686  000C9C  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2687  000C9E  E108               	bnz	u1720
  2688  000CA0  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  2689  000CA2  A0D8               	btfss	status,0,c
  2690  000CA4  EF56  F006         	goto	u1721
  2691  000CA8  EF58  F006         	goto	u1720
  2692  000CAC                     u1721:
  2693  000CAC  EF0D  F006         	goto	l2203
  2694  000CB0                     u1720:
  2695  000CB0                     l2209:
  2696                           
  2697                           ; BSR set to: 0
  2698                           ;main.c: 294: };main.c: 295: };main.c: 296: };main.c: 297: if((ligne==3)&&(colonne==0))
  2699  000CB0  0E03               	movlw	3
  2700  000CB2  0100               	movlb	0	; force () banked
  2701  000CB4  19BA               	xorwf	calculToucheCombien@ligne& (0+255),w,b
  2702  000CB6  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2703  000CB8  A4D8               	btfss	status,2,c
  2704  000CBA  EF61  F006         	goto	u1731
  2705  000CBE  EF63  F006         	goto	u1730
  2706  000CC2                     u1731:
  2707  000CC2  EF0C  F007         	goto	l2229
  2708  000CC6                     u1730:
  2709  000CC6                     
  2710                           ; BSR set to: 0
  2711  000CC6  0100               	movlb	0	; force () banked
  2712  000CC8  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2713  000CCA  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2714  000CCC  A4D8               	btfss	status,2,c
  2715  000CCE  EF6B  F006         	goto	u1741
  2716  000CD2  EF6D  F006         	goto	u1740
  2717  000CD6                     u1741:
  2718  000CD6  EF0C  F007         	goto	l2229
  2719  000CDA                     u1740:
  2720  000CDA                     
  2721                           ; BSR set to: 0
  2722                           ;main.c: 298: {;main.c: 299: if(m_tabMines[ligne-1][colonne]==2)
  2723  000CDA  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2724  000CDE  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2725  000CE2  0E00               	movlw	0
  2726  000CE4  0100               	movlb	0	; force () banked
  2727  000CE6  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2728  000CE8  0E15               	movlw	21
  2729  000CEA  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2730  000CEC  ECC7  F012         	call	___wmul	;wreg free
  2731  000CF0  0EEB               	movlw	235
  2732  000CF2  0100               	movlb	0	; force () banked
  2733  000CF4  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2734  000CF6  0EFF               	movlw	255
  2735  000CF8  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2736  000CFA  0E60               	movlw	low _m_tabMines
  2737  000CFC  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2738  000CFE  0E00               	movlw	high _m_tabMines
  2739  000D00  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2740  000D02  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  2741  000D04  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2742  000D06  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2743  000D08  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2744  000D0A  0100               	movlb	0	; force () banked
  2745  000D0C  51B4               	movf	?___wmul& (0+255),w,b
  2746  000D0E  0100               	movlb	0	; force () banked
  2747  000D10  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2748  000D12  0100               	movlb	0	; force () banked
  2749  000D14  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2750  000D16  0100               	movlb	0	; force () banked
  2751  000D18  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2752  000D1A  0100               	movlb	0	; force () banked
  2753  000D1C  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2754  000D1E  0100               	movlb	0	; force () banked
  2755  000D20  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2756  000D22  6ED9               	movwf	fsr2l,c
  2757  000D24  0100               	movlb	0	; force () banked
  2758  000D26  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2759  000D28  0100               	movlb	0	; force () banked
  2760  000D2A  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  2761  000D2C  6EDA               	movwf	fsr2h,c
  2762  000D2E  0E02               	movlw	2
  2763  000D30  18DE               	xorwf	postinc2,w,c
  2764  000D32  A4D8               	btfss	status,2,c
  2765  000D34  EF9E  F006         	goto	u1751
  2766  000D38  EFA0  F006         	goto	u1750
  2767  000D3C                     u1751:
  2768  000D3C  EFA3  F006         	goto	l2217
  2769  000D40                     u1750:
  2770  000D40                     
  2771                           ; BSR set to: 0
  2772                           ;main.c: 300: {;main.c: 301: nb_mine++;
  2773  000D40  0100               	movlb	0	; force () banked
  2774  000D42  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2775  000D44  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2776  000D46                     l2217:
  2777                           
  2778                           ; BSR set to: 0
  2779                           ;main.c: 302: };main.c: 303: for(i=-1;i<=0;i++)
  2780  000D46  0100               	movlb	0	; force () banked
  2781  000D48  69C7               	setf	calculToucheCombien@i& (0+255),b
  2782  000D4A  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  2783  000D4C                     
  2784                           ; BSR set to: 0
  2785  000D4C  0100               	movlb	0	; force () banked
  2786  000D4E  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2787  000D50  EFB2  F006         	goto	u1761
  2788  000D54  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2789  000D56  E108               	bnz	u1760
  2790  000D58  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  2791  000D5A  A0D8               	btfss	status,0,c
  2792  000D5C  EFB2  F006         	goto	u1761
  2793  000D60  EFB4  F006         	goto	u1760
  2794  000D64                     u1761:
  2795  000D64  EFB6  F006         	goto	l2223
  2796  000D68                     u1760:
  2797  000D68  EF0C  F007         	goto	l2229
  2798  000D6C                     l2223:
  2799                           
  2800                           ; BSR set to: 0
  2801                           ;main.c: 304: {;main.c: 305: if(m_tabMines[ligne+(i)][colonne+1]==2)
  2802  000D6C  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2803  000D70  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2804  000D74  0E00               	movlw	0
  2805  000D76  0100               	movlb	0	; force () banked
  2806  000D78  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2807  000D7A  0E15               	movlw	21
  2808  000D7C  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2809  000D7E  ECC7  F012         	call	___wmul	;wreg free
  2810  000D82  0E60               	movlw	low _m_tabMines
  2811  000D84  0100               	movlb	0	; force () banked
  2812  000D86  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2813  000D88  0E00               	movlw	high _m_tabMines
  2814  000D8A  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2815  000D8C  0E01               	movlw	1
  2816  000D8E  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2817  000D90  0E00               	movlw	0
  2818  000D92  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2819  000D94  0100               	movlb	0	; force () banked
  2820  000D96  51B4               	movf	?___wmul& (0+255),w,b
  2821  000D98  0100               	movlb	0	; force () banked
  2822  000D9A  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2823  000D9C  0100               	movlb	0	; force () banked
  2824  000D9E  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2825  000DA0  0100               	movlb	0	; force () banked
  2826  000DA2  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2827  000DA4  C0C7  F0B4         	movff	calculToucheCombien@i,___wmul@multiplier
  2828  000DA8  C0C8  F0B5         	movff	calculToucheCombien@i+1,___wmul@multiplier+1
  2829  000DAC  0E00               	movlw	0
  2830  000DAE  0100               	movlb	0	; force () banked
  2831  000DB0  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2832  000DB2  0E15               	movlw	21
  2833  000DB4  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2834  000DB6  ECC7  F012         	call	___wmul	;wreg free
  2835  000DBA  0100               	movlb	0	; force () banked
  2836  000DBC  51B4               	movf	?___wmul& (0+255),w,b
  2837  000DBE  0100               	movlb	0	; force () banked
  2838  000DC0  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  2839  000DC2  0100               	movlb	0	; force () banked
  2840  000DC4  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2841  000DC6  0100               	movlb	0	; force () banked
  2842  000DC8  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  2843  000DCA  0100               	movlb	0	; force () banked
  2844  000DCC  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2845  000DCE  0100               	movlb	0	; force () banked
  2846  000DD0  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  2847  000DD2  6ED9               	movwf	fsr2l,c
  2848  000DD4  0100               	movlb	0	; force () banked
  2849  000DD6  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2850  000DD8  0100               	movlb	0	; force () banked
  2851  000DDA  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  2852  000DDC  6EDA               	movwf	fsr2h,c
  2853  000DDE  0E02               	movlw	2
  2854  000DE0  18DE               	xorwf	postinc2,w,c
  2855  000DE2  A4D8               	btfss	status,2,c
  2856  000DE4  EFF6  F006         	goto	u1771
  2857  000DE8  EFF8  F006         	goto	u1770
  2858  000DEC                     u1771:
  2859  000DEC  EFFB  F006         	goto	l150
  2860  000DF0                     u1770:
  2861  000DF0                     
  2862                           ; BSR set to: 0
  2863                           ;main.c: 306: {;main.c: 307: nb_mine++;
  2864  000DF0  0100               	movlb	0	; force () banked
  2865  000DF2  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  2866  000DF4  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  2867  000DF6                     l150:
  2868                           
  2869                           ; BSR set to: 0
  2870  000DF6  0100               	movlb	0	; force () banked
  2871  000DF8  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  2872  000DFA  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  2873  000DFC                     
  2874                           ; BSR set to: 0
  2875  000DFC  0100               	movlb	0	; force () banked
  2876  000DFE  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  2877  000E00  EF0A  F007         	goto	u1781
  2878  000E04  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  2879  000E06  E108               	bnz	u1780
  2880  000E08  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  2881  000E0A  A0D8               	btfss	status,0,c
  2882  000E0C  EF0A  F007         	goto	u1781
  2883  000E10  EF0C  F007         	goto	u1780
  2884  000E14                     u1781:
  2885  000E14  EFB6  F006         	goto	l2223
  2886  000E18                     u1780:
  2887  000E18                     l2229:
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;main.c: 308: };main.c: 309: };main.c: 310: };main.c: 311: if((ligne==3)&&(colonne<20)&&
      +                          (colonne>0))
  2891  000E18  0E03               	movlw	3
  2892  000E1A  0100               	movlb	0	; force () banked
  2893  000E1C  19BA               	xorwf	calculToucheCombien@ligne& (0+255),w,b
  2894  000E1E  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  2895  000E20  A4D8               	btfss	status,2,c
  2896  000E22  EF15  F007         	goto	u1791
  2897  000E26  EF17  F007         	goto	u1790
  2898  000E2A                     u1791:
  2899  000E2A  EFF6  F007         	goto	l2257
  2900  000E2E                     u1790:
  2901  000E2E                     
  2902                           ; BSR set to: 0
  2903  000E2E  0100               	movlb	0	; force () banked
  2904  000E30  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  2905  000E32  EF26  F007         	goto	u1800
  2906  000E36  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2907  000E38  E107               	bnz	u1801
  2908  000E3A  0E14               	movlw	20
  2909  000E3C  5DBC               	subwf	calculToucheCombien@colonne& (0+255),w,b
  2910  000E3E  B0D8               	btfsc	status,0,c
  2911  000E40  EF24  F007         	goto	u1801
  2912  000E44  EF26  F007         	goto	u1800
  2913  000E48                     u1801:
  2914  000E48  EFF6  F007         	goto	l2257
  2915  000E4C                     u1800:
  2916  000E4C                     
  2917                           ; BSR set to: 0
  2918  000E4C  0100               	movlb	0	; force () banked
  2919  000E4E  BFBD               	btfsc	(calculToucheCombien@colonne+1)& (0+255),7,b
  2920  000E50  EF32  F007         	goto	u1811
  2921  000E54  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2922  000E56  E108               	bnz	u1810
  2923  000E58  05BC               	decf	calculToucheCombien@colonne& (0+255),w,b
  2924  000E5A  A0D8               	btfss	status,0,c
  2925  000E5C  EF32  F007         	goto	u1811
  2926  000E60  EF34  F007         	goto	u1810
  2927  000E64                     u1811:
  2928  000E64  EFF6  F007         	goto	l2257
  2929  000E68                     u1810:
  2930  000E68                     
  2931                           ; BSR set to: 0
  2932                           ;main.c: 312: {;main.c: 313: for(j=-1;j<=1;j++)
  2933  000E68  0100               	movlb	0	; force () banked
  2934  000E6A  69C5               	setf	calculToucheCombien@j& (0+255),b
  2935  000E6C  69C6               	setf	(calculToucheCombien@j+1)& (0+255),b
  2936  000E6E                     
  2937                           ; BSR set to: 0
  2938  000E6E  0100               	movlb	0	; force () banked
  2939  000E70  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  2940  000E72  EF44  F007         	goto	u1821
  2941  000E76  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  2942  000E78  E109               	bnz	u1820
  2943  000E7A  0E02               	movlw	2
  2944  000E7C  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  2945  000E7E  A0D8               	btfss	status,0,c
  2946  000E80  EF44  F007         	goto	u1821
  2947  000E84  EF46  F007         	goto	u1820
  2948  000E88                     u1821:
  2949  000E88  EF48  F007         	goto	l2241
  2950  000E8C                     u1820:
  2951  000E8C  EF98  F007         	goto	l153
  2952  000E90                     l2241:
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;main.c: 314: {;main.c: 315: if(m_tabMines[ligne-1][(colonne+j)]== 2)
  2956  000E90  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  2957  000E94  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  2958  000E98  0E00               	movlw	0
  2959  000E9A  0100               	movlb	0	; force () banked
  2960  000E9C  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  2961  000E9E  0E15               	movlw	21
  2962  000EA0  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  2963  000EA2  ECC7  F012         	call	___wmul	;wreg free
  2964  000EA6  0EEB               	movlw	235
  2965  000EA8  0100               	movlb	0	; force () banked
  2966  000EAA  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  2967  000EAC  0EFF               	movlw	255
  2968  000EAE  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  2969  000EB0  0E60               	movlw	low _m_tabMines
  2970  000EB2  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  2971  000EB4  0E00               	movlw	high _m_tabMines
  2972  000EB6  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  2973  000EB8  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  2974  000EBA  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2975  000EBC  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  2976  000EBE  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2977  000EC0  0100               	movlb	0	; force () banked
  2978  000EC2  51B4               	movf	?___wmul& (0+255),w,b
  2979  000EC4  0100               	movlb	0	; force () banked
  2980  000EC6  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2981  000EC8  0100               	movlb	0	; force () banked
  2982  000ECA  51B5               	movf	(?___wmul+1)& (0+255),w,b
  2983  000ECC  0100               	movlb	0	; force () banked
  2984  000ECE  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2985  000ED0  0100               	movlb	0	; force () banked
  2986  000ED2  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  2987  000ED4  0100               	movlb	0	; force () banked
  2988  000ED6  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  2989  000ED8  0100               	movlb	0	; force () banked
  2990  000EDA  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  2991  000EDC  0100               	movlb	0	; force () banked
  2992  000EDE  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  2993  000EE0  0100               	movlb	0	; force () banked
  2994  000EE2  51C5               	movf	calculToucheCombien@j& (0+255),w,b
  2995  000EE4  0100               	movlb	0	; force () banked
  2996  000EE6  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  2997  000EE8  6ED9               	movwf	fsr2l,c
  2998  000EEA  0100               	movlb	0	; force () banked
  2999  000EEC  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  3000  000EEE  0100               	movlb	0	; force () banked
  3001  000EF0  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  3002  000EF2  6EDA               	movwf	fsr2h,c
  3003  000EF4  0E02               	movlw	2
  3004  000EF6  18DE               	xorwf	postinc2,w,c
  3005  000EF8  A4D8               	btfss	status,2,c
  3006  000EFA  EF81  F007         	goto	u1831
  3007  000EFE  EF83  F007         	goto	u1830
  3008  000F02                     u1831:
  3009  000F02  EF86  F007         	goto	l154
  3010  000F06                     u1830:
  3011  000F06                     
  3012                           ; BSR set to: 0
  3013                           ;main.c: 316: {;main.c: 317: nb_mine++;
  3014  000F06  0100               	movlb	0	; force () banked
  3015  000F08  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  3016  000F0A  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  3017  000F0C                     l154:
  3018                           
  3019                           ; BSR set to: 0
  3020  000F0C  0100               	movlb	0	; force () banked
  3021  000F0E  4BC5               	infsnz	calculToucheCombien@j& (0+255),f,b
  3022  000F10  2BC6               	incf	(calculToucheCombien@j+1)& (0+255),f,b
  3023  000F12                     
  3024                           ; BSR set to: 0
  3025  000F12  0100               	movlb	0	; force () banked
  3026  000F14  BFC6               	btfsc	(calculToucheCombien@j+1)& (0+255),7,b
  3027  000F16  EF96  F007         	goto	u1841
  3028  000F1A  51C6               	movf	(calculToucheCombien@j+1)& (0+255),w,b
  3029  000F1C  E109               	bnz	u1840
  3030  000F1E  0E02               	movlw	2
  3031  000F20  5DC5               	subwf	calculToucheCombien@j& (0+255),w,b
  3032  000F22  A0D8               	btfss	status,0,c
  3033  000F24  EF96  F007         	goto	u1841
  3034  000F28  EF98  F007         	goto	u1840
  3035  000F2C                     u1841:
  3036  000F2C  EF48  F007         	goto	l2241
  3037  000F30                     u1840:
  3038  000F30                     l153:
  3039                           
  3040                           ; BSR set to: 0
  3041                           ;main.c: 318: };main.c: 319: };main.c: 320: for(i=-1;i<=1;i++)
  3042  000F30  0100               	movlb	0	; force () banked
  3043  000F32  69C7               	setf	calculToucheCombien@i& (0+255),b
  3044  000F34  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  3045  000F36                     
  3046                           ; BSR set to: 0
  3047  000F36  0100               	movlb	0	; force () banked
  3048  000F38  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  3049  000F3A  EFA8  F007         	goto	u1851
  3050  000F3E  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  3051  000F40  E109               	bnz	u1850
  3052  000F42  0E02               	movlw	2
  3053  000F44  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  3054  000F46  A0D8               	btfss	status,0,c
  3055  000F48  EFA8  F007         	goto	u1851
  3056  000F4C  EFAA  F007         	goto	u1850
  3057  000F50                     u1851:
  3058  000F50  EFAC  F007         	goto	l2251
  3059  000F54                     u1850:
  3060  000F54  EFF6  F007         	goto	l2257
  3061  000F58                     l2251:
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;main.c: 321: {;main.c: 322: if(m_tabMines[ligne][(colonne+i)]==2)
  3065  000F58  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  3066  000F5C  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  3067  000F60  0E00               	movlw	0
  3068  000F62  0100               	movlb	0	; force () banked
  3069  000F64  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3070  000F66  0E15               	movlw	21
  3071  000F68  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3072  000F6A  ECC7  F012         	call	___wmul	;wreg free
  3073  000F6E  0E60               	movlw	low _m_tabMines
  3074  000F70  0100               	movlb	0	; force () banked
  3075  000F72  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  3076  000F74  0E00               	movlw	high _m_tabMines
  3077  000F76  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  3078  000F78  0100               	movlb	0	; force () banked
  3079  000F7A  51B4               	movf	?___wmul& (0+255),w,b
  3080  000F7C  0100               	movlb	0	; force () banked
  3081  000F7E  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  3082  000F80  0100               	movlb	0	; force () banked
  3083  000F82  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3084  000F84  0100               	movlb	0	; force () banked
  3085  000F86  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  3086  000F88  0100               	movlb	0	; force () banked
  3087  000F8A  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  3088  000F8C  0100               	movlb	0	; force () banked
  3089  000F8E  27BE               	addwf	??_calculToucheCombien& (0+255),f,b
  3090  000F90  0100               	movlb	0	; force () banked
  3091  000F92  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3092  000F94  0100               	movlb	0	; force () banked
  3093  000F96  23BF               	addwfc	(??_calculToucheCombien+1)& (0+255),f,b
  3094  000F98  0100               	movlb	0	; force () banked
  3095  000F9A  51C7               	movf	calculToucheCombien@i& (0+255),w,b
  3096  000F9C  0100               	movlb	0	; force () banked
  3097  000F9E  25BE               	addwf	??_calculToucheCombien& (0+255),w,b
  3098  000FA0  6ED9               	movwf	fsr2l,c
  3099  000FA2  0100               	movlb	0	; force () banked
  3100  000FA4  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  3101  000FA6  0100               	movlb	0	; force () banked
  3102  000FA8  21BF               	addwfc	(??_calculToucheCombien+1)& (0+255),w,b
  3103  000FAA  6EDA               	movwf	fsr2h,c
  3104  000FAC  0E02               	movlw	2
  3105  000FAE  18DE               	xorwf	postinc2,w,c
  3106  000FB0  A4D8               	btfss	status,2,c
  3107  000FB2  EFDD  F007         	goto	u1861
  3108  000FB6  EFDF  F007         	goto	u1860
  3109  000FBA                     u1861:
  3110  000FBA  EFE2  F007         	goto	l157
  3111  000FBE                     u1860:
  3112  000FBE                     
  3113                           ; BSR set to: 0
  3114                           ;main.c: 323: {;main.c: 324: nb_mine++;
  3115  000FBE  0100               	movlb	0	; force () banked
  3116  000FC0  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  3117  000FC2  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  3118  000FC4                     l157:
  3119                           
  3120                           ; BSR set to: 0
  3121                           ;main.c: 325: };main.c: 326: i++;
  3122  000FC4  0100               	movlb	0	; force () banked
  3123  000FC6  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  3124  000FC8  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  3125  000FCA  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  3126  000FCC  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  3127  000FCE                     
  3128                           ; BSR set to: 0
  3129  000FCE  0100               	movlb	0	; force () banked
  3130  000FD0  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  3131  000FD2  EFF4  F007         	goto	u1871
  3132  000FD6  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  3133  000FD8  E109               	bnz	u1870
  3134  000FDA  0E02               	movlw	2
  3135  000FDC  5DC7               	subwf	calculToucheCombien@i& (0+255),w,b
  3136  000FDE  A0D8               	btfss	status,0,c
  3137  000FE0  EFF4  F007         	goto	u1871
  3138  000FE4  EFF6  F007         	goto	u1870
  3139  000FE8                     u1871:
  3140  000FE8  EFAC  F007         	goto	l2251
  3141  000FEC                     u1870:
  3142  000FEC                     l2257:
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;main.c: 327: };main.c: 328: };main.c: 329: if((ligne==3)&&(colonne==20))
  3146  000FEC  0E03               	movlw	3
  3147  000FEE  0100               	movlb	0	; force () banked
  3148  000FF0  19BA               	xorwf	calculToucheCombien@ligne& (0+255),w,b
  3149  000FF2  11BB               	iorwf	(calculToucheCombien@ligne+1)& (0+255),w,b
  3150  000FF4  A4D8               	btfss	status,2,c
  3151  000FF6  EFFF  F007         	goto	u1881
  3152  000FFA  EF01  F008         	goto	u1880
  3153  000FFE                     u1881:
  3154  000FFE  EFA4  F008         	goto	l2277
  3155  001002                     u1880:
  3156  001002                     
  3157                           ; BSR set to: 0
  3158  001002  0E14               	movlw	20
  3159  001004  0100               	movlb	0	; force () banked
  3160  001006  19BC               	xorwf	calculToucheCombien@colonne& (0+255),w,b
  3161  001008  11BD               	iorwf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3162  00100A  A4D8               	btfss	status,2,c
  3163  00100C  EF0A  F008         	goto	u1891
  3164  001010  EF0C  F008         	goto	u1890
  3165  001014                     u1891:
  3166  001014  EFA4  F008         	goto	l2277
  3167  001018                     u1890:
  3168  001018                     
  3169                           ; BSR set to: 0
  3170                           ;main.c: 330: {;main.c: 331: for(i=-1;i<1;i++)
  3171  001018  0100               	movlb	0	; force () banked
  3172  00101A  69C7               	setf	calculToucheCombien@i& (0+255),b
  3173  00101C  69C8               	setf	(calculToucheCombien@i+1)& (0+255),b
  3174  00101E                     
  3175                           ; BSR set to: 0
  3176  00101E  0100               	movlb	0	; force () banked
  3177  001020  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  3178  001022  EF1B  F008         	goto	u1901
  3179  001026  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  3180  001028  E108               	bnz	u1900
  3181  00102A  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  3182  00102C  A0D8               	btfss	status,0,c
  3183  00102E  EF1B  F008         	goto	u1901
  3184  001032  EF1D  F008         	goto	u1900
  3185  001036                     u1901:
  3186  001036  EF1F  F008         	goto	l2267
  3187  00103A                     u1900:
  3188  00103A  EF6E  F008         	goto	l2273
  3189  00103E                     l2267:
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;main.c: 332: {;main.c: 333: if(m_tabMines[ligne-1][colonne+i]== 2)
  3193  00103E  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  3194  001042  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  3195  001046  0E00               	movlw	0
  3196  001048  0100               	movlb	0	; force () banked
  3197  00104A  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3198  00104C  0E15               	movlw	21
  3199  00104E  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3200  001050  ECC7  F012         	call	___wmul	;wreg free
  3201  001054  0EEB               	movlw	235
  3202  001056  0100               	movlb	0	; force () banked
  3203  001058  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  3204  00105A  0EFF               	movlw	255
  3205  00105C  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  3206  00105E  0E60               	movlw	low _m_tabMines
  3207  001060  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  3208  001062  0E00               	movlw	high _m_tabMines
  3209  001064  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  3210  001066  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  3211  001068  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  3212  00106A  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  3213  00106C  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  3214  00106E  0100               	movlb	0	; force () banked
  3215  001070  51B4               	movf	?___wmul& (0+255),w,b
  3216  001072  0100               	movlb	0	; force () banked
  3217  001074  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  3218  001076  0100               	movlb	0	; force () banked
  3219  001078  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3220  00107A  0100               	movlb	0	; force () banked
  3221  00107C  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  3222  00107E  0100               	movlb	0	; force () banked
  3223  001080  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  3224  001082  0100               	movlb	0	; force () banked
  3225  001084  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  3226  001086  0100               	movlb	0	; force () banked
  3227  001088  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3228  00108A  0100               	movlb	0	; force () banked
  3229  00108C  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  3230  00108E  0100               	movlb	0	; force () banked
  3231  001090  51C7               	movf	calculToucheCombien@i& (0+255),w,b
  3232  001092  0100               	movlb	0	; force () banked
  3233  001094  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  3234  001096  6ED9               	movwf	fsr2l,c
  3235  001098  0100               	movlb	0	; force () banked
  3236  00109A  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  3237  00109C  0100               	movlb	0	; force () banked
  3238  00109E  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  3239  0010A0  6EDA               	movwf	fsr2h,c
  3240  0010A2  0E02               	movlw	2
  3241  0010A4  18DE               	xorwf	postinc2,w,c
  3242  0010A6  A4D8               	btfss	status,2,c
  3243  0010A8  EF58  F008         	goto	u1911
  3244  0010AC  EF5A  F008         	goto	u1910
  3245  0010B0                     u1911:
  3246  0010B0  EF5D  F008         	goto	l161
  3247  0010B4                     u1910:
  3248  0010B4                     
  3249                           ; BSR set to: 0
  3250                           ;main.c: 334: {;main.c: 335: nb_mine++;
  3251  0010B4  0100               	movlb	0	; force () banked
  3252  0010B6  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  3253  0010B8  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  3254  0010BA                     l161:
  3255                           
  3256                           ; BSR set to: 0
  3257  0010BA  0100               	movlb	0	; force () banked
  3258  0010BC  4BC7               	infsnz	calculToucheCombien@i& (0+255),f,b
  3259  0010BE  2BC8               	incf	(calculToucheCombien@i+1)& (0+255),f,b
  3260  0010C0                     
  3261                           ; BSR set to: 0
  3262  0010C0  0100               	movlb	0	; force () banked
  3263  0010C2  BFC8               	btfsc	(calculToucheCombien@i+1)& (0+255),7,b
  3264  0010C4  EF6C  F008         	goto	u1921
  3265  0010C8  51C8               	movf	(calculToucheCombien@i+1)& (0+255),w,b
  3266  0010CA  E108               	bnz	u1920
  3267  0010CC  05C7               	decf	calculToucheCombien@i& (0+255),w,b
  3268  0010CE  A0D8               	btfss	status,0,c
  3269  0010D0  EF6C  F008         	goto	u1921
  3270  0010D4  EF6E  F008         	goto	u1920
  3271  0010D8                     u1921:
  3272  0010D8  EF1F  F008         	goto	l2267
  3273  0010DC                     u1920:
  3274  0010DC                     l2273:
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;main.c: 336: };main.c: 337: };main.c: 338: if(m_tabMines[ligne][colonne-1]==2)
  3278  0010DC  C0BA  F0B4         	movff	calculToucheCombien@ligne,___wmul@multiplier
  3279  0010E0  C0BB  F0B5         	movff	calculToucheCombien@ligne+1,___wmul@multiplier+1
  3280  0010E4  0E00               	movlw	0
  3281  0010E6  0100               	movlb	0	; force () banked
  3282  0010E8  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3283  0010EA  0E15               	movlw	21
  3284  0010EC  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3285  0010EE  ECC7  F012         	call	___wmul	;wreg free
  3286  0010F2  0EFF               	movlw	255
  3287  0010F4  0100               	movlb	0	; force () banked
  3288  0010F6  6FBE               	movwf	??_calculToucheCombien& (0+255),b
  3289  0010F8  0EFF               	movlw	255
  3290  0010FA  6FBF               	movwf	(??_calculToucheCombien+1)& (0+255),b
  3291  0010FC  0E60               	movlw	low _m_tabMines
  3292  0010FE  6FC0               	movwf	(??_calculToucheCombien+2)& (0+255),b
  3293  001100  0E00               	movlw	high _m_tabMines
  3294  001102  6FC1               	movwf	(??_calculToucheCombien+3)& (0+255),b
  3295  001104  51BE               	movf	??_calculToucheCombien& (0+255),w,b
  3296  001106  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  3297  001108  51BF               	movf	(??_calculToucheCombien+1)& (0+255),w,b
  3298  00110A  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  3299  00110C  0100               	movlb	0	; force () banked
  3300  00110E  51B4               	movf	?___wmul& (0+255),w,b
  3301  001110  0100               	movlb	0	; force () banked
  3302  001112  27C0               	addwf	(??_calculToucheCombien+2)& (0+255),f,b
  3303  001114  0100               	movlb	0	; force () banked
  3304  001116  51B5               	movf	(?___wmul+1)& (0+255),w,b
  3305  001118  0100               	movlb	0	; force () banked
  3306  00111A  23C1               	addwfc	(??_calculToucheCombien+3)& (0+255),f,b
  3307  00111C  0100               	movlb	0	; force () banked
  3308  00111E  51BC               	movf	calculToucheCombien@colonne& (0+255),w,b
  3309  001120  0100               	movlb	0	; force () banked
  3310  001122  25C0               	addwf	(??_calculToucheCombien+2)& (0+255),w,b
  3311  001124  6ED9               	movwf	fsr2l,c
  3312  001126  0100               	movlb	0	; force () banked
  3313  001128  51BD               	movf	(calculToucheCombien@colonne+1)& (0+255),w,b
  3314  00112A  0100               	movlb	0	; force () banked
  3315  00112C  21C1               	addwfc	(??_calculToucheCombien+3)& (0+255),w,b
  3316  00112E  6EDA               	movwf	fsr2h,c
  3317  001130  0E02               	movlw	2
  3318  001132  18DE               	xorwf	postinc2,w,c
  3319  001134  A4D8               	btfss	status,2,c
  3320  001136  EF9F  F008         	goto	u1931
  3321  00113A  EFA1  F008         	goto	u1930
  3322  00113E                     u1931:
  3323  00113E  EFA4  F008         	goto	l2277
  3324  001142                     u1930:
  3325  001142                     
  3326                           ; BSR set to: 0
  3327                           ;main.c: 339: {;main.c: 340: nb_mine++;
  3328  001142  0100               	movlb	0	; force () banked
  3329  001144  4BC3               	infsnz	calculToucheCombien@nb_mine& (0+255),f,b
  3330  001146  2BC4               	incf	(calculToucheCombien@nb_mine+1)& (0+255),f,b
  3331  001148                     l2277:
  3332                           
  3333                           ; BSR set to: 0
  3334                           ;main.c: 341: };main.c: 342: };main.c: 343: return nb_mine;
  3335  001148  0100               	movlb	0	; force () banked
  3336  00114A  51C3               	movf	calculToucheCombien@nb_mine& (0+255),w,b
  3337  00114C                     
  3338                           ; BSR set to: 0
  3339  00114C  0012               	return		;funcret
  3340  00114E                     __end_of_calculToucheCombien:
  3341                           	opt callstack 0
  3342                           
  3343 ;; *************** function _lcd_init *****************
  3344 ;; Defined at:
  3345 ;;		line 258 in file "Lcd4Lignes.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;		None
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;		None
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3359 ;;      Params:         0       0       0       0       0       0       0
  3360 ;;      Locals:         0       0       0       0       0       0       0
  3361 ;;      Temps:          0       0       0       0       0       0       0
  3362 ;;      Totals:         0       0       0       0       0       0       0
  3363 ;;Total ram usage:        0 bytes
  3364 ;; Hardware stack levels used:    1
  3365 ;; Hardware stack levels required when called:    5
  3366 ;; This function calls:
  3367 ;;		_lcd_initCGRam
  3368 ;;		_lcd_resetSequence
  3369 ;;		_lcd_wrCom
  3370 ;; This function is called by:
  3371 ;;		_main
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text7
  3376  002566                     __ptext7:
  3377                           	opt callstack 0
  3378  002566                     _lcd_init:
  3379                           	opt callstack 25
  3380  002566                     
  3381                           ;Lcd4Lignes.c: 261: lcd_resetSequence();
  3382  002566  EC89  F011         	call	_lcd_resetSequence	;wreg free
  3383                           
  3384                           ;Lcd4Lignes.c: 262: lcd_wrCom(0x28);
  3385  00256A  0E28               	movlw	40
  3386  00256C  EC53  F011         	call	_lcd_wrCom
  3387                           
  3388                           ;Lcd4Lignes.c: 263: lcd_wrCom(0x0F);
  3389  002570  0E0F               	movlw	15
  3390  002572  EC53  F011         	call	_lcd_wrCom
  3391                           
  3392                           ;Lcd4Lignes.c: 264: lcd_wrCom(0x01);
  3393  002576  0E01               	movlw	1
  3394  002578  EC53  F011         	call	_lcd_wrCom
  3395                           
  3396                           ;Lcd4Lignes.c: 265: lcd_wrCom(0x06);
  3397  00257C  0E06               	movlw	6
  3398  00257E  EC53  F011         	call	_lcd_wrCom
  3399                           
  3400                           ;Lcd4Lignes.c: 266: lcd_wrCom(0x80);
  3401  002582  0E80               	movlw	128
  3402  002584  EC53  F011         	call	_lcd_wrCom
  3403  002588                     
  3404                           ;Lcd4Lignes.c: 267: lcd_initCGRam();
  3405  002588  EC93  F010         	call	_lcd_initCGRam	;wreg free
  3406  00258C  0012               	return		;funcret
  3407  00258E                     __end_of_lcd_init:
  3408                           	opt callstack 0
  3409                           
  3410 ;; *************** function _lcd_resetSequence *****************
  3411 ;; Defined at:
  3412 ;;		line 221 in file "Lcd4Lignes.c"
  3413 ;; Parameters:    Size  Location     Type
  3414 ;;		None
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;		None
  3417 ;; Return value:  Size  Location     Type
  3418 ;;                  1    wreg      void 
  3419 ;; Registers used:
  3420 ;;		wreg, status,2, status,0, cstack
  3421 ;; Tracked objects:
  3422 ;;		On entry : 0/0
  3423 ;;		On exit  : 0/0
  3424 ;;		Unchanged: 0/0
  3425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3426 ;;      Params:         0       0       0       0       0       0       0
  3427 ;;      Locals:         0       0       0       0       0       0       0
  3428 ;;      Temps:          0       1       0       0       0       0       0
  3429 ;;      Totals:         0       1       0       0       0       0       0
  3430 ;;Total ram usage:        1 bytes
  3431 ;; Hardware stack levels used:    1
  3432 ;; Hardware stack levels required when called:    1
  3433 ;; This function calls:
  3434 ;;		_lcd_ecrireDonnees
  3435 ;;		_lcd_strobeEnableBit
  3436 ;; This function is called by:
  3437 ;;		_lcd_init
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           	psect	text8
  3442  002312                     __ptext8:
  3443                           	opt callstack 0
  3444  002312                     _lcd_resetSequence:
  3445                           	opt callstack 28
  3446  002312                     
  3447                           ;Lcd4Lignes.c: 226: TRISD = 0b00000000;
  3448  002312  0E00               	movlw	0
  3449  002314  6E95               	movwf	149,c	;volatile
  3450  002316                     
  3451                           ;Lcd4Lignes.c: 228: _delay((unsigned long)((40)*(1000000/4000.0)));
  3452  002316  0E0D               	movlw	13
  3453  002318  0100               	movlb	0	; force () banked
  3454  00231A  6FB6               	movwf	??_lcd_resetSequence& (0+255),b
  3455  00231C  0EFB               	movlw	251
  3456  00231E                     u2607:
  3457  00231E  2EE8               	decfsz	wreg,f,c
  3458  002320  D7FE               	bra	u2607
  3459  002322  2FB6               	decfsz	??_lcd_resetSequence& (0+255),f,b
  3460  002324  D7FC               	bra	u2607
  3461  002326  F000 F000          	nop2	
  3462  00232A                     
  3463                           ;Lcd4Lignes.c: 229: PORTAbits.RA0 = 0;
  3464  00232A  9080               	bcf	128,0,c	;volatile
  3465  00232C                     
  3466                           ;Lcd4Lignes.c: 230: PORTAbits.RA1 = 0;
  3467  00232C  9280               	bcf	128,1,c	;volatile
  3468  00232E                     
  3469                           ;Lcd4Lignes.c: 232: lcd_ecrireDonnees(0x03);
  3470  00232E  0E03               	movlw	3
  3471  002330  ECFD  F012         	call	_lcd_ecrireDonnees
  3472  002334                     
  3473                           ;Lcd4Lignes.c: 233: lcd_strobeEnableBit();
  3474  002334  EC16  F013         	call	_lcd_strobeEnableBit	;wreg free
  3475  002338                     
  3476                           ;Lcd4Lignes.c: 234: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3477  002338  0E03               	movlw	3
  3478  00233A                     u2617:
  3479  00233A  2EE8               	decfsz	wreg,f,c
  3480  00233C  D7FE               	bra	u2617
  3481  00233E  F000               	nop	
  3482  002340                     
  3483                           ;Lcd4Lignes.c: 237: lcd_ecrireDonnees(0x03);
  3484  002340  0E03               	movlw	3
  3485  002342  ECFD  F012         	call	_lcd_ecrireDonnees
  3486  002346                     
  3487                           ;Lcd4Lignes.c: 238: lcd_strobeEnableBit();
  3488  002346  EC16  F013         	call	_lcd_strobeEnableBit	;wreg free
  3489  00234A                     
  3490                           ;Lcd4Lignes.c: 239: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3491  00234A  0E03               	movlw	3
  3492  00234C                     u2627:
  3493  00234C  2EE8               	decfsz	wreg,f,c
  3494  00234E  D7FE               	bra	u2627
  3495  002350  F000               	nop	
  3496  002352                     
  3497                           ;Lcd4Lignes.c: 241: lcd_ecrireDonnees(0x03);
  3498  002352  0E03               	movlw	3
  3499  002354  ECFD  F012         	call	_lcd_ecrireDonnees
  3500  002358                     
  3501                           ;Lcd4Lignes.c: 242: lcd_strobeEnableBit();
  3502  002358  EC16  F013         	call	_lcd_strobeEnableBit	;wreg free
  3503  00235C                     
  3504                           ;Lcd4Lignes.c: 243: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3505  00235C  0E03               	movlw	3
  3506  00235E                     u2637:
  3507  00235E  2EE8               	decfsz	wreg,f,c
  3508  002360  D7FE               	bra	u2637
  3509  002362  F000               	nop	
  3510  002364                     
  3511                           ;Lcd4Lignes.c: 245: lcd_ecrireDonnees(0x02);
  3512  002364  0E02               	movlw	2
  3513  002366  ECFD  F012         	call	_lcd_ecrireDonnees
  3514  00236A                     
  3515                           ;Lcd4Lignes.c: 246: lcd_strobeEnableBit();
  3516  00236A  EC16  F013         	call	_lcd_strobeEnableBit	;wreg free
  3517  00236E                     
  3518                           ;Lcd4Lignes.c: 247: _delay((unsigned long)((40)*(1000000/4000000.0)));
  3519  00236E  0E03               	movlw	3
  3520  002370                     u2647:
  3521  002370  2EE8               	decfsz	wreg,f,c
  3522  002372  D7FE               	bra	u2647
  3523  002374  F000               	nop	
  3524  002376                     
  3525                           ;Lcd4Lignes.c: 249: TRISD = 0b00001111;
  3526  002376  0E0F               	movlw	15
  3527  002378  6E95               	movwf	149,c	;volatile
  3528  00237A  0012               	return		;funcret
  3529  00237C                     __end_of_lcd_resetSequence:
  3530                           	opt callstack 0
  3531                           
  3532 ;; *************** function _lcd_initCGRam *****************
  3533 ;; Defined at:
  3534 ;;		line 417 in file "Lcd4Lignes.c"
  3535 ;; Parameters:    Size  Location     Type
  3536 ;;		None
  3537 ;; Auto vars:     Size  Location     Type
  3538 ;;  j               1    6[BANK0 ] unsigned char 
  3539 ;;  i               1    5[BANK0 ] unsigned char 
  3540 ;; Return value:  Size  Location     Type
  3541 ;;                  1    wreg      void 
  3542 ;; Registers used:
  3543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3549 ;;      Params:         0       0       0       0       0       0       0
  3550 ;;      Locals:         0       2       0       0       0       0       0
  3551 ;;      Temps:          0       2       0       0       0       0       0
  3552 ;;      Totals:         0       4       0       0       0       0       0
  3553 ;;Total ram usage:        4 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; Hardware stack levels required when called:    4
  3556 ;; This function calls:
  3557 ;;		_lcd_curseurHome
  3558 ;;		_lcd_wrCom
  3559 ;;		_lcd_wrData
  3560 ;; This function is called by:
  3561 ;;		_lcd_init
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565                           	psect	text9
  3566  002126                     __ptext9:
  3567                           	opt callstack 0
  3568  002126                     _lcd_initCGRam:
  3569                           	opt callstack 25
  3570  002126                     
  3571                           ;Lcd4Lignes.c: 419: char i,j;;Lcd4Lignes.c: 421: lcd_wrCom(0x40);
  3572  002126  0E40               	movlw	64
  3573  002128  EC53  F011         	call	_lcd_wrCom
  3574  00212C                     
  3575                           ;Lcd4Lignes.c: 422: for(i=0;i<8;i++)
  3576  00212C  0E00               	movlw	0
  3577  00212E  0100               	movlb	0	; force () banked
  3578  002130  6FB9               	movwf	lcd_initCGRam@i& (0+255),b
  3579  002132                     
  3580                           ; BSR set to: 0
  3581  002132  0E07               	movlw	7
  3582  002134  0100               	movlb	0	; force () banked
  3583  002136  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  3584  002138  EFA0  F010         	goto	u2061
  3585  00213C  EFA2  F010         	goto	u2060
  3586  002140                     u2061:
  3587  002140  EFA4  F010         	goto	l2381
  3588  002144                     u2060:
  3589  002144  EFE1  F010         	goto	l2397
  3590  002148                     l2381:
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;Lcd4Lignes.c: 423: {;Lcd4Lignes.c: 424: for(j=0;j<8;j++)
  3594  002148  0E00               	movlw	0
  3595  00214A  0100               	movlb	0	; force () banked
  3596  00214C  6FBA               	movwf	lcd_initCGRam@j& (0+255),b
  3597  00214E                     
  3598                           ; BSR set to: 0
  3599  00214E  0E07               	movlw	7
  3600  002150  0100               	movlb	0	; force () banked
  3601  002152  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  3602  002154  EFAE  F010         	goto	u2071
  3603  002158  EFB0  F010         	goto	u2070
  3604  00215C                     u2071:
  3605  00215C  EFB2  F010         	goto	l2387
  3606  002160                     u2070:
  3607  002160  EFD6  F010         	goto	l2393
  3608  002164                     l2387:
  3609                           
  3610                           ; BSR set to: 0
  3611                           ;Lcd4Lignes.c: 425: lcd_wrData(matCGRAM[i][j]);
  3612  002164  0100               	movlb	0	; force () banked
  3613  002166  51B9               	movf	lcd_initCGRam@i& (0+255),w,b
  3614  002168  0D08               	mullw	8
  3615  00216A  0E54               	movlw	low _matCGRAM
  3616  00216C  0100               	movlb	0	; force () banked
  3617  00216E  6FB7               	movwf	??_lcd_initCGRam& (0+255),b
  3618  002170  0E01               	movlw	high _matCGRAM
  3619  002172  6FB8               	movwf	(??_lcd_initCGRam+1)& (0+255),b
  3620  002174  50F3               	movf	243,w,c
  3621  002176  27B7               	addwf	??_lcd_initCGRam& (0+255),f,b
  3622  002178  50F4               	movf	244,w,c
  3623  00217A  23B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),f,b
  3624  00217C  0100               	movlb	0	; force () banked
  3625  00217E  51BA               	movf	lcd_initCGRam@j& (0+255),w,b
  3626  002180  0100               	movlb	0	; force () banked
  3627  002182  25B7               	addwf	??_lcd_initCGRam& (0+255),w,b
  3628  002184  6ED9               	movwf	fsr2l,c
  3629  002186  0100               	movlb	0	; force () banked
  3630  002188  0E00               	movlw	0
  3631  00218A  0100               	movlb	0	; force () banked
  3632  00218C  21B8               	addwfc	(??_lcd_initCGRam+1)& (0+255),w,b
  3633  00218E  6EDA               	movwf	fsr2h,c
  3634  002190  50DF               	movf	indf2,w,c
  3635  002192  EC83  F012         	call	_lcd_wrData
  3636  002196  0100               	movlb	0	; force () banked
  3637  002198  2BBA               	incf	lcd_initCGRam@j& (0+255),f,b
  3638  00219A                     
  3639                           ; BSR set to: 0
  3640  00219A  0E07               	movlw	7
  3641  00219C  0100               	movlb	0	; force () banked
  3642  00219E  65BA               	cpfsgt	lcd_initCGRam@j& (0+255),b
  3643  0021A0  EFD4  F010         	goto	u2081
  3644  0021A4  EFD6  F010         	goto	u2080
  3645  0021A8                     u2081:
  3646  0021A8  EFB2  F010         	goto	l2387
  3647  0021AC                     u2080:
  3648  0021AC                     l2393:
  3649                           
  3650                           ; BSR set to: 0
  3651  0021AC  0100               	movlb	0	; force () banked
  3652  0021AE  2BB9               	incf	lcd_initCGRam@i& (0+255),f,b
  3653  0021B0                     
  3654                           ; BSR set to: 0
  3655  0021B0  0E07               	movlw	7
  3656  0021B2  0100               	movlb	0	; force () banked
  3657  0021B4  65B9               	cpfsgt	lcd_initCGRam@i& (0+255),b
  3658  0021B6  EFDF  F010         	goto	u2091
  3659  0021BA  EFE1  F010         	goto	u2090
  3660  0021BE                     u2091:
  3661  0021BE  EFA4  F010         	goto	l2381
  3662  0021C2                     u2090:
  3663  0021C2                     l2397:
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;Lcd4Lignes.c: 426: };Lcd4Lignes.c: 427: lcd_curseurHome();
  3667  0021C2  EC12  F013         	call	_lcd_curseurHome	;wreg free
  3668  0021C6  0012               	return		;funcret
  3669  0021C8                     __end_of_lcd_initCGRam:
  3670                           	opt callstack 0
  3671                           
  3672 ;; *************** function _lcd_curseurHome *****************
  3673 ;; Defined at:
  3674 ;;		line 288 in file "Lcd4Lignes.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;		None
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;		None
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  1    wreg      void 
  3681 ;; Registers used:
  3682 ;;		wreg, status,2, status,0, cstack
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3688 ;;      Params:         0       0       0       0       0       0       0
  3689 ;;      Locals:         0       0       0       0       0       0       0
  3690 ;;      Temps:          0       0       0       0       0       0       0
  3691 ;;      Totals:         0       0       0       0       0       0       0
  3692 ;;Total ram usage:        0 bytes
  3693 ;; Hardware stack levels used:    1
  3694 ;; Hardware stack levels required when called:    3
  3695 ;; This function calls:
  3696 ;;		_lcd_wrCom
  3697 ;; This function is called by:
  3698 ;;		_main
  3699 ;;		_lcd_initCGRam
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text10
  3704  002624                     __ptext10:
  3705                           	opt callstack 0
  3706  002624                     _lcd_curseurHome:
  3707                           	opt callstack 25
  3708  002624                     
  3709                           ;Lcd4Lignes.c: 290: lcd_wrCom(0x02);
  3710  002624  0E02               	movlw	2
  3711  002626  EC53  F011         	call	_lcd_wrCom
  3712  00262A  0012               	return		;funcret
  3713  00262C                     __end_of_lcd_curseurHome:
  3714                           	opt callstack 0
  3715                           
  3716 ;; *************** function _initialisation *****************
  3717 ;; Defined at:
  3718 ;;		line 91 in file "main.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;		None
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;		None
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  1    wreg      void 
  3725 ;; Registers used:
  3726 ;;		wreg, status,2
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3732 ;;      Params:         0       0       0       0       0       0       0
  3733 ;;      Locals:         0       0       0       0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0
  3735 ;;      Totals:         0       0       0       0       0       0       0
  3736 ;;Total ram usage:        0 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; This function calls:
  3739 ;;		Nothing
  3740 ;; This function is called by:
  3741 ;;		_main
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text11
  3746  0025B6                     __ptext11:
  3747                           	opt callstack 0
  3748  0025B6                     _initialisation:
  3749                           	opt callstack 30
  3750  0025B6                     
  3751                           ;main.c: 93: TRISD = 0;
  3752  0025B6  0E00               	movlw	0
  3753  0025B8  6E95               	movwf	149,c	;volatile
  3754                           
  3755                           ;main.c: 95: ANSELH = 0;
  3756  0025BA  0E00               	movlw	0
  3757  0025BC  6E7F               	movwf	127,c	;volatile
  3758  0025BE                     
  3759                           ;main.c: 96: TRISB = 0xFF;
  3760  0025BE  6893               	setf	147,c	;volatile
  3761                           
  3762                           ;main.c: 98: ANSEL = 0;
  3763  0025C0  0E00               	movlw	0
  3764  0025C2  6E7E               	movwf	126,c	;volatile
  3765                           
  3766                           ;main.c: 99: TRISA = 0;
  3767  0025C4  0E00               	movlw	0
  3768  0025C6  6E92               	movwf	146,c	;volatile
  3769  0025C8                     
  3770                           ;main.c: 101: ANSELbits.ANS7 = 1;
  3771  0025C8  8E7E               	bsf	126,7,c	;volatile
  3772  0025CA                     
  3773                           ;main.c: 103: ADCON0bits.ADON = 1;
  3774  0025CA  80C2               	bsf	194,0,c	;volatile
  3775                           
  3776                           ;main.c: 104: ADCON1 = 0;
  3777  0025CC  0E00               	movlw	0
  3778  0025CE  6EC1               	movwf	193,c	;volatile
  3779  0025D0                     
  3780                           ;main.c: 106: ADCON2bits.ADFM = 0;
  3781  0025D0  9EC0               	bcf	192,7,c	;volatile
  3782                           
  3783                           ;main.c: 107: ADCON2bits.ACQT = 0;
  3784  0025D2  0EC7               	movlw	-57
  3785  0025D4  16C0               	andwf	192,f,c	;volatile
  3786                           
  3787                           ;main.c: 108: ADCON2bits.ADCS = 0;
  3788  0025D6  0EF8               	movlw	-8
  3789  0025D8  16C0               	andwf	192,f,c	;volatile
  3790  0025DA  0012               	return		;funcret
  3791  0025DC                     __end_of_initialisation:
  3792                           	opt callstack 0
  3793                           
  3794 ;; *************** function _init_serie *****************
  3795 ;; Defined at:
  3796 ;;		line 29 in file "serie.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;		None
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, status,2
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3810 ;;      Params:         0       0       0       0       0       0       0
  3811 ;;      Locals:         0       0       0       0       0       0       0
  3812 ;;      Temps:          0       0       0       0       0       0       0
  3813 ;;      Totals:         0       0       0       0       0       0       0
  3814 ;;Total ram usage:        0 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; This function calls:
  3817 ;;		Nothing
  3818 ;; This function is called by:
  3819 ;;		_main
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           	psect	text12
  3824  0025DC                     __ptext12:
  3825                           	opt callstack 0
  3826  0025DC                     _init_serie:
  3827                           	opt callstack 30
  3828  0025DC                     
  3829                           ;serie.c: 32: TRISCbits.TRISC7=1;
  3830  0025DC  8E94               	bsf	148,7,c	;volatile
  3831                           
  3832                           ;serie.c: 33: TRISCbits.TRISC6=1;
  3833  0025DE  8C94               	bsf	148,6,c	;volatile
  3834  0025E0                     
  3835                           ;serie.c: 37: SPBRGH=0x00;
  3836  0025E0  0E00               	movlw	0
  3837  0025E2  6EB0               	movwf	176,c	;volatile
  3838                           
  3839                           ;serie.c: 38: SPBRG=25;
  3840  0025E4  0E19               	movlw	25
  3841  0025E6  6EAF               	movwf	175,c	;volatile
  3842  0025E8                     
  3843                           ;serie.c: 39: BAUDCONbits.BRG16=1;
  3844  0025E8  86B8               	bsf	184,3,c	;volatile
  3845  0025EA                     
  3846                           ;serie.c: 40: TXSTAbits.BRGH=1;
  3847  0025EA  84AC               	bsf	172,2,c	;volatile
  3848  0025EC                     
  3849                           ;serie.c: 43: TXSTAbits.SYNC=0;
  3850  0025EC  98AC               	bcf	172,4,c	;volatile
  3851  0025EE                     
  3852                           ;serie.c: 44: TXSTAbits.TXEN=1;
  3853  0025EE  8AAC               	bsf	172,5,c	;volatile
  3854  0025F0                     
  3855                           ;serie.c: 45: RCSTAbits.CREN = 1;
  3856  0025F0  88AB               	bsf	171,4,c	;volatile
  3857  0025F2                     
  3858                           ;serie.c: 46: RCSTAbits.SPEN=1;
  3859  0025F2  8EAB               	bsf	171,7,c	;volatile
  3860                           
  3861                           ;serie.c: 47: ANSEL = 0;
  3862  0025F4  0E00               	movlw	0
  3863  0025F6  6E7E               	movwf	126,c	;volatile
  3864  0025F8  0012               	return		;funcret
  3865  0025FA                     __end_of_init_serie:
  3866                           	opt callstack 0
  3867                           
  3868 ;; *************** function _initTabVue *****************
  3869 ;; Defined at:
  3870 ;;		line 132 in file "main.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;		None
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  j               2   10[BANK0 ] int 
  3875 ;;  i               2    8[BANK0 ] int 
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      void 
  3878 ;; Registers used:
  3879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3885 ;;      Params:         0       0       0       0       0       0       0
  3886 ;;      Locals:         0       4       0       0       0       0       0
  3887 ;;      Temps:          0       2       0       0       0       0       0
  3888 ;;      Totals:         0       6       0       0       0       0       0
  3889 ;;Total ram usage:        6 bytes
  3890 ;; Hardware stack levels used:    1
  3891 ;; Hardware stack levels required when called:    1
  3892 ;; This function calls:
  3893 ;;		___wmul
  3894 ;; This function is called by:
  3895 ;;		_main
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text13
  3900  001B28                     __ptext13:
  3901                           	opt callstack 0
  3902  001B28                     _initTabVue:
  3903                           	opt callstack 29
  3904  001B28                     
  3905                           ;main.c: 134: int i=0;
  3906  001B28  0E00               	movlw	0
  3907  001B2A  0100               	movlb	0	; force () banked
  3908  001B2C  6FBD               	movwf	(initTabVue@i+1)& (0+255),b
  3909  001B2E  0E00               	movlw	0
  3910  001B30  6FBC               	movwf	initTabVue@i& (0+255),b
  3911                           
  3912                           ;main.c: 135: int j=0;
  3913  001B32  0E00               	movlw	0
  3914  001B34  0100               	movlb	0	; force () banked
  3915  001B36  6FBF               	movwf	(initTabVue@j+1)& (0+255),b
  3916  001B38  0E00               	movlw	0
  3917  001B3A  6FBE               	movwf	initTabVue@j& (0+255),b
  3918                           
  3919                           ;main.c: 136: for ( i=0;i<4;i++)
  3920  001B3C  0E00               	movlw	0
  3921  001B3E  0100               	movlb	0	; force () banked
  3922  001B40  6FBD               	movwf	(initTabVue@i+1)& (0+255),b
  3923  001B42  0E00               	movlw	0
  3924  001B44  6FBC               	movwf	initTabVue@i& (0+255),b
  3925  001B46                     
  3926                           ; BSR set to: 0
  3927  001B46  0100               	movlb	0	; force () banked
  3928  001B48  BFBD               	btfsc	(initTabVue@i+1)& (0+255),7,b
  3929  001B4A  EFB0  F00D         	goto	u2161
  3930  001B4E  51BD               	movf	(initTabVue@i+1)& (0+255),w,b
  3931  001B50  E109               	bnz	u2160
  3932  001B52  0E04               	movlw	4
  3933  001B54  5DBC               	subwf	initTabVue@i& (0+255),w,b
  3934  001B56  A0D8               	btfss	status,0,c
  3935  001B58  EFB0  F00D         	goto	u2161
  3936  001B5C  EFB2  F00D         	goto	u2160
  3937  001B60                     u2161:
  3938  001B60  EFB4  F00D         	goto	l2445
  3939  001B64                     u2160:
  3940  001B64  EF50  F00E         	goto	l97
  3941  001B68                     l2445:
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;main.c: 137: {;main.c: 138: for (j=0;j<=(20);j++)
  3945  001B68  0E00               	movlw	0
  3946  001B6A  0100               	movlb	0	; force () banked
  3947  001B6C  6FBF               	movwf	(initTabVue@j+1)& (0+255),b
  3948  001B6E  0E00               	movlw	0
  3949  001B70  6FBE               	movwf	initTabVue@j& (0+255),b
  3950  001B72                     
  3951                           ; BSR set to: 0
  3952  001B72  0100               	movlb	0	; force () banked
  3953  001B74  BFBF               	btfsc	(initTabVue@j+1)& (0+255),7,b
  3954  001B76  EFC6  F00D         	goto	u2171
  3955  001B7A  51BF               	movf	(initTabVue@j+1)& (0+255),w,b
  3956  001B7C  E109               	bnz	u2170
  3957  001B7E  0E15               	movlw	21
  3958  001B80  5DBE               	subwf	initTabVue@j& (0+255),w,b
  3959  001B82  A0D8               	btfss	status,0,c
  3960  001B84  EFC6  F00D         	goto	u2171
  3961  001B88  EFC8  F00D         	goto	u2170
  3962  001B8C                     u2171:
  3963  001B8C  EFCA  F00D         	goto	l2451
  3964  001B90                     u2170:
  3965  001B90  EF3E  F00E         	goto	l2463
  3966  001B94                     l2451:
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;main.c: 139: {;main.c: 140: if(i<20)
  3970  001B94  0100               	movlb	0	; force () banked
  3971  001B96  BFBD               	btfsc	(initTabVue@i+1)& (0+255),7,b
  3972  001B98  EFD9  F00D         	goto	u2180
  3973  001B9C  51BD               	movf	(initTabVue@i+1)& (0+255),w,b
  3974  001B9E  E107               	bnz	u2181
  3975  001BA0  0E14               	movlw	20
  3976  001BA2  5DBC               	subwf	initTabVue@i& (0+255),w,b
  3977  001BA4  B0D8               	btfsc	status,0,c
  3978  001BA6  EFD7  F00D         	goto	u2181
  3979  001BAA  EFD9  F00D         	goto	u2180
  3980  001BAE                     u2181:
  3981  001BAE  EFFD  F00D         	goto	l2455
  3982  001BB2                     u2180:
  3983  001BB2                     
  3984                           ; BSR set to: 0
  3985                           ;main.c: 141: {;main.c: 142: m_tabVue[i][j]= 1;
  3986  001BB2  C0BC  F0B4         	movff	initTabVue@i,___wmul@multiplier
  3987  001BB6  C0BD  F0B5         	movff	initTabVue@i+1,___wmul@multiplier+1
  3988  001BBA  0E00               	movlw	0
  3989  001BBC  0100               	movlb	0	; force () banked
  3990  001BBE  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  3991  001BC0  0E15               	movlw	21
  3992  001BC2  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  3993  001BC4  ECC7  F012         	call	___wmul	;wreg free
  3994  001BC8  0E00               	movlw	low _m_tabVue
  3995  001BCA  0100               	movlb	0	; force () banked
  3996  001BCC  6FBA               	movwf	??_initTabVue& (0+255),b
  3997  001BCE  0E01               	movlw	high _m_tabVue
  3998  001BD0  6FBB               	movwf	(??_initTabVue+1)& (0+255),b
  3999  001BD2  0100               	movlb	0	; force () banked
  4000  001BD4  51B4               	movf	?___wmul& (0+255),w,b
  4001  001BD6  0100               	movlb	0	; force () banked
  4002  001BD8  27BA               	addwf	??_initTabVue& (0+255),f,b
  4003  001BDA  0100               	movlb	0	; force () banked
  4004  001BDC  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4005  001BDE  0100               	movlb	0	; force () banked
  4006  001BE0  23BB               	addwfc	(??_initTabVue+1)& (0+255),f,b
  4007  001BE2  0100               	movlb	0	; force () banked
  4008  001BE4  51BE               	movf	initTabVue@j& (0+255),w,b
  4009  001BE6  0100               	movlb	0	; force () banked
  4010  001BE8  25BA               	addwf	??_initTabVue& (0+255),w,b
  4011  001BEA  6ED9               	movwf	fsr2l,c
  4012  001BEC  0100               	movlb	0	; force () banked
  4013  001BEE  51BF               	movf	(initTabVue@j+1)& (0+255),w,b
  4014  001BF0  0100               	movlb	0	; force () banked
  4015  001BF2  21BB               	addwfc	(??_initTabVue+1)& (0+255),w,b
  4016  001BF4  6EDA               	movwf	fsr2h,c
  4017  001BF6  0E01               	movlw	1
  4018  001BF8  6EDF               	movwf	indf2,c
  4019  001BFA                     l2455:
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;main.c: 143: };main.c: 145: if (j==20)
  4023  001BFA  0E14               	movlw	20
  4024  001BFC  0100               	movlb	0	; force () banked
  4025  001BFE  19BE               	xorwf	initTabVue@j& (0+255),w,b
  4026  001C00  11BF               	iorwf	(initTabVue@j+1)& (0+255),w,b
  4027  001C02  A4D8               	btfss	status,2,c
  4028  001C04  EF06  F00E         	goto	u2191
  4029  001C08  EF08  F00E         	goto	u2190
  4030  001C0C                     u2191:
  4031  001C0C  EF2C  F00E         	goto	l2459
  4032  001C10                     u2190:
  4033  001C10                     
  4034                           ; BSR set to: 0
  4035                           ;main.c: 146: {;main.c: 147: m_tabVue[i][j]= '\0';
  4036  001C10  C0BC  F0B4         	movff	initTabVue@i,___wmul@multiplier
  4037  001C14  C0BD  F0B5         	movff	initTabVue@i+1,___wmul@multiplier+1
  4038  001C18  0E00               	movlw	0
  4039  001C1A  0100               	movlb	0	; force () banked
  4040  001C1C  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4041  001C1E  0E15               	movlw	21
  4042  001C20  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4043  001C22  ECC7  F012         	call	___wmul	;wreg free
  4044  001C26  0E00               	movlw	low _m_tabVue
  4045  001C28  0100               	movlb	0	; force () banked
  4046  001C2A  6FBA               	movwf	??_initTabVue& (0+255),b
  4047  001C2C  0E01               	movlw	high _m_tabVue
  4048  001C2E  6FBB               	movwf	(??_initTabVue+1)& (0+255),b
  4049  001C30  0100               	movlb	0	; force () banked
  4050  001C32  51B4               	movf	?___wmul& (0+255),w,b
  4051  001C34  0100               	movlb	0	; force () banked
  4052  001C36  27BA               	addwf	??_initTabVue& (0+255),f,b
  4053  001C38  0100               	movlb	0	; force () banked
  4054  001C3A  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4055  001C3C  0100               	movlb	0	; force () banked
  4056  001C3E  23BB               	addwfc	(??_initTabVue+1)& (0+255),f,b
  4057  001C40  0100               	movlb	0	; force () banked
  4058  001C42  51BE               	movf	initTabVue@j& (0+255),w,b
  4059  001C44  0100               	movlb	0	; force () banked
  4060  001C46  25BA               	addwf	??_initTabVue& (0+255),w,b
  4061  001C48  6ED9               	movwf	fsr2l,c
  4062  001C4A  0100               	movlb	0	; force () banked
  4063  001C4C  51BF               	movf	(initTabVue@j+1)& (0+255),w,b
  4064  001C4E  0100               	movlb	0	; force () banked
  4065  001C50  21BB               	addwfc	(??_initTabVue+1)& (0+255),w,b
  4066  001C52  6EDA               	movwf	fsr2h,c
  4067  001C54  0E00               	movlw	0
  4068  001C56  6EDF               	movwf	indf2,c
  4069  001C58                     l2459:
  4070                           
  4071                           ; BSR set to: 0
  4072  001C58  0100               	movlb	0	; force () banked
  4073  001C5A  4BBE               	infsnz	initTabVue@j& (0+255),f,b
  4074  001C5C  2BBF               	incf	(initTabVue@j+1)& (0+255),f,b
  4075  001C5E                     
  4076                           ; BSR set to: 0
  4077  001C5E  0100               	movlb	0	; force () banked
  4078  001C60  BFBF               	btfsc	(initTabVue@j+1)& (0+255),7,b
  4079  001C62  EF3C  F00E         	goto	u2201
  4080  001C66  51BF               	movf	(initTabVue@j+1)& (0+255),w,b
  4081  001C68  E109               	bnz	u2200
  4082  001C6A  0E15               	movlw	21
  4083  001C6C  5DBE               	subwf	initTabVue@j& (0+255),w,b
  4084  001C6E  A0D8               	btfss	status,0,c
  4085  001C70  EF3C  F00E         	goto	u2201
  4086  001C74  EF3E  F00E         	goto	u2200
  4087  001C78                     u2201:
  4088  001C78  EFCA  F00D         	goto	l2451
  4089  001C7C                     u2200:
  4090  001C7C                     l2463:
  4091                           
  4092                           ; BSR set to: 0
  4093  001C7C  0100               	movlb	0	; force () banked
  4094  001C7E  4BBC               	infsnz	initTabVue@i& (0+255),f,b
  4095  001C80  2BBD               	incf	(initTabVue@i+1)& (0+255),f,b
  4096  001C82                     
  4097                           ; BSR set to: 0
  4098  001C82  0100               	movlb	0	; force () banked
  4099  001C84  BFBD               	btfsc	(initTabVue@i+1)& (0+255),7,b
  4100  001C86  EF4E  F00E         	goto	u2211
  4101  001C8A  51BD               	movf	(initTabVue@i+1)& (0+255),w,b
  4102  001C8C  E109               	bnz	u2210
  4103  001C8E  0E04               	movlw	4
  4104  001C90  5DBC               	subwf	initTabVue@i& (0+255),w,b
  4105  001C92  A0D8               	btfss	status,0,c
  4106  001C94  EF4E  F00E         	goto	u2211
  4107  001C98  EF50  F00E         	goto	u2210
  4108  001C9C                     u2211:
  4109  001C9C  EFB4  F00D         	goto	l2445
  4110  001CA0                     u2210:
  4111  001CA0                     l97:
  4112                           
  4113                           ; BSR set to: 0
  4114  001CA0  0012               	return		;funcret
  4115  001CA2                     __end_of_initTabVue:
  4116                           	opt callstack 0
  4117                           
  4118 ;; *************** function _gagne *****************
  4119 ;; Defined at:
  4120 ;;		line 468 in file "main.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;  pMines          2    6[BANK0 ] PTR int 
  4123 ;;		 -> main@NBMines(2), 
  4124 ;; Auto vars:     Size  Location     Type
  4125 ;;  j               2   16[BANK0 ] int 
  4126 ;;  i               2   14[BANK0 ] int 
  4127 ;;  nb_Tuile        2   11[BANK0 ] int 
  4128 ;;  gagne           1   13[BANK0 ] unsigned char 
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1    wreg      unsigned char 
  4131 ;; Registers used:
  4132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4138 ;;      Params:         0       2       0       0       0       0       0
  4139 ;;      Locals:         0       7       0       0       0       0       0
  4140 ;;      Temps:          0       3       0       0       0       0       0
  4141 ;;      Totals:         0      12       0       0       0       0       0
  4142 ;;Total ram usage:       12 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    4
  4145 ;; This function calls:
  4146 ;;		___wmul
  4147 ;;		_lcd_effaceAffichage
  4148 ;; This function is called by:
  4149 ;;		_main
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           	psect	text14
  4154  001CA2                     __ptext14:
  4155                           	opt callstack 0
  4156  001CA2                     _gagne:
  4157                           	opt callstack 26
  4158  001CA2                     
  4159                           ;main.c: 470: int nb_Tuile =0;
  4160  001CA2  0E00               	movlw	0
  4161  001CA4  0100               	movlb	0	; force () banked
  4162  001CA6  6FC0               	movwf	(gagne@nb_Tuile+1)& (0+255),b
  4163  001CA8  0E00               	movlw	0
  4164  001CAA  6FBF               	movwf	gagne@nb_Tuile& (0+255),b
  4165                           
  4166                           ;main.c: 471: bool gagne= 0;
  4167  001CAC  0E00               	movlw	0
  4168  001CAE  0100               	movlb	0	; force () banked
  4169  001CB0  6FC1               	movwf	gagne@gagne& (0+255),b
  4170                           
  4171                           ;main.c: 472: int i=0;
  4172  001CB2  0E00               	movlw	0
  4173  001CB4  0100               	movlb	0	; force () banked
  4174  001CB6  6FC3               	movwf	(gagne@i+1)& (0+255),b
  4175  001CB8  0E00               	movlw	0
  4176  001CBA  6FC2               	movwf	gagne@i& (0+255),b
  4177                           
  4178                           ;main.c: 473: int j=0;
  4179  001CBC  0E00               	movlw	0
  4180  001CBE  0100               	movlb	0	; force () banked
  4181  001CC0  6FC5               	movwf	(gagne@j+1)& (0+255),b
  4182  001CC2  0E00               	movlw	0
  4183  001CC4  6FC4               	movwf	gagne@j& (0+255),b
  4184                           
  4185                           ;main.c: 474: for(i=0;i<4;i++)
  4186  001CC6  0E00               	movlw	0
  4187  001CC8  0100               	movlb	0	; force () banked
  4188  001CCA  6FC3               	movwf	(gagne@i+1)& (0+255),b
  4189  001CCC  0E00               	movlw	0
  4190  001CCE  6FC2               	movwf	gagne@i& (0+255),b
  4191  001CD0                     
  4192                           ; BSR set to: 0
  4193  001CD0  0100               	movlb	0	; force () banked
  4194  001CD2  BFC3               	btfsc	(gagne@i+1)& (0+255),7,b
  4195  001CD4  EF75  F00E         	goto	u2481
  4196  001CD8  51C3               	movf	(gagne@i+1)& (0+255),w,b
  4197  001CDA  E109               	bnz	u2480
  4198  001CDC  0E04               	movlw	4
  4199  001CDE  5DC2               	subwf	gagne@i& (0+255),w,b
  4200  001CE0  A0D8               	btfss	status,0,c
  4201  001CE2  EF75  F00E         	goto	u2481
  4202  001CE6  EF77  F00E         	goto	u2480
  4203  001CEA                     u2481:
  4204  001CEA  EF79  F00E         	goto	l2607
  4205  001CEE                     u2480:
  4206  001CEE  EFE0  F00E         	goto	l2623
  4207  001CF2                     l2607:
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;main.c: 475: {;main.c: 476: for(j=0;j<20;j++)
  4211  001CF2  0E00               	movlw	0
  4212  001CF4  0100               	movlb	0	; force () banked
  4213  001CF6  6FC5               	movwf	(gagne@j+1)& (0+255),b
  4214  001CF8  0E00               	movlw	0
  4215  001CFA  6FC4               	movwf	gagne@j& (0+255),b
  4216  001CFC                     
  4217                           ; BSR set to: 0
  4218  001CFC  0100               	movlb	0	; force () banked
  4219  001CFE  BFC5               	btfsc	(gagne@j+1)& (0+255),7,b
  4220  001D00  EF8B  F00E         	goto	u2491
  4221  001D04  51C5               	movf	(gagne@j+1)& (0+255),w,b
  4222  001D06  E109               	bnz	u2490
  4223  001D08  0E14               	movlw	20
  4224  001D0A  5DC4               	subwf	gagne@j& (0+255),w,b
  4225  001D0C  A0D8               	btfss	status,0,c
  4226  001D0E  EF8B  F00E         	goto	u2491
  4227  001D12  EF8D  F00E         	goto	u2490
  4228  001D16                     u2491:
  4229  001D16  EF8F  F00E         	goto	l2613
  4230  001D1A                     u2490:
  4231  001D1A  EFCE  F00E         	goto	l2619
  4232  001D1E                     l2613:
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;main.c: 477: {;main.c: 478: if(m_tabVue[i][j]==1)
  4236  001D1E  C0C2  F0B4         	movff	gagne@i,___wmul@multiplier
  4237  001D22  C0C3  F0B5         	movff	gagne@i+1,___wmul@multiplier+1
  4238  001D26  0E00               	movlw	0
  4239  001D28  0100               	movlb	0	; force () banked
  4240  001D2A  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4241  001D2C  0E15               	movlw	21
  4242  001D2E  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  4243  001D30  ECC7  F012         	call	___wmul	;wreg free
  4244  001D34  0E00               	movlw	low _m_tabVue
  4245  001D36  0100               	movlb	0	; force () banked
  4246  001D38  6FBC               	movwf	??_gagne& (0+255),b
  4247  001D3A  0E01               	movlw	high _m_tabVue
  4248  001D3C  6FBD               	movwf	(??_gagne+1)& (0+255),b
  4249  001D3E  0100               	movlb	0	; force () banked
  4250  001D40  51B4               	movf	?___wmul& (0+255),w,b
  4251  001D42  0100               	movlb	0	; force () banked
  4252  001D44  27BC               	addwf	??_gagne& (0+255),f,b
  4253  001D46  0100               	movlb	0	; force () banked
  4254  001D48  51B5               	movf	(?___wmul+1)& (0+255),w,b
  4255  001D4A  0100               	movlb	0	; force () banked
  4256  001D4C  23BD               	addwfc	(??_gagne+1)& (0+255),f,b
  4257  001D4E  0100               	movlb	0	; force () banked
  4258  001D50  51C4               	movf	gagne@j& (0+255),w,b
  4259  001D52  0100               	movlb	0	; force () banked
  4260  001D54  25BC               	addwf	??_gagne& (0+255),w,b
  4261  001D56  6ED9               	movwf	fsr2l,c
  4262  001D58  0100               	movlb	0	; force () banked
  4263  001D5A  51C5               	movf	(gagne@j+1)& (0+255),w,b
  4264  001D5C  0100               	movlb	0	; force () banked
  4265  001D5E  21BD               	addwfc	(??_gagne+1)& (0+255),w,b
  4266  001D60  6EDA               	movwf	fsr2h,c
  4267  001D62  04DE               	decf	postinc2,w,c
  4268  001D64  A4D8               	btfss	status,2,c
  4269  001D66  EFB7  F00E         	goto	u2501
  4270  001D6A  EFB9  F00E         	goto	u2500
  4271  001D6E                     u2501:
  4272  001D6E  EFBC  F00E         	goto	l201
  4273  001D72                     u2500:
  4274  001D72                     
  4275                           ; BSR set to: 0
  4276                           ;main.c: 479: {;main.c: 480: nb_Tuile++;
  4277  001D72  0100               	movlb	0	; force () banked
  4278  001D74  4BBF               	infsnz	gagne@nb_Tuile& (0+255),f,b
  4279  001D76  2BC0               	incf	(gagne@nb_Tuile+1)& (0+255),f,b
  4280  001D78                     l201:
  4281                           
  4282                           ; BSR set to: 0
  4283  001D78  0100               	movlb	0	; force () banked
  4284  001D7A  4BC4               	infsnz	gagne@j& (0+255),f,b
  4285  001D7C  2BC5               	incf	(gagne@j+1)& (0+255),f,b
  4286  001D7E                     
  4287                           ; BSR set to: 0
  4288  001D7E  0100               	movlb	0	; force () banked
  4289  001D80  BFC5               	btfsc	(gagne@j+1)& (0+255),7,b
  4290  001D82  EFCC  F00E         	goto	u2511
  4291  001D86  51C5               	movf	(gagne@j+1)& (0+255),w,b
  4292  001D88  E109               	bnz	u2510
  4293  001D8A  0E14               	movlw	20
  4294  001D8C  5DC4               	subwf	gagne@j& (0+255),w,b
  4295  001D8E  A0D8               	btfss	status,0,c
  4296  001D90  EFCC  F00E         	goto	u2511
  4297  001D94  EFCE  F00E         	goto	u2510
  4298  001D98                     u2511:
  4299  001D98  EF8F  F00E         	goto	l2613
  4300  001D9C                     u2510:
  4301  001D9C                     l2619:
  4302                           
  4303                           ; BSR set to: 0
  4304  001D9C  0100               	movlb	0	; force () banked
  4305  001D9E  4BC2               	infsnz	gagne@i& (0+255),f,b
  4306  001DA0  2BC3               	incf	(gagne@i+1)& (0+255),f,b
  4307  001DA2                     
  4308                           ; BSR set to: 0
  4309  001DA2  0100               	movlb	0	; force () banked
  4310  001DA4  BFC3               	btfsc	(gagne@i+1)& (0+255),7,b
  4311  001DA6  EFDE  F00E         	goto	u2521
  4312  001DAA  51C3               	movf	(gagne@i+1)& (0+255),w,b
  4313  001DAC  E109               	bnz	u2520
  4314  001DAE  0E04               	movlw	4
  4315  001DB0  5DC2               	subwf	gagne@i& (0+255),w,b
  4316  001DB2  A0D8               	btfss	status,0,c
  4317  001DB4  EFDE  F00E         	goto	u2521
  4318  001DB8  EFE0  F00E         	goto	u2520
  4319  001DBC                     u2521:
  4320  001DBC  EF79  F00E         	goto	l2607
  4321  001DC0                     u2520:
  4322  001DC0                     l2623:
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;main.c: 481: };main.c: 482: };main.c: 483: };main.c: 484: if (*pMines == nb_Tuile)
  4326  001DC0  C0BA  FFD9         	movff	gagne@pMines,fsr2l
  4327  001DC4  C0BB  FFDA         	movff	gagne@pMines+1,fsr2h
  4328  001DC8  0100               	movlb	0	; force () banked
  4329  001DCA  51BF               	movf	gagne@nb_Tuile& (0+255),w,b
  4330  001DCC  18DE               	xorwf	postinc2,w,c
  4331  001DCE  E107               	bnz	u2531
  4332  001DD0  51C0               	movf	(gagne@nb_Tuile+1)& (0+255),w,b
  4333  001DD2  18DE               	xorwf	postinc2,w,c
  4334  001DD4  A4D8               	btfss	status,2,c
  4335  001DD6  EFEF  F00E         	goto	u2531
  4336  001DDA  EFF1  F00E         	goto	u2530
  4337  001DDE                     u2531:
  4338  001DDE  EF0B  F00F         	goto	l2631
  4339  001DE2                     u2530:
  4340  001DE2                     
  4341                           ; BSR set to: 0
  4342                           ;main.c: 485: {;main.c: 486: lcd_effaceAffichage();
  4343  001DE2  EC0B  F013         	call	_lcd_effaceAffichage	;wreg free
  4344  001DE6                     
  4345                           ;main.c: 487: (*pMines)=(*pMines) +1;
  4346  001DE6  C0BA  FFD9         	movff	gagne@pMines,fsr2l
  4347  001DEA  C0BB  FFDA         	movff	gagne@pMines+1,fsr2h
  4348  001DEE  CFDE F0BC          	movff	postinc2,??_gagne
  4349  001DF2  CFDD F0BD          	movff	postdec2,??_gagne+1
  4350  001DF6  0E01               	movlw	1
  4351  001DF8  0100               	movlb	0	; force () banked
  4352  001DFA  27BC               	addwf	??_gagne& (0+255),f,b
  4353  001DFC  0E00               	movlw	0
  4354  001DFE  23BD               	addwfc	(??_gagne+1)& (0+255),f,b
  4355  001E00  C0BA  FFD9         	movff	gagne@pMines,fsr2l
  4356  001E04  C0BB  FFDA         	movff	gagne@pMines+1,fsr2h
  4357  001E08  C0BC  FFDE         	movff	??_gagne,postinc2
  4358  001E0C  C0BD  FFDD         	movff	??_gagne+1,postdec2
  4359  001E10                     
  4360                           ; BSR set to: 0
  4361                           ;main.c: 488: gagne=1;
  4362  001E10  0E01               	movlw	1
  4363  001E12  0100               	movlb	0	; force () banked
  4364  001E14  6FC1               	movwf	gagne@gagne& (0+255),b
  4365  001E16                     l2631:
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;main.c: 489: };main.c: 490: return gagne;
  4369  001E16  0100               	movlb	0	; force () banked
  4370  001E18  51C1               	movf	gagne@gagne& (0+255),w,b
  4371  001E1A                     
  4372                           ; BSR set to: 0
  4373  001E1A  0012               	return		;funcret
  4374  001E1C                     __end_of_gagne:
  4375                           	opt callstack 0
  4376                           
  4377 ;; *************** function _lcd_effaceAffichage *****************
  4378 ;; Defined at:
  4379 ;;		line 276 in file "Lcd4Lignes.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;		None
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;		None
  4384 ;; Return value:  Size  Location     Type
  4385 ;;                  1    wreg      void 
  4386 ;; Registers used:
  4387 ;;		wreg, status,2, status,0, cstack
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4393 ;;      Params:         0       0       0       0       0       0       0
  4394 ;;      Locals:         0       0       0       0       0       0       0
  4395 ;;      Temps:          0       0       0       0       0       0       0
  4396 ;;      Totals:         0       0       0       0       0       0       0
  4397 ;;Total ram usage:        0 bytes
  4398 ;; Hardware stack levels used:    1
  4399 ;; Hardware stack levels required when called:    3
  4400 ;; This function calls:
  4401 ;;		_lcd_wrCom
  4402 ;; This function is called by:
  4403 ;;		_gagne
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           	psect	text15
  4408  002616                     __ptext15:
  4409                           	opt callstack 0
  4410  002616                     _lcd_effaceAffichage:
  4411                           	opt callstack 26
  4412  002616                     
  4413                           ;Lcd4Lignes.c: 278: lcd_wrCom(0x01);
  4414  002616  0E01               	movlw	1
  4415  002618  EC53  F011         	call	_lcd_wrCom
  4416                           
  4417                           ;Lcd4Lignes.c: 279: lcd_wrCom(0x80);
  4418  00261C  0E80               	movlw	128
  4419  00261E  EC53  F011         	call	_lcd_wrCom
  4420  002622  0012               	return		;funcret
  4421  002624                     __end_of_lcd_effaceAffichage:
  4422                           	opt callstack 0
  4423                           
  4424 ;; *************** function _deplace *****************
  4425 ;; Defined at:
  4426 ;;		line 352 in file "main.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;  x               2    5[BANK0 ] PTR unsigned char 
  4429 ;;		 -> main@x(1), 
  4430 ;;  y               2    7[BANK0 ] PTR unsigned char 
  4431 ;;		 -> main@y(1), 
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;		None
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1    wreg      void 
  4436 ;; Registers used:
  4437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4443 ;;      Params:         0       4       0       0       0       0       0
  4444 ;;      Locals:         0       0       0       0       0       0       0
  4445 ;;      Temps:          0       1       0       0       0       0       0
  4446 ;;      Totals:         0       5       0       0       0       0       0
  4447 ;;Total ram usage:        5 bytes
  4448 ;; Hardware stack levels used:    1
  4449 ;; Hardware stack levels required when called:    4
  4450 ;; This function calls:
  4451 ;;		_getAnalog
  4452 ;;		_lcd_gotoXY
  4453 ;; This function is called by:
  4454 ;;		_main
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text16
  4459  0019A2                     __ptext16:
  4460                           	opt callstack 0
  4461  0019A2                     _deplace:
  4462                           	opt callstack 26
  4463  0019A2                     
  4464                           ;main.c: 354: if(getAnalog(6)>220)
  4465  0019A2  0E06               	movlw	6
  4466  0019A4  EC9D  F012         	call	_getAnalog
  4467  0019A8  0100               	movlb	0	; force () banked
  4468  0019AA  6FBD               	movwf	??_deplace& (0+255),b
  4469  0019AC  0EDC               	movlw	220
  4470  0019AE  65BD               	cpfsgt	??_deplace& (0+255),b
  4471  0019B0  EFDC  F00C         	goto	u2371
  4472  0019B4  EFDE  F00C         	goto	u2370
  4473  0019B8                     u2371:
  4474  0019B8  EFFF  F00C         	goto	l2551
  4475  0019BC                     u2370:
  4476  0019BC                     
  4477                           ; BSR set to: 0
  4478                           ;main.c: 355: {;main.c: 356: (*x)= (*x) +1;
  4479  0019BC  C0B9  FFD9         	movff	deplace@x,fsr2l
  4480  0019C0  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4481  0019C4  50DF               	movf	indf2,w,c
  4482  0019C6  0100               	movlb	0	; force () banked
  4483  0019C8  6FBD               	movwf	??_deplace& (0+255),b
  4484  0019CA  29BD               	incf	??_deplace& (0+255),w,b
  4485  0019CC  C0B9  FFD9         	movff	deplace@x,fsr2l
  4486  0019D0  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4487  0019D4  6EDF               	movwf	indf2,c
  4488                           
  4489                           ;main.c: 357: if (*x > 20)
  4490  0019D6  C0B9  FFD9         	movff	deplace@x,fsr2l
  4491  0019DA  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4492  0019DE  0E14               	movlw	20
  4493  0019E0  64DF               	cpfsgt	indf2,c
  4494  0019E2  EFF5  F00C         	goto	u2381
  4495  0019E6  EFF7  F00C         	goto	u2380
  4496  0019EA                     u2381:
  4497  0019EA  EF2B  F00D         	goto	l2559
  4498  0019EE                     u2380:
  4499  0019EE                     
  4500                           ; BSR set to: 0
  4501                           ;main.c: 358: {;main.c: 359: *x=1;
  4502  0019EE  C0B9  FFD9         	movff	deplace@x,fsr2l
  4503  0019F2  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4504  0019F6  0E01               	movlw	1
  4505  0019F8  6EDF               	movwf	indf2,c
  4506  0019FA  EF2B  F00D         	goto	l2559
  4507  0019FE                     l2551:
  4508                           
  4509                           ; BSR set to: 0
  4510                           ;main.c: 362: else if(getAnalog(6)<110)
  4511  0019FE  0E06               	movlw	6
  4512  001A00  EC9D  F012         	call	_getAnalog
  4513  001A04  0100               	movlb	0	; force () banked
  4514  001A06  6FBD               	movwf	??_deplace& (0+255),b
  4515  001A08  0E6E               	movlw	110
  4516  001A0A  61BD               	cpfslt	??_deplace& (0+255),b
  4517  001A0C  EF0A  F00D         	goto	u2391
  4518  001A10  EF0C  F00D         	goto	u2390
  4519  001A14                     u2391:
  4520  001A14  EF2B  F00D         	goto	l2559
  4521  001A18                     u2390:
  4522  001A18                     
  4523                           ; BSR set to: 0
  4524                           ;main.c: 363: {;main.c: 364: (*x)=(*x)-1;
  4525  001A18  C0B9  FFD9         	movff	deplace@x,fsr2l
  4526  001A1C  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4527  001A20  50DF               	movf	indf2,w,c
  4528  001A22  0100               	movlb	0	; force () banked
  4529  001A24  6FBD               	movwf	??_deplace& (0+255),b
  4530  001A26  05BD               	decf	??_deplace& (0+255),w,b
  4531  001A28  C0B9  FFD9         	movff	deplace@x,fsr2l
  4532  001A2C  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4533  001A30  6EDF               	movwf	indf2,c
  4534  001A32                     
  4535                           ; BSR set to: 0
  4536                           ;main.c: 365: if((*x)<1)
  4537  001A32  C0B9  FFD9         	movff	deplace@x,fsr2l
  4538  001A36  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4539  001A3A  50DF               	movf	indf2,w,c
  4540  001A3C  A4D8               	btfss	status,2,c
  4541  001A3E  EF23  F00D         	goto	u2401
  4542  001A42  EF25  F00D         	goto	u2400
  4543  001A46                     u2401:
  4544  001A46  EF2B  F00D         	goto	l2559
  4545  001A4A                     u2400:
  4546  001A4A                     
  4547                           ; BSR set to: 0
  4548                           ;main.c: 366: {;main.c: 367: (*x)=20;
  4549  001A4A  C0B9  FFD9         	movff	deplace@x,fsr2l
  4550  001A4E  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4551  001A52  0E14               	movlw	20
  4552  001A54  6EDF               	movwf	indf2,c
  4553  001A56                     l2559:
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;main.c: 368: };main.c: 369: };main.c: 370: if(getAnalog(7)<110)
  4557  001A56  0E07               	movlw	7
  4558  001A58  EC9D  F012         	call	_getAnalog
  4559  001A5C  0100               	movlb	0	; force () banked
  4560  001A5E  6FBD               	movwf	??_deplace& (0+255),b
  4561  001A60  0E6E               	movlw	110
  4562  001A62  61BD               	cpfslt	??_deplace& (0+255),b
  4563  001A64  EF36  F00D         	goto	u2411
  4564  001A68  EF38  F00D         	goto	u2410
  4565  001A6C                     u2411:
  4566  001A6C  EF59  F00D         	goto	l2565
  4567  001A70                     u2410:
  4568  001A70                     
  4569                           ; BSR set to: 0
  4570                           ;main.c: 371: {;main.c: 372: (*y)= (*y) +1;
  4571  001A70  C0BB  FFD9         	movff	deplace@y,fsr2l
  4572  001A74  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4573  001A78  50DF               	movf	indf2,w,c
  4574  001A7A  0100               	movlb	0	; force () banked
  4575  001A7C  6FBD               	movwf	??_deplace& (0+255),b
  4576  001A7E  29BD               	incf	??_deplace& (0+255),w,b
  4577  001A80  C0BB  FFD9         	movff	deplace@y,fsr2l
  4578  001A84  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4579  001A88  6EDF               	movwf	indf2,c
  4580                           
  4581                           ;main.c: 373: if ((*y )> 4)
  4582  001A8A  C0BB  FFD9         	movff	deplace@y,fsr2l
  4583  001A8E  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4584  001A92  0E04               	movlw	4
  4585  001A94  64DF               	cpfsgt	indf2,c
  4586  001A96  EF4F  F00D         	goto	u2421
  4587  001A9A  EF51  F00D         	goto	u2420
  4588  001A9E                     u2421:
  4589  001A9E  EF85  F00D         	goto	l2573
  4590  001AA2                     u2420:
  4591  001AA2                     
  4592                           ; BSR set to: 0
  4593                           ;main.c: 374: {;main.c: 375: (*y)=1;
  4594  001AA2  C0BB  FFD9         	movff	deplace@y,fsr2l
  4595  001AA6  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4596  001AAA  0E01               	movlw	1
  4597  001AAC  6EDF               	movwf	indf2,c
  4598  001AAE  EF85  F00D         	goto	l2573
  4599  001AB2                     l2565:
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;main.c: 378: else if(getAnalog(7)>200)
  4603  001AB2  0E07               	movlw	7
  4604  001AB4  EC9D  F012         	call	_getAnalog
  4605  001AB8  0100               	movlb	0	; force () banked
  4606  001ABA  6FBD               	movwf	??_deplace& (0+255),b
  4607  001ABC  0EC8               	movlw	200
  4608  001ABE  65BD               	cpfsgt	??_deplace& (0+255),b
  4609  001AC0  EF64  F00D         	goto	u2431
  4610  001AC4  EF66  F00D         	goto	u2430
  4611  001AC8                     u2431:
  4612  001AC8  EF85  F00D         	goto	l2573
  4613  001ACC                     u2430:
  4614  001ACC                     
  4615                           ; BSR set to: 0
  4616                           ;main.c: 379: {;main.c: 380: (*y)=(*y) - 1;
  4617  001ACC  C0BB  FFD9         	movff	deplace@y,fsr2l
  4618  001AD0  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4619  001AD4  50DF               	movf	indf2,w,c
  4620  001AD6  0100               	movlb	0	; force () banked
  4621  001AD8  6FBD               	movwf	??_deplace& (0+255),b
  4622  001ADA  05BD               	decf	??_deplace& (0+255),w,b
  4623  001ADC  C0BB  FFD9         	movff	deplace@y,fsr2l
  4624  001AE0  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4625  001AE4  6EDF               	movwf	indf2,c
  4626  001AE6                     
  4627                           ; BSR set to: 0
  4628                           ;main.c: 381: if (*y < 1)
  4629  001AE6  C0BB  FFD9         	movff	deplace@y,fsr2l
  4630  001AEA  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4631  001AEE  50DF               	movf	indf2,w,c
  4632  001AF0  A4D8               	btfss	status,2,c
  4633  001AF2  EF7D  F00D         	goto	u2441
  4634  001AF6  EF7F  F00D         	goto	u2440
  4635  001AFA                     u2441:
  4636  001AFA  EF85  F00D         	goto	l2573
  4637  001AFE                     u2440:
  4638  001AFE                     
  4639                           ; BSR set to: 0
  4640                           ;main.c: 382: {;main.c: 383: (*y)=4;
  4641  001AFE  C0BB  FFD9         	movff	deplace@y,fsr2l
  4642  001B02  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4643  001B06  0E04               	movlw	4
  4644  001B08  6EDF               	movwf	indf2,c
  4645  001B0A                     l2573:
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;main.c: 384: };main.c: 385: };main.c: 386: lcd_gotoXY(*x ,*y);
  4649  001B0A  C0BB  FFD9         	movff	deplace@y,fsr2l
  4650  001B0E  C0BC  FFDA         	movff	deplace@y+1,fsr2h
  4651  001B12  50DF               	movf	indf2,w,c
  4652  001B14  0100               	movlb	0	; force () banked
  4653  001B16  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  4654  001B18  C0B9  FFD9         	movff	deplace@x,fsr2l
  4655  001B1C  C0BA  FFDA         	movff	deplace@x+1,fsr2h
  4656  001B20  50DF               	movf	indf2,w,c
  4657  001B22  ECE4  F010         	call	_lcd_gotoXY
  4658  001B26  0012               	return		;funcret
  4659  001B28                     __end_of_deplace:
  4660                           	opt callstack 0
  4661                           
  4662 ;; *************** function _getAnalog *****************
  4663 ;; Defined at:
  4664 ;;		line 115 in file "main.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;  canal           1    wreg     unsigned char 
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;  canal           1    1[BANK0 ] unsigned char 
  4669 ;; Return value:  Size  Location     Type
  4670 ;;                  1    wreg      unsigned char 
  4671 ;; Registers used:
  4672 ;;		wreg, status,2, status,0
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4678 ;;      Params:         0       0       0       0       0       0       0
  4679 ;;      Locals:         0       1       0       0       0       0       0
  4680 ;;      Temps:          0       1       0       0       0       0       0
  4681 ;;      Totals:         0       2       0       0       0       0       0
  4682 ;;Total ram usage:        2 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_deplace
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text17
  4692  00253A                     __ptext17:
  4693                           	opt callstack 0
  4694  00253A                     _getAnalog:
  4695                           	opt callstack 29
  4696                           
  4697                           ;incstack = 0
  4698                           ;getAnalog@canal stored from wreg
  4699  00253A  0100               	movlb	0	; force () banked
  4700  00253C  6FB5               	movwf	getAnalog@canal& (0+255),b
  4701  00253E                     
  4702                           ;main.c: 117: ADCON0bits.CHS = canal;
  4703  00253E  C0B5  F0B4         	movff	getAnalog@canal,??_getAnalog
  4704  002542  0100               	movlb	0	; force () banked
  4705  002544  47B4               	rlncf	??_getAnalog& (0+255),f,b
  4706  002546  47B4               	rlncf	??_getAnalog& (0+255),f,b
  4707  002548  50C2               	movf	194,w,c	;volatile
  4708  00254A  19B4               	xorwf	??_getAnalog& (0+255),w,b
  4709  00254C  0BC3               	andlw	-61
  4710  00254E  19B4               	xorwf	??_getAnalog& (0+255),w,b
  4711  002550  6EC2               	movwf	194,c	;volatile
  4712  002552                     
  4713                           ;main.c: 119: ADCON0bits.GO_DONE = 1;
  4714  002552  82C2               	bsf	194,1,c	;volatile
  4715  002554                     l85:
  4716  002554  B2C2               	btfsc	194,1,c	;volatile
  4717  002556  EFAF  F012         	goto	u91
  4718  00255A  EFB1  F012         	goto	u90
  4719  00255E                     u91:
  4720  00255E  EFAA  F012         	goto	l85
  4721  002562                     u90:
  4722  002562                     
  4723                           ;main.c: 122: return ADRESH;
  4724  002562  50C4               	movf	196,w,c	;volatile
  4725  002564  0012               	return		;funcret
  4726  002566                     __end_of_getAnalog:
  4727                           	opt callstack 0
  4728                           
  4729 ;; *************** function _demine *****************
  4730 ;; Defined at:
  4731 ;;		line 397 in file "main.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  x               1    wreg     unsigned char 
  4734 ;;  y               1   18[BANK0 ] unsigned char 
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;  x               1   24[BANK0 ] unsigned char 
  4737 ;;  mine            1   23[BANK0 ] unsigned char 
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  1    wreg      unsigned char 
  4740 ;; Registers used:
  4741 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4747 ;;      Params:         0       1       0       0       0       0       0
  4748 ;;      Locals:         0       2       0       0       0       0       0
  4749 ;;      Temps:          0       4       0       0       0       0       0
  4750 ;;      Totals:         0       7       0       0       0       0       0
  4751 ;;Total ram usage:        7 bytes
  4752 ;; Hardware stack levels used:    1
  4753 ;; Hardware stack levels required when called:    5
  4754 ;; This function calls:
  4755 ;;		_enleveTuilesAutour
  4756 ;;		_lcd_ecritChar
  4757 ;; This function is called by:
  4758 ;;		_main
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           	psect	text18
  4763  001818                     __ptext18:
  4764                           	opt callstack 0
  4765  001818                     _demine:
  4766                           	opt callstack 25
  4767                           
  4768                           ;incstack = 0
  4769                           ;demine@x stored from wreg
  4770  001818  0100               	movlb	0	; force () banked
  4771  00181A  6FCC               	movwf	demine@x& (0+255),b
  4772  00181C                     
  4773                           ;main.c: 399: x=x-1;
  4774  00181C  0100               	movlb	0	; force () banked
  4775  00181E  05CC               	decf	demine@x& (0+255),w,b
  4776  001820  6FCC               	movwf	demine@x& (0+255),b
  4777                           
  4778                           ;main.c: 400: y=y-1;
  4779  001822  0100               	movlb	0	; force () banked
  4780  001824  05C6               	decf	demine@y& (0+255),w,b
  4781  001826  6FC6               	movwf	demine@y& (0+255),b
  4782  001828                     
  4783                           ; BSR set to: 0
  4784                           ;main.c: 401: bool mine= 1;
  4785  001828  0E01               	movlw	1
  4786  00182A  0100               	movlb	0	; force () banked
  4787  00182C  6FCB               	movwf	demine@mine& (0+255),b
  4788  00182E                     
  4789                           ; BSR set to: 0
  4790                           ;main.c: 402: if (m_tabMines[(y)][(x)]== 2)
  4791  00182E  0100               	movlb	0	; force () banked
  4792  001830  51C6               	movf	demine@y& (0+255),w,b
  4793  001832  0D15               	mullw	21
  4794  001834  0E60               	movlw	low _m_tabMines
  4795  001836  0100               	movlb	0	; force () banked
  4796  001838  6FC7               	movwf	??_demine& (0+255),b
  4797  00183A  0E00               	movlw	high _m_tabMines
  4798  00183C  6FC8               	movwf	(??_demine+1)& (0+255),b
  4799  00183E  50F3               	movf	243,w,c
  4800  001840  27C7               	addwf	??_demine& (0+255),f,b
  4801  001842  50F4               	movf	244,w,c
  4802  001844  23C8               	addwfc	(??_demine+1)& (0+255),f,b
  4803  001846  0100               	movlb	0	; force () banked
  4804  001848  51CC               	movf	demine@x& (0+255),w,b
  4805  00184A  0100               	movlb	0	; force () banked
  4806  00184C  25C7               	addwf	??_demine& (0+255),w,b
  4807  00184E  6ED9               	movwf	fsr2l,c
  4808  001850  0100               	movlb	0	; force () banked
  4809  001852  0E00               	movlw	0
  4810  001854  0100               	movlb	0	; force () banked
  4811  001856  21C8               	addwfc	(??_demine+1)& (0+255),w,b
  4812  001858  6EDA               	movwf	fsr2h,c
  4813  00185A  0E02               	movlw	2
  4814  00185C  18DE               	xorwf	postinc2,w,c
  4815  00185E  A4D8               	btfss	status,2,c
  4816  001860  EF34  F00C         	goto	u2451
  4817  001864  EF36  F00C         	goto	u2450
  4818  001868                     u2451:
  4819  001868  EF3B  F00C         	goto	l2583
  4820  00186C                     u2450:
  4821  00186C                     
  4822                           ; BSR set to: 0
  4823                           ;main.c: 403: {;main.c: 404: mine=0;
  4824  00186C  0E00               	movlw	0
  4825  00186E  0100               	movlb	0	; force () banked
  4826  001870  6FCB               	movwf	demine@mine& (0+255),b
  4827                           
  4828                           ;main.c: 405: }
  4829  001872  EFCE  F00C         	goto	l2597
  4830  001876                     l2583:
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;main.c: 406: else if ((m_tabMines[(y)][(x)]!= 2)&&(m_tabMines[(y)][(x)]==32))
  4834  001876  0100               	movlb	0	; force () banked
  4835  001878  51C6               	movf	demine@y& (0+255),w,b
  4836  00187A  0D15               	mullw	21
  4837  00187C  0E60               	movlw	low _m_tabMines
  4838  00187E  0100               	movlb	0	; force () banked
  4839  001880  6FC7               	movwf	??_demine& (0+255),b
  4840  001882  0E00               	movlw	high _m_tabMines
  4841  001884  6FC8               	movwf	(??_demine+1)& (0+255),b
  4842  001886  50F3               	movf	243,w,c
  4843  001888  27C7               	addwf	??_demine& (0+255),f,b
  4844  00188A  50F4               	movf	244,w,c
  4845  00188C  23C8               	addwfc	(??_demine+1)& (0+255),f,b
  4846  00188E  0100               	movlb	0	; force () banked
  4847  001890  51CC               	movf	demine@x& (0+255),w,b
  4848  001892  0100               	movlb	0	; force () banked
  4849  001894  25C7               	addwf	??_demine& (0+255),w,b
  4850  001896  6ED9               	movwf	fsr2l,c
  4851  001898  0100               	movlb	0	; force () banked
  4852  00189A  0E00               	movlw	0
  4853  00189C  0100               	movlb	0	; force () banked
  4854  00189E  21C8               	addwfc	(??_demine+1)& (0+255),w,b
  4855  0018A0  6EDA               	movwf	fsr2h,c
  4856  0018A2  0E02               	movlw	2
  4857  0018A4  18DE               	xorwf	postinc2,w,c
  4858  0018A6  B4D8               	btfsc	status,2,c
  4859  0018A8  EF58  F00C         	goto	u2461
  4860  0018AC  EF5A  F00C         	goto	u2460
  4861  0018B0                     u2461:
  4862  0018B0  EF84  F00C         	goto	l2591
  4863  0018B4                     u2460:
  4864  0018B4                     
  4865                           ; BSR set to: 0
  4866  0018B4  0100               	movlb	0	; force () banked
  4867  0018B6  51C6               	movf	demine@y& (0+255),w,b
  4868  0018B8  0D15               	mullw	21
  4869  0018BA  0E60               	movlw	low _m_tabMines
  4870  0018BC  0100               	movlb	0	; force () banked
  4871  0018BE  6FC7               	movwf	??_demine& (0+255),b
  4872  0018C0  0E00               	movlw	high _m_tabMines
  4873  0018C2  6FC8               	movwf	(??_demine+1)& (0+255),b
  4874  0018C4  50F3               	movf	243,w,c
  4875  0018C6  27C7               	addwf	??_demine& (0+255),f,b
  4876  0018C8  50F4               	movf	244,w,c
  4877  0018CA  23C8               	addwfc	(??_demine+1)& (0+255),f,b
  4878  0018CC  0100               	movlb	0	; force () banked
  4879  0018CE  51CC               	movf	demine@x& (0+255),w,b
  4880  0018D0  0100               	movlb	0	; force () banked
  4881  0018D2  25C7               	addwf	??_demine& (0+255),w,b
  4882  0018D4  6ED9               	movwf	fsr2l,c
  4883  0018D6  0100               	movlb	0	; force () banked
  4884  0018D8  0E00               	movlw	0
  4885  0018DA  0100               	movlb	0	; force () banked
  4886  0018DC  21C8               	addwfc	(??_demine+1)& (0+255),w,b
  4887  0018DE  6EDA               	movwf	fsr2h,c
  4888  0018E0  0E20               	movlw	32
  4889  0018E2  18DE               	xorwf	postinc2,w,c
  4890  0018E4  A4D8               	btfss	status,2,c
  4891  0018E6  EF77  F00C         	goto	u2471
  4892  0018EA  EF79  F00C         	goto	u2470
  4893  0018EE                     u2471:
  4894  0018EE  EF84  F00C         	goto	l2591
  4895  0018F2                     u2470:
  4896  0018F2                     
  4897                           ; BSR set to: 0
  4898                           ;main.c: 407: {;main.c: 408: mine=1;
  4899  0018F2  0E01               	movlw	1
  4900  0018F4  0100               	movlb	0	; force () banked
  4901  0018F6  6FCB               	movwf	demine@mine& (0+255),b
  4902  0018F8                     
  4903                           ; BSR set to: 0
  4904                           ;main.c: 409: enleveTuilesAutour((x),(y));
  4905  0018F8  C0C6  F0BA         	movff	demine@y,enleveTuilesAutour@y
  4906  0018FC  0100               	movlb	0	; force () banked
  4907  0018FE  51CC               	movf	demine@x& (0+255),w,b
  4908  001900  ECA7  F008         	call	_enleveTuilesAutour
  4909                           
  4910                           ;main.c: 410: }
  4911  001904  EFCE  F00C         	goto	l2597
  4912  001908                     l2591:
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;main.c: 411: else;main.c: 412: {;main.c: 413: mine=1;
  4916  001908  0E01               	movlw	1
  4917  00190A  0100               	movlb	0	; force () banked
  4918  00190C  6FCB               	movwf	demine@mine& (0+255),b
  4919  00190E                     
  4920                           ; BSR set to: 0
  4921                           ;main.c: 414: m_tabVue[y][x]=m_tabMines[y][x];
  4922  00190E  0100               	movlb	0	; force () banked
  4923  001910  51C6               	movf	demine@y& (0+255),w,b
  4924  001912  0D15               	mullw	21
  4925  001914  0E60               	movlw	low _m_tabMines
  4926  001916  0100               	movlb	0	; force () banked
  4927  001918  6FC7               	movwf	??_demine& (0+255),b
  4928  00191A  0E00               	movlw	high _m_tabMines
  4929  00191C  6FC8               	movwf	(??_demine+1)& (0+255),b
  4930  00191E  50F3               	movf	243,w,c
  4931  001920  27C7               	addwf	??_demine& (0+255),f,b
  4932  001922  50F4               	movf	244,w,c
  4933  001924  23C8               	addwfc	(??_demine+1)& (0+255),f,b
  4934  001926  0100               	movlb	0	; force () banked
  4935  001928  51CC               	movf	demine@x& (0+255),w,b
  4936  00192A  0100               	movlb	0	; force () banked
  4937  00192C  25C7               	addwf	??_demine& (0+255),w,b
  4938  00192E  6ED9               	movwf	fsr2l,c
  4939  001930  0100               	movlb	0	; force () banked
  4940  001932  0E00               	movlw	0
  4941  001934  0100               	movlb	0	; force () banked
  4942  001936  21C8               	addwfc	(??_demine+1)& (0+255),w,b
  4943  001938  6EDA               	movwf	fsr2h,c
  4944  00193A  0100               	movlb	0	; force () banked
  4945  00193C  51C6               	movf	demine@y& (0+255),w,b
  4946  00193E  0D15               	mullw	21
  4947  001940  0E00               	movlw	low _m_tabVue
  4948  001942  0100               	movlb	0	; force () banked
  4949  001944  6FC9               	movwf	(??_demine+2)& (0+255),b
  4950  001946  0E01               	movlw	high _m_tabVue
  4951  001948  6FCA               	movwf	(??_demine+3)& (0+255),b
  4952  00194A  50F3               	movf	243,w,c
  4953  00194C  27C9               	addwf	(??_demine+2)& (0+255),f,b
  4954  00194E  50F4               	movf	244,w,c
  4955  001950  23CA               	addwfc	(??_demine+3)& (0+255),f,b
  4956  001952  0100               	movlb	0	; force () banked
  4957  001954  51CC               	movf	demine@x& (0+255),w,b
  4958  001956  0100               	movlb	0	; force () banked
  4959  001958  25C9               	addwf	(??_demine+2)& (0+255),w,b
  4960  00195A  6EE1               	movwf	fsr1l,c
  4961  00195C  0100               	movlb	0	; force () banked
  4962  00195E  0E00               	movlw	0
  4963  001960  0100               	movlb	0	; force () banked
  4964  001962  21CA               	addwfc	(??_demine+3)& (0+255),w,b
  4965  001964  6EE2               	movwf	fsr1h,c
  4966  001966  CFDF FFE7          	movff	indf2,indf1
  4967  00196A                     
  4968                           ; BSR set to: 0
  4969                           ;main.c: 415: lcd_ecritChar(m_tabVue[y][x]);
  4970  00196A  0100               	movlb	0	; force () banked
  4971  00196C  51C6               	movf	demine@y& (0+255),w,b
  4972  00196E  0D15               	mullw	21
  4973  001970  0E00               	movlw	low _m_tabVue
  4974  001972  0100               	movlb	0	; force () banked
  4975  001974  6FC7               	movwf	??_demine& (0+255),b
  4976  001976  0E01               	movlw	high _m_tabVue
  4977  001978  6FC8               	movwf	(??_demine+1)& (0+255),b
  4978  00197A  50F3               	movf	243,w,c
  4979  00197C  27C7               	addwf	??_demine& (0+255),f,b
  4980  00197E  50F4               	movf	244,w,c
  4981  001980  23C8               	addwfc	(??_demine+1)& (0+255),f,b
  4982  001982  0100               	movlb	0	; force () banked
  4983  001984  51CC               	movf	demine@x& (0+255),w,b
  4984  001986  0100               	movlb	0	; force () banked
  4985  001988  25C7               	addwf	??_demine& (0+255),w,b
  4986  00198A  6ED9               	movwf	fsr2l,c
  4987  00198C  0100               	movlb	0	; force () banked
  4988  00198E  0E00               	movlw	0
  4989  001990  0100               	movlb	0	; force () banked
  4990  001992  21C8               	addwfc	(??_demine+1)& (0+255),w,b
  4991  001994  6EDA               	movwf	fsr2h,c
  4992  001996  50DF               	movf	indf2,w,c
  4993  001998  EC18  F012         	call	_lcd_ecritChar
  4994  00199C                     l2597:
  4995                           
  4996                           ;main.c: 416: };main.c: 417: return mine;
  4997  00199C  0100               	movlb	0	; force () banked
  4998  00199E  51CB               	movf	demine@mine& (0+255),w,b
  4999  0019A0                     
  5000                           ; BSR set to: 0
  5001  0019A0  0012               	return		;funcret
  5002  0019A2                     __end_of_demine:
  5003                           	opt callstack 0
  5004                           
  5005 ;; *************** function _enleveTuilesAutour *****************
  5006 ;; Defined at:
  5007 ;;		line 426 in file "main.c"
  5008 ;; Parameters:    Size  Location     Type
  5009 ;;  x               1    wreg     unsigned char 
  5010 ;;  y               1    6[BANK0 ] unsigned char 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;  x               1   13[BANK0 ] unsigned char 
  5013 ;;  j               2   14[BANK0 ] int 
  5014 ;;  i               2   16[BANK0 ] int 
  5015 ;;  mine            2   11[BANK0 ] int 
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  1    wreg      void 
  5018 ;; Registers used:
  5019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5025 ;;      Params:         0       1       0       0       0       0       0
  5026 ;;      Locals:         0       7       0       0       0       0       0
  5027 ;;      Temps:          0       4       0       0       0       0       0
  5028 ;;      Totals:         0      12       0       0       0       0       0
  5029 ;;Total ram usage:       12 bytes
  5030 ;; Hardware stack levels used:    1
  5031 ;; Hardware stack levels required when called:    4
  5032 ;; This function calls:
  5033 ;;		___wmul
  5034 ;;		_lcd_ecritChar
  5035 ;;		_lcd_gotoXY
  5036 ;; This function is called by:
  5037 ;;		_demine
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           	psect	text19
  5042  00114E                     __ptext19:
  5043                           	opt callstack 0
  5044  00114E                     _enleveTuilesAutour:
  5045                           	opt callstack 25
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;incstack = 0
  5049                           ;enleveTuilesAutour@x stored from wreg
  5050  00114E  0100               	movlb	0	; force () banked
  5051  001150  6FC1               	movwf	enleveTuilesAutour@x& (0+255),b
  5052  001152                     
  5053                           ;main.c: 428: int i=-1;
  5054  001152  0100               	movlb	0	; force () banked
  5055  001154  69C4               	setf	enleveTuilesAutour@i& (0+255),b
  5056  001156  69C5               	setf	(enleveTuilesAutour@i+1)& (0+255),b
  5057  001158                     
  5058                           ; BSR set to: 0
  5059                           ;main.c: 429: int mine=0;
  5060  001158  0E00               	movlw	0
  5061  00115A  0100               	movlb	0	; force () banked
  5062  00115C  6FC0               	movwf	(enleveTuilesAutour@mine+1)& (0+255),b
  5063  00115E  0E00               	movlw	0
  5064  001160  6FBF               	movwf	enleveTuilesAutour@mine& (0+255),b
  5065  001162                     
  5066                           ; BSR set to: 0
  5067                           ;main.c: 431: m_tabVue[y][x]=32;
  5068  001162  0100               	movlb	0	; force () banked
  5069  001164  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5070  001166  0D15               	mullw	21
  5071  001168  0E00               	movlw	low _m_tabVue
  5072  00116A  0100               	movlb	0	; force () banked
  5073  00116C  6FBB               	movwf	??_enleveTuilesAutour& (0+255),b
  5074  00116E  0E01               	movlw	high _m_tabVue
  5075  001170  6FBC               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  5076  001172  50F3               	movf	243,w,c
  5077  001174  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5078  001176  50F4               	movf	244,w,c
  5079  001178  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5080  00117A  0100               	movlb	0	; force () banked
  5081  00117C  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5082  00117E  0100               	movlb	0	; force () banked
  5083  001180  25BB               	addwf	??_enleveTuilesAutour& (0+255),w,b
  5084  001182  6ED9               	movwf	fsr2l,c
  5085  001184  0100               	movlb	0	; force () banked
  5086  001186  0E00               	movlw	0
  5087  001188  0100               	movlb	0	; force () banked
  5088  00118A  21BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  5089  00118C  6EDA               	movwf	fsr2h,c
  5090  00118E  0E20               	movlw	32
  5091  001190  6EDF               	movwf	indf2,c
  5092  001192                     
  5093                           ; BSR set to: 0
  5094                           ;main.c: 432: for ( i=-1;i<=1;i++)
  5095  001192  0100               	movlb	0	; force () banked
  5096  001194  69C4               	setf	enleveTuilesAutour@i& (0+255),b
  5097  001196  69C5               	setf	(enleveTuilesAutour@i+1)& (0+255),b
  5098  001198                     
  5099                           ; BSR set to: 0
  5100  001198  0100               	movlb	0	; force () banked
  5101  00119A  BFC5               	btfsc	(enleveTuilesAutour@i+1)& (0+255),7,b
  5102  00119C  EFD9  F008         	goto	u1941
  5103  0011A0  51C5               	movf	(enleveTuilesAutour@i+1)& (0+255),w,b
  5104  0011A2  E109               	bnz	u1940
  5105  0011A4  0E02               	movlw	2
  5106  0011A6  5DC4               	subwf	enleveTuilesAutour@i& (0+255),w,b
  5107  0011A8  A0D8               	btfss	status,0,c
  5108  0011AA  EFD9  F008         	goto	u1941
  5109  0011AE  EFDB  F008         	goto	u1940
  5110  0011B2                     u1941:
  5111  0011B2  EFDD  F008         	goto	l2293
  5112  0011B6                     u1940:
  5113  0011B6  EF1D  F00A         	goto	l194
  5114  0011BA                     l2293:
  5115                           
  5116                           ; BSR set to: 0
  5117                           ;main.c: 433: {;main.c: 434: if((y==0)&&(i==-1))
  5118  0011BA  0100               	movlb	0	; force () banked
  5119  0011BC  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5120  0011BE  A4D8               	btfss	status,2,c
  5121  0011C0  EFE4  F008         	goto	u1951
  5122  0011C4  EFE6  F008         	goto	u1950
  5123  0011C8                     u1951:
  5124  0011C8  EFF6  F008         	goto	l2299
  5125  0011CC                     u1950:
  5126  0011CC                     
  5127                           ; BSR set to: 0
  5128  0011CC  0100               	movlb	0	; force () banked
  5129  0011CE  29C4               	incf	enleveTuilesAutour@i& (0+255),w,b
  5130  0011D0  E106               	bnz	u1961
  5131  0011D2  29C5               	incf	(enleveTuilesAutour@i+1)& (0+255),w,b
  5132  0011D4  A4D8               	btfss	status,2,c
  5133  0011D6  EFEF  F008         	goto	u1961
  5134  0011DA  EFF1  F008         	goto	u1960
  5135  0011DE                     u1961:
  5136  0011DE  EFF6  F008         	goto	l2299
  5137  0011E2                     u1960:
  5138  0011E2                     
  5139                           ; BSR set to: 0
  5140                           ;main.c: 435: {;main.c: 436: i=0;
  5141  0011E2  0E00               	movlw	0
  5142  0011E4  0100               	movlb	0	; force () banked
  5143  0011E6  6FC5               	movwf	(enleveTuilesAutour@i+1)& (0+255),b
  5144  0011E8  0E00               	movlw	0
  5145  0011EA  6FC4               	movwf	enleveTuilesAutour@i& (0+255),b
  5146  0011EC                     l2299:
  5147                           
  5148                           ; BSR set to: 0
  5149                           ;main.c: 437: };main.c: 438: for(int j=-1;j<=1;j++)
  5150  0011EC  0100               	movlb	0	; force () banked
  5151  0011EE  69C2               	setf	enleveTuilesAutour@j& (0+255),b
  5152  0011F0  69C3               	setf	(enleveTuilesAutour@j+1)& (0+255),b
  5153  0011F2                     
  5154                           ; BSR set to: 0
  5155  0011F2  0100               	movlb	0	; force () banked
  5156  0011F4  BFC3               	btfsc	(enleveTuilesAutour@j+1)& (0+255),7,b
  5157  0011F6  EF06  F009         	goto	u1971
  5158  0011FA  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5159  0011FC  E109               	bnz	u1970
  5160  0011FE  0E02               	movlw	2
  5161  001200  5DC2               	subwf	enleveTuilesAutour@j& (0+255),w,b
  5162  001202  A0D8               	btfss	status,0,c
  5163  001204  EF06  F009         	goto	u1971
  5164  001208  EF08  F009         	goto	u1970
  5165  00120C                     u1971:
  5166  00120C  EF0A  F009         	goto	l2305
  5167  001210                     u1970:
  5168  001210  EFF2  F009         	goto	l2327
  5169  001214                     l2305:
  5170                           
  5171                           ; BSR set to: 0
  5172                           ;main.c: 439: {;main.c: 440: if((x==0)&&(j==-1))
  5173  001214  0100               	movlb	0	; force () banked
  5174  001216  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5175  001218  A4D8               	btfss	status,2,c
  5176  00121A  EF11  F009         	goto	u1981
  5177  00121E  EF13  F009         	goto	u1980
  5178  001222                     u1981:
  5179  001222  EF23  F009         	goto	l2311
  5180  001226                     u1980:
  5181  001226                     
  5182                           ; BSR set to: 0
  5183  001226  0100               	movlb	0	; force () banked
  5184  001228  29C2               	incf	enleveTuilesAutour@j& (0+255),w,b
  5185  00122A  E106               	bnz	u1991
  5186  00122C  29C3               	incf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5187  00122E  A4D8               	btfss	status,2,c
  5188  001230  EF1C  F009         	goto	u1991
  5189  001234  EF1E  F009         	goto	u1990
  5190  001238                     u1991:
  5191  001238  EF23  F009         	goto	l2311
  5192  00123C                     u1990:
  5193  00123C                     
  5194                           ; BSR set to: 0
  5195                           ;main.c: 441: {;main.c: 442: j=0;
  5196  00123C  0E00               	movlw	0
  5197  00123E  0100               	movlb	0	; force () banked
  5198  001240  6FC3               	movwf	(enleveTuilesAutour@j+1)& (0+255),b
  5199  001242  0E00               	movlw	0
  5200  001244  6FC2               	movwf	enleveTuilesAutour@j& (0+255),b
  5201  001246                     l2311:
  5202                           
  5203                           ; BSR set to: 0
  5204                           ;main.c: 443: };main.c: 444: m_tabVue[y+i][x+j]= m_tabMines[y+i][x+j];
  5205  001246  C0C4  F0B4         	movff	enleveTuilesAutour@i,___wmul@multiplier
  5206  00124A  C0C5  F0B5         	movff	enleveTuilesAutour@i+1,___wmul@multiplier+1
  5207  00124E  0E00               	movlw	0
  5208  001250  0100               	movlb	0	; force () banked
  5209  001252  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5210  001254  0E15               	movlw	21
  5211  001256  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  5212  001258  ECC7  F012         	call	___wmul	;wreg free
  5213  00125C  0100               	movlb	0	; force () banked
  5214  00125E  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5215  001260  0D15               	mullw	21
  5216  001262  0E60               	movlw	low _m_tabMines
  5217  001264  0100               	movlb	0	; force () banked
  5218  001266  6FBB               	movwf	??_enleveTuilesAutour& (0+255),b
  5219  001268  0E00               	movlw	high _m_tabMines
  5220  00126A  6FBC               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  5221  00126C  50F3               	movf	243,w,c
  5222  00126E  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5223  001270  50F4               	movf	244,w,c
  5224  001272  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5225  001274  0100               	movlb	0	; force () banked
  5226  001276  51B4               	movf	?___wmul& (0+255),w,b
  5227  001278  0100               	movlb	0	; force () banked
  5228  00127A  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5229  00127C  0100               	movlb	0	; force () banked
  5230  00127E  51B5               	movf	(?___wmul+1)& (0+255),w,b
  5231  001280  0100               	movlb	0	; force () banked
  5232  001282  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5233  001284  0100               	movlb	0	; force () banked
  5234  001286  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5235  001288  0100               	movlb	0	; force () banked
  5236  00128A  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5237  00128C  0E00               	movlw	0
  5238  00128E  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5239  001290  0100               	movlb	0	; force () banked
  5240  001292  51C2               	movf	enleveTuilesAutour@j& (0+255),w,b
  5241  001294  0100               	movlb	0	; force () banked
  5242  001296  25BB               	addwf	??_enleveTuilesAutour& (0+255),w,b
  5243  001298  6ED9               	movwf	fsr2l,c
  5244  00129A  0100               	movlb	0	; force () banked
  5245  00129C  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5246  00129E  0100               	movlb	0	; force () banked
  5247  0012A0  21BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  5248  0012A2  6EDA               	movwf	fsr2h,c
  5249  0012A4  C0C4  F0B4         	movff	enleveTuilesAutour@i,___wmul@multiplier
  5250  0012A8  C0C5  F0B5         	movff	enleveTuilesAutour@i+1,___wmul@multiplier+1
  5251  0012AC  0E00               	movlw	0
  5252  0012AE  0100               	movlb	0	; force () banked
  5253  0012B0  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5254  0012B2  0E15               	movlw	21
  5255  0012B4  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  5256  0012B6  ECC7  F012         	call	___wmul	;wreg free
  5257  0012BA  0100               	movlb	0	; force () banked
  5258  0012BC  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5259  0012BE  0D15               	mullw	21
  5260  0012C0  0E00               	movlw	low _m_tabVue
  5261  0012C2  0100               	movlb	0	; force () banked
  5262  0012C4  6FBD               	movwf	(??_enleveTuilesAutour+2)& (0+255),b
  5263  0012C6  0E01               	movlw	high _m_tabVue
  5264  0012C8  6FBE               	movwf	(??_enleveTuilesAutour+3)& (0+255),b
  5265  0012CA  50F3               	movf	243,w,c
  5266  0012CC  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  5267  0012CE  50F4               	movf	244,w,c
  5268  0012D0  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  5269  0012D2  0100               	movlb	0	; force () banked
  5270  0012D4  51B4               	movf	?___wmul& (0+255),w,b
  5271  0012D6  0100               	movlb	0	; force () banked
  5272  0012D8  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  5273  0012DA  0100               	movlb	0	; force () banked
  5274  0012DC  51B5               	movf	(?___wmul+1)& (0+255),w,b
  5275  0012DE  0100               	movlb	0	; force () banked
  5276  0012E0  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  5277  0012E2  0100               	movlb	0	; force () banked
  5278  0012E4  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5279  0012E6  0100               	movlb	0	; force () banked
  5280  0012E8  27BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),f,b
  5281  0012EA  0E00               	movlw	0
  5282  0012EC  23BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),f,b
  5283  0012EE  0100               	movlb	0	; force () banked
  5284  0012F0  51C2               	movf	enleveTuilesAutour@j& (0+255),w,b
  5285  0012F2  0100               	movlb	0	; force () banked
  5286  0012F4  25BD               	addwf	(??_enleveTuilesAutour+2)& (0+255),w,b
  5287  0012F6  6EE1               	movwf	fsr1l,c
  5288  0012F8  0100               	movlb	0	; force () banked
  5289  0012FA  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5290  0012FC  0100               	movlb	0	; force () banked
  5291  0012FE  21BE               	addwfc	(??_enleveTuilesAutour+3)& (0+255),w,b
  5292  001300  6EE2               	movwf	fsr1h,c
  5293  001302  CFDF FFE7          	movff	indf2,indf1
  5294  001306                     
  5295                           ; BSR set to: 0
  5296                           ;main.c: 445: lcd_gotoXY(x+1+j,y+i+1);
  5297  001306  0100               	movlb	0	; force () banked
  5298  001308  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5299  00130A  0100               	movlb	0	; force () banked
  5300  00130C  25C4               	addwf	enleveTuilesAutour@i& (0+255),w,b
  5301  00130E  0100               	movlb	0	; force () banked
  5302  001310  6FBB               	movwf	??_enleveTuilesAutour& (0+255),b
  5303  001312  29BB               	incf	??_enleveTuilesAutour& (0+255),w,b
  5304  001314  0100               	movlb	0	; force () banked
  5305  001316  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  5306  001318  0100               	movlb	0	; force () banked
  5307  00131A  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5308  00131C  0100               	movlb	0	; force () banked
  5309  00131E  25C2               	addwf	enleveTuilesAutour@j& (0+255),w,b
  5310  001320  0100               	movlb	0	; force () banked
  5311  001322  6FBC               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  5312  001324  29BC               	incf	(??_enleveTuilesAutour+1)& (0+255),w,b
  5313  001326  ECE4  F010         	call	_lcd_gotoXY
  5314  00132A                     
  5315                           ;main.c: 446: lcd_ecritChar(m_tabVue[y+i][x+j]);
  5316  00132A  C0C4  F0B4         	movff	enleveTuilesAutour@i,___wmul@multiplier
  5317  00132E  C0C5  F0B5         	movff	enleveTuilesAutour@i+1,___wmul@multiplier+1
  5318  001332  0E00               	movlw	0
  5319  001334  0100               	movlb	0	; force () banked
  5320  001336  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5321  001338  0E15               	movlw	21
  5322  00133A  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  5323  00133C  ECC7  F012         	call	___wmul	;wreg free
  5324  001340  0100               	movlb	0	; force () banked
  5325  001342  51BA               	movf	enleveTuilesAutour@y& (0+255),w,b
  5326  001344  0D15               	mullw	21
  5327  001346  0E00               	movlw	low _m_tabVue
  5328  001348  0100               	movlb	0	; force () banked
  5329  00134A  6FBB               	movwf	??_enleveTuilesAutour& (0+255),b
  5330  00134C  0E01               	movlw	high _m_tabVue
  5331  00134E  6FBC               	movwf	(??_enleveTuilesAutour+1)& (0+255),b
  5332  001350  50F3               	movf	243,w,c
  5333  001352  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5334  001354  50F4               	movf	244,w,c
  5335  001356  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5336  001358  0100               	movlb	0	; force () banked
  5337  00135A  51B4               	movf	?___wmul& (0+255),w,b
  5338  00135C  0100               	movlb	0	; force () banked
  5339  00135E  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5340  001360  0100               	movlb	0	; force () banked
  5341  001362  51B5               	movf	(?___wmul+1)& (0+255),w,b
  5342  001364  0100               	movlb	0	; force () banked
  5343  001366  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5344  001368  0100               	movlb	0	; force () banked
  5345  00136A  51C1               	movf	enleveTuilesAutour@x& (0+255),w,b
  5346  00136C  0100               	movlb	0	; force () banked
  5347  00136E  27BB               	addwf	??_enleveTuilesAutour& (0+255),f,b
  5348  001370  0E00               	movlw	0
  5349  001372  23BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),f,b
  5350  001374  0100               	movlb	0	; force () banked
  5351  001376  51C2               	movf	enleveTuilesAutour@j& (0+255),w,b
  5352  001378  0100               	movlb	0	; force () banked
  5353  00137A  25BB               	addwf	??_enleveTuilesAutour& (0+255),w,b
  5354  00137C  6ED9               	movwf	fsr2l,c
  5355  00137E  0100               	movlb	0	; force () banked
  5356  001380  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5357  001382  0100               	movlb	0	; force () banked
  5358  001384  21BC               	addwfc	(??_enleveTuilesAutour+1)& (0+255),w,b
  5359  001386  6EDA               	movwf	fsr2h,c
  5360  001388  50DF               	movf	indf2,w,c
  5361  00138A  EC18  F012         	call	_lcd_ecritChar
  5362  00138E                     
  5363                           ;main.c: 447: if((x==19)&&(j==0))
  5364  00138E  0E13               	movlw	19
  5365  001390  0100               	movlb	0	; force () banked
  5366  001392  19C1               	xorwf	enleveTuilesAutour@x& (0+255),w,b
  5367  001394  A4D8               	btfss	status,2,c
  5368  001396  EFCF  F009         	goto	u2001
  5369  00139A  EFD1  F009         	goto	u2000
  5370  00139E                     u2001:
  5371  00139E  EFE0  F009         	goto	l2323
  5372  0013A2                     u2000:
  5373  0013A2                     
  5374                           ; BSR set to: 0
  5375  0013A2  0100               	movlb	0	; force () banked
  5376  0013A4  51C2               	movf	enleveTuilesAutour@j& (0+255),w,b
  5377  0013A6  11C3               	iorwf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5378  0013A8  A4D8               	btfss	status,2,c
  5379  0013AA  EFD9  F009         	goto	u2011
  5380  0013AE  EFDB  F009         	goto	u2010
  5381  0013B2                     u2011:
  5382  0013B2  EFE0  F009         	goto	l2323
  5383  0013B6                     u2010:
  5384  0013B6                     
  5385                           ; BSR set to: 0
  5386                           ;main.c: 448: {;main.c: 449: j=1;
  5387  0013B6  0E00               	movlw	0
  5388  0013B8  0100               	movlb	0	; force () banked
  5389  0013BA  6FC3               	movwf	(enleveTuilesAutour@j+1)& (0+255),b
  5390  0013BC  0E01               	movlw	1
  5391  0013BE  6FC2               	movwf	enleveTuilesAutour@j& (0+255),b
  5392  0013C0                     l2323:
  5393                           
  5394                           ; BSR set to: 0
  5395  0013C0  0100               	movlb	0	; force () banked
  5396  0013C2  4BC2               	infsnz	enleveTuilesAutour@j& (0+255),f,b
  5397  0013C4  2BC3               	incf	(enleveTuilesAutour@j+1)& (0+255),f,b
  5398  0013C6                     
  5399                           ; BSR set to: 0
  5400  0013C6  0100               	movlb	0	; force () banked
  5401  0013C8  BFC3               	btfsc	(enleveTuilesAutour@j+1)& (0+255),7,b
  5402  0013CA  EFF0  F009         	goto	u2021
  5403  0013CE  51C3               	movf	(enleveTuilesAutour@j+1)& (0+255),w,b
  5404  0013D0  E109               	bnz	u2020
  5405  0013D2  0E02               	movlw	2
  5406  0013D4  5DC2               	subwf	enleveTuilesAutour@j& (0+255),w,b
  5407  0013D6  A0D8               	btfss	status,0,c
  5408  0013D8  EFF0  F009         	goto	u2021
  5409  0013DC  EFF2  F009         	goto	u2020
  5410  0013E0                     u2021:
  5411  0013E0  EF0A  F009         	goto	l2305
  5412  0013E4                     u2020:
  5413  0013E4                     l2327:
  5414                           
  5415                           ; BSR set to: 0
  5416                           ;main.c: 450: };main.c: 451: };main.c: 452: if((y==3)&&(i==0))
  5417  0013E4  0E03               	movlw	3
  5418  0013E6  0100               	movlb	0	; force () banked
  5419  0013E8  19BA               	xorwf	enleveTuilesAutour@y& (0+255),w,b
  5420  0013EA  A4D8               	btfss	status,2,c
  5421  0013EC  EFFA  F009         	goto	u2031
  5422  0013F0  EFFC  F009         	goto	u2030
  5423  0013F4                     u2031:
  5424  0013F4  EF0B  F00A         	goto	l2333
  5425  0013F8                     u2030:
  5426  0013F8                     
  5427                           ; BSR set to: 0
  5428  0013F8  0100               	movlb	0	; force () banked
  5429  0013FA  51C4               	movf	enleveTuilesAutour@i& (0+255),w,b
  5430  0013FC  11C5               	iorwf	(enleveTuilesAutour@i+1)& (0+255),w,b
  5431  0013FE  A4D8               	btfss	status,2,c
  5432  001400  EF04  F00A         	goto	u2041
  5433  001404  EF06  F00A         	goto	u2040
  5434  001408                     u2041:
  5435  001408  EF0B  F00A         	goto	l2333
  5436  00140C                     u2040:
  5437  00140C                     
  5438                           ; BSR set to: 0
  5439                           ;main.c: 453: {;main.c: 454: i=1;
  5440  00140C  0E00               	movlw	0
  5441  00140E  0100               	movlb	0	; force () banked
  5442  001410  6FC5               	movwf	(enleveTuilesAutour@i+1)& (0+255),b
  5443  001412  0E01               	movlw	1
  5444  001414  6FC4               	movwf	enleveTuilesAutour@i& (0+255),b
  5445  001416                     l2333:
  5446                           
  5447                           ; BSR set to: 0
  5448  001416  0100               	movlb	0	; force () banked
  5449  001418  4BC4               	infsnz	enleveTuilesAutour@i& (0+255),f,b
  5450  00141A  2BC5               	incf	(enleveTuilesAutour@i+1)& (0+255),f,b
  5451  00141C                     
  5452                           ; BSR set to: 0
  5453  00141C  0100               	movlb	0	; force () banked
  5454  00141E  BFC5               	btfsc	(enleveTuilesAutour@i+1)& (0+255),7,b
  5455  001420  EF1B  F00A         	goto	u2051
  5456  001424  51C5               	movf	(enleveTuilesAutour@i+1)& (0+255),w,b
  5457  001426  E109               	bnz	u2050
  5458  001428  0E02               	movlw	2
  5459  00142A  5DC4               	subwf	enleveTuilesAutour@i& (0+255),w,b
  5460  00142C  A0D8               	btfss	status,0,c
  5461  00142E  EF1B  F00A         	goto	u2051
  5462  001432  EF1D  F00A         	goto	u2050
  5463  001436                     u2051:
  5464  001436  EFDD  F008         	goto	l2293
  5465  00143A                     u2050:
  5466  00143A                     l194:
  5467                           
  5468                           ; BSR set to: 0
  5469  00143A  0012               	return		;funcret
  5470  00143C                     __end_of_enleveTuilesAutour:
  5471                           	opt callstack 0
  5472                           
  5473 ;; *************** function _afficheTabVue *****************
  5474 ;; Defined at:
  5475 ;;		line 497 in file "main.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;		None
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;  i               2   17[BANK0 ] int 
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  1    wreg      void 
  5482 ;; Registers used:
  5483 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5489 ;;      Params:         0       0       0       0       0       0       0
  5490 ;;      Locals:         0       2       0       0       0       0       0
  5491 ;;      Temps:          0       2       0       0       0       0       0
  5492 ;;      Totals:         0       4       0       0       0       0       0
  5493 ;;Total ram usage:        4 bytes
  5494 ;; Hardware stack levels used:    1
  5495 ;; Hardware stack levels required when called:    5
  5496 ;; This function calls:
  5497 ;;		___wmul
  5498 ;;		_lcd_gotoXY
  5499 ;;		_lcd_putMessage
  5500 ;; This function is called by:
  5501 ;;		_main
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           	psect	text20
  5506  00207C                     __ptext20:
  5507                           	opt callstack 0
  5508  00207C                     _afficheTabVue:
  5509                           	opt callstack 25
  5510  00207C                     
  5511                           ;main.c: 499: int i=0;
  5512  00207C  0E00               	movlw	0
  5513  00207E  0100               	movlb	0	; force () banked
  5514  002080  6FC6               	movwf	(afficheTabVue@i+1)& (0+255),b
  5515  002082  0E00               	movlw	0
  5516  002084  6FC5               	movwf	afficheTabVue@i& (0+255),b
  5517                           
  5518                           ;main.c: 500: for(i=0;i<4;i++)
  5519  002086  0E00               	movlw	0
  5520  002088  6FC6               	movwf	(afficheTabVue@i+1)& (0+255),b
  5521  00208A  0E00               	movlw	0
  5522  00208C  6FC5               	movwf	afficheTabVue@i& (0+255),b
  5523  00208E                     
  5524                           ; BSR set to: 0
  5525  00208E  0100               	movlb	0	; force () banked
  5526  002090  BFC6               	btfsc	(afficheTabVue@i+1)& (0+255),7,b
  5527  002092  EF54  F010         	goto	u2351
  5528  002096  51C6               	movf	(afficheTabVue@i+1)& (0+255),w,b
  5529  002098  E109               	bnz	u2350
  5530  00209A  0E04               	movlw	4
  5531  00209C  5DC5               	subwf	afficheTabVue@i& (0+255),w,b
  5532  00209E  A0D8               	btfss	status,0,c
  5533  0020A0  EF54  F010         	goto	u2351
  5534  0020A4  EF56  F010         	goto	u2350
  5535  0020A8                     u2351:
  5536  0020A8  EF58  F010         	goto	l2537
  5537  0020AC                     u2350:
  5538  0020AC  EF92  F010         	goto	l208
  5539  0020B0                     l2537:
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;main.c: 501: {;main.c: 502: lcd_gotoXY( 1, i+1);
  5543  0020B0  0100               	movlb	0	; force () banked
  5544  0020B2  29C5               	incf	afficheTabVue@i& (0+255),w,b
  5545  0020B4  0100               	movlb	0	; force () banked
  5546  0020B6  6FB7               	movwf	lcd_gotoXY@y& (0+255),b
  5547  0020B8  0E01               	movlw	1
  5548  0020BA  ECE4  F010         	call	_lcd_gotoXY
  5549  0020BE                     
  5550                           ;main.c: 503: lcd_putMessage(m_tabVue[i]);
  5551  0020BE  C0C5  F0B4         	movff	afficheTabVue@i,___wmul@multiplier
  5552  0020C2  C0C6  F0B5         	movff	afficheTabVue@i+1,___wmul@multiplier+1
  5553  0020C6  0E00               	movlw	0
  5554  0020C8  0100               	movlb	0	; force () banked
  5555  0020CA  6FB7               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5556  0020CC  0E15               	movlw	21
  5557  0020CE  6FB6               	movwf	___wmul@multiplicand& (0+255),b
  5558  0020D0  ECC7  F012         	call	___wmul	;wreg free
  5559  0020D4  0E00               	movlw	low _m_tabVue
  5560  0020D6  0100               	movlb	0	; force () banked
  5561  0020D8  25B4               	addwf	?___wmul& (0+255),w,b
  5562  0020DA  0100               	movlb	0	; force () banked
  5563  0020DC  6FC3               	movwf	??_afficheTabVue& (0+255),b
  5564  0020DE  0E01               	movlw	high _m_tabVue
  5565  0020E0  0100               	movlb	0	; force () banked
  5566  0020E2  21B5               	addwfc	(?___wmul+1)& (0+255),w,b
  5567  0020E4  0100               	movlb	0	; force () banked
  5568  0020E6  6FC4               	movwf	(??_afficheTabVue+1)& (0+255),b
  5569  0020E8  C0C3  F0BA         	movff	??_afficheTabVue,lcd_putMessage@chaine
  5570  0020EC  C0C4  F0BB         	movff	??_afficheTabVue+1,lcd_putMessage@chaine+1
  5571  0020F0  0100               	movlb	0	; force () banked
  5572  0020F2  51BA               	movf	lcd_putMessage@chaine& (0+255),w,b
  5573  0020F4  11BB               	iorwf	(lcd_putMessage@chaine+1)& (0+255),w,b
  5574  0020F6  A4D8               	btfss	status,2,c
  5575  0020F8  0E20               	movlw	32
  5576  0020FA  6FBC               	movwf	(lcd_putMessage@chaine+2)& (0+255),b
  5577  0020FC  EC8B  F00F         	call	_lcd_putMessage	;wreg free
  5578  002100  0100               	movlb	0	; force () banked
  5579  002102  4BC5               	infsnz	afficheTabVue@i& (0+255),f,b
  5580  002104  2BC6               	incf	(afficheTabVue@i+1)& (0+255),f,b
  5581  002106                     
  5582                           ; BSR set to: 0
  5583  002106  0100               	movlb	0	; force () banked
  5584  002108  BFC6               	btfsc	(afficheTabVue@i+1)& (0+255),7,b
  5585  00210A  EF90  F010         	goto	u2361
  5586  00210E  51C6               	movf	(afficheTabVue@i+1)& (0+255),w,b
  5587  002110  E109               	bnz	u2360
  5588  002112  0E04               	movlw	4
  5589  002114  5DC5               	subwf	afficheTabVue@i& (0+255),w,b
  5590  002116  A0D8               	btfss	status,0,c
  5591  002118  EF90  F010         	goto	u2361
  5592  00211C  EF92  F010         	goto	u2360
  5593  002120                     u2361:
  5594  002120  EF58  F010         	goto	l2537
  5595  002124                     u2360:
  5596  002124                     l208:
  5597                           
  5598                           ; BSR set to: 0
  5599  002124  0012               	return		;funcret
  5600  002126                     __end_of_afficheTabVue:
  5601                           	opt callstack 0
  5602                           
  5603 ;; *************** function _lcd_putMessage *****************
  5604 ;; Defined at:
  5605 ;;		line 387 in file "Lcd4Lignes.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;  chaine          3    6[BANK0 ] PTR const unsigned char 
  5608 ;;		 -> m_tabVue(84), STR_1(24), 
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;  j               1   14[BANK0 ] unsigned char 
  5611 ;; Return value:  Size  Location     Type
  5612 ;;                  1    wreg      void 
  5613 ;; Registers used:
  5614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5620 ;;      Params:         0       3       0       0       0       0       0
  5621 ;;      Locals:         0       1       0       0       0       0       0
  5622 ;;      Temps:          0       5       0       0       0       0       0
  5623 ;;      Totals:         0       9       0       0       0       0       0
  5624 ;;Total ram usage:        9 bytes
  5625 ;; Hardware stack levels used:    1
  5626 ;; Hardware stack levels required when called:    4
  5627 ;; This function calls:
  5628 ;;		_lcd_ecritChar
  5629 ;; This function is called by:
  5630 ;;		_main
  5631 ;;		_afficheTabVue
  5632 ;; This function uses a non-reentrant model
  5633 ;;
  5634                           
  5635                           	psect	text21
  5636  001F16                     __ptext21:
  5637                           	opt callstack 0
  5638  001F16                     _lcd_putMessage:
  5639                           	opt callstack 26
  5640  001F16                     
  5641                           ;Lcd4Lignes.c: 389: unsigned char j;;Lcd4Lignes.c: 391: for(j = 0; chaine[j] != 0; j++)
  5642  001F16  0E00               	movlw	0
  5643  001F18  0100               	movlb	0	; force () banked
  5644  001F1A  6FC2               	movwf	lcd_putMessage@j& (0+255),b
  5645  001F1C  EFB8  F00F         	goto	l2091
  5646  001F20                     l2087:
  5647                           
  5648                           ;Lcd4Lignes.c: 392: lcd_ecritChar(chaine[j]);
  5649  001F20  0100               	movlb	0	; force () banked
  5650  001F22  51C2               	movf	lcd_putMessage@j& (0+255),w,b
  5651  001F24  0100               	movlb	0	; force () banked
  5652  001F26  6FBD               	movwf	??_lcd_putMessage& (0+255),b
  5653  001F28  6BBE               	clrf	(??_lcd_putMessage+1)& (0+255),b
  5654  001F2A  51BD               	movf	??_lcd_putMessage& (0+255),w,b
  5655  001F2C  0100               	movlb	0	; force () banked
  5656  001F2E  25BA               	addwf	lcd_putMessage@chaine& (0+255),w,b
  5657  001F30  0100               	movlb	0	; force () banked
  5658  001F32  6FBF               	movwf	(??_lcd_putMessage+2)& (0+255),b
  5659  001F34  51BE               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  5660  001F36  0100               	movlb	0	; force () banked
  5661  001F38  21BB               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  5662  001F3A  0100               	movlb	0	; force () banked
  5663  001F3C  6FC0               	movwf	(??_lcd_putMessage+3)& (0+255),b
  5664  001F3E  0E00               	movlw	0
  5665  001F40  0100               	movlb	0	; force () banked
  5666  001F42  21BC               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  5667  001F44  0100               	movlb	0	; force () banked
  5668  001F46  6FC1               	movwf	(??_lcd_putMessage+4)& (0+255),b
  5669  001F48  C0BF  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  5670  001F4C  C0C0  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  5671  001F50  C0C1  FFF8         	movff	??_lcd_putMessage+4,tblptru
  5672  001F54  BAF8               	btfsc	tblptru,5,c
  5673  001F56  D003               	bra	u1387
  5674  001F58  0008               	tblrd		*
  5675  001F5A  50F5               	movf	tablat,w,c
  5676  001F5C  D005               	bra	u1380
  5677  001F5E                     u1387:
  5678  001F5E  CFF6 FFE9          	movff	tblptrl,fsr0l
  5679  001F62  CFF7 FFEA          	movff	tblptrh,fsr0h
  5680  001F66  50EF               	movf	indf0,w,c
  5681  001F68                     u1380:
  5682  001F68  EC18  F012         	call	_lcd_ecritChar
  5683  001F6C  0100               	movlb	0	; force () banked
  5684  001F6E  2BC2               	incf	lcd_putMessage@j& (0+255),f,b
  5685  001F70                     l2091:
  5686                           
  5687                           ; BSR set to: 0
  5688  001F70  0100               	movlb	0	; force () banked
  5689  001F72  51C2               	movf	lcd_putMessage@j& (0+255),w,b
  5690  001F74  0100               	movlb	0	; force () banked
  5691  001F76  6FBD               	movwf	??_lcd_putMessage& (0+255),b
  5692  001F78  6BBE               	clrf	(??_lcd_putMessage+1)& (0+255),b
  5693  001F7A  51BD               	movf	??_lcd_putMessage& (0+255),w,b
  5694  001F7C  0100               	movlb	0	; force () banked
  5695  001F7E  25BA               	addwf	lcd_putMessage@chaine& (0+255),w,b
  5696  001F80  0100               	movlb	0	; force () banked
  5697  001F82  6FBF               	movwf	(??_lcd_putMessage+2)& (0+255),b
  5698  001F84  51BE               	movf	(??_lcd_putMessage+1)& (0+255),w,b
  5699  001F86  0100               	movlb	0	; force () banked
  5700  001F88  21BB               	addwfc	(lcd_putMessage@chaine+1)& (0+255),w,b
  5701  001F8A  0100               	movlb	0	; force () banked
  5702  001F8C  6FC0               	movwf	(??_lcd_putMessage+3)& (0+255),b
  5703  001F8E  0E00               	movlw	0
  5704  001F90  0100               	movlb	0	; force () banked
  5705  001F92  21BC               	addwfc	(lcd_putMessage@chaine+2)& (0+255),w,b
  5706  001F94  0100               	movlb	0	; force () banked
  5707  001F96  6FC1               	movwf	(??_lcd_putMessage+4)& (0+255),b
  5708  001F98  C0BF  FFF6         	movff	??_lcd_putMessage+2,tblptrl
  5709  001F9C  C0C0  FFF7         	movff	??_lcd_putMessage+3,tblptrh
  5710  001FA0  C0C1  FFF8         	movff	??_lcd_putMessage+4,tblptru
  5711  001FA4  BAF8               	btfsc	tblptru,5,c
  5712  001FA6  D003               	bra	u1397
  5713  001FA8  0008               	tblrd		*
  5714  001FAA  50F5               	movf	tablat,w,c
  5715  001FAC  D005               	bra	u1390
  5716  001FAE                     u1397:
  5717  001FAE  CFF6 FFE9          	movff	tblptrl,fsr0l
  5718  001FB2  CFF7 FFEA          	movff	tblptrh,fsr0h
  5719  001FB6  50EF               	movf	indf0,w,c
  5720  001FB8                     u1390:
  5721  001FB8  0900               	iorlw	0
  5722  001FBA  A4D8               	btfss	status,2,c
  5723  001FBC  EFE2  F00F         	goto	u1401
  5724  001FC0  EFE4  F00F         	goto	u1400
  5725  001FC4                     u1401:
  5726  001FC4  EF90  F00F         	goto	l2087
  5727  001FC8                     u1400:
  5728  001FC8  0012               	return		;funcret
  5729  001FCA                     __end_of_lcd_putMessage:
  5730                           	opt callstack 0
  5731                           
  5732 ;; *************** function _lcd_ecritChar *****************
  5733 ;; Defined at:
  5734 ;;		line 359 in file "Lcd4Lignes.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;  car             1    wreg     unsigned char 
  5737 ;; Auto vars:     Size  Location     Type
  5738 ;;  car             1    3[BANK0 ] unsigned char 
  5739 ;;  posRam          1    4[BANK0 ] unsigned char 
  5740 ;; Return value:  Size  Location     Type
  5741 ;;                  1    wreg      void 
  5742 ;; Registers used:
  5743 ;;		wreg, status,2, status,0, cstack
  5744 ;; Tracked objects:
  5745 ;;		On entry : 0/0
  5746 ;;		On exit  : 0/0
  5747 ;;		Unchanged: 0/0
  5748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5749 ;;      Params:         0       0       0       0       0       0       0
  5750 ;;      Locals:         0       2       0       0       0       0       0
  5751 ;;      Temps:          0       0       0       0       0       0       0
  5752 ;;      Totals:         0       2       0       0       0       0       0
  5753 ;;Total ram usage:        2 bytes
  5754 ;; Hardware stack levels used:    1
  5755 ;; Hardware stack levels required when called:    3
  5756 ;; This function calls:
  5757 ;;		_lcd_wrCom
  5758 ;;		_lcd_wrData
  5759 ;; This function is called by:
  5760 ;;		_demine
  5761 ;;		_enleveTuilesAutour
  5762 ;;		_lcd_putMessage
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           	psect	text22
  5767  002430                     __ptext22:
  5768                           	opt callstack 0
  5769  002430                     _lcd_ecritChar:
  5770                           	opt callstack 26
  5771                           
  5772                           ;incstack = 0
  5773                           ;lcd_ecritChar@car stored from wreg
  5774  002430  0100               	movlb	0	; force () banked
  5775  002432  6FB7               	movwf	lcd_ecritChar@car& (0+255),b
  5776  002434                     
  5777                           ;Lcd4Lignes.c: 361: unsigned char posRam;;Lcd4Lignes.c: 363: posRam = lcd_wrData(car);
  5778  002434  0100               	movlb	0	; force () banked
  5779  002436  51B7               	movf	lcd_ecritChar@car& (0+255),w,b
  5780  002438  EC83  F012         	call	_lcd_wrData
  5781  00243C  0100               	movlb	0	; force () banked
  5782  00243E  6FB8               	movwf	lcd_ecritChar@posRam& (0+255),b
  5783                           
  5784                           ;Lcd4Lignes.c: 364: switch(posRam)
  5785  002440  EF31  F012         	goto	l2067
  5786  002444                     l2059:
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;Lcd4Lignes.c: 367: lcd_wrCom(0xC0|0x80);
  5790  002444  0EC0               	movlw	192
  5791  002446  EC53  F011         	call	_lcd_wrCom
  5792                           
  5793                           ;Lcd4Lignes.c: 368: break;
  5794  00244A  EF41  F012         	goto	l329
  5795  00244E                     l2061:
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;Lcd4Lignes.c: 370: lcd_wrCom(0x94|0x80);
  5799  00244E  0E94               	movlw	148
  5800  002450  EC53  F011         	call	_lcd_wrCom
  5801                           
  5802                           ;Lcd4Lignes.c: 371: break;
  5803  002454  EF41  F012         	goto	l329
  5804  002458                     l2063:
  5805                           
  5806                           ; BSR set to: 0
  5807                           ;Lcd4Lignes.c: 373: lcd_wrCom(0xD4|0x80);
  5808  002458  0ED4               	movlw	212
  5809  00245A  EC53  F011         	call	_lcd_wrCom
  5810                           
  5811                           ;Lcd4Lignes.c: 374: break;
  5812  00245E  EF41  F012         	goto	l329
  5813  002462                     l2067:
  5814                           
  5815                           ; BSR set to: 0
  5816  002462  0100               	movlb	0	; force () banked
  5817  002464  51B8               	movf	lcd_ecritChar@posRam& (0+255),w,b
  5818                           
  5819                           ; Switch size 1, requested type "simple"
  5820                           ; Number of cases is 3, Range of values is 148 to 212
  5821                           ; switch strategies available:
  5822                           ; Name         Instructions Cycles
  5823                           ; simple_byte           10     6 (average)
  5824                           ;	Chosen strategy is simple_byte
  5825  002466  0A94               	xorlw	148	; case 148
  5826  002468  B4D8               	btfsc	status,2,c
  5827  00246A  EF22  F012         	goto	l2059
  5828  00246E  0A54               	xorlw	84	; case 192
  5829  002470  B4D8               	btfsc	status,2,c
  5830  002472  EF2C  F012         	goto	l2063
  5831  002476  0A14               	xorlw	20	; case 212
  5832  002478  B4D8               	btfsc	status,2,c
  5833  00247A  EF27  F012         	goto	l2061
  5834  00247E  EF41  F012         	goto	l329
  5835  002482                     l329:
  5836  002482  0012               	return		;funcret
  5837  002484                     __end_of_lcd_ecritChar:
  5838                           	opt callstack 0
  5839                           
  5840 ;; *************** function _lcd_wrData *****************
  5841 ;; Defined at:
  5842 ;;		line 188 in file "Lcd4Lignes.c"
  5843 ;; Parameters:    Size  Location     Type
  5844 ;;  caractere       1    wreg     unsigned char 
  5845 ;; Auto vars:     Size  Location     Type
  5846 ;;  caractere       1    2[BANK0 ] unsigned char 
  5847 ;; Return value:  Size  Location     Type
  5848 ;;                  1    wreg      unsigned char 
  5849 ;; Registers used:
  5850 ;;		wreg, status,2, status,0, cstack
  5851 ;; Tracked objects:
  5852 ;;		On entry : 0/0
  5853 ;;		On exit  : 0/0
  5854 ;;		Unchanged: 0/0
  5855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5856 ;;      Params:         0       0       0       0       0       0       0
  5857 ;;      Locals:         0       1       0       0       0       0       0
  5858 ;;      Temps:          0       0       0       0       0       0       0
  5859 ;;      Totals:         0       1       0       0       0       0       0
  5860 ;;Total ram usage:        1 bytes
  5861 ;; Hardware stack levels used:    1
  5862 ;; Hardware stack levels required when called:    2
  5863 ;; This function calls:
  5864 ;;		_lcd_busy
  5865 ;;		_lcd_ecrireDonnees
  5866 ;;		_lcd_strobeEnableBit
  5867 ;; This function is called by:
  5868 ;;		_lcd_ecritChar
  5869 ;;		_lcd_initCGRam
  5870 ;;		_lcd_effaceChar
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           
  5874                           	psect	text23
  5875  002506                     __ptext23:
  5876                           	opt callstack 0
  5877  002506                     _lcd_wrData:
  5878                           	opt callstack 26
  5879                           
  5880                           ;incstack = 0
  5881                           ;lcd_wrData@caractere stored from wreg
  5882  002506  0100               	movlb	0	; force () banked
  5883  002508  6FB6               	movwf	lcd_wrData@caractere& (0+255),b
  5884  00250A                     
  5885                           ;Lcd4Lignes.c: 190: lcd_busy();
  5886  00250A  EC42  F012         	call	_lcd_busy	;wreg free
  5887  00250E                     
  5888                           ;Lcd4Lignes.c: 191: TRISD = 0b00000000;
  5889  00250E  0E00               	movlw	0
  5890  002510  6E95               	movwf	149,c	;volatile
  5891  002512                     
  5892                           ;Lcd4Lignes.c: 194: PORTAbits.RA0 = 1;
  5893  002512  8080               	bsf	128,0,c	;volatile
  5894  002514                     
  5895                           ;Lcd4Lignes.c: 195: PORTAbits.RA1 = 0;
  5896  002514  9280               	bcf	128,1,c	;volatile
  5897  002516                     
  5898                           ;Lcd4Lignes.c: 197: lcd_ecrireDonnees(caractere >> 4);
  5899  002516  0100               	movlb	0	; force () banked
  5900  002518  39B6               	swapf	lcd_wrData@caractere& (0+255),w,b
  5901  00251A  0B0F               	andlw	15
  5902  00251C  ECFD  F012         	call	_lcd_ecrireDonnees
  5903  002520                     
  5904                           ;Lcd4Lignes.c: 198: lcd_strobeEnableBit();
  5905  002520  EC16  F013         	call	_lcd_strobeEnableBit	;wreg free
  5906  002524                     
  5907                           ;Lcd4Lignes.c: 201: lcd_ecrireDonnees(caractere);
  5908  002524  0100               	movlb	0	; force () banked
  5909  002526  51B6               	movf	lcd_wrData@caractere& (0+255),w,b
  5910  002528  ECFD  F012         	call	_lcd_ecrireDonnees
  5911  00252C                     
  5912                           ;Lcd4Lignes.c: 202: lcd_strobeEnableBit();
  5913  00252C  EC16  F013         	call	_lcd_strobeEnableBit	;wreg free
  5914  002530                     
  5915                           ;Lcd4Lignes.c: 205: TRISD = 0b00001111;
  5916  002530  0E0F               	movlw	15
  5917  002532  6E95               	movwf	149,c	;volatile
  5918  002534                     
  5919                           ;Lcd4Lignes.c: 206: _delay((unsigned long)((2)*(1000000/4000000.0)));
  5920                           ;Lcd4Lignes.c: 207: return(lcd_busy());
  5921  002534  EC42  F012         	call	_lcd_busy	;wreg free
  5922  002538  0012               	return		;funcret
  5923  00253A                     __end_of_lcd_wrData:
  5924                           	opt callstack 0
  5925                           
  5926 ;; *************** function _lcd_gotoXY *****************
  5927 ;; Defined at:
  5928 ;;		line 314 in file "Lcd4Lignes.c"
  5929 ;; Parameters:    Size  Location     Type
  5930 ;;  x               1    wreg     unsigned char 
  5931 ;;  y               1    3[BANK0 ] unsigned char 
  5932 ;; Auto vars:     Size  Location     Type
  5933 ;;  x               1    4[BANK0 ] unsigned char 
  5934 ;; Return value:  Size  Location     Type
  5935 ;;                  1    wreg      void 
  5936 ;; Registers used:
  5937 ;;		wreg, status,2, status,0, cstack
  5938 ;; Tracked objects:
  5939 ;;		On entry : 0/0
  5940 ;;		On exit  : 0/0
  5941 ;;		Unchanged: 0/0
  5942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5943 ;;      Params:         0       1       0       0       0       0       0
  5944 ;;      Locals:         0       1       0       0       0       0       0
  5945 ;;      Temps:          0       0       0       0       0       0       0
  5946 ;;      Totals:         0       2       0       0       0       0       0
  5947 ;;Total ram usage:        2 bytes
  5948 ;; Hardware stack levels used:    1
  5949 ;; Hardware stack levels required when called:    3
  5950 ;; This function calls:
  5951 ;;		_lcd_wrCom
  5952 ;; This function is called by:
  5953 ;;		_deplace
  5954 ;;		_enleveTuilesAutour
  5955 ;;		_afficheTabVue
  5956 ;;		_lcd_effaceLigne
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text24
  5961  0021C8                     __ptext24:
  5962                           	opt callstack 0
  5963  0021C8                     _lcd_gotoXY:
  5964                           	opt callstack 26
  5965                           
  5966                           ;incstack = 0
  5967                           ;lcd_gotoXY@x stored from wreg
  5968  0021C8  0100               	movlb	0	; force () banked
  5969  0021CA  6FB8               	movwf	lcd_gotoXY@x& (0+255),b
  5970  0021CC                     
  5971                           ;Lcd4Lignes.c: 316: switch(y)
  5972  0021CC  EF08  F011         	goto	l2055
  5973  0021D0                     l2045:
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;Lcd4Lignes.c: 319: lcd_wrCom((x-1+0x80)|0x80);
  5977  0021D0  0100               	movlb	0	; force () banked
  5978  0021D2  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  5979  0021D4  0F7F               	addlw	127
  5980  0021D6  0980               	iorlw	128
  5981  0021D8  EC53  F011         	call	_lcd_wrCom
  5982                           
  5983                           ;Lcd4Lignes.c: 320: break;
  5984  0021DC  EF1C  F011         	goto	l318
  5985  0021E0                     l2047:
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;Lcd4Lignes.c: 322: lcd_wrCom((x-1+0xC0)|0x80);
  5989  0021E0  0100               	movlb	0	; force () banked
  5990  0021E2  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  5991  0021E4  0FBF               	addlw	191
  5992  0021E6  0980               	iorlw	128
  5993  0021E8  EC53  F011         	call	_lcd_wrCom
  5994                           
  5995                           ;Lcd4Lignes.c: 323: break;
  5996  0021EC  EF1C  F011         	goto	l318
  5997  0021F0                     l2049:
  5998                           
  5999                           ; BSR set to: 0
  6000                           ;Lcd4Lignes.c: 325: lcd_wrCom((x-1+0x94)|0x80);
  6001  0021F0  0100               	movlb	0	; force () banked
  6002  0021F2  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  6003  0021F4  0F93               	addlw	147
  6004  0021F6  0980               	iorlw	128
  6005  0021F8  EC53  F011         	call	_lcd_wrCom
  6006                           
  6007                           ;Lcd4Lignes.c: 326: break;
  6008  0021FC  EF1C  F011         	goto	l318
  6009  002200                     l2051:
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;Lcd4Lignes.c: 328: lcd_wrCom((x-1+0xD4)|0x80);
  6013  002200  0100               	movlb	0	; force () banked
  6014  002202  51B8               	movf	lcd_gotoXY@x& (0+255),w,b
  6015  002204  0FD3               	addlw	211
  6016  002206  0980               	iorlw	128
  6017  002208  EC53  F011         	call	_lcd_wrCom
  6018                           
  6019                           ;Lcd4Lignes.c: 329: break;
  6020  00220C  EF1C  F011         	goto	l318
  6021  002210                     l2055:
  6022  002210  0100               	movlb	0	; force () banked
  6023  002212  51B7               	movf	lcd_gotoXY@y& (0+255),w,b
  6024                           
  6025                           ; Switch size 1, requested type "simple"
  6026                           ; Number of cases is 4, Range of values is 1 to 4
  6027                           ; switch strategies available:
  6028                           ; Name         Instructions Cycles
  6029                           ; simple_byte           13     7 (average)
  6030                           ;	Chosen strategy is simple_byte
  6031  002214  0A01               	xorlw	1	; case 1
  6032  002216  B4D8               	btfsc	status,2,c
  6033  002218  EFE8  F010         	goto	l2045
  6034  00221C  0A03               	xorlw	3	; case 2
  6035  00221E  B4D8               	btfsc	status,2,c
  6036  002220  EFF0  F010         	goto	l2047
  6037  002224  0A01               	xorlw	1	; case 3
  6038  002226  B4D8               	btfsc	status,2,c
  6039  002228  EFF8  F010         	goto	l2049
  6040  00222C  0A07               	xorlw	7	; case 4
  6041  00222E  B4D8               	btfsc	status,2,c
  6042  002230  EF00  F011         	goto	l2051
  6043  002234  EF1C  F011         	goto	l318
  6044  002238                     l318:
  6045  002238  0012               	return		;funcret
  6046  00223A                     __end_of_lcd_gotoXY:
  6047                           	opt callstack 0
  6048                           
  6049 ;; *************** function _lcd_wrCom *****************
  6050 ;; Defined at:
  6051 ;;		line 156 in file "Lcd4Lignes.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;  commande        1    wreg     unsigned char 
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;  commande        1    2[BANK0 ] unsigned char 
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  1    wreg      unsigned char 
  6058 ;; Registers used:
  6059 ;;		wreg, status,2, status,0, cstack
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6065 ;;      Params:         0       0       0       0       0       0       0
  6066 ;;      Locals:         0       1       0       0       0       0       0
  6067 ;;      Temps:          0       0       0       0       0       0       0
  6068 ;;      Totals:         0       1       0       0       0       0       0
  6069 ;;Total ram usage:        1 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; Hardware stack levels required when called:    2
  6072 ;; This function calls:
  6073 ;;		_lcd_busy
  6074 ;;		_lcd_ecrireDonnees
  6075 ;;		_lcd_strobeEnableBit
  6076 ;; This function is called by:
  6077 ;;		_lcd_init
  6078 ;;		_lcd_effaceAffichage
  6079 ;;		_lcd_curseurHome
  6080 ;;		_lcd_gotoXY
  6081 ;;		_lcd_ecritChar
  6082 ;;		_lcd_initCGRam
  6083 ;;		_lcd_cacheCurseur
  6084 ;;		_lcd_montreCurseur
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088                           	psect	text25
  6089  0022A6                     __ptext25:
  6090                           	opt callstack 0
  6091  0022A6                     _lcd_wrCom:
  6092                           	opt callstack 26
  6093                           
  6094                           ;incstack = 0
  6095                           ;lcd_wrCom@commande stored from wreg
  6096  0022A6  0100               	movlb	0	; force () banked
  6097  0022A8  6FB6               	movwf	lcd_wrCom@commande& (0+255),b
  6098  0022AA                     
  6099                           ;Lcd4Lignes.c: 158: lcd_busy();
  6100  0022AA  EC42  F012         	call	_lcd_busy	;wreg free
  6101  0022AE                     
  6102                           ;Lcd4Lignes.c: 160: TRISD = 0b00000000;
  6103  0022AE  0E00               	movlw	0
  6104  0022B0  6E95               	movwf	149,c	;volatile
  6105  0022B2                     
  6106                           ;Lcd4Lignes.c: 163: PORTAbits.RA0 = 0;
  6107  0022B2  9080               	bcf	128,0,c	;volatile
  6108  0022B4                     
  6109                           ;Lcd4Lignes.c: 164: PORTAbits.RA1 = 0;
  6110  0022B4  9280               	bcf	128,1,c	;volatile
  6111  0022B6                     
  6112                           ;Lcd4Lignes.c: 166: lcd_ecrireDonnees(commande >> 4);
  6113  0022B6  0100               	movlb	0	; force () banked
  6114  0022B8  39B6               	swapf	lcd_wrCom@commande& (0+255),w,b
  6115  0022BA  0B0F               	andlw	15
  6116  0022BC  ECFD  F012         	call	_lcd_ecrireDonnees
  6117  0022C0                     
  6118                           ;Lcd4Lignes.c: 167: lcd_strobeEnableBit();
  6119  0022C0  EC16  F013         	call	_lcd_strobeEnableBit	;wreg free
  6120  0022C4                     
  6121                           ;Lcd4Lignes.c: 170: lcd_ecrireDonnees(commande);
  6122  0022C4  0100               	movlb	0	; force () banked
  6123  0022C6  51B6               	movf	lcd_wrCom@commande& (0+255),w,b
  6124  0022C8  ECFD  F012         	call	_lcd_ecrireDonnees
  6125  0022CC                     
  6126                           ;Lcd4Lignes.c: 171: lcd_strobeEnableBit();
  6127  0022CC  EC16  F013         	call	_lcd_strobeEnableBit	;wreg free
  6128  0022D0                     
  6129                           ;Lcd4Lignes.c: 172: _delay((unsigned long)((40)*(1000000/4000000.0)));
  6130  0022D0  0E03               	movlw	3
  6131  0022D2                     u2657:
  6132  0022D2  2EE8               	decfsz	wreg,f,c
  6133  0022D4  D7FE               	bra	u2657
  6134  0022D6  F000               	nop	
  6135  0022D8                     
  6136                           ;Lcd4Lignes.c: 174: if ((commande == 0x01) || commande == 0x02)
  6137  0022D8  0100               	movlb	0	; force () banked
  6138  0022DA  05B6               	decf	lcd_wrCom@commande& (0+255),w,b
  6139  0022DC  B4D8               	btfsc	status,2,c
  6140  0022DE  EF73  F011         	goto	u1341
  6141  0022E2  EF75  F011         	goto	u1340
  6142  0022E6                     u1341:
  6143  0022E6  EF7F  F011         	goto	l2003
  6144  0022EA                     u1340:
  6145  0022EA                     
  6146                           ; BSR set to: 0
  6147  0022EA  0E02               	movlw	2
  6148  0022EC  0100               	movlb	0	; force () banked
  6149  0022EE  19B6               	xorwf	lcd_wrCom@commande& (0+255),w,b
  6150  0022F0  A4D8               	btfss	status,2,c
  6151  0022F2  EF7D  F011         	goto	u1351
  6152  0022F6  EF7F  F011         	goto	u1350
  6153  0022FA                     u1351:
  6154  0022FA  EF84  F011         	goto	l2005
  6155  0022FE                     u1350:
  6156  0022FE                     l2003:
  6157                           
  6158                           ; BSR set to: 0
  6159                           ;Lcd4Lignes.c: 175: _delay((unsigned long)((2)*(1000000/4000.0)));
  6160  0022FE  0EA6               	movlw	166
  6161  002300                     u2667:
  6162  002300  2EE8               	decfsz	wreg,f,c
  6163  002302  D7FE               	bra	u2667
  6164  002304  F000 F000          	nop2	
  6165  002308                     l2005:
  6166                           
  6167                           ;Lcd4Lignes.c: 177: TRISD = 0b00001111;
  6168  002308  0E0F               	movlw	15
  6169  00230A  6E95               	movwf	149,c	;volatile
  6170  00230C                     
  6171                           ;Lcd4Lignes.c: 179: return(lcd_busy());
  6172  00230C  EC42  F012         	call	_lcd_busy	;wreg free
  6173  002310  0012               	return		;funcret
  6174  002312                     __end_of_lcd_wrCom:
  6175                           	opt callstack 0
  6176                           
  6177 ;; *************** function _lcd_strobeEnableBit *****************
  6178 ;; Defined at:
  6179 ;;		line 431 in file "Lcd4Lignes.c"
  6180 ;; Parameters:    Size  Location     Type
  6181 ;;		None
  6182 ;; Auto vars:     Size  Location     Type
  6183 ;;		None
  6184 ;; Return value:  Size  Location     Type
  6185 ;;                  1    wreg      void 
  6186 ;; Registers used:
  6187 ;;		None
  6188 ;; Tracked objects:
  6189 ;;		On entry : 0/0
  6190 ;;		On exit  : 0/0
  6191 ;;		Unchanged: 0/0
  6192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6193 ;;      Params:         0       0       0       0       0       0       0
  6194 ;;      Locals:         0       0       0       0       0       0       0
  6195 ;;      Temps:          0       0       0       0       0       0       0
  6196 ;;      Totals:         0       0       0       0       0       0       0
  6197 ;;Total ram usage:        0 bytes
  6198 ;; Hardware stack levels used:    1
  6199 ;; This function calls:
  6200 ;;		Nothing
  6201 ;; This function is called by:
  6202 ;;		_lcd_wrCom
  6203 ;;		_lcd_wrData
  6204 ;;		_lcd_resetSequence
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208                           	psect	text26
  6209  00262C                     __ptext26:
  6210                           	opt callstack 0
  6211  00262C                     _lcd_strobeEnableBit:
  6212                           	opt callstack 27
  6213  00262C                     
  6214                           ;Lcd4Lignes.c: 433: PORTAbits.RA2 = 1;
  6215  00262C  8480               	bsf	128,2,c	;volatile
  6216                           
  6217                           ;Lcd4Lignes.c: 434: __nop();
  6218  00262E  F000               	nop	
  6219                           
  6220                           ;Lcd4Lignes.c: 435: PORTAbits.RA2 = 0;
  6221  002630  9480               	bcf	128,2,c	;volatile
  6222  002632  0012               	return		;funcret
  6223  002634                     __end_of_lcd_strobeEnableBit:
  6224                           	opt callstack 0
  6225                           
  6226 ;; *************** function _lcd_ecrireDonnees *****************
  6227 ;; Defined at:
  6228 ;;		line 107 in file "Lcd4Lignes.c"
  6229 ;; Parameters:    Size  Location     Type
  6230 ;;  donnee          1    wreg     unsigned char 
  6231 ;; Auto vars:     Size  Location     Type
  6232 ;;  donnee          1    1[BANK0 ] unsigned char 
  6233 ;; Return value:  Size  Location     Type
  6234 ;;                  1    wreg      void 
  6235 ;; Registers used:
  6236 ;;		wreg, status,2, status,0
  6237 ;; Tracked objects:
  6238 ;;		On entry : 0/0
  6239 ;;		On exit  : 0/0
  6240 ;;		Unchanged: 0/0
  6241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6242 ;;      Params:         0       0       0       0       0       0       0
  6243 ;;      Locals:         0       1       0       0       0       0       0
  6244 ;;      Temps:          0       1       0       0       0       0       0
  6245 ;;      Totals:         0       2       0       0       0       0       0
  6246 ;;Total ram usage:        2 bytes
  6247 ;; Hardware stack levels used:    1
  6248 ;; This function calls:
  6249 ;;		Nothing
  6250 ;; This function is called by:
  6251 ;;		_lcd_wrCom
  6252 ;;		_lcd_wrData
  6253 ;;		_lcd_resetSequence
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257                           	psect	text27
  6258  0025FA                     __ptext27:
  6259                           	opt callstack 0
  6260  0025FA                     _lcd_ecrireDonnees:
  6261                           	opt callstack 27
  6262                           
  6263                           ;incstack = 0
  6264                           ;lcd_ecrireDonnees@donnee stored from wreg
  6265  0025FA  0100               	movlb	0	; force () banked
  6266  0025FC  6FB5               	movwf	lcd_ecrireDonnees@donnee& (0+255),b
  6267  0025FE                     
  6268                           ;Lcd4Lignes.c: 110: PORTD = (donnee & 0x0F) | (PORTD & 0xF0);
  6269  0025FE  CF83 F0B4          	movff	3971,??_lcd_ecrireDonnees	;volatile
  6270  002602  0EF0               	movlw	240
  6271  002604  0100               	movlb	0	; force () banked
  6272  002606  17B4               	andwf	??_lcd_ecrireDonnees& (0+255),f,b
  6273  002608  0100               	movlb	0	; force () banked
  6274  00260A  51B5               	movf	lcd_ecrireDonnees@donnee& (0+255),w,b
  6275  00260C  0B0F               	andlw	15
  6276  00260E  0100               	movlb	0	; force () banked
  6277  002610  11B4               	iorwf	??_lcd_ecrireDonnees& (0+255),w,b
  6278  002612  6E83               	movwf	131,c	;volatile
  6279  002614                     
  6280                           ; BSR set to: 0
  6281  002614  0012               	return		;funcret
  6282  002616                     __end_of_lcd_ecrireDonnees:
  6283                           	opt callstack 0
  6284                           
  6285 ;; *************** function _lcd_busy *****************
  6286 ;; Defined at:
  6287 ;;		line 124 in file "Lcd4Lignes.c"
  6288 ;; Parameters:    Size  Location     Type
  6289 ;;		None
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;  adresse         1    1[BANK0 ] unsigned char 
  6292 ;; Return value:  Size  Location     Type
  6293 ;;                  1    wreg      unsigned char 
  6294 ;; Registers used:
  6295 ;;		wreg, status,2, status,0, cstack
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/0
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6301 ;;      Params:         0       0       0       0       0       0       0
  6302 ;;      Locals:         0       1       0       0       0       0       0
  6303 ;;      Temps:          0       1       0       0       0       0       0
  6304 ;;      Totals:         0       2       0       0       0       0       0
  6305 ;;Total ram usage:        2 bytes
  6306 ;; Hardware stack levels used:    1
  6307 ;; Hardware stack levels required when called:    1
  6308 ;; This function calls:
  6309 ;;		_lcd_lireDonnees
  6310 ;; This function is called by:
  6311 ;;		_lcd_wrCom
  6312 ;;		_lcd_wrData
  6313 ;; This function uses a non-reentrant model
  6314 ;;
  6315                           
  6316                           	psect	text28
  6317  002484                     __ptext28:
  6318                           	opt callstack 0
  6319  002484                     _lcd_busy:
  6320                           	opt callstack 26
  6321  002484                     
  6322                           ;Lcd4Lignes.c: 126: unsigned char adresse;;Lcd4Lignes.c: 128: PORTAbits.RA0 = 0;
  6323  002484  9080               	bcf	128,0,c	;volatile
  6324                           
  6325                           ;Lcd4Lignes.c: 129: PORTAbits.RA1 = 1;
  6326  002486  8280               	bsf	128,1,c	;volatile
  6327  002488                     l280:
  6328                           
  6329                           ;Lcd4Lignes.c: 132: {;Lcd4Lignes.c: 133: PORTAbits.RA2 = 1;
  6330  002488  8480               	bsf	128,2,c	;volatile
  6331                           
  6332                           ;Lcd4Lignes.c: 134: __nop();
  6333  00248A  F000               	nop	
  6334  00248C                     
  6335                           ;Lcd4Lignes.c: 135: adresse = lcd_lireDonnees() << 4;
  6336  00248C  EC1A  F013         	call	_lcd_lireDonnees	;wreg free
  6337  002490  0100               	movlb	0	; force () banked
  6338  002492  6FB4               	movwf	??_lcd_busy& (0+255),b
  6339  002494  39B4               	swapf	??_lcd_busy& (0+255),w,b
  6340  002496  0BF0               	andlw	240
  6341  002498  0100               	movlb	0	; force () banked
  6342  00249A  6FB5               	movwf	lcd_busy@adresse& (0+255),b
  6343  00249C                     
  6344                           ; BSR set to: 0
  6345                           ;Lcd4Lignes.c: 136: PORTAbits.RA2 = 0;
  6346  00249C  9480               	bcf	128,2,c	;volatile
  6347  00249E                     
  6348                           ;Lcd4Lignes.c: 138: PORTAbits.RA2 = 1;
  6349  00249E  8480               	bsf	128,2,c	;volatile
  6350  0024A0                     
  6351                           ;Lcd4Lignes.c: 139: __nop();
  6352  0024A0  F000               	nop	
  6353                           
  6354                           ;Lcd4Lignes.c: 140: adresse |= lcd_lireDonnees();
  6355  0024A2  EC1A  F013         	call	_lcd_lireDonnees	;wreg free
  6356  0024A6  0100               	movlb	0	; force () banked
  6357  0024A8  13B5               	iorwf	lcd_busy@adresse& (0+255),f,b
  6358  0024AA                     
  6359                           ; BSR set to: 0
  6360                           ;Lcd4Lignes.c: 141: PORTAbits.RA2 = 0;
  6361  0024AA  9480               	bcf	128,2,c	;volatile
  6362  0024AC                     
  6363                           ;Lcd4Lignes.c: 143: };Lcd4Lignes.c: 144: while(adresse&0x80);
  6364  0024AC  0100               	movlb	0	; force () banked
  6365  0024AE  BFB5               	btfsc	lcd_busy@adresse& (0+255),7,b
  6366  0024B0  EF5C  F012         	goto	u1331
  6367  0024B4  EF5E  F012         	goto	u1330
  6368  0024B8                     u1331:
  6369  0024B8  EF44  F012         	goto	l280
  6370  0024BC                     u1330:
  6371  0024BC                     
  6372                           ; BSR set to: 0
  6373                           ;Lcd4Lignes.c: 146: PORTAbits.RA1 = 0;
  6374  0024BC  9280               	bcf	128,1,c	;volatile
  6375  0024BE                     
  6376                           ; BSR set to: 0
  6377                           ;Lcd4Lignes.c: 147: return(adresse&0x7f);
  6378  0024BE  0100               	movlb	0	; force () banked
  6379  0024C0  51B5               	movf	lcd_busy@adresse& (0+255),w,b
  6380  0024C2  0B7F               	andlw	127
  6381  0024C4                     
  6382                           ; BSR set to: 0
  6383  0024C4  0012               	return		;funcret
  6384  0024C6                     __end_of_lcd_busy:
  6385                           	opt callstack 0
  6386                           
  6387 ;; *************** function _lcd_lireDonnees *****************
  6388 ;; Defined at:
  6389 ;;		line 93 in file "Lcd4Lignes.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;		None
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;		None
  6394 ;; Return value:  Size  Location     Type
  6395 ;;                  1    wreg      unsigned char 
  6396 ;; Registers used:
  6397 ;;		wreg, status,2, status,0
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6403 ;;      Params:         0       0       0       0       0       0       0
  6404 ;;      Locals:         0       0       0       0       0       0       0
  6405 ;;      Temps:          0       0       0       0       0       0       0
  6406 ;;      Totals:         0       0       0       0       0       0       0
  6407 ;;Total ram usage:        0 bytes
  6408 ;; Hardware stack levels used:    1
  6409 ;; This function calls:
  6410 ;;		Nothing
  6411 ;; This function is called by:
  6412 ;;		_lcd_busy
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416                           	psect	text29
  6417  002634                     __ptext29:
  6418                           	opt callstack 0
  6419  002634                     _lcd_lireDonnees:
  6420                           	opt callstack 26
  6421  002634                     
  6422                           ;Lcd4Lignes.c: 96: return (PORTD & 0x0f);
  6423  002634  5083               	movf	131,w,c	;volatile
  6424  002636  0B0F               	andlw	15
  6425  002638  0012               	return		;funcret
  6426  00263A                     __end_of_lcd_lireDonnees:
  6427                           	opt callstack 0
  6428                           
  6429 ;; *************** function ___wmul *****************
  6430 ;; Defined at:
  6431 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6434 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;  product         2    4[BANK0 ] unsigned int 
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  2    0[BANK0 ] unsigned int 
  6439 ;; Registers used:
  6440 ;;		wreg, status,2, status,0, prodl, prodh
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6446 ;;      Params:         0       4       0       0       0       0       0
  6447 ;;      Locals:         0       2       0       0       0       0       0
  6448 ;;      Temps:          0       0       0       0       0       0       0
  6449 ;;      Totals:         0       6       0       0       0       0       0
  6450 ;;Total ram usage:        6 bytes
  6451 ;; Hardware stack levels used:    1
  6452 ;; This function calls:
  6453 ;;		Nothing
  6454 ;; This function is called by:
  6455 ;;		_initTabVue
  6456 ;;		_rempliMines
  6457 ;;		_metToucheCombien
  6458 ;;		_calculToucheCombien
  6459 ;;		_enleveTuilesAutour
  6460 ;;		_gagne
  6461 ;;		_afficheTabVue
  6462 ;; This function uses a non-reentrant model
  6463 ;;
  6464                           
  6465                           	psect	text30
  6466  00258E                     __ptext30:
  6467                           	opt callstack 0
  6468  00258E                     ___wmul:
  6469                           	opt callstack 29
  6470  00258E  0100               	movlb	0	; () banked
  6471  002590  51B4               	movf	___wmul@multiplier& (0+255),w,b
  6472  002592  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  6473  002594  CFF3 F0B8          	movff	prodl,___wmul@product
  6474  002598  CFF4 F0B9          	movff	prodh,___wmul@product+1
  6475  00259C  51B4               	movf	___wmul@multiplier& (0+255),w,b
  6476  00259E  03B7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6477  0025A0  50F3               	movf	243,w,c
  6478  0025A2  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  6479  0025A4  51B5               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6480  0025A6  03B6               	mulwf	___wmul@multiplicand& (0+255),b
  6481  0025A8  50F3               	movf	243,w,c
  6482  0025AA  27B9               	addwf	(___wmul@product+1)& (0+255),f,b
  6483  0025AC                     
  6484                           ; BSR set to: 0
  6485  0025AC  C0B8  F0B4         	movff	___wmul@product,?___wmul
  6486  0025B0  C0B9  F0B5         	movff	___wmul@product+1,?___wmul+1
  6487  0025B4                     
  6488                           ; BSR set to: 0
  6489  0025B4  0012               	return		;funcret
  6490  0025B6                     __end_of___wmul:
  6491                           	opt callstack 0
  6492                           
  6493                           	psect	param0
  6494  0000                     tosu	equ	0xFFF
  6495                           tosh	equ	0xFFE
  6496                           tosl	equ	0xFFD
  6497                           stkptr	equ	0xFFC
  6498                           pclatu	equ	0xFFB
  6499                           pclath	equ	0xFFA
  6500                           pcl	equ	0xFF9
  6501                           tblptru	equ	0xFF8
  6502                           tblptrh	equ	0xFF7
  6503                           tblptrl	equ	0xFF6
  6504                           tablat	equ	0xFF5
  6505                           prodh	equ	0xFF4
  6506                           prodl	equ	0xFF3
  6507                           indf0	equ	0xFEF
  6508                           postinc0	equ	0xFEE
  6509                           postdec0	equ	0xFED
  6510                           preinc0	equ	0xFEC
  6511                           plusw0	equ	0xFEB
  6512                           fsr0h	equ	0xFEA
  6513                           fsr0l	equ	0xFE9
  6514                           wreg	equ	0xFE8
  6515                           indf1	equ	0xFE7
  6516                           postinc1	equ	0xFE6
  6517                           postdec1	equ	0xFE5
  6518                           preinc1	equ	0xFE4
  6519                           plusw1	equ	0xFE3
  6520                           fsr1h	equ	0xFE2
  6521                           fsr1l	equ	0xFE1
  6522                           bsr	equ	0xFE0
  6523                           indf2	equ	0xFDF
  6524                           postinc2	equ	0xFDE
  6525                           postdec2	equ	0xFDD
  6526                           preinc2	equ	0xFDC
  6527                           plusw2	equ	0xFDB
  6528                           fsr2h	equ	0xFDA
  6529                           fsr2l	equ	0xFD9
  6530                           status	equ	0xFD8


Data Sizes:
    Strings     24
    Constant    0
    Data        68
    BSS         168
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      0       0
    BANK0           160     41     129
    BANK1           256      0     148
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    lcd_putMessage@chaine	PTR const unsigned char  size(3) Largest target is 84
		 -> m_tabVue(BANK1[84]), STR_1(CODE[24]), 

    gagne@pMines	PTR int  size(2) Largest target is 2
		 -> main@NBMines(BANK0[2]), 

    deplace@y	PTR unsigned char  size(2) Largest target is 1
		 -> main@y(BANK0[1]), 

    deplace@x	PTR unsigned char  size(2) Largest target is 1
		 -> main@x(BANK0[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_rempliMines
    _rempliMines->___awmod
    _rand->___lmul
    ___awmod->_rand
    _metToucheCombien->_calculToucheCombien
    _calculToucheCombien->___wmul
    _lcd_init->_lcd_initCGRam
    _lcd_resetSequence->_lcd_ecrireDonnees
    _lcd_initCGRam->_lcd_wrCom
    _lcd_initCGRam->_lcd_wrData
    _lcd_curseurHome->_lcd_wrCom
    _initTabVue->___wmul
    _gagne->___wmul
    _lcd_effaceAffichage->_lcd_wrCom
    _deplace->_lcd_gotoXY
    _demine->_enleveTuilesAutour
    _enleveTuilesAutour->___wmul
    _afficheTabVue->_lcd_putMessage
    _lcd_putMessage->___wmul
    _lcd_ecritChar->_lcd_wrCom
    _lcd_ecritChar->_lcd_wrData
    _lcd_wrData->_lcd_busy
    _lcd_wrData->_lcd_ecrireDonnees
    _lcd_gotoXY->_lcd_wrCom
    _lcd_wrCom->_lcd_busy
    _lcd_wrCom->_lcd_ecrireDonnees

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   38576
                                             36 BANK0      5     5      0
                      _afficheTabVue
                             _demine
                            _deplace
                              _gagne
                         _initTabVue
                         _init_serie
                     _initialisation
                    _lcd_curseurHome
                           _lcd_init
                     _lcd_putMessage
                   _metToucheCombien
                        _rempliMines
 ---------------------------------------------------------------------------------
 (1) _rempliMines                                         16    14      2    5231
                                             20 BANK0     16    14      2
                            ___awmod
                             ___wmul
                               _rand
 ---------------------------------------------------------------------------------
 (2) _rand                                                 2     0      2     370
                                             12 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     448
                                             14 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (1) _metToucheCombien                                     9     9      0   10172
                                             21 BANK0      9     9      0
                             ___wmul
                _calculToucheCombien
 ---------------------------------------------------------------------------------
 (2) _calculToucheCombien                                 15    11      4    5871
                                              6 BANK0     15    11      4
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     738
                      _lcd_initCGRam
                  _lcd_resetSequence
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (2) _lcd_resetSequence                                    1     1      0      22
                                              2 BANK0      1     1      0
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_initCGRam                                        4     4      0     560
                                              3 BANK0      4     4      0
                    _lcd_curseurHome
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_curseurHome                                      0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _initialisation                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_serie                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTabVue                                           6     6      0    4189
                                              6 BANK0      6     6      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _gagne                                               12    10      2    4447
                                              6 BANK0     12    10      2
                             ___wmul
                _lcd_effaceAffichage
 ---------------------------------------------------------------------------------
 (2) _lcd_effaceAffichage                                  0     0      0     156
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (1) _deplace                                              5     1      4    1209
                                              5 BANK0      5     1      4
                          _getAnalog
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (2) _getAnalog                                            2     2      0      15
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _demine                                               7     6      1    6437
                                             18 BANK0      7     6      1
                 _enleveTuilesAutour
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _enleveTuilesAutour                                  12    11      1    5668
                                              6 BANK0     12    11      1
                             ___wmul
                      _lcd_ecritChar
                         _lcd_gotoXY
 ---------------------------------------------------------------------------------
 (1) _afficheTabVue                                        4     4      0    5255
                                             15 BANK0      4     4      0
                             ___wmul
                         _lcd_gotoXY
                     _lcd_putMessage
 ---------------------------------------------------------------------------------
 (1) _lcd_putMessage                                       9     6      3     555
                                              6 BANK0      9     6      3
                             ___wmul (ARG)
                      _lcd_ecritChar
 ---------------------------------------------------------------------------------
 (2) _lcd_ecritChar                                        2     2      0     313
                                              3 BANK0      2     2      0
                          _lcd_wrCom
                         _lcd_wrData
 ---------------------------------------------------------------------------------
 (3) _lcd_wrData                                           1     1      0     112
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoXY                                           2     1      1     646
                                              3 BANK0      2     1      1
                          _lcd_wrCom
 ---------------------------------------------------------------------------------
 (3) _lcd_wrCom                                            1     1      0     156
                                              2 BANK0      1     1      0
                           _lcd_busy
                  _lcd_ecrireDonnees
                _lcd_strobeEnableBit
 ---------------------------------------------------------------------------------
 (4) _lcd_strobeEnableBit                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _lcd_ecrireDonnees                                    2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _lcd_busy                                             2     2      0      46
                                              0 BANK0      2     2      0
                    _lcd_lireDonnees
 ---------------------------------------------------------------------------------
 (5) _lcd_lireDonnees                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    3963
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _afficheTabVue
     ___wmul
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_putMessage
       ___wmul (ARG)
       _lcd_ecritChar (ARG)
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
   _demine
     _enleveTuilesAutour
       ___wmul
       _lcd_ecritChar
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
         _lcd_wrData
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_gotoXY
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
     _lcd_ecritChar
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _deplace
     _getAnalog
     _lcd_gotoXY
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _gagne
     ___wmul
     _lcd_effaceAffichage
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _initTabVue
     ___wmul
   _init_serie
   _initialisation
   _lcd_curseurHome
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_init
     _lcd_initCGRam
       _lcd_curseurHome
         _lcd_wrCom
           _lcd_busy
             _lcd_lireDonnees
           _lcd_ecrireDonnees
           _lcd_strobeEnableBit
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
     _lcd_resetSequence
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
     _lcd_wrCom
       _lcd_busy
         _lcd_lireDonnees
       _lcd_ecrireDonnees
       _lcd_strobeEnableBit
   _lcd_putMessage
     ___wmul (ARG)
     _lcd_ecritChar (ARG)
       _lcd_wrCom
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
       _lcd_wrData
         _lcd_busy
           _lcd_lireDonnees
         _lcd_ecrireDonnees
         _lcd_strobeEnableBit
   _metToucheCombien
     ___wmul
     _calculToucheCombien
       ___wmul
   _rempliMines
     ___awmod
       _rand (ARG)
         ___lmul
     ___wmul
     _rand
       ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5EE      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      94       6       57.8%
BITBANK5            EF      0       0      15        0.0%
BANK5               EF      0       0      13        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     29      81       4       80.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      0       0       1        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     115      14        0.0%
DATA                 0      0     115      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec 16 12:49:54 2019

 __end_of_calculToucheCombien 114E                            l82 25DA                            l74 1ED6  
                          l85 2554                            l88 2564                            l97 1CA0  
                          u90 2562                            u91 255E          ??_enleveTuilesAutour 00BB  
         ___wmul@multiplicand 00B6                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  __size_of_lcd_strobeEnableBit 0008  
                         l201 1D78                           l122 06D4                           l203 1E1A  
                         l131 0902                           l300 2622                           l140 0B16  
                         l108 1816                           l150 0DF6                           l126 078E  
                         l118 1634                           l231 25F8                           l303 262A  
                         l135 0A08                           l208 2124                           l136 0A5C  
                         l161 10BA                           l153 0F30                           l145 0C8E  
                         l154 0F0C                           l163 114C                           l157 0FC4  
                         l318 2238                           l351 2632                           l335 1FC8  
                         l183 19A0                           l280 2488                           l176 1B26  
                         l281 24BC                           l329 2482                           l354 25B4  
                         l274 2638                           l282 24C4                           l194 143A  
                         l291 2538                           l348 21C6                           l277 2614  
                         l365 2294                           l294 237A                           l366 22A4  
                         l288 2310                           l297 258C                           l598 207A  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                  __CFG_BORV$18 000000  
                ___awmod@sign 00C7                   lcd_gotoXY@x 00B8                           wreg 000FE8  
                 lcd_gotoXY@y 00B7  __size_of_lcd_effaceAffichage 000E                  __CFG_LVP$OFF 000000  
                        l1021 242E                          l2001 22EA                          l2003 22FE  
                        l2005 2308                          l2021 2514                          l2013 250A  
                        l2101 061A                          l2007 230C                          l2031 252C  
                        l2023 2516                          l2015 250E                          l2111 06AC  
                        l2103 0638                          l2009 230C                          l2033 2530  
                        l2025 2520                          l2017 2512                          l2041 2624  
                        l2121 06FC                          l2113 06B2                          l2105 0656  
                        l2051 2200                          l2043 21CC                          l2035 2530  
                        l2027 2524                          l2019 2512                          l2211 0CC6  
                        l2203 0C1A                          l2123 0788                          l2107 0672  
                        l2131 07D6                          l2045 21D0                          l2037 2534  
                        l2029 2524                          l2061 244E                          l2301 11F2  
                        l2213 0CDA                          l2205 0C88                          l2141 086C  
                        l2133 07EA                          l2125 0794                          l2117 06DA  
                        l2109 068E                          l2071 25AC                          l2047 21E0  
                        l2055 2210                          l2063 2458                          l2311 1246  
                        l2231 0E2E                          l2223 0D6C                          l2215 0D40  
                        l2207 0C94                          l2135 07FE                          l2151 0926  
                        l2127 07B2                          l2049 21F0                          l2057 2434  
                        l2321 13B6                          l2313 1306                          l2305 1214  
                        l2241 0E90                          l2233 0E4C                          l2225 0DF0  
                        l2217 0D46                          l2209 0CB0                          l2153 093A  
                        l2145 088E                          l2137 085C                          l2129 07B8  
                        l2401 1FD0                          l2081 226A                          l2059 2444  
                        l2067 2462                          l2091 1F70                          l2331 140C  
                        l2323 13C0                          l2315 132A                          l2307 1226  
                        l2251 0F58                          l2243 0F06                          l2235 0E68  
                        l2227 0DFC                          l2219 0D4C                          l2171 0A3A  
                        l2163 099C                          l2155 0958                          l2147 08FC  
                        l2139 0862                          l2411 2000                          l2403 1FDE  
                        l2083 2274                          l2075 223A                          l2069 258E  
                        l2085 1F16                          l2333 1416                          l2325 13C6  
                        l2317 138E                          l2309 123C                          l1293 253E  
                        l2341 2316                          l2261 1018                          l2253 0FBE  
                        l2245 0F12                          l2237 0E6E                          l2229 0E18  
                        l2181 0B10                          l2165 0A02                          l2157 0974  
                        l2149 0908                          l2501 1464                          l2421 2046  
                        l2413 2012                          l2405 1FE6                          l2077 224C  
                        l2093 23DA                          l2087 1F20                          l2335 141C  
                        l2319 13A2                          l2327 13E4                          l1295 2552  
                        l2351 2338                          l2343 232A                          l2271 10C0  
                        l2263 101E                          l2255 0FCE                          l2247 0F36  
                        l2191 0B72                          l2183 0B1C                          l2175 0A62  
                        l2167 0A12                          l2159 097A                          l2511 14B2  
                        l2431 2072                          l2423 204E                          l2415 201A  
                        l2407 1FEA                          l2079 225A                          l2095 2410  
                        l2089 1F6C                          l2329 13F8                          l2281 1152  
                        l1297 2552                          l2337 2616                          l2601 1CA2  
                        l2441 1B46                          l2361 2358                          l2353 2340  
                        l2345 232C                          l2273 10DC                          l2257 0FEC  
                        l2193 0B88                          l2185 0B3A                          l2169 0A30  
                        l2521 15A0                          l2513 1508                          l2505 1486  
                        l2425 2054                          l2417 2022                          l2409 1FF8  
                        l2097 2422                          l2531 207C                          l2283 1158  
                        l1299 2562                          l2603 1CD0                          l2451 1B94  
                        l1651 25CA                          l2371 2376                          l2363 235C  
                        l2355 2346                          l2347 232E                          l2339 2312  
                        l2435 2566                          l2275 1142                          l2267 103E  
                        l2259 1002                          l2195 0BEE                          l2187 0B40  
                        l2179 0A84                          l2515 1528                          l2523 15EC  
                        l2507 1490                          l2419 2030                          l2427 205A  
                        l2541 2100                          l2533 208E                          l2293 11BA  
                        l2285 1162                          l2621 1DA2                          l2613 1D1E  
                        l2461 1C5E                          l2453 1BB2                          l2445 1B68  
                        l1661 25EA                          l1653 25D0                          l1645 25B6  
                        l2381 2148                          l2373 2126                          l2365 2364  
                        l2357 234A                          l2349 2334                          l2437 2588  
                        l2269 10B4                          l2277 1148                          l2197 0BF4  
                        l2189 0B5E                          l2525 15F2                          l2517 153C  
                        l2429 206A                          l2543 2106                          l2295 11CC  
                        l2287 1192                          l2551 19FE                          l2631 1E16  
                        l2615 1D72                          l2623 1DC0                          l2607 1CF2  
                        l2455 1BFA                          l2463 1C7C                          l2447 1B72  
                        l2439 1B28                          l1663 25EC                          l1655 25DC  
                        l1647 25BE                          l2391 219A                          l2383 214E  
                        l2375 212C                          l2367 236A                          l2359 2352  
                        l2199 0BFA                          l2519 1584                          l2527 1610  
                        l2537 20B0                          l2297 11E2                          l2289 1198  
                        l2561 1A70                          l2553 1A18                          l2545 19A2  
                        l2625 1DE2                          l2617 1D7E                          l2609 1CFC  
                        l2465 1C82                          l2457 1C10                          l1665 25EE  
                        l1657 25E0                          l1649 25C8                          l2393 21AC  
                        l2377 2132                          l2369 236E                          l2529 1616  
                        l2481 16FC                          l2473 1688                          l2539 20BE  
                        l2299 11EC                          l2571 1AFE                          l2563 1AA2  
                        l2555 1A32                          l2547 19BC                          l2627 1DE6  
                        l2619 1D9C                          l2459 1C58                          l1667 25F0  
                        l1659 25E8                          l2395 21B0                          l2387 2164  
                        l2491 1778                          l2483 1702                          l2475 1692  
                        l2467 1636                          l2651 1E30                          l2643 1E1C  
                        l2581 186C                          l2573 1B0A                          l2565 1AB2  
                        l2557 1A4A                          l2549 19EE                          l2629 1E10  
                        l1669 25F2                          l2389 2196                          l2397 21C2  
                        l2493 17B6                          l2485 1720                          l2469 1666  
                        l2661 1E6A                          l2653 1E3A                          l2645 1E24  
                        l1951 25FE                          l2591 1908                          l2583 1876  
                        l2575 181C                          l2567 1ACC                          l2559 1A56  
                        l2399 1FCA                          l2495 17E6                          l2487 1726  
                        l2479 16B4                          l2671 1EB4                          l2663 1E6E  
                        l2655 1E40                          l2647 1E28                          l1961 249E  
                        l1953 2484                          l2593 190E                          l2585 18B4  
                        l2577 1828                          l2569 1AE6                          l2489 1748  
                        l2497 17EC                          l2673 1ED2                          l2665 1E72  
                        l2657 1E46                          l2649 1E2C                          l1947 2634  
                        l1971 24BE                          l1963 24A0                          l1955 248C  
                        l2595 196A                          l2587 18F2                          l2579 182E  
                        l2499 143C                          l2675 1EE4                          l2667 1E8A  
                        l2659 1E5E                          l1965 24AA                          l1957 249C  
                        l1981 22B2                          l2589 18F8                          l2597 199C  
                        l2677 1EF8                          l2669 1E98                          l1967 24AC  
                        l1959 249E                          l1975 262C                          l1991 22C4  
                        l1983 22B2                          l2679 1EFC                          l1969 24AC  
                        l1993 22C4                          l1985 22B4                          l1977 22AA  
                        l1995 22CC                          l1987 22B6                          l1979 22AE  
                        l1997 22D0                          l1989 22C0                          l1999 22D8  
                        STR_1 0601                          u2000 13A2                          u2001 139E  
                        u2010 13B6                          u2011 13B2                          u2020 13E4  
                        u2100 1FDE                          u2021 13E0                          u2101 1FDA  
                        u2030 13F8                          u2110 1FF8                          u2031 13F4  
                        u2111 1FF4                          u1400 1FC8                          u2040 140C  
                        u2200 1C7C                          u2120 2012                          u1401 1FC4  
                        u2041 1408                          u2201 1C78                          u2121 200E  
                        u1330 24BC                          u2050 143A                          u2210 1CA0  
                        u1410 0656                          u2130 2030                          u1331 24B8  
                        u2051 1436                          u2211 1C9C                          u1411 0652  
                        u2131 202C                          u1340 22EA                          u2060 2144  
                        u1500 07EA                          u1420 0672                          u2300 1508  
                        u2140 2046                          u2220 1684                          u1341 22E6  
                        u2061 2140                          u1501 07E6                          u1421 066E  
                        u2301 1504                          u2141 2042                          u2221 1680  
                        u1350 22FE                          u2070 2160                          u1510 07FE  
                        u1430 068E                          u2310 153C                          u2150 206A  
                        u2230 16B0                          u1351 22FA                          u2071 215C  
                        u1511 07FA                          u1431 068A                          u2311 1538  
                        u2151 2066                          u2231 16AC                          u2400 1A4A  
                        u2160 1B64                          u2080 21AC                          u1600 0A02  
                        u1520 085C                          u1440 06AC                          u2320 15A0  
                        u1360 225A                          u2240 1720                          u2401 1A46  
                        u2161 1B60                          u2081 21A8                          u1601 09FE  
                        u1521 0858                          u1441 06A8                          u2321 159C  
                        u1361 2256                          u2241 171C                          u2410 1A70  
                        u2170 1B90                          u2090 21C2                          u1610 0A30  
                        u1530 088A                          u1450 06D0                          u2330 1610  
                        u1370 2294                          u2250 1744                          u2411 1A6C  
                        u2171 1B8C                          u2091 21BE                          u1611 0A2C  
                        u1531 0886                          u1451 06CC                          u2331 160C  
                        u1371 2290                          u2251 1740                          u1380 1F68  
                        u2420 1AA2                          u2500 1D72                          u2180 1BB2  
                        u1700 0C16                          u1620 0A58                          u1540 08FC  
                        u1460 06F8                          u2340 1634                          u2260 17B6  
                        u2421 1A9E                          u2501 1D6E                          u2181 1BAE  
                        u1701 0C12                          u1621 0A54                          u1541 08F8  
                        u1461 06F4                          u2341 1630                          u2261 17B2  
                        u1390 1FB8                          u2350 20AC                          u2430 1ACC  
                        u2510 1D9C                          u2190 1C10                          u1710 0C88  
                        u1630 0A80                          u1550 0926                          u1470 0788  
                        u2270 1816                          u2351 20A8                          u2431 1AC8  
                        u2511 1D98                          u2191 1C0C                          u1711 0C84  
                        u1631 0A7C                          u1551 0922                          u1471 0784  
                        u2271 1812                          u2360 2124                          u2440 1AFE  
                        u2520 1DC0                          u1800 0E4C                          u1720 0CB0  
                        u1640 0B10                          u1560 093A                          u1480 07B2  
                        u2280 1482                          u2361 2120                          u2441 1AFA  
                        u2521 1DBC                          u1801 0E48                          u1721 0CAC  
                        u1641 0B0C                          u1561 0936                          u1481 07AE  
                        u2281 147E                          u2450 186C                          u2370 19BC  
                        u2530 1DE2                          u1810 0E68                          u1730 0CC6  
                        u1650 0B3A                          u1570 0958                          u1490 07D6  
                        u2290 14AE                          u1387 1F5E                          u2451 1868  
                        u2371 19B8                          u2531 1DDE                          u1811 0E64  
                        u1731 0CC2                          u1651 0B36                          u1571 0954  
                        u1491 07D2                          u2291 14AA                          u2460 18B4  
                        u2380 19EE                          u1900 103A                          u1820 0E8C  
                        u1740 0CDA                          u1660 0B5E                          u1580 0974  
                        u1397 1FAE                          u2461 18B0                          u2381 19EA  
                        u1901 1036                          u1821 0E88                          u1741 0CD6  
                        u1661 0B5A                          u1581 0970                          u2470 18F2  
                        u2390 1A18                          u1910 10B4                          u1830 0F06  
                        u1750 0D40                          u1670 0B72                          u1590 0998  
                        u2550 1E98                          u2471 18EE                          u2391 1A14  
                        u2607 231E                          u1911 10B0                          u1831 0F02  
                        u1751 0D3C                          u1671 0B6E                          u1591 0994  
                        u2551 1E94                          u2480 1CEE                          u1920 10DC  
                        u1840 0F30                          u1760 0D68                          u1680 0B88  
                        u2560 1EB4                          u2481 1CEA                          u2617 233A  
                        u1921 10D8                          u1841 0F2C                          u1761 0D64  
                        u1681 0B84                          u2561 1EB0                          u2490 1D1A  
                        u1930 1142                          u1850 0F54                          u1770 0DF0  
                        u1690 0BEE                          u2570 1ED2                          u2491 1D16  
                        u2627 234C                          u1931 113E                          u1851 0F50  
                        u1771 0DEC                          u1691 0BEA                          u2571 1ECE  
                        u1940 11B6                          u1860 0FBE                          u1780 0E18  
                        u2580 1EE4                          u1941 11B2                          u2637 235E  
                        u1861 0FBA                          u1781 0E14                          u2581 1EE0  
                        u1950 11CC                          u1870 0FEC                          u1790 0E2E  
                        u1951 11C8                          u2647 2370                          u1871 0FE8  
                        u1791 0E2A                          u1960 11E2                          u1880 1002  
                        u2657 22D2                          u1961 11DE                          u1881 0FFE  
                        u1970 1210                          u1890 1018                          u2667 2300  
                        u1971 120C                          u1891 1014                          u1980 1226  
                        u1981 1222                          u2597 1F04                          u1990 123C  
                        u1991 1238                          _RCIF 007CF5              ??_initialisation 00B4  
                        _main 1E1C                          _rand 23DA                          fsr0h 000FEA  
                        indf0 000FEF                          fsr2h 000FDA                          fsr0l 000FE9  
                        indf1 000FE7                          indf2 000FDF                          fsr1l 000FE1  
                        fsr2l 000FD9                          prodh 000FF4                          prodl 000FF3  
                        start 0000               ?_lcd_putMessage 00BA                 __CFG_IESO$OFF 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000               ??_lcd_ecritChar 00B7  
                       ?_main 00B4                         ?_rand 00C0               __end_of___awmod 207C  
                       _ANSEL 000F7E                         _RCREG 000FAE                         _SPBRG 000FAF  
                       _PORTD 000F83                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISD 000F95                         _TXREG 000FAD                 __CFG_PWRT$OFF 000000  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
             __end_of_deplace 1B28           ___lmul@multiplicand 00B8                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
             ??_lcd_initCGRam 00B7                         _gagne 1CA2                         _randx 00DD  
                       main@x 00DB                         main@y 00DC                         tablat 000FF5  
                       status 000FD8                __CFG_HFOFST$ON 000000                __CFG_PBADEN$ON 000000  
            _metToucheCombien 143C               __initialization 237C                  __end_of_main 1F16  
                __end_of_rand 2430        enleveTuilesAutour@mine 00BF           enleveTuilesAutour@i 00C4  
         enleveTuilesAutour@j 00C2           enleveTuilesAutour@x 00C1           enleveTuilesAutour@y 00BA  
        lcd_putMessage@chaine 00BA    calculToucheCombien@colonne 00BC    calculToucheCombien@nb_mine 00C3  
                      ??_main 00D8                        ??_rand 00C2                 __activetblptr 000003  
                      ?_gagne 00BA                        _ADCON1 000FC1                        _ADRESH 000FC4  
                      _ANSELH 000F7F                   initTabVue@i 00BC                   initTabVue@j 00BE  
              __CFG_WDTEN$OFF 000000                  ?_rempliMines 00C8                        _SPBRGH 000FB0  
              __CFG_XINST$OFF 000000                lcd_initCGRam@i 00B9                lcd_initCGRam@j 00BA  
              getAnalog@canal 00B5              __end_of_lcd_busy 24C6              __end_of_lcd_init 258E  
                      ___lmul 223A                        ___wmul 258E                __CFG_STVREN$ON 000000  
                   ??___awmod 00C6                        _demine 1818                        gagne@i 00C2  
                      gagne@j 00C4                        clear_0 23C2                        clear_1 23CE  
             ___awmod@divisor 00C4                     ??_deplace 00BD               ___awmod@counter 00C6  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8        __size_of_afficheTabVue 00AA             _lcd_resetSequence 2312  
                  __accesstop 0060       __end_of__initialization 23D4           _lcd_strobeEnableBit 262C  
          ?_lcd_resetSequence 00B4                 ___rparam_used 000000           _lcd_effaceAffichage 2616  
                __pidataBANK0 263A                  __pidataBANK1 24C6           ??_lcd_resetSequence 00B6  
               __end_of_gagne 1E1C          ?_lcd_strobeEnableBit 00B4            __size_of_getAnalog 002C  
        ?_lcd_effaceAffichage 00B4            __size_of_lcd_wrCom 006C                       ??_gagne 00BC  
   __end_of_lcd_resetSequence 237C      __size_of_lcd_lireDonnees 0006             _lcd_ecrireDonnees 25FA  
                  __pbssBANK0 0060                    __pbssBANK1 0100              ??_lcd_putMessage 00BD  
          ?_lcd_ecrireDonnees 00B4      __size_of_lcd_curseurHome 0008           ??_lcd_ecrireDonnees 00B4  
                     ?___lmul 00B4                       ?___wmul 00B4                       ?_demine 00C6  
               _afficheTabVue 207C                ___lmul@product 00BC   __size_of_enleveTuilesAutour 02EE  
       ??_lcd_strobeEnableBit 00B4  __size_of_calculToucheCombien 0B34      __end_of_metToucheCombien 1636  
                  _lcd_gotoXY 21C8         ??_lcd_effaceAffichage 00B7                    _lcd_wrData 2506  
   __end_of_lcd_ecrireDonnees 2616                     ?_lcd_busy 00B4                     ?_lcd_init 00B4  
     lcd_ecrireDonnees@donnee 00B5                    _m_tabMines 0060             __end_of_getAnalog 2566  
        __size_of_rempliMines 01E2                       __Hparam 0000                       __Lparam 0000  
                  _initTabVue 1B28             __end_of_lcd_wrCom 2312                ?_afficheTabVue 00B4  
             __size_of___lmul 006C                       ___awmod 1FCA               __size_of___wmul 0028  
             __size_of_demine 018A                  __psmallconst 0600                       __pcinit 237C  
                  _init_serie 25DC                     _ANSELbits 000F7E                       __ramtop 0600  
                     _deplace 19A2                       __ptext0 1E1C                       __ptext1 1636  
                     __ptext2 23DA                       __ptext3 223A                       __ptext4 1FCA  
                     __ptext5 143C                       __ptext6 061A                       __ptext7 2566  
                     __ptext8 2312                       __ptext9 2126         __end_of_lcd_ecritChar 2484  
             lcd_busy@adresse 00B5                    gagne@gagne 00C1              ___awmod@dividend 00C2  
               gagne@nb_Tuile 00BF                       demine@x 00CC                       demine@y 00C6  
            lcd_ecritChar@car 00B7                    ??_lcd_busy 00B4                    ??_lcd_init 00BB  
  __size_of_lcd_resetSequence 006A          end_of_initialization 23D4         __end_of_lcd_initCGRam 21C8  
                  demine@mine 00CB             ??_lcd_lireDonnees 00B4                     _RCSTAbits 000FAB  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc2 000FDE       __size_of_initialisation 0026             ??_lcd_curseurHome 00B7  
         lcd_ecritChar@posRam 00B8                     _PORTAbits 000F80                     _PORTBbits 000F81  
                 ?_lcd_gotoXY 00B7                     _TRISCbits 000F94                   ?_lcd_wrData 00B4  
  __size_of_lcd_ecrireDonnees 001C                     _TXSTAbits 000FAC               ??_afficheTabVue 00C3  
                 ?_initTabVue 00B4                __end_of___lmul 22A6                __end_of___wmul 25B6  
                 _BAUDCONbits 000FB8                   ?_init_serie 00B4                __end_of_demine 19A2  
         start_initialization 237C           _calculToucheCombien 061A           __size_of_lcd_gotoXY 0072  
                    ??___lmul 00BC                      ??___wmul 00B8                 rempliMines@nb 00C8  
         __size_of_lcd_wrData 0034                      ??_demine 00C7                   __pdataBANK0 00DD  
                 __pdataBANK1 0154              __CFG_LPT1OSC$OFF 000000          ?_calculToucheCombien 00BA  
               __pcstackBANK0 00B4             ?_metToucheCombien 00B4           __size_of_initTabVue 017A  
          ??_metToucheCombien 00C9             __size_of_lcd_busy 0042             __size_of_lcd_init 0028  
         __size_of_init_serie 001E             __CFG_CCP2MX$PORTC 000000                     _getAnalog 253A  
 __end_of_lcd_strobeEnableBit 2634                _initialisation 25B6    __end_of_enleveTuilesAutour 143C  
                    ?___awmod 00C2                      ?_deplace 00B9   __end_of_lcd_effaceAffichage 2624  
                   _lcd_wrCom 22A6         ??_calculToucheCombien 00BE                   __smallconst 0600  
           rempliMines@nbMine 00D3                __size_of_gagne 017A               _lcd_lireDonnees 2634  
         lcd_wrData@caractere 00B6                 ??_rempliMines 00CA          metToucheCombien@mine 00CC  
             _lcd_curseurHome 2624                ___wmul@product 00B8        __end_of_initialisation 25DC  
                  ?_getAnalog 00B4              __CFG_WDTPS$32768 000000       __size_of_lcd_putMessage 00B4  
                  ?_lcd_wrCom 00B4                    _ADCON0bits 000FC2                    _ADCON2bits 000FC0  
           ___wmul@multiplier 00B4                  ??_lcd_gotoXY 00B8                  ??_lcd_wrData 00B6  
           lcd_wrCom@commande 00B6             ___lmul@multiplier 00B4                     copy_data0 2390  
                   copy_data1 23B0                      __Hparam0 0000        __size_of_lcd_ecritChar 0054  
                    __Lparam0 0000               ?_initialisation 00B4           __end_of_rempliMines 1818  
                ??_initTabVue 00BA            __CFG_BOREN$SBORDIS 000000                  rempliMines@i 00CD  
                rempliMines@j 00CF                  rempliMines@x 00D1                  rempliMines@y 00D2  
          __end_of_lcd_gotoXY 223A            __end_of_lcd_wrData 253A              __size_of___awmod 00B2  
                ??_init_serie 00B4        __size_of_lcd_initCGRam 00A2               lcd_putMessage@j 00C2  
            __size_of_deplace 0186       __end_of_lcd_lireDonnees 263A                      _matCGRAM 0154  
     __end_of_lcd_curseurHome 262C                      __ptext10 2624                      __ptext11 25B6  
                    __ptext20 207C                      __ptext12 25DC                      __ptext21 1F16  
                    __ptext13 1B28                      __ptext30 258E                      __ptext22 2430  
                    __ptext14 1CA2                      __ptext23 2506                      __ptext15 2616  
                    __ptext24 21C8                      __ptext16 19A2                      __ptext25 22A6  
                    __ptext17 253A                      __ptext26 262C                      __ptext18 1818  
                    __ptext27 25FA                      __ptext19 114E                      __ptext28 2484  
                    __ptext29 2634             metToucheCombien@i 00CE             metToucheCombien@j 00D0  
                    _lcd_busy 2484                      _lcd_init 2566            __end_of_initTabVue 1CA2  
            rempliMines@i_384 00D4              rempliMines@j_385 00D6      calculToucheCombien@ligne 00BA  
                    _m_tabVue 0100                 __size_of_main 00FA                 __size_of_rand 0056  
                 gagne@pMines 00BA            __end_of_init_serie 25FA                      deplace@x 00B9  
                    deplace@y 00BB                   ??_getAnalog 00B4         __end_of_afficheTabVue 2126  
                 ??_lcd_wrCom 00B6                 _lcd_ecritChar 2430                afficheTabVue@i 00C5  
               _lcd_initCGRam 2126                   _rempliMines 1636          calculToucheCombien@i 00C7  
        calculToucheCombien@j 00C5     __size_of_metToucheCombien 01FA                _lcd_putMessage 1F16  
              ?_lcd_ecritChar 00B4              ?_lcd_lireDonnees 00B4            _enleveTuilesAutour 114E  
            ?_lcd_curseurHome 00B4                ?_lcd_initCGRam 00B4           ?_enleveTuilesAutour 00BA  
           __CFG_FOSC$INTIO67 000000                   main@NBMines 00D9        __end_of_lcd_putMessage 1FCA  
